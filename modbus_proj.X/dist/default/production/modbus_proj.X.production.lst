

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Mar 03 16:16:07 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Version 2.40
    78                           ; Generated 17/11/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F97J60 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	mediumconst
   114   00FDE4                     __pmediumconst:
   115                           	callstack 0
   116   00FDE4  00                 	db	0
   117   00FDE5                     _auchCRCLo:
   118                           	callstack 0
   119   00FDE5  00                 	db	0
   120   00FDE6  C0                 	db	192
   121   00FDE7  C1                 	db	193
   122   00FDE8  01                 	db	1
   123   00FDE9  C3                 	db	195
   124   00FDEA  03                 	db	3
   125   00FDEB  02                 	db	2
   126   00FDEC  C2                 	db	194
   127   00FDED  C6                 	db	198
   128   00FDEE  06                 	db	6
   129   00FDEF  07                 	db	7
   130   00FDF0  C7                 	db	199
   131   00FDF1  05                 	db	5
   132   00FDF2  C5                 	db	197
   133   00FDF3  C4                 	db	196
   134   00FDF4  04                 	db	4
   135   00FDF5  CC                 	db	204
   136   00FDF6  0C                 	db	12
   137   00FDF7  0D                 	db	13
   138   00FDF8  CD                 	db	205
   139   00FDF9  0F                 	db	15
   140   00FDFA  CF                 	db	207
   141   00FDFB  CE                 	db	206
   142   00FDFC  0E                 	db	14
   143   00FDFD  0A                 	db	10
   144   00FDFE  CA                 	db	202
   145   00FDFF  CB                 	db	203
   146   00FE00  0B                 	db	11
   147   00FE01  C9                 	db	201
   148   00FE02  09                 	db	9
   149   00FE03  08                 	db	8
   150   00FE04  C8                 	db	200
   151   00FE05  D8                 	db	216
   152   00FE06  18                 	db	24
   153   00FE07  19                 	db	25
   154   00FE08  D9                 	db	217
   155   00FE09  1B                 	db	27
   156   00FE0A  DB                 	db	219
   157   00FE0B  DA                 	db	218
   158   00FE0C  1A                 	db	26
   159   00FE0D  1E                 	db	30
   160   00FE0E  DE                 	db	222
   161   00FE0F  DF                 	db	223
   162   00FE10  1F                 	db	31
   163   00FE11  DD                 	db	221
   164   00FE12  1D                 	db	29
   165   00FE13  1C                 	db	28
   166   00FE14  DC                 	db	220
   167   00FE15  14                 	db	20
   168   00FE16  D4                 	db	212
   169   00FE17  D5                 	db	213
   170   00FE18  15                 	db	21
   171   00FE19  D7                 	db	215
   172   00FE1A  17                 	db	23
   173   00FE1B  16                 	db	22
   174   00FE1C  D6                 	db	214
   175   00FE1D  D2                 	db	210
   176   00FE1E  12                 	db	18
   177   00FE1F  13                 	db	19
   178   00FE20  D3                 	db	211
   179   00FE21  11                 	db	17
   180   00FE22  D1                 	db	209
   181   00FE23  D0                 	db	208
   182   00FE24  10                 	db	16
   183   00FE25  F0                 	db	240
   184   00FE26  30                 	db	48
   185   00FE27  31                 	db	49
   186   00FE28  F1                 	db	241
   187   00FE29  33                 	db	51
   188   00FE2A  F3                 	db	243
   189   00FE2B  F2                 	db	242
   190   00FE2C  32                 	db	50
   191   00FE2D  36                 	db	54
   192   00FE2E  F6                 	db	246
   193   00FE2F  F7                 	db	247
   194   00FE30  37                 	db	55
   195   00FE31  F5                 	db	245
   196   00FE32  35                 	db	53
   197   00FE33  34                 	db	52
   198   00FE34  F4                 	db	244
   199   00FE35  3C                 	db	60
   200   00FE36  FC                 	db	252
   201   00FE37  FD                 	db	253
   202   00FE38  3D                 	db	61
   203   00FE39  FF                 	db	255
   204   00FE3A  3F                 	db	63
   205   00FE3B  3E                 	db	62
   206   00FE3C  FE                 	db	254
   207   00FE3D  FA                 	db	250
   208   00FE3E  3A                 	db	58
   209   00FE3F  3B                 	db	59
   210   00FE40  FB                 	db	251
   211   00FE41  39                 	db	57
   212   00FE42  F9                 	db	249
   213   00FE43  F8                 	db	248
   214   00FE44  38                 	db	56
   215   00FE45  28                 	db	40
   216   00FE46  E8                 	db	232
   217   00FE47  E9                 	db	233
   218   00FE48  29                 	db	41
   219   00FE49  EB                 	db	235
   220   00FE4A  2B                 	db	43
   221   00FE4B  2A                 	db	42
   222   00FE4C  EA                 	db	234
   223   00FE4D  EE                 	db	238
   224   00FE4E  2E                 	db	46
   225   00FE4F  2F                 	db	47
   226   00FE50  EF                 	db	239
   227   00FE51  2D                 	db	45
   228   00FE52  ED                 	db	237
   229   00FE53  EC                 	db	236
   230   00FE54  2C                 	db	44
   231   00FE55  E4                 	db	228
   232   00FE56  24                 	db	36
   233   00FE57  25                 	db	37
   234   00FE58  E5                 	db	229
   235   00FE59  27                 	db	39
   236   00FE5A  E7                 	db	231
   237   00FE5B  E6                 	db	230
   238   00FE5C  26                 	db	38
   239   00FE5D  22                 	db	34
   240   00FE5E  E2                 	db	226
   241   00FE5F  E3                 	db	227
   242   00FE60  23                 	db	35
   243   00FE61  E1                 	db	225
   244   00FE62  21                 	db	33
   245   00FE63  20                 	db	32
   246   00FE64  E0                 	db	224
   247   00FE65  A0                 	db	160
   248   00FE66  60                 	db	96
   249   00FE67  61                 	db	97
   250   00FE68  A1                 	db	161
   251   00FE69  63                 	db	99
   252   00FE6A  A3                 	db	163
   253   00FE6B  A2                 	db	162
   254   00FE6C  62                 	db	98
   255   00FE6D  66                 	db	102
   256   00FE6E  A6                 	db	166
   257   00FE6F  A7                 	db	167
   258   00FE70  67                 	db	103
   259   00FE71  A5                 	db	165
   260   00FE72  65                 	db	101
   261   00FE73  64                 	db	100
   262   00FE74  A4                 	db	164
   263   00FE75  6C                 	db	108
   264   00FE76  AC                 	db	172
   265   00FE77  AD                 	db	173
   266   00FE78  6D                 	db	109
   267   00FE79  AF                 	db	175
   268   00FE7A  6F                 	db	111
   269   00FE7B  6E                 	db	110
   270   00FE7C  AE                 	db	174
   271   00FE7D  AA                 	db	170
   272   00FE7E  6A                 	db	106
   273   00FE7F  6B                 	db	107
   274   00FE80  AB                 	db	171
   275   00FE81  69                 	db	105
   276   00FE82  A9                 	db	169
   277   00FE83  A8                 	db	168
   278   00FE84  68                 	db	104
   279   00FE85  78                 	db	120
   280   00FE86  B8                 	db	184
   281   00FE87  B9                 	db	185
   282   00FE88  79                 	db	121
   283   00FE89  BB                 	db	187
   284   00FE8A  7B                 	db	123
   285   00FE8B  7A                 	db	122
   286   00FE8C  BA                 	db	186
   287   00FE8D  BE                 	db	190
   288   00FE8E  7E                 	db	126
   289   00FE8F  7F                 	db	127
   290   00FE90  BF                 	db	191
   291   00FE91  7D                 	db	125
   292   00FE92  BD                 	db	189
   293   00FE93  BC                 	db	188
   294   00FE94  7C                 	db	124
   295   00FE95  B4                 	db	180
   296   00FE96  74                 	db	116
   297   00FE97  75                 	db	117
   298   00FE98  B5                 	db	181
   299   00FE99  77                 	db	119
   300   00FE9A  B7                 	db	183
   301   00FE9B  B6                 	db	182
   302   00FE9C  76                 	db	118
   303   00FE9D  72                 	db	114
   304   00FE9E  B2                 	db	178
   305   00FE9F  B3                 	db	179
   306   00FEA0  73                 	db	115
   307   00FEA1  B1                 	db	177
   308   00FEA2  71                 	db	113
   309   00FEA3  70                 	db	112
   310   00FEA4  B0                 	db	176
   311   00FEA5  50                 	db	80
   312   00FEA6  90                 	db	144
   313   00FEA7  91                 	db	145
   314   00FEA8  51                 	db	81
   315   00FEA9  93                 	db	147
   316   00FEAA  53                 	db	83
   317   00FEAB  52                 	db	82
   318   00FEAC  92                 	db	146
   319   00FEAD  96                 	db	150
   320   00FEAE  56                 	db	86
   321   00FEAF  57                 	db	87
   322   00FEB0  97                 	db	151
   323   00FEB1  55                 	db	85
   324   00FEB2  95                 	db	149
   325   00FEB3  94                 	db	148
   326   00FEB4  54                 	db	84
   327   00FEB5  9C                 	db	156
   328   00FEB6  5C                 	db	92
   329   00FEB7  5D                 	db	93
   330   00FEB8  9D                 	db	157
   331   00FEB9  5F                 	db	95
   332   00FEBA  9F                 	db	159
   333   00FEBB  9E                 	db	158
   334   00FEBC  5E                 	db	94
   335   00FEBD  5A                 	db	90
   336   00FEBE  9A                 	db	154
   337   00FEBF  9B                 	db	155
   338   00FEC0  5B                 	db	91
   339   00FEC1  99                 	db	153
   340   00FEC2  59                 	db	89
   341   00FEC3  58                 	db	88
   342   00FEC4  98                 	db	152
   343   00FEC5  88                 	db	136
   344   00FEC6  48                 	db	72
   345   00FEC7  49                 	db	73
   346   00FEC8  89                 	db	137
   347   00FEC9  4B                 	db	75
   348   00FECA  8B                 	db	139
   349   00FECB  8A                 	db	138
   350   00FECC  4A                 	db	74
   351   00FECD  4E                 	db	78
   352   00FECE  8E                 	db	142
   353   00FECF  8F                 	db	143
   354   00FED0  4F                 	db	79
   355   00FED1  8D                 	db	141
   356   00FED2  4D                 	db	77
   357   00FED3  4C                 	db	76
   358   00FED4  8C                 	db	140
   359   00FED5  44                 	db	68
   360   00FED6  84                 	db	132
   361   00FED7  85                 	db	133
   362   00FED8  45                 	db	69
   363   00FED9  87                 	db	135
   364   00FEDA  47                 	db	71
   365   00FEDB  46                 	db	70
   366   00FEDC  86                 	db	134
   367   00FEDD  82                 	db	130
   368   00FEDE  42                 	db	66
   369   00FEDF  43                 	db	67
   370   00FEE0  83                 	db	131
   371   00FEE1  41                 	db	65
   372   00FEE2  81                 	db	129
   373   00FEE3  80                 	db	128
   374   00FEE4  40                 	db	64
   375   00FEE5                     __end_of_auchCRCLo:
   376                           	callstack 0
   377   00FEE5                     _auchCRCHi:
   378                           	callstack 0
   379   00FEE5  00                 	db	0
   380   00FEE6  C1                 	db	193
   381   00FEE7  81                 	db	129
   382   00FEE8  40                 	db	64
   383   00FEE9  01                 	db	1
   384   00FEEA  C0                 	db	192
   385   00FEEB  80                 	db	128
   386   00FEEC  41                 	db	65
   387   00FEED  01                 	db	1
   388   00FEEE  C0                 	db	192
   389   00FEEF  80                 	db	128
   390   00FEF0  41                 	db	65
   391   00FEF1  00                 	db	0
   392   00FEF2  C1                 	db	193
   393   00FEF3  81                 	db	129
   394   00FEF4  40                 	db	64
   395   00FEF5  01                 	db	1
   396   00FEF6  C0                 	db	192
   397   00FEF7  80                 	db	128
   398   00FEF8  41                 	db	65
   399   00FEF9  00                 	db	0
   400   00FEFA  C1                 	db	193
   401   00FEFB  81                 	db	129
   402   00FEFC  40                 	db	64
   403   00FEFD  00                 	db	0
   404   00FEFE  C1                 	db	193
   405   00FEFF  81                 	db	129
   406   00FF00  40                 	db	64
   407   00FF01  01                 	db	1
   408   00FF02  C0                 	db	192
   409   00FF03  80                 	db	128
   410   00FF04  41                 	db	65
   411   00FF05  01                 	db	1
   412   00FF06  C0                 	db	192
   413   00FF07  80                 	db	128
   414   00FF08  41                 	db	65
   415   00FF09  00                 	db	0
   416   00FF0A  C1                 	db	193
   417   00FF0B  81                 	db	129
   418   00FF0C  40                 	db	64
   419   00FF0D  00                 	db	0
   420   00FF0E  C1                 	db	193
   421   00FF0F  81                 	db	129
   422   00FF10  40                 	db	64
   423   00FF11  01                 	db	1
   424   00FF12  C0                 	db	192
   425   00FF13  80                 	db	128
   426   00FF14  41                 	db	65
   427   00FF15  00                 	db	0
   428   00FF16  C1                 	db	193
   429   00FF17  81                 	db	129
   430   00FF18  40                 	db	64
   431   00FF19  01                 	db	1
   432   00FF1A  C0                 	db	192
   433   00FF1B  80                 	db	128
   434   00FF1C  41                 	db	65
   435   00FF1D  01                 	db	1
   436   00FF1E  C0                 	db	192
   437   00FF1F  80                 	db	128
   438   00FF20  41                 	db	65
   439   00FF21  00                 	db	0
   440   00FF22  C1                 	db	193
   441   00FF23  81                 	db	129
   442   00FF24  40                 	db	64
   443   00FF25  01                 	db	1
   444   00FF26  C0                 	db	192
   445   00FF27  80                 	db	128
   446   00FF28  41                 	db	65
   447   00FF29  00                 	db	0
   448   00FF2A  C1                 	db	193
   449   00FF2B  81                 	db	129
   450   00FF2C  40                 	db	64
   451   00FF2D  00                 	db	0
   452   00FF2E  C1                 	db	193
   453   00FF2F  81                 	db	129
   454   00FF30  40                 	db	64
   455   00FF31  01                 	db	1
   456   00FF32  C0                 	db	192
   457   00FF33  80                 	db	128
   458   00FF34  41                 	db	65
   459   00FF35  00                 	db	0
   460   00FF36  C1                 	db	193
   461   00FF37  81                 	db	129
   462   00FF38  40                 	db	64
   463   00FF39  01                 	db	1
   464   00FF3A  C0                 	db	192
   465   00FF3B  80                 	db	128
   466   00FF3C  41                 	db	65
   467   00FF3D  01                 	db	1
   468   00FF3E  C0                 	db	192
   469   00FF3F  80                 	db	128
   470   00FF40  41                 	db	65
   471   00FF41  00                 	db	0
   472   00FF42  C1                 	db	193
   473   00FF43  81                 	db	129
   474   00FF44  40                 	db	64
   475   00FF45  00                 	db	0
   476   00FF46  C1                 	db	193
   477   00FF47  81                 	db	129
   478   00FF48  40                 	db	64
   479   00FF49  01                 	db	1
   480   00FF4A  C0                 	db	192
   481   00FF4B  80                 	db	128
   482   00FF4C  41                 	db	65
   483   00FF4D  01                 	db	1
   484   00FF4E  C0                 	db	192
   485   00FF4F  80                 	db	128
   486   00FF50  41                 	db	65
   487   00FF51  00                 	db	0
   488   00FF52  C1                 	db	193
   489   00FF53  81                 	db	129
   490   00FF54  40                 	db	64
   491   00FF55  01                 	db	1
   492   00FF56  C0                 	db	192
   493   00FF57  80                 	db	128
   494   00FF58  41                 	db	65
   495   00FF59  00                 	db	0
   496   00FF5A  C1                 	db	193
   497   00FF5B  81                 	db	129
   498   00FF5C  40                 	db	64
   499   00FF5D  00                 	db	0
   500   00FF5E  C1                 	db	193
   501   00FF5F  81                 	db	129
   502   00FF60  40                 	db	64
   503   00FF61  01                 	db	1
   504   00FF62  C0                 	db	192
   505   00FF63  80                 	db	128
   506   00FF64  41                 	db	65
   507   00FF65  01                 	db	1
   508   00FF66  C0                 	db	192
   509   00FF67  80                 	db	128
   510   00FF68  41                 	db	65
   511   00FF69  00                 	db	0
   512   00FF6A  C1                 	db	193
   513   00FF6B  81                 	db	129
   514   00FF6C  40                 	db	64
   515   00FF6D  00                 	db	0
   516   00FF6E  C1                 	db	193
   517   00FF6F  81                 	db	129
   518   00FF70  40                 	db	64
   519   00FF71  01                 	db	1
   520   00FF72  C0                 	db	192
   521   00FF73  80                 	db	128
   522   00FF74  41                 	db	65
   523   00FF75  00                 	db	0
   524   00FF76  C1                 	db	193
   525   00FF77  81                 	db	129
   526   00FF78  40                 	db	64
   527   00FF79  01                 	db	1
   528   00FF7A  C0                 	db	192
   529   00FF7B  80                 	db	128
   530   00FF7C  41                 	db	65
   531   00FF7D  01                 	db	1
   532   00FF7E  C0                 	db	192
   533   00FF7F  80                 	db	128
   534   00FF80  41                 	db	65
   535   00FF81  00                 	db	0
   536   00FF82  C1                 	db	193
   537   00FF83  81                 	db	129
   538   00FF84  40                 	db	64
   539   00FF85  00                 	db	0
   540   00FF86  C1                 	db	193
   541   00FF87  81                 	db	129
   542   00FF88  40                 	db	64
   543   00FF89  01                 	db	1
   544   00FF8A  C0                 	db	192
   545   00FF8B  80                 	db	128
   546   00FF8C  41                 	db	65
   547   00FF8D  01                 	db	1
   548   00FF8E  C0                 	db	192
   549   00FF8F  80                 	db	128
   550   00FF90  41                 	db	65
   551   00FF91  00                 	db	0
   552   00FF92  C1                 	db	193
   553   00FF93  81                 	db	129
   554   00FF94  40                 	db	64
   555   00FF95  01                 	db	1
   556   00FF96  C0                 	db	192
   557   00FF97  80                 	db	128
   558   00FF98  41                 	db	65
   559   00FF99  00                 	db	0
   560   00FF9A  C1                 	db	193
   561   00FF9B  81                 	db	129
   562   00FF9C  40                 	db	64
   563   00FF9D  00                 	db	0
   564   00FF9E  C1                 	db	193
   565   00FF9F  81                 	db	129
   566   00FFA0  40                 	db	64
   567   00FFA1  01                 	db	1
   568   00FFA2  C0                 	db	192
   569   00FFA3  80                 	db	128
   570   00FFA4  41                 	db	65
   571   00FFA5  00                 	db	0
   572   00FFA6  C1                 	db	193
   573   00FFA7  81                 	db	129
   574   00FFA8  40                 	db	64
   575   00FFA9  01                 	db	1
   576   00FFAA  C0                 	db	192
   577   00FFAB  80                 	db	128
   578   00FFAC  41                 	db	65
   579   00FFAD  01                 	db	1
   580   00FFAE  C0                 	db	192
   581   00FFAF  80                 	db	128
   582   00FFB0  41                 	db	65
   583   00FFB1  00                 	db	0
   584   00FFB2  C1                 	db	193
   585   00FFB3  81                 	db	129
   586   00FFB4  40                 	db	64
   587   00FFB5  01                 	db	1
   588   00FFB6  C0                 	db	192
   589   00FFB7  80                 	db	128
   590   00FFB8  41                 	db	65
   591   00FFB9  00                 	db	0
   592   00FFBA  C1                 	db	193
   593   00FFBB  81                 	db	129
   594   00FFBC  40                 	db	64
   595   00FFBD  00                 	db	0
   596   00FFBE  C1                 	db	193
   597   00FFBF  81                 	db	129
   598   00FFC0  40                 	db	64
   599   00FFC1  01                 	db	1
   600   00FFC2  C0                 	db	192
   601   00FFC3  80                 	db	128
   602   00FFC4  41                 	db	65
   603   00FFC5  01                 	db	1
   604   00FFC6  C0                 	db	192
   605   00FFC7  80                 	db	128
   606   00FFC8  41                 	db	65
   607   00FFC9  00                 	db	0
   608   00FFCA  C1                 	db	193
   609   00FFCB  81                 	db	129
   610   00FFCC  40                 	db	64
   611   00FFCD  00                 	db	0
   612   00FFCE  C1                 	db	193
   613   00FFCF  81                 	db	129
   614   00FFD0  40                 	db	64
   615   00FFD1  01                 	db	1
   616   00FFD2  C0                 	db	192
   617   00FFD3  80                 	db	128
   618   00FFD4  41                 	db	65
   619   00FFD5  00                 	db	0
   620   00FFD6  C1                 	db	193
   621   00FFD7  81                 	db	129
   622   00FFD8  40                 	db	64
   623   00FFD9  01                 	db	1
   624   00FFDA  C0                 	db	192
   625   00FFDB  80                 	db	128
   626   00FFDC  41                 	db	65
   627   00FFDD  01                 	db	1
   628   00FFDE  C0                 	db	192
   629   00FFDF  80                 	db	128
   630   00FFE0  41                 	db	65
   631   00FFE1  00                 	db	0
   632   00FFE2  C1                 	db	193
   633   00FFE3  81                 	db	129
   634   00FFE4  40                 	db	64
   635   00FFE5                     __end_of_auchCRCHi:
   636                           	callstack 0
   637   000000                     _TMR0L	set	4054
   638   000000                     _TMR0H	set	4055
   639   000000                     _RCREG1	set	4014
   640   000000                     _TXREG1	set	4013
   641   000000                     _SPBRG1	set	4015
   642   000000                     _TXSTA1	set	4012
   643   000000                     _CCPR1L	set	4030
   644   000000                     _CCPR1H	set	4031
   645   000000                     _TRISC	set	3988
   646   000000                     _TRISH	set	3993
   647   000000                     _TRISB	set	3987
   648   000000                     _TRISG	set	3992
   649   000000                     _TRISA	set	3986
   650   000000                     _TRISF	set	3991
   651   000000                     _TRISE	set	3990
   652   000000                     _LATH	set	3984
   653   000000                     _LATC	set	3979
   654   000000                     _LATG	set	3983
   655   000000                     _LATB	set	3978
   656   000000                     _LATF	set	3982
   657   000000                     _LATE	set	3981
   658   000000                     _ADCON0	set	4034
   659   000000                     _ADRESL	set	4035
   660   000000                     _LATJ	set	3985
   661   000000                     _TRISJ	set	3994
   662   00FFE5                     STR_2:
   663   00FFE5  49                 	db	73	;'I'
   664   00FFE6  20                 	db	32
   665   00FFE7  3D                 	db	61	;'='
   666   00FFE8  20                 	db	32
   667   00FFE9  25                 	db	37
   668   00FFEA  30                 	db	48	;'0'
   669   00FFEB  33                 	db	51	;'3'
   670   00FFEC  64                 	db	100	;'d'
   671   00FFED  5B                 	db	91	;'['
   672   00FFEE  75                 	db	117	;'u'
   673   00FFEF  41                 	db	65	;'A'
   674   00FFF0  5D                 	db	93	;']'
   675   00FFF1  00                 	db	0
   676   00FFF2                     STR_1:
   677   00FFF2  55                 	db	85	;'U'
   678   00FFF3  20                 	db	32
   679   00FFF4  3D                 	db	61	;'='
   680   00FFF5  20                 	db	32
   681   00FFF6  25                 	db	37
   682   00FFF7  30                 	db	48	;'0'
   683   00FFF8  33                 	db	51	;'3'
   684   00FFF9  64                 	db	100	;'d'
   685   00FFFA  5B                 	db	91	;'['
   686   00FFFB  6D                 	db	109	;'m'
   687   00FFFC  56                 	db	86	;'V'
   688   00FFFD  5D                 	db	93	;']'
   689   00FFFE  00                 	db	0
   690   00FFFF  00                 	db	0	; dummy byte at the end
   691   000000                     
   692                           	psect	nvCOMRAM
   693   000039                     __pnvCOMRAM:
   694                           	callstack 0
   695   000039                     _TMR0_InterruptHandler:
   696                           	callstack 0
   697   000039                     	ds	3
   698   00003C                     _EUSART1_RxDefaultInterruptHandler:
   699                           	callstack 0
   700   00003C                     	ds	3
   701   00003F                     _EUSART1_TxDefaultInterruptHandler:
   702                           	callstack 0
   703   00003F                     	ds	3
   704                           
   705                           	psect	nvBANK0
   706   0000F3                     __pnvBANK0:
   707                           	callstack 0
   708   0000F3                     _EUSART1_ErrorHandler:
   709                           	callstack 0
   710   0000F3                     	ds	3
   711   0000F6                     _EUSART1_OverrunErrorHandler:
   712                           	callstack 0
   713   0000F6                     	ds	3
   714   0000F9                     _EUSART1_FramingErrorHandler:
   715                           	callstack 0
   716   0000F9                     	ds	3
   717   000000                     _T0CON	set	4053
   718   000000                     _RCSTA1bits	set	4011
   719   000000                     _TXSTA1bits	set	4012
   720   000000                     _T2CONbits	set	4042
   721   000000                     _ADCON1bits	set	4033
   722   000000                     _TRISD	set	3989
   723   000000                     _LATD	set	3980
   724   000000                     _ADCON0bits	set	4034
   725   000000                     _TMR0ON	set	32431
   726   000000                     _ECCP1DEL	set	3961
   727   000000                     _LATA	set	3977
   728   000000                     _LATDbits	set	3980
   729   000000                     _TRISDbits	set	3989
   730   000000                     _PIE1bits	set	3997
   731   000000                     _PIR1bits	set	3998
   732   000000                     _ECCP1AS	set	4022
   733   000000                     _CCP1CON	set	4029
   734   000000                     _ADCON2	set	4032
   735   000000                     _ADCON1	set	4033
   736   000000                     _OSCTUNE	set	3995
   737   000000                     _OSCCON	set	4051
   738   000000                     _T0CONbits	set	4053
   739   000000                     _T2CON	set	4042
   740   000000                     _PR2	set	4043
   741   000000                     _ADRESH	set	4036
   742   000000                     _BAUDCON1	set	3966
   743   000000                     _RCONbits	set	4048
   744   000000                     _TMR2	set	4044
   745   000000                     _RCSTA1	set	4011
   746   000000                     _SPBRGH1	set	3967
   747   000000                     _INTCONbits	set	4082
   748                           
   749                           ; #config settings
   750                           
   751                           	psect	cinit
   752   0110F6                     __pcinit:
   753                           	callstack 0
   754   0110F6                     start_initialization:
   755                           	callstack 0
   756   0110F6                     __initialization:
   757                           	callstack 0
   758                           
   759                           ; Clear objects allocated to BANK2 (256 bytes)
   760   0110F6  EE02  F000         	lfsr	0,__pbssBANK2
   761   0110FA  EE11 F000          	lfsr	1,256
   762   0110FE                     clear_0:
   763   0110FE  6AEE               	clrf	postinc0,c
   764   011100  50E5               	movf	postdec1,w,c
   765   011102  50E1               	movf	fsr1l,w,c
   766   011104  E1FC               	bnz	clear_0
   767   011106  50E2               	movf	fsr1h,w,c
   768   011108  E1FA               	bnz	clear_0
   769                           
   770                           ; Clear objects allocated to BANK1 (256 bytes)
   771   01110A  EE01  F000         	lfsr	0,__pbssBANK1
   772   01110E  EE11 F000          	lfsr	1,256
   773   011112                     clear_1:
   774   011112  6AEE               	clrf	postinc0,c
   775   011114  50E5               	movf	postdec1,w,c
   776   011116  50E1               	movf	fsr1l,w,c
   777   011118  E1FC               	bnz	clear_1
   778   01111A  50E2               	movf	fsr1h,w,c
   779   01111C  E1FA               	bnz	clear_1
   780                           
   781                           ; Clear objects allocated to BANK0 (62 bytes)
   782   01111E  EE00  F0B5         	lfsr	0,__pbssBANK0
   783   011122  0E3E               	movlw	62
   784   011124                     clear_2:
   785   011124  6AEE               	clrf	postinc0,c
   786   011126  06E8               	decf	wreg,f,c
   787   011128  E1FD               	bnz	clear_2
   788                           
   789                           ; Clear objects allocated to COMRAM (24 bytes)
   790   01112A  EE00  F021         	lfsr	0,__pbssCOMRAM
   791   01112E  0E18               	movlw	24
   792   011130                     clear_3:
   793   011130  6AEE               	clrf	postinc0,c
   794   011132  06E8               	decf	wreg,f,c
   795   011134  E1FD               	bnz	clear_3
   796   011136                     end_of_initialization:
   797                           	callstack 0
   798   011136                     __end_of__initialization:
   799                           	callstack 0
   800   011136  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   801   011138  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   802   01113A  0100               	movlb	0
   803   01113C  EF83  F083         	goto	_main	;jump to C main() function
   804                           
   805                           	psect	bssCOMRAM
   806   000021                     __pbssCOMRAM:
   807                           	callstack 0
   808   000021                     _eusart1RxStatusBuffer:
   809                           	callstack 0
   810   000021                     	ds	8
   811   000029                     _ADC_InterruptHandler:
   812                           	callstack 0
   813   000029                     	ds	3
   814   00002C                     _timer0ReloadVal:
   815                           	callstack 0
   816   00002C                     	ds	2
   817   00002E                     _flags:
   818                           	callstack 0
   819   00002E                     	ds	1
   820   00002F                     _recPtr:
   821                           	callstack 0
   822   00002F                     	ds	1
   823   000030                     _index:
   824                           	callstack 0
   825   000030                     	ds	1
   826   000031                     _modbusAddress:
   827                           	callstack 0
   828   000031                     	ds	1
   829   000032                     _eusart1RxLastError:
   830                           	callstack 0
   831   000032                     	ds	1
   832   000033                     _eusart1RxCount:
   833                           	callstack 0
   834   000033                     	ds	1
   835   000034                     _eusart1RxTail:
   836                           	callstack 0
   837   000034                     	ds	1
   838   000035                     _eusart1RxHead:
   839                           	callstack 0
   840   000035                     	ds	1
   841   000036                     _eusart1TxBufferRemaining:
   842                           	callstack 0
   843   000036                     	ds	1
   844   000037                     _eusart1TxTail:
   845                           	callstack 0
   846   000037                     	ds	1
   847   000038                     _eusart1TxHead:
   848                           	callstack 0
   849   000038                     	ds	1
   850                           
   851                           	psect	bssBANK0
   852   0000B5                     __pbssBANK0:
   853                           	callstack 0
   854   0000B5                     _eusart1RxBuffer:
   855                           	callstack 0
   856   0000B5                     	ds	8
   857   0000BD                     _eusart1TxBuffer:
   858                           	callstack 0
   859   0000BD                     	ds	8
   860   0000C5                     _input_registers:
   861                           	callstack 0
   862   0000C5                     	ds	4
   863   0000C9                     _holding_registers:
   864                           	callstack 0
   865   0000C9                     	ds	4
   866   0000CD                     _width:
   867                           	callstack 0
   868   0000CD                     	ds	2
   869   0000CF                     _prec:
   870                           	callstack 0
   871   0000CF                     	ds	2
   872   0000D1                     _offset:
   873                           	callstack 0
   874   0000D1                     	ds	2
   875   0000D3                     _dbuf:
   876                           	callstack 0
   877   0000D3                     	ds	32
   878                           
   879                           	psect	bssBANK1
   880   000100                     __pbssBANK1:
   881                           	callstack 0
   882   000100                     _rx_buf:
   883                           	callstack 0
   884   000100                     	ds	256
   885                           
   886                           	psect	bssBANK2
   887   000200                     __pbssBANK2:
   888                           	callstack 0
   889   000200                     _tx_buf:
   890                           	callstack 0
   891   000200                     	ds	256
   892                           
   893                           	psect	cstackBANK3
   894   000300                     __pcstackBANK3:
   895                           	callstack 0
   896   000300                     main@tempString:
   897                           	callstack 0
   898                           
   899                           ; 20 bytes @ 0x0
   900   000300                     	ds	20
   901                           
   902                           	psect	cstackBANK0
   903   000060                     __pcstackBANK0:
   904                           	callstack 0
   905   000060                     ??_LCD_2x16_WriteCmd:
   906   000060                     ??_LCD_2x16_WriteData:
   907   000060                     ?_ADC_GetConversion:
   908                           	callstack 0
   909   000060                     ?___wmul:
   910                           	callstack 0
   911   000060                     ?___awdiv:
   912                           	callstack 0
   913   000060                     ?___awmod:
   914                           	callstack 0
   915   000060                     ?___lmul:
   916                           	callstack 0
   917   000060                     EPWM1_LoadDutyValue@dutyValue:
   918                           	callstack 0
   919   000060                     ___wmul@multiplier:
   920                           	callstack 0
   921   000060                     ___awdiv@dividend:
   922                           	callstack 0
   923   000060                     ___awmod@dividend:
   924                           	callstack 0
   925   000060                     fputc@c:
   926                           	callstack 0
   927   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   928                           	callstack 0
   929   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   930                           	callstack 0
   931   000060                     EUSART1_SetErrorHandler@interruptHandler:
   932                           	callstack 0
   933   000060                     EUSART1_SetTxInterruptHandler@interruptHandler:
   934                           	callstack 0
   935   000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   936                           	callstack 0
   937   000060                     TMR0_SetInterruptHandler@InterruptHandler:
   938                           	callstack 0
   939   000060                     ___lmul@multiplier:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x0
   943   000060                     	ds	1
   944   000061                     LCD_2x16_WriteCmd@command:
   945                           	callstack 0
   946   000061                     LCD_2x16_WriteData@command:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1
   950   000061                     	ds	1
   951   000062                     ??_Lcd_Init:
   952   000062                     ??_ADC_GetConversion:
   953   000062                     ??_EPWM1_LoadDutyValue:
   954   000062                     LCD_2x16_WriteMsg@msg:
   955                           	callstack 0
   956   000062                     ___wmul@multiplicand:
   957                           	callstack 0
   958   000062                     ___awdiv@divisor:
   959                           	callstack 0
   960   000062                     ___awmod@divisor:
   961                           	callstack 0
   962   000062                     fputc@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x2
   966   000062                     	ds	1
   967   000063                     ??_TMR0_Initialize:
   968   000063                     
   969                           ; 1 bytes @ 0x3
   970   000063                     	ds	1
   971   000064                     ??_fputc:
   972   000064                     LCD_2x16_WriteMsg@line:
   973                           	callstack 0
   974   000064                     ADC_GetConversion@channel:
   975                           	callstack 0
   976   000064                     ___awdiv@counter:
   977                           	callstack 0
   978   000064                     ___awmod@counter:
   979                           	callstack 0
   980   000064                     ___wmul@product:
   981                           	callstack 0
   982   000064                     ___lmul@multiplicand:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x4
   986   000064                     	ds	1
   987   000065                     ___awdiv@sign:
   988                           	callstack 0
   989   000065                     ___awmod@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x5
   993   000065                     	ds	1
   994   000066                     ?_abs:
   995                           	callstack 0
   996   000066                     ?_read_prec_or_width:
   997                           	callstack 0
   998   000066                     ___awdiv@quotient:
   999                           	callstack 0
  1000   000066                     read_prec_or_width@fmt:
  1001                           	callstack 0
  1002   000066                     abs@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x6
  1006   000066                     	ds	2
  1007   000068                     ??_abs:
  1008   000068                     read_prec_or_width@ap:
  1009                           	callstack 0
  1010   000068                     ___lmul@product:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x8
  1014   000068                     	ds	1
  1015   000069                     fputs@s:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x9
  1019   000069                     	ds	1
  1020   00006A                     ??_read_prec_or_width:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023   00006A                     	ds	1
  1024   00006B                     fputs@fp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xB
  1028   00006B                     	ds	1
  1029   00006C                     ?___lldiv:
  1030                           	callstack 0
  1031   00006C                     read_prec_or_width@c:
  1032                           	callstack 0
  1033   00006C                     ___lldiv@dividend:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0xC
  1037   00006C                     	ds	1
  1038   00006D                     fputs@c:
  1039                           	callstack 0
  1040   00006D                     read_prec_or_width@n:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xD
  1044   00006D                     	ds	1
  1045   00006E                     fputs@i:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xE
  1049   00006E                     	ds	2
  1050   000070                     pad@fp:
  1051                           	callstack 0
  1052   000070                     ___lldiv@divisor:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x10
  1056   000070                     	ds	2
  1057   000072                     pad@buf:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x12
  1061   000072                     	ds	2
  1062   000074                     pad@p:
  1063                           	callstack 0
  1064   000074                     ___lldiv@quotient:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x14
  1068   000074                     	ds	2
  1069   000076                     ??_pad:
  1070                           
  1071                           ; 1 bytes @ 0x16
  1072   000076                     	ds	1
  1073   000077                     pad@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x17
  1077   000077                     	ds	1
  1078   000078                     ___lldiv@counter:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x18
  1082   000078                     	ds	1
  1083   000079                     ?_measure_current:
  1084                           	callstack 0
  1085   000079                     ?_measure_voltage:
  1086                           	callstack 0
  1087   000079                     measure_current@offset:
  1088                           	callstack 0
  1089   000079                     pad@w:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x19
  1093   000079                     	ds	2
  1094   00007B                     ??_measure_current:
  1095   00007B                     ??_measure_voltage:
  1096   00007B                     dtoa@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x1B
  1100   00007B                     	ds	1
  1101   00007C                     measure_voltage@result:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x1C
  1105   00007C                     	ds	1
  1106   00007D                     dtoa@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x1D
  1110   00007D                     	ds	2
  1111   00007F                     measure_current@i:
  1112                           	callstack 0
  1113   00007F                     _dtoa$1716:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x1F
  1117   00007F                     	ds	1
  1118   000080                     measure_voltage@i:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x20
  1122   000080                     	ds	1
  1123   000081                     dtoa@p:
  1124                           	callstack 0
  1125   000081                     measure_current@result:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x21
  1129   000081                     	ds	2
  1130   000083                     dtoa@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x23
  1134   000083                     	ds	2
  1135   000085                     dtoa@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x25
  1139   000085                     	ds	1
  1140   000086                     dtoa@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x26
  1144   000086                     	ds	2
  1145   000088                     vfpfcnvrt@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x28
  1149   000088                     	ds	2
  1150   00008A                     vfpfcnvrt@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154   00008A                     	ds	2
  1155   00008C                     vfpfcnvrt@ap:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2C
  1159   00008C                     	ds	2
  1160   00008E                     ??_vfpfcnvrt:
  1161                           
  1162                           ; 1 bytes @ 0x2E
  1163   00008E                     	ds	2
  1164   000090                     vfpfcnvrt@convarg:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x30
  1168   000090                     	ds	4
  1169   000094                     vfpfcnvrt@done:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x34
  1173   000094                     	ds	2
  1174   000096                     vfpfcnvrt@cp:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x36
  1178   000096                     	ds	2
  1179   000098                     ?_vfprintf:
  1180                           	callstack 0
  1181   000098                     vfprintf@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x38
  1185   000098                     	ds	2
  1186   00009A                     vfprintf@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x3A
  1190   00009A                     	ds	2
  1191   00009C                     vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3C
  1195   00009C                     	ds	2
  1196   00009E                     vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3E
  1200   00009E                     	ds	2
  1201   0000A0                     ?_sprintf:
  1202                           	callstack 0
  1203   0000A0                     sprintf@s:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x40
  1207   0000A0                     	ds	2
  1208   0000A2                     sprintf@fmt:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x42
  1212   0000A2                     	ds	4
  1213   0000A6                     sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x46
  1217   0000A6                     	ds	2
  1218   0000A8                     sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 12 bytes @ 0x48
  1222   0000A8                     	ds	12
  1223   0000B4                     ??_main:
  1224                           
  1225                           ; 1 bytes @ 0x54
  1226   0000B4                     	ds	1
  1227                           
  1228                           	psect	cstackCOMRAM
  1229   000001                     __pcstackCOMRAM:
  1230                           	callstack 0
  1231   000001                     ?_CRC16:
  1232                           	callstack 0
  1233   000001                     EUSART1_Write@txData:
  1234                           	callstack 0
  1235   000001                     modbus_char_recvd@c:
  1236                           	callstack 0
  1237   000001                     CRC16@msg:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241   000001                     	ds	1
  1242   000002                     ??_modbus_send:
  1243                           
  1244                           ; 1 bytes @ 0x1
  1245   000002                     	ds	1
  1246   000003                     CRC16@length:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2
  1250   000003                     	ds	2
  1251   000005                     ??_CRC16:
  1252   000005                     modbus_send@length:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x4
  1256   000005                     	ds	1
  1257   000006                     modbus_send@i_1194:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x5
  1261   000006                     	ds	1
  1262   000007                     CRC16@uIndex:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x6
  1266   000007                     	ds	1
  1267   000008                     CRC16@uchCRCHi:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x7
  1271   000008                     	ds	1
  1272   000009                     CRC16@uchCRCLo:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x8
  1276   000009                     	ds	1
  1277   00000A                     ??_modbus_analyse_and_answer:
  1278                           
  1279                           ; 1 bytes @ 0x9
  1280   00000A                     	ds	2
  1281   00000C                     modbus_analyse_and_answer@crcAtt:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0xB
  1285   00000C                     	ds	2
  1286   00000E                     modbus_analyse_and_answer@functionCode:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0xD
  1290   00000E                     	ds	1
  1291   00000F                     modbus_analyse_and_answer@startingAddress:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0xE
  1295   00000F                     	ds	2
  1296   000011                     modbus_analyse_and_answer@i:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x10
  1300   000011                     	ds	2
  1301   000013                     modbus_analyse_and_answer@crc:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x12
  1305   000013                     	ds	2
  1306   000015                     modbus_analyse_and_answer@nbofRegister:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x14
  1310   000015                     	ds	2
  1311   000017                     ??_INTERRUPT_InterruptManager:
  1312                           
  1313                           ; 1 bytes @ 0x16
  1314   000017                     	ds	10
  1315                           
  1316 ;;
  1317 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1318 ;;
  1319 ;; *************** function _main *****************
  1320 ;; Defined at:
  1321 ;;		line 55 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  tempString     20    0[BANK3 ] unsigned char [20]
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:         0       1       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:       21 bytes
  1340 ;; Hardware stack levels required when called: 12
  1341 ;; This function calls:
  1342 ;;		_EPWM1_LoadDutyValue
  1343 ;;		_LCD_2x16_WriteMsg
  1344 ;;		_Lcd_Init
  1345 ;;		_SYSTEM_Initialize
  1346 ;;		_measure_current
  1347 ;;		_measure_voltage
  1348 ;;		_sprintf
  1349 ;; This function is called by:
  1350 ;;		Startup code after reset
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text0
  1355   010706                     __ptext0:
  1356                           	callstack 0
  1357   010706                     _main:
  1358                           	callstack 19
  1359   010706                     
  1360                           ;main.c: 58:     SYSTEM_Initialize();
  1361   010706  EC28  F08A         	call	_SYSTEM_Initialize	;wreg free
  1362   01070A                     
  1363                           ;main.c: 65:     (INTCONbits.GIE = 1);
  1364   01070A  8EF2               	bsf	242,7,c	;volatile
  1365   01070C                     
  1366                           ;main.c: 71:     (INTCONbits.PEIE = 1);
  1367   01070C  8CF2               	bsf	242,6,c	;volatile
  1368   01070E                     
  1369                           ;main.c: 77:     holding_registers[1] = 0x80;
  1370   01070E  0E00               	movlw	0
  1371   010710  0100               	movlb	0	; () banked
  1372   010712  6FCC               	movwf	(_holding_registers+3)& (0+255),b
  1373   010714  0E80               	movlw	128
  1374   010716  6FCB               	movwf	(_holding_registers+2)& (0+255),b
  1375   010718                     
  1376                           ; BSR set to: 0
  1377                           ;main.c: 78:     EPWM1_LoadDutyValue(0);
  1378   010718  0E00               	movlw	0
  1379   01071A  6F61               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1380   01071C  0E00               	movlw	0
  1381   01071E  6F60               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1382   010720  ECE6  F089         	call	_EPWM1_LoadDutyValue	;wreg free
  1383   010724                     
  1384                           ;main.c: 80:     char tempString[20];;main.c: 81:     Lcd_Init();
  1385   010724  ECE9  F088         	call	_Lcd_Init	;wreg free
  1386   010728                     
  1387                           ;main.c: 82:     _delay((unsigned long)((10)*(25000000/4000.0)));
  1388   010728  0E52               	movlw	82
  1389   01072A  0100               	movlb	0	; () banked
  1390   01072C  6FB4               	movwf	??_main& (0+255),b
  1391   01072E  0E29               	movlw	41
  1392   010730                     u2267:
  1393   010730  2EE8               	decfsz	wreg,f,c
  1394   010732  D7FE               	bra	u2267
  1395   010734  2FB4               	decfsz	??_main& (0+255),f,b
  1396   010736  D7FC               	bra	u2267
  1397   010738  D000               	nop2	
  1398   01073A                     
  1399                           ;main.c: 83:     offset = measure_current(0);
  1400   01073A  0E00               	movlw	0
  1401   01073C  0100               	movlb	0	; () banked
  1402   01073E  6F7A               	movwf	(measure_current@offset+1)& (0+255),b
  1403   010740  0E00               	movlw	0
  1404   010742  6F79               	movwf	measure_current@offset& (0+255),b
  1405   010744  ECAF  F082         	call	_measure_current	;wreg free
  1406   010748  C079  F0D1         	movff	?_measure_current,_offset
  1407   01074C  C07A  F0D2         	movff	?_measure_current+1,_offset+1
  1408   010750                     l3587:
  1409                           
  1410                           ;main.c: 86:     {;main.c: 89:          input_registers[0] = measure_voltage();
  1411   010750  EC84  F085         	call	_measure_voltage	;wreg free
  1412   010754  C079  F0C5         	movff	?_measure_voltage,_input_registers
  1413   010758  C07A  F0C6         	movff	?_measure_voltage+1,_input_registers+1
  1414   01075C                     
  1415                           ;main.c: 90:          input_registers[1] = measure_current(offset);
  1416   01075C  C0D1  F079         	movff	_offset,measure_current@offset
  1417   010760  C0D2  F07A         	movff	_offset+1,measure_current@offset+1
  1418   010764  ECAF  F082         	call	_measure_current	;wreg free
  1419   010768  C079  F0C7         	movff	?_measure_current,_input_registers+2
  1420   01076C  C07A  F0C8         	movff	?_measure_current+1,_input_registers+3
  1421   010770                     
  1422                           ;main.c: 91:          EPWM1_LoadDutyValue(holding_registers[0]);
  1423   010770  C0C9  F060         	movff	_holding_registers,EPWM1_LoadDutyValue@dutyValue
  1424   010774  C0CA  F061         	movff	_holding_registers+1,EPWM1_LoadDutyValue@dutyValue+1
  1425   010778  ECE6  F089         	call	_EPWM1_LoadDutyValue	;wreg free
  1426   01077C                     
  1427                           ;main.c: 93:          sprintf(tempString,"U = %03d[mV]",input_registers[0]);
  1428   01077C  0E00               	movlw	low main@tempString
  1429   01077E  0100               	movlb	0	; () banked
  1430   010780  6FA0               	movwf	sprintf@s& (0+255),b
  1431   010782  0E03               	movlw	high main@tempString
  1432   010784  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1433   010786  0EF2               	movlw	low STR_1
  1434   010788  6FA2               	movwf	sprintf@fmt& (0+255),b
  1435   01078A  0EFF               	movlw	high STR_1
  1436   01078C  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1437   01078E  C0C5  F0A4         	movff	_input_registers,?_sprintf+4
  1438   010792  C0C6  F0A5         	movff	_input_registers+1,?_sprintf+5
  1439   010796  EC53  F088         	call	_sprintf	;wreg free
  1440   01079A                     
  1441                           ;main.c: 94:          LCD_2x16_WriteMsg(tempString,0);
  1442   01079A  0E00               	movlw	low main@tempString
  1443   01079C  0100               	movlb	0	; () banked
  1444   01079E  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1445   0107A0  0E03               	movlw	high main@tempString
  1446   0107A2  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1447   0107A4  0E00               	movlw	0
  1448   0107A6  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1449   0107A8  EC8E  F089         	call	_LCD_2x16_WriteMsg	;wreg free
  1450   0107AC                     
  1451                           ;main.c: 95:          sprintf(tempString,"I = %03d[uA]",input_registers[1]);
  1452   0107AC  0E00               	movlw	low main@tempString
  1453   0107AE  0100               	movlb	0	; () banked
  1454   0107B0  6FA0               	movwf	sprintf@s& (0+255),b
  1455   0107B2  0E03               	movlw	high main@tempString
  1456   0107B4  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1457   0107B6  0EE5               	movlw	low STR_2
  1458   0107B8  6FA2               	movwf	sprintf@fmt& (0+255),b
  1459   0107BA  0EFF               	movlw	high STR_2
  1460   0107BC  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1461   0107BE  C0C7  F0A4         	movff	_input_registers+2,?_sprintf+4
  1462   0107C2  C0C8  F0A5         	movff	_input_registers+3,?_sprintf+5
  1463   0107C6  EC53  F088         	call	_sprintf	;wreg free
  1464   0107CA                     
  1465                           ;main.c: 96:          LCD_2x16_WriteMsg(tempString,1);
  1466   0107CA  0E00               	movlw	low main@tempString
  1467   0107CC  0100               	movlb	0	; () banked
  1468   0107CE  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1469   0107D0  0E03               	movlw	high main@tempString
  1470   0107D2  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1471   0107D4  0E01               	movlw	1
  1472   0107D6  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1473   0107D8  EC8E  F089         	call	_LCD_2x16_WriteMsg	;wreg free
  1474   0107DC  EFA8  F083         	goto	l3587
  1475   0107E0  EF8B  F000         	goto	start
  1476   0107E4                     __end_of_main:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _sprintf *****************
  1480 ;; Defined at:
  1481 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1484 ;;		 -> main@tempString(20), 
  1485 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1486 ;;		 -> STR_2(13), STR_1(13), 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  f              12   72[BANK0 ] struct _IO_FILE
  1489 ;;  ap              2   70[BANK0 ] PTR void [1]
  1490 ;;		 -> ?_sprintf(2), 
  1491 ;;  ret             2    0        int 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2   64[BANK0 ] int 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:       20 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 11
  1508 ;; This function calls:
  1509 ;;		_vfprintf
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text1
  1516   0110A6                     __ptext1:
  1517                           	callstack 0
  1518   0110A6                     _sprintf:
  1519                           	callstack 19
  1520   0110A6  0EA4               	movlw	low (?_sprintf+4)
  1521   0110A8  0100               	movlb	0	; () banked
  1522   0110AA  6FA6               	movwf	sprintf@ap& (0+255),b
  1523   0110AC  0E00               	movlw	high (?_sprintf+4)
  1524   0110AE  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1525   0110B0  C0A0  F0A8         	movff	sprintf@s,sprintf@f
  1526   0110B4  C0A1  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1527   0110B8                     
  1528                           ; BSR set to: 0
  1529   0110B8  0E00               	movlw	0
  1530   0110BA  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1531   0110BC  0E00               	movlw	0
  1532   0110BE  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1533   0110C0                     
  1534                           ; BSR set to: 0
  1535   0110C0  0E00               	movlw	0
  1536   0110C2  6FB3               	movwf	(sprintf@f+11)& (0+255),b
  1537   0110C4  0E00               	movlw	0
  1538   0110C6  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1539   0110C8                     
  1540                           ; BSR set to: 0
  1541   0110C8  0EA8               	movlw	low sprintf@f
  1542   0110CA  6F98               	movwf	vfprintf@fp& (0+255),b
  1543   0110CC  0E00               	movlw	high sprintf@f
  1544   0110CE  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1545   0110D0  C0A2  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1546   0110D4  C0A3  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1547   0110D8  0EA6               	movlw	low sprintf@ap
  1548   0110DA  6F9C               	movwf	vfprintf@ap& (0+255),b
  1549   0110DC  0E00               	movlw	high sprintf@ap
  1550   0110DE  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1551   0110E0  ECD3  F087         	call	_vfprintf	;wreg free
  1552   0110E4  0100               	movlb	0	; () banked
  1553   0110E6  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1554   0110E8  25A0               	addwf	sprintf@s& (0+255),w,b
  1555   0110EA  6ED9               	movwf	fsr2l,c
  1556   0110EC  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1557   0110EE  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1558   0110F0  6EDA               	movwf	fsr2h,c
  1559   0110F2  6ADF               	clrf	indf2,c
  1560   0110F4                     
  1561                           ; BSR set to: 0
  1562   0110F4  0012               	return		;funcret
  1563   0110F6                     __end_of_sprintf:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _vfprintf *****************
  1567 ;; Defined at:
  1568 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1571 ;;		 -> sprintf@f(12), 
  1572 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1573 ;;		 -> STR_2(13), STR_1(13), 
  1574 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1575 ;;		 -> sprintf@ap(2), 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1578 ;;		 -> STR_2(13), STR_1(13), 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2   56[BANK0 ] int 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        8 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 10
  1595 ;; This function calls:
  1596 ;;		_vfpfcnvrt
  1597 ;; This function is called by:
  1598 ;;		_sprintf
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text2
  1603   010FA6                     __ptext2:
  1604                           	callstack 0
  1605   010FA6                     _vfprintf:
  1606                           	callstack 19
  1607   010FA6                     
  1608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1609   010FA6  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1610   010FAA  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1613   010FAE  EFE8  F087         	goto	l3461
  1614   010FB2                     l3459:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1617   010FB2  C098  F088         	movff	vfprintf@fp,vfpfcnvrt@fp
  1618   010FB6  C099  F089         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1619   010FBA  0E9E               	movlw	low vfprintf@cfmt
  1620   010FBC  0100               	movlb	0	; () banked
  1621   010FBE  6F8A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1622   010FC0  0E00               	movlw	high vfprintf@cfmt
  1623   010FC2  6F8B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1624   010FC4  C09C  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1625   010FC8  C09D  F08D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1626   010FCC  EC00  F080         	call	_vfpfcnvrt	;wreg free
  1627   010FD0                     l3461:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1630   010FD0  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1631   010FD4  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1632   010FD8                     	if	0	;tblptru may be non-zero
  1633   010FD8                     	endif
  1634   010FD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1635   010FD8  0E00               	movlw	low (__mediumconst shr (0+16))
  1636   010FDA  6EF8               	movwf	tblptru,c
  1637   010FDC                     	endif
  1638   010FDC  0008               	tblrd		*
  1639   010FDE  50F5               	movf	tablat,w,c
  1640   010FE0  0900               	iorlw	0
  1641   010FE2  A4D8               	btfss	status,2,c
  1642   010FE4  EFF6  F087         	goto	u2191
  1643   010FE8  EFF8  F087         	goto	u2190
  1644   010FEC                     u2191:
  1645   010FEC  EFD9  F087         	goto	l3459
  1646   010FF0                     u2190:
  1647   010FF0                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1649   010FF0  0E00               	movlw	0
  1650   010FF2  0100               	movlb	0	; () banked
  1651   010FF4  6F99               	movwf	(?_vfprintf+1)& (0+255),b
  1652   010FF6  0E00               	movlw	0
  1653   010FF8  6F98               	movwf	?_vfprintf& (0+255),b
  1654   010FFA                     
  1655                           ; BSR set to: 0
  1656   010FFA  0012               	return		;funcret
  1657   010FFC                     __end_of_vfprintf:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _vfpfcnvrt *****************
  1661 ;; Defined at:
  1662 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  1665 ;;		 -> sprintf@f(12), 
  1666 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  1667 ;;		 -> vfprintf@cfmt(2), 
  1668 ;;  ap              2   44[BANK0 ] PTR PTR void 
  1669 ;;		 -> sprintf@ap(2), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  convarg         4   48[BANK0 ] struct .
  1672 ;;  cp              2   54[BANK0 ] PTR unsigned char 
  1673 ;;		 -> STR_2(13), STR_1(13), 
  1674 ;;  done            2   52[BANK0 ] int 
  1675 ;;  i               2    0        int 
  1676 ;;  c               1    0        unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:       16 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 9
  1693 ;; This function calls:
  1694 ;;		_dtoa
  1695 ;;		_fputc
  1696 ;;		_read_prec_or_width
  1697 ;; This function is called by:
  1698 ;;		_vfprintf
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text3
  1703   010000                     __ptext3:
  1704                           	callstack 0
  1705   010000                     _vfpfcnvrt:
  1706                           	callstack 19
  1707   010000                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1709   010000  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1710   010004  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1711   010008  CFDE FFF6          	movff	postinc2,tblptrl
  1712   01000C  CFDD FFF7          	movff	postdec2,tblptrh
  1713   010010                     	if	0	;tblptru may be non-zero
  1714   010010                     	endif
  1715   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1716   010010  0E00               	movlw	low (__mediumconst shr (0+16))
  1717   010012  6EF8               	movwf	tblptru,c
  1718   010014                     	endif
  1719   010014  0008               	tblrd		*
  1720   010016  50F5               	movf	tablat,w,c
  1721   010018  0A25               	xorlw	37
  1722   01001A  A4D8               	btfss	status,2,c
  1723   01001C  EF12  F080         	goto	u2081
  1724   010020  EF14  F080         	goto	u2080
  1725   010024                     u2081:
  1726   010024  EFD9  F080         	goto	l3291
  1727   010028                     u2080:
  1728   010028                     
  1729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1730   010028  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731   01002C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732   010030  2ADE               	incf	postinc2,f,c
  1733   010032  0E00               	movlw	0
  1734   010034  22DD               	addwfc	postdec2,f,c
  1735   010036                     
  1736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1737   010036  0E00               	movlw	0
  1738   010038  0100               	movlb	0	; () banked
  1739   01003A  6FCE               	movwf	(_width+1)& (0+255),b
  1740   01003C  0E00               	movlw	0
  1741   01003E  6FCD               	movwf	_width& (0+255),b
  1742   010040  C0CD  F02E         	movff	_width,_flags
  1743   010044                     
  1744                           ; BSR set to: 0
  1745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1746   010044  69CF               	setf	_prec& (0+255),b
  1747   010046  69D0               	setf	(_prec+1)& (0+255),b
  1748   010048                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1751   010048  0E00               	movlw	0
  1752   01004A  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1753   01004C  0E00               	movlw	0
  1754   01004E  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1757   010050  EF56  F080         	goto	l3267
  1758   010054                     l3257:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1762   010054  822E               	bsf	_flags^0,1,c
  1763   010056                     
  1764                           ; BSR set to: 0
  1765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1766   010056  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1767   01005A  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1768   01005E  2ADE               	incf	postinc2,f,c
  1769   010060  0E00               	movlw	0
  1770   010062  22DD               	addwfc	postdec2,f,c
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1773   010064  EF56  F080         	goto	l3267
  1774   010068                     l3261:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1778   010068  0E00               	movlw	0
  1779   01006A  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1780   01006C  0E01               	movlw	1
  1781   01006E  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1784   010070  EF56  F080         	goto	l3267
  1785   010074                     l3265:
  1786                           
  1787                           ; BSR set to: 0
  1788   010074  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789   010078  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790   01007C  CFDE FFF6          	movff	postinc2,tblptrl
  1791   010080  CFDD FFF7          	movff	postdec2,tblptrh
  1792   010084                     	if	0	;tblptru may be non-zero
  1793   010084                     	endif
  1794   010084                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1795   010084  0E00               	movlw	low (__mediumconst shr (0+16))
  1796   010086  6EF8               	movwf	tblptru,c
  1797   010088                     	endif
  1798   010088  0008               	tblrd		*
  1799   01008A  50F5               	movf	tablat,w,c
  1800   01008C  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1801   01008E  6B8F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1802                           
  1803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 1, Range of values is 0 to 0
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte            4     3 (average)
  1809                           ;	Chosen strategy is simple_byte
  1810   010090  518F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1811   010092  0A00               	xorlw	0	; case 0
  1812   010094  B4D8               	btfsc	status,2,c
  1813   010096  EF4F  F080         	goto	l3661
  1814   01009A  EF34  F080         	goto	l3261
  1815   01009E                     l3661:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ; Switch size 1, requested type "simple"
  1819                           ; Number of cases is 1, Range of values is 48 to 48
  1820                           ; switch strategies available:
  1821                           ; Name         Instructions Cycles
  1822                           ; simple_byte            4     3 (average)
  1823                           ;	Chosen strategy is simple_byte
  1824   01009E  518E               	movf	??_vfpfcnvrt& (0+255),w,b
  1825   0100A0  0A30               	xorlw	48	; case 48
  1826   0100A2  B4D8               	btfsc	status,2,c
  1827   0100A4  EF2A  F080         	goto	l3257
  1828   0100A8  EF34  F080         	goto	l3261
  1829   0100AC                     l3267:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1833   0100AC  5194               	movf	vfpfcnvrt@done& (0+255),w,b
  1834   0100AE  1195               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1835   0100B0  B4D8               	btfsc	status,2,c
  1836   0100B2  EF5D  F080         	goto	u2091
  1837   0100B6  EF5F  F080         	goto	u2090
  1838   0100BA                     u2091:
  1839   0100BA  EF3A  F080         	goto	l3265
  1840   0100BE                     u2090:
  1841   0100BE                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1844   0100BE  C08A  F066         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1845   0100C2  C08B  F067         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1846   0100C6  C08C  F068         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1847   0100CA  C08D  F069         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1848   0100CE  ECF2  F083         	call	_read_prec_or_width	;wreg free
  1849   0100D2  C066  F0CD         	movff	?_read_prec_or_width,_width
  1850   0100D6  C067  F0CE         	movff	?_read_prec_or_width+1,_width+1
  1851   0100DA                     
  1852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1853   0100DA  0100               	movlb	0	; () banked
  1854   0100DC  BFCE               	btfsc	(_width+1)& (0+255),7,b
  1855   0100DE  EF75  F080         	goto	u2100
  1856   0100E2  EF73  F080         	goto	u2101
  1857   0100E6                     u2101:
  1858   0100E6  EF7A  F080         	goto	l3275
  1859   0100EA                     u2100:
  1860   0100EA                     
  1861                           ; BSR set to: 0
  1862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1863   0100EA  802E               	bsf	_flags^0,0,c
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1866   0100EC  6DCD               	negf	_width& (0+255),b
  1867   0100EE  1FCE               	comf	(_width+1)& (0+255),f,b
  1868   0100F0  B0D8               	btfsc	status,0,c
  1869   0100F2  2BCE               	incf	(_width+1)& (0+255),f,b
  1870   0100F4                     l3275:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1874   0100F4  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1875   0100F8  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1876   0100FC  CFDE F096          	movff	postinc2,vfpfcnvrt@cp
  1877   010100  CFDD F097          	movff	postdec2,vfpfcnvrt@cp+1
  1878   010104                     
  1879                           ; BSR set to: 0
  1880                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1881   010104  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1882   010108  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1883   01010C                     	if	0	;tblptru may be non-zero
  1884   01010C                     	endif
  1885   01010C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1886   01010C  0E00               	movlw	low (__mediumconst shr (0+16))
  1887   01010E  6EF8               	movwf	tblptru,c
  1888   010110                     	endif
  1889   010110  0008               	tblrd		*
  1890   010112  50F5               	movf	tablat,w,c
  1891   010114  0A64               	xorlw	100
  1892   010116  B4D8               	btfsc	status,2,c
  1893   010118  EF90  F080         	goto	u2111
  1894   01011C  EF92  F080         	goto	u2110
  1895   010120                     u2111:
  1896   010120  EFA2  F080         	goto	l3281
  1897   010124                     u2110:
  1898   010124                     
  1899                           ; BSR set to: 0
  1900   010124  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1901   010128  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1902   01012C                     	if	0	;tblptru may be non-zero
  1903   01012C                     	endif
  1904   01012C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1905   01012C  0E00               	movlw	low (__mediumconst shr (0+16))
  1906   01012E  6EF8               	movwf	tblptru,c
  1907   010130                     	endif
  1908   010130  0008               	tblrd		*
  1909   010132  50F5               	movf	tablat,w,c
  1910   010134  0A69               	xorlw	105
  1911   010136  A4D8               	btfss	status,2,c
  1912   010138  EFA0  F080         	goto	u2121
  1913   01013C  EFA2  F080         	goto	u2120
  1914   010140                     u2121:
  1915   010140  EFD0  F080         	goto	l3287
  1916   010144                     u2120:
  1917   010144                     l3281:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1921   010144  C08C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1922   010148  C08D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1923   01014C  CFDF F08E          	movff	indf2,??_vfpfcnvrt
  1924   010150  0E02               	movlw	2
  1925   010152  26DE               	addwf	postinc2,f,c
  1926   010154  CFDF F08F          	movff	indf2,??_vfpfcnvrt+1
  1927   010158  0E00               	movlw	0
  1928   01015A  22DD               	addwfc	postdec2,f,c
  1929   01015C  C08E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1930   010160  C08F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1931   010164  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  1932   010168  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1935   01016C  0E01               	movlw	1
  1936   01016E  2596               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1937   010170  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1938   010172  0E00               	movlw	0
  1939   010174  2197               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1940   010176  6F8F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1941   010178  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1942   01017C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1943   010180  C08E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1944   010184  C08F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1945   010188                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1948   010188  C088  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  1949   01018C  C089  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1950   010190  C090  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  1951   010194  C091  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1952   010198  ECF1  F080         	call	_dtoa	;wreg free
  1953   01019C  EFF0  F080         	goto	l1281
  1954   0101A0                     l3287:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1957   0101A0  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1958   0101A4  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1959   0101A8  2ADE               	incf	postinc2,f,c
  1960   0101AA  0E00               	movlw	0
  1961   0101AC  22DD               	addwfc	postdec2,f,c
  1962   0101AE  EFF0  F080         	goto	l1281
  1963   0101B2                     l3291:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1966   0101B2  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967   0101B6  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968   0101BA  CFDE FFF6          	movff	postinc2,tblptrl
  1969   0101BE  CFDD FFF7          	movff	postdec2,tblptrh
  1970   0101C2                     	if	0	;tblptru may be non-zero
  1971   0101C2                     	endif
  1972   0101C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1973   0101C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1974   0101C4  6EF8               	movwf	tblptru,c
  1975   0101C6                     	endif
  1976   0101C6  0008               	tblrd		*
  1977   0101C8  50F5               	movf	tablat,w,c
  1978   0101CA  0100               	movlb	0	; () banked
  1979   0101CC  6F60               	movwf	fputc@c& (0+255),b
  1980   0101CE  6B61               	clrf	(fputc@c+1)& (0+255),b
  1981   0101D0  C088  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1982   0101D4  C089  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1983   0101D8  EC5B  F084         	call	_fputc	;wreg free
  1984   0101DC  EFD0  F080         	goto	l3287
  1985   0101E0                     l1281:
  1986   0101E0  0012               	return		;funcret
  1987   0101E2                     __end_of_vfpfcnvrt:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _read_prec_or_width *****************
  1991 ;; Defined at:
  1992 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  fmt             2    6[BANK0 ] PTR PTR const unsigned c
  1995 ;;		 -> vfprintf@cfmt(2), 
  1996 ;;  ap              2    8[BANK0 ] PTR PTR void [1]
  1997 ;;		 -> sprintf@ap(2), 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  c               1   12[BANK0 ] unsigned char 
  2000 ;;  n               2   13[BANK0 ] int 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2    6[BANK0 ] int 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        9 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 5
  2017 ;; This function calls:
  2018 ;;		___wmul
  2019 ;; This function is called by:
  2020 ;;		_vfpfcnvrt
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text4
  2025   0107E4                     __ptext4:
  2026                           	callstack 0
  2027   0107E4                     _read_prec_or_width:
  2028                           	callstack 22
  2029   0107E4                     
  2030                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2031   0107E4  0E00               	movlw	0
  2032   0107E6  0100               	movlb	0	; () banked
  2033   0107E8  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2034   0107EA  0E00               	movlw	0
  2035   0107EC  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2036   0107EE                     
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2039   0107EE  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2040   0107F2  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2041   0107F6  CFDE FFF6          	movff	postinc2,tblptrl
  2042   0107FA  CFDD FFF7          	movff	postdec2,tblptrh
  2043   0107FE                     	if	0	;tblptru may be non-zero
  2044   0107FE                     	endif
  2045   0107FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2046   0107FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2047   010800  6EF8               	movwf	tblptru,c
  2048   010802                     	endif
  2049   010802  0008               	tblrd		*
  2050   010804  50F5               	movf	tablat,w,c
  2051   010806  0A2A               	xorlw	42
  2052   010808  A4D8               	btfss	status,2,c
  2053   01080A  EF09  F084         	goto	u2061
  2054   01080E  EF0B  F084         	goto	u2060
  2055   010812                     u2061:
  2056   010812  EF40  F084         	goto	l3233
  2057   010816                     u2060:
  2058   010816                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2061   010816  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2062   01081A  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2063   01081E  2ADE               	incf	postinc2,f,c
  2064   010820  0E00               	movlw	0
  2065   010822  22DD               	addwfc	postdec2,f,c
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2068   010824  C068  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2069   010828  C069  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2070   01082C  CFDF F06A          	movff	indf2,??_read_prec_or_width
  2071   010830  0E02               	movlw	2
  2072   010832  26DE               	addwf	postinc2,f,c
  2073   010834  CFDF F06B          	movff	indf2,??_read_prec_or_width+1
  2074   010838  0E00               	movlw	0
  2075   01083A  22DD               	addwfc	postdec2,f,c
  2076   01083C  C06A  FFD9         	movff	??_read_prec_or_width,fsr2l
  2077   010840  C06B  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2078   010844  CFDE F06D          	movff	postinc2,read_prec_or_width@n
  2079   010848  CFDD F06E          	movff	postdec2,read_prec_or_width@n+1
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2082   01084C  EF56  F084         	goto	l1262
  2083   010850                     l3229:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2087   010850  C06D  F060         	movff	read_prec_or_width@n,___wmul@multiplier
  2088   010854  C06E  F061         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2089   010858  0E00               	movlw	0
  2090   01085A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2091   01085C  0E0A               	movlw	10
  2092   01085E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2093   010860  EC14  F08A         	call	___wmul	;wreg free
  2094   010864  0100               	movlb	0	; () banked
  2095   010866  516C               	movf	read_prec_or_width@c& (0+255),w,b
  2096   010868  2560               	addwf	?___wmul& (0+255),w,b
  2097   01086A  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2098   01086C  0E00               	movlw	0
  2099   01086E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2100   010870  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2101   010872                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2104   010872  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2105   010876  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2106   01087A  2ADE               	incf	postinc2,f,c
  2107   01087C  0E00               	movlw	0
  2108   01087E  22DD               	addwfc	postdec2,f,c
  2109   010880                     l3233:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2113   010880  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2114   010884  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2115   010888  CFDE FFF6          	movff	postinc2,tblptrl
  2116   01088C  CFDD FFF7          	movff	postdec2,tblptrh
  2117   010890                     	if	0	;tblptru may be non-zero
  2118   010890                     	endif
  2119   010890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2120   010890  0E00               	movlw	low (__mediumconst shr (0+16))
  2121   010892  6EF8               	movwf	tblptru,c
  2122   010894                     	endif
  2123   010894  0008               	tblrd		*
  2124   010896  50F5               	movf	tablat,w,c
  2125   010898  0FD0               	addlw	208
  2126   01089A  6F6C               	movwf	read_prec_or_width@c& (0+255),b
  2127   01089C  0E09               	movlw	9
  2128   01089E  656C               	cpfsgt	read_prec_or_width@c& (0+255),b
  2129   0108A0  EF54  F084         	goto	u2071
  2130   0108A4  EF56  F084         	goto	u2070
  2131   0108A8                     u2071:
  2132   0108A8  EF28  F084         	goto	l3229
  2133   0108AC                     u2070:
  2134   0108AC                     l1262:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2138   0108AC  C06D  F066         	movff	read_prec_or_width@n,?_read_prec_or_width
  2139   0108B0  C06E  F067         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2140   0108B4                     
  2141                           ; BSR set to: 0
  2142   0108B4  0012               	return		;funcret
  2143   0108B6                     __end_of_read_prec_or_width:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function ___wmul *****************
  2147 ;; Defined at:
  2148 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2151 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  product         2    4[BANK0 ] unsigned int 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2    0[BANK0 ] unsigned int 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, prodl, prodh
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        6 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 4
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_read_prec_or_width
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text5
  2178   011428                     __ptext5:
  2179                           	callstack 0
  2180   011428                     ___wmul:
  2181                           	callstack 22
  2182   011428  0100               	movlb	0	; () banked
  2183   01142A  5160               	movf	___wmul@multiplier& (0+255),w,b
  2184   01142C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2185   01142E  CFF3 F064          	movff	prodl,___wmul@product
  2186   011432  CFF4 F065          	movff	prodh,___wmul@product+1
  2187   011436  5160               	movf	___wmul@multiplier& (0+255),w,b
  2188   011438  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2189   01143A  50F3               	movf	243,w,c
  2190   01143C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2191   01143E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2192   011440  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2193   011442  50F3               	movf	243,w,c
  2194   011444  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2195   011446                     
  2196                           ; BSR set to: 0
  2197   011446  C064  F060         	movff	___wmul@product,?___wmul
  2198   01144A  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2199   01144E                     
  2200                           ; BSR set to: 0
  2201   01144E  0012               	return		;funcret
  2202   011450                     __end_of___wmul:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _dtoa *****************
  2206 ;; Defined at:
  2207 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2210 ;;		 -> sprintf@f(12), 
  2211 ;;  d               2   29[BANK0 ] int 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  i               2   38[BANK0 ] int 
  2214 ;;  w               2   35[BANK0 ] int 
  2215 ;;  p               2   33[BANK0 ] int 
  2216 ;;  s               1   37[BANK0 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:       13 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 8
  2233 ;; This function calls:
  2234 ;;		___awdiv
  2235 ;;		___awmod
  2236 ;;		_abs
  2237 ;;		_pad
  2238 ;; This function is called by:
  2239 ;;		_vfpfcnvrt
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text6
  2244   0101E2                     __ptext6:
  2245                           	callstack 0
  2246   0101E2                     _dtoa:
  2247                           	callstack 19
  2248   0101E2                     
  2249                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2250   0101E2  0100               	movlb	0	; () banked
  2251   0101E4  BF7E               	btfsc	(dtoa@d+1)& (0+255),7,b
  2252   0101E6  EFF7  F080         	goto	u1931
  2253   0101EA  EFFA  F080         	goto	u1930
  2254   0101EE                     u1931:
  2255   0101EE  0E01               	movlw	1
  2256   0101F0  EFFB  F080         	goto	u1940
  2257   0101F4                     u1930:
  2258   0101F4  0E00               	movlw	0
  2259   0101F6                     u1940:
  2260   0101F6  6F85               	movwf	dtoa@s& (0+255),b
  2261   0101F8                     
  2262                           ; BSR set to: 0
  2263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2264   0101F8  5185               	movf	dtoa@s& (0+255),w,b
  2265   0101FA  B4D8               	btfsc	status,2,c
  2266   0101FC  EF02  F081         	goto	u1951
  2267   010200  EF04  F081         	goto	u1950
  2268   010204                     u1951:
  2269   010204  EF08  F081         	goto	l3171
  2270   010208                     u1950:
  2271   010208                     
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2274   010208  6D7D               	negf	dtoa@d& (0+255),b
  2275   01020A  1F7E               	comf	(dtoa@d+1)& (0+255),f,b
  2276   01020C  B0D8               	btfsc	status,0,c
  2277   01020E  2B7E               	incf	(dtoa@d+1)& (0+255),f,b
  2278   010210                     l3171:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2282   010210  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  2283   010212  EF0D  F081         	goto	u1961
  2284   010216  EF0F  F081         	goto	u1960
  2285   01021A                     u1961:
  2286   01021A  EF10  F081         	goto	l3175
  2287   01021E                     u1960:
  2288   01021E                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2291   01021E  922E               	bcf	_flags^0,1,c
  2292   010220                     l3175:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2296   010220  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  2297   010222  EF17  F081         	goto	u1970
  2298   010226  EF15  F081         	goto	u1971
  2299   01022A                     u1971:
  2300   01022A  EF1D  F081         	goto	l1242
  2301   01022E                     u1970:
  2302   01022E                     
  2303                           ; BSR set to: 0
  2304   01022E  0E00               	movlw	0
  2305   010230  6F82               	movwf	(dtoa@p+1)& (0+255),b
  2306   010232  0E01               	movlw	1
  2307   010234  6F81               	movwf	dtoa@p& (0+255),b
  2308   010236  EF21  F081         	goto	l1244
  2309   01023A                     l1242:
  2310                           
  2311                           ; BSR set to: 0
  2312   01023A  C0CF  F081         	movff	_prec,dtoa@p
  2313   01023E  C0D0  F082         	movff	_prec+1,dtoa@p+1
  2314   010242                     l1244:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2318   010242  C0CD  F083         	movff	_width,dtoa@w
  2319   010246  C0CE  F084         	movff	_width+1,dtoa@w+1
  2320   01024A                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2323   01024A  5185               	movf	dtoa@s& (0+255),w,b
  2324   01024C  B4D8               	btfsc	status,2,c
  2325   01024E  EF2B  F081         	goto	u1981
  2326   010252  EF2D  F081         	goto	u1980
  2327   010256                     u1981:
  2328   010256  EF44  F081         	goto	l1245
  2329   01025A                     u1980:
  2330   01025A                     
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2333   01025A  0783               	decf	dtoa@w& (0+255),f,b
  2334   01025C  A0D8               	btfss	status,0,c
  2335   01025E  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2336   010260                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2339   010260  5185               	movf	dtoa@s& (0+255),w,b
  2340   010262  A4D8               	btfss	status,2,c
  2341   010264  EF36  F081         	goto	u1991
  2342   010268  EF38  F081         	goto	u1990
  2343   01026C                     u1991:
  2344   01026C  EF3E  F081         	goto	l3187
  2345   010270                     u1990:
  2346   010270                     
  2347                           ; BSR set to: 0
  2348   010270  0E00               	movlw	0
  2349   010272  6F80               	movwf	(_dtoa$1716+1)& (0+255),b
  2350   010274  0E2B               	movlw	43
  2351   010276  6F7F               	movwf	_dtoa$1716& (0+255),b
  2352   010278  EF42  F081         	goto	l3189
  2353   01027C                     l3187:
  2354                           
  2355                           ; BSR set to: 0
  2356   01027C  0E00               	movlw	0
  2357   01027E  6F80               	movwf	(_dtoa$1716+1)& (0+255),b
  2358   010280  0E2D               	movlw	45
  2359   010282  6F7F               	movwf	_dtoa$1716& (0+255),b
  2360   010284                     l3189:
  2361                           
  2362                           ; BSR set to: 0
  2363   010284  C07F  F085         	movff	_dtoa$1716,dtoa@s
  2364   010288                     l1245:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2368   010288  0E00               	movlw	0
  2369   01028A  6F87               	movwf	(dtoa@i+1)& (0+255),b
  2370   01028C  0E1F               	movlw	31
  2371   01028E  6F86               	movwf	dtoa@i& (0+255),b
  2372   010290                     
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2375   010290  0E00               	movlw	0
  2376   010292  6FF2               	movwf	(_dbuf+31)& (0+255),b
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2379   010294  EF7D  F081         	goto	l3203
  2380   010298                     l3193:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2384   010298  0786               	decf	dtoa@i& (0+255),f,b
  2385   01029A  A0D8               	btfss	status,0,c
  2386   01029C  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2387   01029E                     
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2390   01029E  0ED3               	movlw	low _dbuf
  2391   0102A0  2586               	addwf	dtoa@i& (0+255),w,b
  2392   0102A2  6ED9               	movwf	fsr2l,c
  2393   0102A4  0E00               	movlw	high _dbuf
  2394   0102A6  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2395   0102A8  6EDA               	movwf	fsr2h,c
  2396   0102AA  C07D  F060         	movff	dtoa@d,___awmod@dividend
  2397   0102AE  C07E  F061         	movff	dtoa@d+1,___awmod@dividend+1
  2398   0102B2  0E00               	movlw	0
  2399   0102B4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2400   0102B6  0E0A               	movlw	10
  2401   0102B8  6F62               	movwf	___awmod@divisor& (0+255),b
  2402   0102BA  ECE1  F085         	call	___awmod	;wreg free
  2403   0102BE  C060  F066         	movff	?___awmod,abs@a
  2404   0102C2  C061  F067         	movff	?___awmod+1,abs@a+1
  2405   0102C6  EC0D  F089         	call	_abs	;wreg free
  2406   0102CA  0100               	movlb	0	; () banked
  2407   0102CC  5166               	movf	?_abs& (0+255),w,b
  2408   0102CE  0F30               	addlw	48
  2409   0102D0  6EDF               	movwf	indf2,c
  2410   0102D2                     
  2411                           ; BSR set to: 0
  2412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2413   0102D2  0781               	decf	dtoa@p& (0+255),f,b
  2414   0102D4  A0D8               	btfss	status,0,c
  2415   0102D6  0782               	decf	(dtoa@p+1)& (0+255),f,b
  2416   0102D8                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2419   0102D8  0783               	decf	dtoa@w& (0+255),f,b
  2420   0102DA  A0D8               	btfss	status,0,c
  2421   0102DC  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2422   0102DE                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2425   0102DE  C07D  F060         	movff	dtoa@d,___awdiv@dividend
  2426   0102E2  C07E  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  2427   0102E6  0E00               	movlw	0
  2428   0102E8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2429   0102EA  0E0A               	movlw	10
  2430   0102EC  6F62               	movwf	___awdiv@divisor& (0+255),b
  2431   0102EE  ECC1  F084         	call	___awdiv	;wreg free
  2432   0102F2  C060  F07D         	movff	?___awdiv,dtoa@d
  2433   0102F6  C061  F07E         	movff	?___awdiv+1,dtoa@d+1
  2434   0102FA                     l3203:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2437   0102FA  0100               	movlb	0	; () banked
  2438   0102FC  BF87               	btfsc	(dtoa@i+1)& (0+255),7,b
  2439   0102FE  EF89  F081         	goto	u2001
  2440   010302  5187               	movf	(dtoa@i+1)& (0+255),w,b
  2441   010304  E108               	bnz	u2000
  2442   010306  0586               	decf	dtoa@i& (0+255),w,b
  2443   010308  A0D8               	btfss	status,0,c
  2444   01030A  EF89  F081         	goto	u2001
  2445   01030E  EF8B  F081         	goto	u2000
  2446   010312                     u2001:
  2447   010312  EFB5  F081         	goto	l3213
  2448   010316                     u2000:
  2449   010316                     
  2450                           ; BSR set to: 0
  2451   010316  517D               	movf	dtoa@d& (0+255),w,b
  2452   010318  117E               	iorwf	(dtoa@d+1)& (0+255),w,b
  2453   01031A  A4D8               	btfss	status,2,c
  2454   01031C  EF92  F081         	goto	u2011
  2455   010320  EF94  F081         	goto	u2010
  2456   010324                     u2011:
  2457   010324  EF4C  F081         	goto	l3193
  2458   010328                     u2010:
  2459   010328                     
  2460                           ; BSR set to: 0
  2461   010328  BF82               	btfsc	(dtoa@p+1)& (0+255),7,b
  2462   01032A  EFA1  F081         	goto	u2020
  2463   01032E  5182               	movf	(dtoa@p+1)& (0+255),w,b
  2464   010330  E106               	bnz	u2021
  2465   010332  0581               	decf	dtoa@p& (0+255),w,b
  2466   010334  B0D8               	btfsc	status,0,c
  2467   010336  EF9F  F081         	goto	u2021
  2468   01033A  EFA1  F081         	goto	u2020
  2469   01033E                     u2021:
  2470   01033E  EF4C  F081         	goto	l3193
  2471   010342                     u2020:
  2472   010342                     
  2473                           ; BSR set to: 0
  2474   010342  BF84               	btfsc	(dtoa@w+1)& (0+255),7,b
  2475   010344  EFAC  F081         	goto	u2031
  2476   010348  5184               	movf	(dtoa@w+1)& (0+255),w,b
  2477   01034A  E108               	bnz	u2030
  2478   01034C  0583               	decf	dtoa@w& (0+255),w,b
  2479   01034E  A0D8               	btfss	status,0,c
  2480   010350  EFAC  F081         	goto	u2031
  2481   010354  EFAE  F081         	goto	u2030
  2482   010358                     u2031:
  2483   010358  EFB5  F081         	goto	l3213
  2484   01035C                     u2030:
  2485   01035C                     
  2486                           ; BSR set to: 0
  2487   01035C  B22E               	btfsc	_flags^0,1,c
  2488   01035E  EFB3  F081         	goto	u2041
  2489   010362  EFB5  F081         	goto	u2040
  2490   010366                     u2041:
  2491   010366  EF4C  F081         	goto	l3193
  2492   01036A                     u2040:
  2493   01036A                     l3213:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2497   01036A  5185               	movf	dtoa@s& (0+255),w,b
  2498   01036C  B4D8               	btfsc	status,2,c
  2499   01036E  EFBB  F081         	goto	u2051
  2500   010372  EFBD  F081         	goto	u2050
  2501   010376                     u2051:
  2502   010376  EFC8  F081         	goto	l3219
  2503   01037A                     u2050:
  2504   01037A                     
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2507   01037A  0786               	decf	dtoa@i& (0+255),f,b
  2508   01037C  A0D8               	btfss	status,0,c
  2509   01037E  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2510   010380                     
  2511                           ; BSR set to: 0
  2512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2513   010380  0ED3               	movlw	low _dbuf
  2514   010382  2586               	addwf	dtoa@i& (0+255),w,b
  2515   010384  6ED9               	movwf	fsr2l,c
  2516   010386  0E00               	movlw	high _dbuf
  2517   010388  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2518   01038A  6EDA               	movwf	fsr2h,c
  2519   01038C  C085  FFDF         	movff	dtoa@s,indf2
  2520   010390                     l3219:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2524   010390  C07B  F070         	movff	dtoa@fp,pad@fp
  2525   010394  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  2526   010398  0ED3               	movlw	low _dbuf
  2527   01039A  2586               	addwf	dtoa@i& (0+255),w,b
  2528   01039C  6F72               	movwf	pad@buf& (0+255),b
  2529   01039E  0E00               	movlw	high _dbuf
  2530   0103A0  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2531   0103A2  6F73               	movwf	(pad@buf+1)& (0+255),b
  2532   0103A4  C083  F074         	movff	dtoa@w,pad@p
  2533   0103A8  C084  F075         	movff	dtoa@w+1,pad@p+1
  2534   0103AC  EC3A  F086         	call	_pad	;wreg free
  2535   0103B0  0012               	return		;funcret
  2536   0103B2                     __end_of_dtoa:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _pad *****************
  2540 ;; Defined at:
  2541 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2544 ;;		 -> sprintf@f(12), 
  2545 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2546 ;;		 -> dbuf(32), 
  2547 ;;  p               2   20[BANK0 ] int 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  w               2   25[BANK0 ] int 
  2550 ;;  i               2   23[BANK0 ] int 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:       11 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 7
  2567 ;; This function calls:
  2568 ;;		_fputc
  2569 ;;		_fputs
  2570 ;; This function is called by:
  2571 ;;		_dtoa
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text7
  2576   010C74                     __ptext7:
  2577                           	callstack 0
  2578   010C74                     _pad:
  2579                           	callstack 19
  2580   010C74                     
  2581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2582   010C74  A02E               	btfss	_flags^0,0,c
  2583   010C76  EF3F  F086         	goto	u1881
  2584   010C7A  EF41  F086         	goto	u1880
  2585   010C7E                     u1881:
  2586   010C7E  EF4B  F086         	goto	l3147
  2587   010C82                     u1880:
  2588   010C82                     
  2589                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2590   010C82  C072  F069         	movff	pad@buf,fputs@s
  2591   010C86  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2592   010C8A  C070  F06B         	movff	pad@fp,fputs@fp
  2593   010C8E  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2594   010C92  ECC5  F088         	call	_fputs	;wreg free
  2595   010C96                     l3147:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2598   010C96  0100               	movlb	0	; () banked
  2599   010C98  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2600   010C9A  EF51  F086         	goto	u1891
  2601   010C9E  EF53  F086         	goto	u1890
  2602   010CA2                     u1891:
  2603   010CA2  EF59  F086         	goto	l3151
  2604   010CA6                     u1890:
  2605   010CA6                     
  2606                           ; BSR set to: 0
  2607   010CA6  C074  F079         	movff	pad@p,pad@w
  2608   010CAA  C075  F07A         	movff	pad@p+1,pad@w+1
  2609   010CAE  EF5D  F086         	goto	l1231
  2610   010CB2                     l3151:
  2611                           
  2612                           ; BSR set to: 0
  2613   010CB2  0E00               	movlw	0
  2614   010CB4  6F7A               	movwf	(pad@w+1)& (0+255),b
  2615   010CB6  0E00               	movlw	0
  2616   010CB8  6F79               	movwf	pad@w& (0+255),b
  2617   010CBA                     l1231:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2621   010CBA  0E00               	movlw	0
  2622   010CBC  6F78               	movwf	(pad@i+1)& (0+255),b
  2623   010CBE  0E00               	movlw	0
  2624   010CC0  6F77               	movwf	pad@i& (0+255),b
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2627   010CC2  EF70  F086         	goto	l3157
  2628   010CC6                     l3153:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2632   010CC6  0E00               	movlw	0
  2633   010CC8  6F61               	movwf	(fputc@c+1)& (0+255),b
  2634   010CCA  0E20               	movlw	32
  2635   010CCC  6F60               	movwf	fputc@c& (0+255),b
  2636   010CCE  C070  F062         	movff	pad@fp,fputc@fp
  2637   010CD2  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2638   010CD6  EC5B  F084         	call	_fputc	;wreg free
  2639   010CDA                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2641   010CDA  0100               	movlb	0	; () banked
  2642   010CDC  4B77               	infsnz	pad@i& (0+255),f,b
  2643   010CDE  2B78               	incf	(pad@i+1)& (0+255),f,b
  2644   010CE0                     l3157:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2648   010CE0  5179               	movf	pad@w& (0+255),w,b
  2649   010CE2  5D77               	subwf	pad@i& (0+255),w,b
  2650   010CE4  5178               	movf	(pad@i+1)& (0+255),w,b
  2651   010CE6  0A80               	xorlw	128
  2652   010CE8  6F76               	movwf	??_pad& (0+255),b
  2653   010CEA  517A               	movf	(pad@w+1)& (0+255),w,b
  2654   010CEC  0A80               	xorlw	128
  2655   010CEE  5976               	subwfb	??_pad& (0+255),w,b
  2656   010CF0  A0D8               	btfss	status,0,c
  2657   010CF2  EF7D  F086         	goto	u1901
  2658   010CF6  EF7F  F086         	goto	u1900
  2659   010CFA                     u1901:
  2660   010CFA  EF63  F086         	goto	l3153
  2661   010CFE                     u1900:
  2662   010CFE                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2665   010CFE  B02E               	btfsc	_flags^0,0,c
  2666   010D00  EF84  F086         	goto	u1911
  2667   010D04  EF86  F086         	goto	u1910
  2668   010D08                     u1911:
  2669   010D08  EF90  F086         	goto	l1236
  2670   010D0C                     u1910:
  2671   010D0C                     
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2674   010D0C  C072  F069         	movff	pad@buf,fputs@s
  2675   010D10  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2676   010D14  C070  F06B         	movff	pad@fp,fputs@fp
  2677   010D18  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2678   010D1C  ECC5  F088         	call	_fputs	;wreg free
  2679   010D20                     l1236:
  2680   010D20  0012               	return		;funcret
  2681   010D22                     __end_of_pad:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _fputs *****************
  2685 ;; Defined at:
  2686 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2689 ;;		 -> dbuf(32), 
  2690 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2691 ;;		 -> sprintf@f(12), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  i               2   14[BANK0 ] int 
  2694 ;;  c               1   13[BANK0 ] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    9[BANK0 ] int 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        7 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 6
  2711 ;; This function calls:
  2712 ;;		_fputc
  2713 ;; This function is called by:
  2714 ;;		_pad
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text8
  2719   01118A                     __ptext8:
  2720                           	callstack 0
  2721   01118A                     _fputs:
  2722                           	callstack 19
  2723   01118A  0E00               	movlw	0
  2724   01118C  0100               	movlb	0	; () banked
  2725   01118E  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2726   011190  0E00               	movlw	0
  2727   011192  6F6E               	movwf	fputs@i& (0+255),b
  2728   011194  EFD8  F088         	goto	l3055
  2729   011198                     l3051:
  2730                           
  2731                           ; BSR set to: 0
  2732   011198  C06D  F060         	movff	fputs@c,fputc@c
  2733   01119C  6B61               	clrf	(fputc@c+1)& (0+255),b
  2734   01119E  C06B  F062         	movff	fputs@fp,fputc@fp
  2735   0111A2  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2736   0111A6  EC5B  F084         	call	_fputc	;wreg free
  2737   0111AA  0100               	movlb	0	; () banked
  2738   0111AC  4B6E               	infsnz	fputs@i& (0+255),f,b
  2739   0111AE  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2740   0111B0                     l3055:
  2741                           
  2742                           ; BSR set to: 0
  2743   0111B0  516E               	movf	fputs@i& (0+255),w,b
  2744   0111B2  2569               	addwf	fputs@s& (0+255),w,b
  2745   0111B4  6ED9               	movwf	fsr2l,c
  2746   0111B6  516F               	movf	(fputs@i+1)& (0+255),w,b
  2747   0111B8  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2748   0111BA  6EDA               	movwf	fsr2h,c
  2749   0111BC  50DF               	movf	indf2,w,c
  2750   0111BE  6F6D               	movwf	fputs@c& (0+255),b
  2751   0111C0  516D               	movf	fputs@c& (0+255),w,b
  2752   0111C2  A4D8               	btfss	status,2,c
  2753   0111C4  EFE6  F088         	goto	u1751
  2754   0111C8  EFE8  F088         	goto	u1750
  2755   0111CC                     u1751:
  2756   0111CC  EFCC  F088         	goto	l3051
  2757   0111D0                     u1750:
  2758   0111D0                     
  2759                           ; BSR set to: 0
  2760   0111D0  0012               	return		;funcret
  2761   0111D2                     __end_of_fputs:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _fputc *****************
  2765 ;; Defined at:
  2766 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  c               2    0[BANK0 ] int 
  2769 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2770 ;;		 -> sprintf@f(12), 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    0[BANK0 ] int 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:        9 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; Hardware stack levels required when called: 5
  2789 ;; This function calls:
  2790 ;;		_putch
  2791 ;; This function is called by:
  2792 ;;		_pad
  2793 ;;		_vfpfcnvrt
  2794 ;;		_fputs
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text9
  2799   0108B6                     __ptext9:
  2800                           	callstack 0
  2801   0108B6                     _fputc:
  2802                           	callstack 22
  2803   0108B6  0100               	movlb	0	; () banked
  2804   0108B8  5162               	movf	fputc@fp& (0+255),w,b
  2805   0108BA  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2806   0108BC  B4D8               	btfsc	status,2,c
  2807   0108BE  EF63  F084         	goto	u1711
  2808   0108C2  EF65  F084         	goto	u1710
  2809   0108C6                     u1711:
  2810   0108C6  EF6E  F084         	goto	l3039
  2811   0108CA                     u1710:
  2812   0108CA                     
  2813                           ; BSR set to: 0
  2814   0108CA  5162               	movf	fputc@fp& (0+255),w,b
  2815   0108CC  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2816   0108CE  A4D8               	btfss	status,2,c
  2817   0108D0  EF6C  F084         	goto	u1721
  2818   0108D4  EF6E  F084         	goto	u1720
  2819   0108D8                     u1721:
  2820   0108D8  EF73  F084         	goto	l3041
  2821   0108DC                     u1720:
  2822   0108DC                     l3039:
  2823                           
  2824                           ; BSR set to: 0
  2825   0108DC  5160               	movf	fputc@c& (0+255),w,b
  2826   0108DE  ECA5  F08A         	call	_putch
  2827   0108E2  EFC0  F084         	goto	l1306
  2828   0108E6                     l3041:
  2829                           
  2830                           ; BSR set to: 0
  2831   0108E6  EE20 F00A          	lfsr	2,10
  2832   0108EA  5162               	movf	fputc@fp& (0+255),w,b
  2833   0108EC  26D9               	addwf	fsr2l,f,c
  2834   0108EE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2835   0108F0  22DA               	addwfc	fsr2h,f,c
  2836   0108F2  50DE               	movf	postinc2,w,c
  2837   0108F4  10DE               	iorwf	postinc2,w,c
  2838   0108F6  B4D8               	btfsc	status,2,c
  2839   0108F8  EF80  F084         	goto	u1731
  2840   0108FC  EF82  F084         	goto	u1730
  2841   010900                     u1731:
  2842   010900  EF9D  F084         	goto	l3045
  2843   010904                     u1730:
  2844   010904                     
  2845                           ; BSR set to: 0
  2846   010904  EE20 F00A          	lfsr	2,10
  2847   010908  5162               	movf	fputc@fp& (0+255),w,b
  2848   01090A  26D9               	addwf	fsr2l,f,c
  2849   01090C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2850   01090E  22DA               	addwfc	fsr2h,f,c
  2851   010910  EE10 F003          	lfsr	1,3
  2852   010914  5162               	movf	fputc@fp& (0+255),w,b
  2853   010916  26E1               	addwf	fsr1l,f,c
  2854   010918  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2855   01091A  22E2               	addwfc	fsr1h,f,c
  2856   01091C  50DE               	movf	postinc2,w,c
  2857   01091E  5CE6               	subwf	postinc1,w,c
  2858   010920  50E6               	movf	postinc1,w,c
  2859   010922  0A80               	xorlw	128
  2860   010924  6F68               	movwf	(??_fputc+4)& (0+255),b
  2861   010926  50DE               	movf	postinc2,w,c
  2862   010928  0A80               	xorlw	128
  2863   01092A  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2864   01092C  B0D8               	btfsc	status,0,c
  2865   01092E  EF9B  F084         	goto	u1741
  2866   010932  EF9D  F084         	goto	u1740
  2867   010936                     u1741:
  2868   010936  EFC0  F084         	goto	l1306
  2869   01093A                     u1740:
  2870   01093A                     l3045:
  2871                           
  2872                           ; BSR set to: 0
  2873   01093A  EE20 F003          	lfsr	2,3
  2874   01093E  5162               	movf	fputc@fp& (0+255),w,b
  2875   010940  26D9               	addwf	fsr2l,f,c
  2876   010942  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2877   010944  22DA               	addwfc	fsr2h,f,c
  2878   010946  CFDE F064          	movff	postinc2,??_fputc
  2879   01094A  CFDD F065          	movff	postdec2,??_fputc+1
  2880   01094E  C062  FFD9         	movff	fputc@fp,fsr2l
  2881   010952  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2882   010956  CFDE F066          	movff	postinc2,??_fputc+2
  2883   01095A  CFDD F067          	movff	postdec2,??_fputc+3
  2884   01095E  5164               	movf	??_fputc& (0+255),w,b
  2885   010960  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2886   010962  6ED9               	movwf	fsr2l,c
  2887   010964  5165               	movf	(??_fputc+1)& (0+255),w,b
  2888   010966  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2889   010968  6EDA               	movwf	fsr2h,c
  2890   01096A  C060  FFDF         	movff	fputc@c,indf2
  2891   01096E  EE20 F003          	lfsr	2,3
  2892   010972  5162               	movf	fputc@fp& (0+255),w,b
  2893   010974  26D9               	addwf	fsr2l,f,c
  2894   010976  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2895   010978  22DA               	addwfc	fsr2h,f,c
  2896   01097A  2ADE               	incf	postinc2,f,c
  2897   01097C  0E00               	movlw	0
  2898   01097E  22DD               	addwfc	postdec2,f,c
  2899   010980                     l1306:
  2900   010980  0012               	return		;funcret
  2901   010982                     __end_of_fputc:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _putch *****************
  2905 ;; Defined at:
  2906 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  c               1    wreg     unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  c               1    0[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 4
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_fputc
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text10
  2935   01154A                     __ptext10:
  2936                           	callstack 0
  2937   01154A                     _putch:
  2938                           	callstack 22
  2939   01154A  0012               	return		;funcret
  2940   01154C                     __end_of_putch:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _abs *****************
  2944 ;; Defined at:
  2945 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  a               2    6[BANK0 ] int 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  2    6[BANK0 ] int 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2959 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;Total ram usage:        4 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; Hardware stack levels required when called: 4
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_dtoa
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text11
  2974   01121A                     __ptext11:
  2975                           	callstack 0
  2976   01121A                     _abs:
  2977                           	callstack 22
  2978   01121A  0100               	movlb	0	; () banked
  2979   01121C  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2980   01121E  EF1B  F089         	goto	u1920
  2981   011222  5167               	movf	(abs@a+1)& (0+255),w,b
  2982   011224  E106               	bnz	u1921
  2983   011226  0566               	decf	abs@a& (0+255),w,b
  2984   011228  B0D8               	btfsc	status,0,c
  2985   01122A  EF19  F089         	goto	u1921
  2986   01122E  EF1B  F089         	goto	u1920
  2987   011232                     u1921:
  2988   011232  EF29  F089         	goto	l1291
  2989   011236                     u1920:
  2990   011236                     
  2991                           ; BSR set to: 0
  2992   011236  C066  F068         	movff	abs@a,??_abs
  2993   01123A  C067  F069         	movff	abs@a+1,??_abs+1
  2994   01123E  1F68               	comf	??_abs& (0+255),f,b
  2995   011240  1F69               	comf	(??_abs+1)& (0+255),f,b
  2996   011242  4B68               	infsnz	??_abs& (0+255),f,b
  2997   011244  2B69               	incf	(??_abs+1)& (0+255),f,b
  2998   011246  C068  F066         	movff	??_abs,?_abs
  2999   01124A  C069  F067         	movff	??_abs+1,?_abs+1
  3000   01124E  EF2D  F089         	goto	l1294
  3001   011252                     l1291:
  3002                           
  3003                           ; BSR set to: 0
  3004   011252  C066  F066         	movff	abs@a,?_abs
  3005   011256  C067  F067         	movff	abs@a+1,?_abs+1
  3006   01125A                     l1294:
  3007                           
  3008                           ; BSR set to: 0
  3009   01125A  0012               	return		;funcret
  3010   01125C                     __end_of_abs:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function ___awmod *****************
  3014 ;; Defined at:
  3015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  dividend        2    0[BANK0 ] int 
  3018 ;;  divisor         2    2[BANK0 ] int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  sign            1    5[BANK0 ] unsigned char 
  3021 ;;  counter         1    4[BANK0 ] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[BANK0 ] int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;Total ram usage:        6 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 4
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_dtoa
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text12
  3046   010BC2                     __ptext12:
  3047                           	callstack 0
  3048   010BC2                     ___awmod:
  3049                           	callstack 22
  3050   010BC2  0E00               	movlw	0
  3051   010BC4  0100               	movlb	0	; () banked
  3052   010BC6  6F65               	movwf	___awmod@sign& (0+255),b
  3053   010BC8                     
  3054                           ; BSR set to: 0
  3055   010BC8  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3056   010BCA  EFEB  F085         	goto	u1820
  3057   010BCE  EFE9  F085         	goto	u1821
  3058   010BD2                     u1821:
  3059   010BD2  EFF1  F085         	goto	l3115
  3060   010BD6                     u1820:
  3061   010BD6                     
  3062                           ; BSR set to: 0
  3063   010BD6  6D60               	negf	___awmod@dividend& (0+255),b
  3064   010BD8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3065   010BDA  B0D8               	btfsc	status,0,c
  3066   010BDC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3067   010BDE                     
  3068                           ; BSR set to: 0
  3069   010BDE  0E01               	movlw	1
  3070   010BE0  6F65               	movwf	___awmod@sign& (0+255),b
  3071   010BE2                     l3115:
  3072                           
  3073                           ; BSR set to: 0
  3074   010BE2  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3075   010BE4  EFF8  F085         	goto	u1830
  3076   010BE8  EFF6  F085         	goto	u1831
  3077   010BEC                     u1831:
  3078   010BEC  EFFC  F085         	goto	l3119
  3079   010BF0                     u1830:
  3080   010BF0                     
  3081                           ; BSR set to: 0
  3082   010BF0  6D62               	negf	___awmod@divisor& (0+255),b
  3083   010BF2  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3084   010BF4  B0D8               	btfsc	status,0,c
  3085   010BF6  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3086   010BF8                     l3119:
  3087                           
  3088                           ; BSR set to: 0
  3089   010BF8  5162               	movf	___awmod@divisor& (0+255),w,b
  3090   010BFA  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3091   010BFC  B4D8               	btfsc	status,2,c
  3092   010BFE  EF03  F086         	goto	u1841
  3093   010C02  EF05  F086         	goto	u1840
  3094   010C06                     u1841:
  3095   010C06  EF29  F086         	goto	l3135
  3096   010C0A                     u1840:
  3097   010C0A                     
  3098                           ; BSR set to: 0
  3099   010C0A  0E01               	movlw	1
  3100   010C0C  6F64               	movwf	___awmod@counter& (0+255),b
  3101   010C0E  EF0D  F086         	goto	l3125
  3102   010C12                     l3123:
  3103                           
  3104                           ; BSR set to: 0
  3105   010C12  90D8               	bcf	status,0,c
  3106   010C14  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3107   010C16  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3108   010C18  2B64               	incf	___awmod@counter& (0+255),f,b
  3109   010C1A                     l3125:
  3110                           
  3111                           ; BSR set to: 0
  3112   010C1A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3113   010C1C  EF12  F086         	goto	u1851
  3114   010C20  EF14  F086         	goto	u1850
  3115   010C24                     u1851:
  3116   010C24  EF09  F086         	goto	l3123
  3117   010C28                     u1850:
  3118   010C28                     l3127:
  3119                           
  3120                           ; BSR set to: 0
  3121   010C28  5162               	movf	___awmod@divisor& (0+255),w,b
  3122   010C2A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3123   010C2C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3124   010C2E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3125   010C30  A0D8               	btfss	status,0,c
  3126   010C32  EF1D  F086         	goto	u1861
  3127   010C36  EF1F  F086         	goto	u1860
  3128   010C3A                     u1861:
  3129   010C3A  EF23  F086         	goto	l3131
  3130   010C3E                     u1860:
  3131   010C3E                     
  3132                           ; BSR set to: 0
  3133   010C3E  5162               	movf	___awmod@divisor& (0+255),w,b
  3134   010C40  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3135   010C42  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3136   010C44  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3137   010C46                     l3131:
  3138                           
  3139                           ; BSR set to: 0
  3140   010C46  90D8               	bcf	status,0,c
  3141   010C48  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3142   010C4A  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3143   010C4C                     
  3144                           ; BSR set to: 0
  3145   010C4C  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3146   010C4E  EF14  F086         	goto	l3127
  3147   010C52                     l3135:
  3148                           
  3149                           ; BSR set to: 0
  3150   010C52  5165               	movf	___awmod@sign& (0+255),w,b
  3151   010C54  B4D8               	btfsc	status,2,c
  3152   010C56  EF2F  F086         	goto	u1871
  3153   010C5A  EF31  F086         	goto	u1870
  3154   010C5E                     u1871:
  3155   010C5E  EF35  F086         	goto	l3139
  3156   010C62                     u1870:
  3157   010C62                     
  3158                           ; BSR set to: 0
  3159   010C62  6D60               	negf	___awmod@dividend& (0+255),b
  3160   010C64  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3161   010C66  B0D8               	btfsc	status,0,c
  3162   010C68  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3163   010C6A                     l3139:
  3164                           
  3165                           ; BSR set to: 0
  3166   010C6A  C060  F060         	movff	___awmod@dividend,?___awmod
  3167   010C6E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3168   010C72                     
  3169                           ; BSR set to: 0
  3170   010C72  0012               	return		;funcret
  3171   010C74                     __end_of___awmod:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function ___awdiv *****************
  3175 ;; Defined at:
  3176 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  dividend        2    0[BANK0 ] int 
  3179 ;;  divisor         2    2[BANK0 ] int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  quotient        2    6[BANK0 ] int 
  3182 ;;  sign            1    5[BANK0 ] unsigned char 
  3183 ;;  counter         1    4[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2    0[BANK0 ] int 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:        8 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 4
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_dtoa
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text13
  3208   010982                     __ptext13:
  3209                           	callstack 0
  3210   010982                     ___awdiv:
  3211                           	callstack 22
  3212   010982  0E00               	movlw	0
  3213   010984  0100               	movlb	0	; () banked
  3214   010986  6F65               	movwf	___awdiv@sign& (0+255),b
  3215   010988                     
  3216                           ; BSR set to: 0
  3217   010988  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3218   01098A  EFCB  F084         	goto	u1760
  3219   01098E  EFC9  F084         	goto	u1761
  3220   010992                     u1761:
  3221   010992  EFD1  F084         	goto	l3071
  3222   010996                     u1760:
  3223   010996                     
  3224                           ; BSR set to: 0
  3225   010996  6D62               	negf	___awdiv@divisor& (0+255),b
  3226   010998  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3227   01099A  B0D8               	btfsc	status,0,c
  3228   01099C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3229   01099E                     
  3230                           ; BSR set to: 0
  3231   01099E  0E01               	movlw	1
  3232   0109A0  6F65               	movwf	___awdiv@sign& (0+255),b
  3233   0109A2                     l3071:
  3234                           
  3235                           ; BSR set to: 0
  3236   0109A2  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3237   0109A4  EFD8  F084         	goto	u1770
  3238   0109A8  EFD6  F084         	goto	u1771
  3239   0109AC                     u1771:
  3240   0109AC  EFDE  F084         	goto	l3077
  3241   0109B0                     u1770:
  3242   0109B0                     
  3243                           ; BSR set to: 0
  3244   0109B0  6D60               	negf	___awdiv@dividend& (0+255),b
  3245   0109B2  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3246   0109B4  B0D8               	btfsc	status,0,c
  3247   0109B6  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3248   0109B8                     
  3249                           ; BSR set to: 0
  3250   0109B8  0E01               	movlw	1
  3251   0109BA  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3252   0109BC                     l3077:
  3253                           
  3254                           ; BSR set to: 0
  3255   0109BC  0E00               	movlw	0
  3256   0109BE  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3257   0109C0  0E00               	movlw	0
  3258   0109C2  6F66               	movwf	___awdiv@quotient& (0+255),b
  3259   0109C4                     
  3260                           ; BSR set to: 0
  3261   0109C4  5162               	movf	___awdiv@divisor& (0+255),w,b
  3262   0109C6  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3263   0109C8  B4D8               	btfsc	status,2,c
  3264   0109CA  EFE9  F084         	goto	u1781
  3265   0109CE  EFEB  F084         	goto	u1780
  3266   0109D2                     u1781:
  3267   0109D2  EF13  F085         	goto	l3099
  3268   0109D6                     u1780:
  3269   0109D6                     
  3270                           ; BSR set to: 0
  3271   0109D6  0E01               	movlw	1
  3272   0109D8  6F64               	movwf	___awdiv@counter& (0+255),b
  3273   0109DA  EFF3  F084         	goto	l3085
  3274   0109DE                     l3083:
  3275                           
  3276                           ; BSR set to: 0
  3277   0109DE  90D8               	bcf	status,0,c
  3278   0109E0  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3279   0109E2  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3280   0109E4  2B64               	incf	___awdiv@counter& (0+255),f,b
  3281   0109E6                     l3085:
  3282                           
  3283                           ; BSR set to: 0
  3284   0109E6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3285   0109E8  EFF8  F084         	goto	u1791
  3286   0109EC  EFFA  F084         	goto	u1790
  3287   0109F0                     u1791:
  3288   0109F0  EFEF  F084         	goto	l3083
  3289   0109F4                     u1790:
  3290   0109F4                     l3087:
  3291                           
  3292                           ; BSR set to: 0
  3293   0109F4  90D8               	bcf	status,0,c
  3294   0109F6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3295   0109F8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3296   0109FA                     
  3297                           ; BSR set to: 0
  3298   0109FA  5162               	movf	___awdiv@divisor& (0+255),w,b
  3299   0109FC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3300   0109FE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3301   010A00  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3302   010A02  A0D8               	btfss	status,0,c
  3303   010A04  EF06  F085         	goto	u1801
  3304   010A08  EF08  F085         	goto	u1800
  3305   010A0C                     u1801:
  3306   010A0C  EF0D  F085         	goto	l3095
  3307   010A10                     u1800:
  3308   010A10                     
  3309                           ; BSR set to: 0
  3310   010A10  5162               	movf	___awdiv@divisor& (0+255),w,b
  3311   010A12  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3312   010A14  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3313   010A16  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3314   010A18                     
  3315                           ; BSR set to: 0
  3316   010A18  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3317   010A1A                     l3095:
  3318                           
  3319                           ; BSR set to: 0
  3320   010A1A  90D8               	bcf	status,0,c
  3321   010A1C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3322   010A1E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3323   010A20                     
  3324                           ; BSR set to: 0
  3325   010A20  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3326   010A22  EFFA  F084         	goto	l3087
  3327   010A26                     l3099:
  3328                           
  3329                           ; BSR set to: 0
  3330   010A26  5165               	movf	___awdiv@sign& (0+255),w,b
  3331   010A28  B4D8               	btfsc	status,2,c
  3332   010A2A  EF19  F085         	goto	u1811
  3333   010A2E  EF1B  F085         	goto	u1810
  3334   010A32                     u1811:
  3335   010A32  EF1F  F085         	goto	l3103
  3336   010A36                     u1810:
  3337   010A36                     
  3338                           ; BSR set to: 0
  3339   010A36  6D66               	negf	___awdiv@quotient& (0+255),b
  3340   010A38  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3341   010A3A  B0D8               	btfsc	status,0,c
  3342   010A3C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3343   010A3E                     l3103:
  3344                           
  3345                           ; BSR set to: 0
  3346   010A3E  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3347   010A42  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3348   010A46                     
  3349                           ; BSR set to: 0
  3350   010A46  0012               	return		;funcret
  3351   010A48                     __end_of___awdiv:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _measure_voltage *****************
  3355 ;; Defined at:
  3356 ;;		line 37 in file "measure.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  i               2   32[BANK0 ] int 
  3361 ;;  result          4   28[BANK0 ] unsigned long 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2   25[BANK0 ] unsigned short 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3371 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;Total ram usage:        9 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 5
  3378 ;; This function calls:
  3379 ;;		_ADC_GetConversion
  3380 ;;		___lldiv
  3381 ;;		___lmul
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text14
  3388   010B08                     __ptext14:
  3389                           	callstack 0
  3390   010B08                     _measure_voltage:
  3391                           	callstack 25
  3392   010B08                     
  3393                           ;measure.c: 41:         uint32_t result = 0;
  3394   010B08  0E00               	movlw	0
  3395   010B0A  0100               	movlb	0	; () banked
  3396   010B0C  6F7C               	movwf	measure_voltage@result& (0+255),b
  3397   010B0E  0E00               	movlw	0
  3398   010B10  6F7D               	movwf	(measure_voltage@result+1)& (0+255),b
  3399   010B12  0E00               	movlw	0
  3400   010B14  6F7E               	movwf	(measure_voltage@result+2)& (0+255),b
  3401   010B16  0E00               	movlw	0
  3402   010B18  6F7F               	movwf	(measure_voltage@result+3)& (0+255),b
  3403                           
  3404                           ;measure.c: 43:         for(int i = 0;i < 8;i++)
  3405   010B1A  0E00               	movlw	0
  3406   010B1C  6F81               	movwf	(measure_voltage@i+1)& (0+255),b
  3407   010B1E  0E00               	movlw	0
  3408   010B20  6F80               	movwf	measure_voltage@i& (0+255),b
  3409   010B22                     l3547:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;measure.c: 44:         {;measure.c: 45:             result += ADC_GetConversion(VOLTAGE
      +                          );
  3413   010B22  0E05               	movlw	5
  3414   010B24  EC2E  F089         	call	_ADC_GetConversion
  3415   010B28  0100               	movlb	0	; () banked
  3416   010B2A  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3417   010B2C  277C               	addwf	measure_voltage@result& (0+255),f,b
  3418   010B2E  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3419   010B30  237D               	addwfc	(measure_voltage@result+1)& (0+255),f,b
  3420   010B32  0E00               	movlw	0
  3421   010B34  237E               	addwfc	(measure_voltage@result+2)& (0+255),f,b
  3422   010B36  0E00               	movlw	0
  3423   010B38  237F               	addwfc	(measure_voltage@result+3)& (0+255),f,b
  3424   010B3A                     
  3425                           ; BSR set to: 0
  3426                           ;measure.c: 46:         }
  3427   010B3A  4B80               	infsnz	measure_voltage@i& (0+255),f,b
  3428   010B3C  2B81               	incf	(measure_voltage@i+1)& (0+255),f,b
  3429   010B3E                     
  3430                           ; BSR set to: 0
  3431   010B3E  BF81               	btfsc	(measure_voltage@i+1)& (0+255),7,b
  3432   010B40  EFAB  F085         	goto	u2241
  3433   010B44  5181               	movf	(measure_voltage@i+1)& (0+255),w,b
  3434   010B46  E109               	bnz	u2240
  3435   010B48  0E08               	movlw	8
  3436   010B4A  5D80               	subwf	measure_voltage@i& (0+255),w,b
  3437   010B4C  A0D8               	btfss	status,0,c
  3438   010B4E  EFAB  F085         	goto	u2241
  3439   010B52  EFAD  F085         	goto	u2240
  3440   010B56                     u2241:
  3441   010B56  EF91  F085         	goto	l3547
  3442   010B5A                     u2240:
  3443   010B5A                     
  3444                           ; BSR set to: 0
  3445                           ;measure.c: 47:         result/= 8;
  3446   010B5A  0E03               	movlw	3
  3447   010B5C  6F7B               	movwf	??_measure_voltage& (0+255),b
  3448   010B5E                     u2255:
  3449   010B5E  90D8               	bcf	status,0,c
  3450   010B60  337F               	rrcf	(measure_voltage@result+3)& (0+255),f,b
  3451   010B62  337E               	rrcf	(measure_voltage@result+2)& (0+255),f,b
  3452   010B64  337D               	rrcf	(measure_voltage@result+1)& (0+255),f,b
  3453   010B66  337C               	rrcf	measure_voltage@result& (0+255),f,b
  3454   010B68  2F7B               	decfsz	??_measure_voltage& (0+255),f,b
  3455   010B6A  EFAF  F085         	goto	u2255
  3456   010B6E                     
  3457                           ; BSR set to: 0
  3458                           ;measure.c: 49:         return (result*3300)/(1024 - 1);
  3459   010B6E  C07C  F060         	movff	measure_voltage@result,___lmul@multiplier
  3460   010B72  C07D  F061         	movff	measure_voltage@result+1,___lmul@multiplier+1
  3461   010B76  C07E  F062         	movff	measure_voltage@result+2,___lmul@multiplier+2
  3462   010B7A  C07F  F063         	movff	measure_voltage@result+3,___lmul@multiplier+3
  3463   010B7E  0EE4               	movlw	228
  3464   010B80  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3465   010B82  0E0C               	movlw	12
  3466   010B84  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3467   010B86  0E00               	movlw	0
  3468   010B88  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3469   010B8A  0E00               	movlw	0
  3470   010B8C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3471   010B8E  EC6C  F087         	call	___lmul	;wreg free
  3472   010B92  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3473   010B96  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3474   010B9A  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3475   010B9E  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3476   010BA2  0EFF               	movlw	255
  3477   010BA4  0100               	movlb	0	; () banked
  3478   010BA6  6F70               	movwf	___lldiv@divisor& (0+255),b
  3479   010BA8  0E03               	movlw	3
  3480   010BAA  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3481   010BAC  0E00               	movlw	0
  3482   010BAE  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3483   010BB0  0E00               	movlw	0
  3484   010BB2  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3485   010BB4  EC91  F086         	call	___lldiv	;wreg free
  3486   010BB8  C06C  F079         	movff	?___lldiv,?_measure_voltage
  3487   010BBC  C06D  F07A         	movff	?___lldiv+1,?_measure_voltage+1
  3488   010BC0  0012               	return		;funcret
  3489   010BC2                     __end_of_measure_voltage:
  3490                           	callstack 0
  3491                           
  3492 ;; *************** function _measure_current *****************
  3493 ;; Defined at:
  3494 ;;		line 52 in file "measure.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  offset          2   25[BANK0 ] unsigned short 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  i               2   31[BANK0 ] int 
  3499 ;;  result          4   33[BANK0 ] unsigned long 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  2   25[BANK0 ] unsigned short 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;Total ram usage:       12 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 5
  3516 ;; This function calls:
  3517 ;;		_ADC_GetConversion
  3518 ;;		___lldiv
  3519 ;;		___lmul
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text15
  3526   01055E                     __ptext15:
  3527                           	callstack 0
  3528   01055E                     _measure_current:
  3529                           	callstack 25
  3530   01055E                     
  3531                           ;measure.c: 52: uint16_t measure_current(uint16_t offset);measure.c: 53: {;measure.c: 55
      +                          :     uint32_t result = 0;
  3532   01055E  0E00               	movlw	0
  3533   010560  0100               	movlb	0	; () banked
  3534   010562  6F81               	movwf	measure_current@result& (0+255),b
  3535   010564  0E00               	movlw	0
  3536   010566  6F82               	movwf	(measure_current@result+1)& (0+255),b
  3537   010568  0E00               	movlw	0
  3538   01056A  6F83               	movwf	(measure_current@result+2)& (0+255),b
  3539   01056C  0E00               	movlw	0
  3540   01056E  6F84               	movwf	(measure_current@result+3)& (0+255),b
  3541                           
  3542                           ;measure.c: 57:             for(int i = 0;i < 8;i++)
  3543   010570  0E00               	movlw	0
  3544   010572  6F80               	movwf	(measure_current@i+1)& (0+255),b
  3545   010574  0E00               	movlw	0
  3546   010576  6F7F               	movwf	measure_current@i& (0+255),b
  3547   010578                     l3517:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;measure.c: 58:         {;measure.c: 59:             result += ADC_GetConversion(CURRENT
      +                          );
  3551   010578  0E06               	movlw	6
  3552   01057A  EC2E  F089         	call	_ADC_GetConversion
  3553   01057E  0100               	movlb	0	; () banked
  3554   010580  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3555   010582  2781               	addwf	measure_current@result& (0+255),f,b
  3556   010584  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3557   010586  2382               	addwfc	(measure_current@result+1)& (0+255),f,b
  3558   010588  0E00               	movlw	0
  3559   01058A  2383               	addwfc	(measure_current@result+2)& (0+255),f,b
  3560   01058C  0E00               	movlw	0
  3561   01058E  2384               	addwfc	(measure_current@result+3)& (0+255),f,b
  3562   010590                     
  3563                           ; BSR set to: 0
  3564                           ;measure.c: 60:         }
  3565   010590  4B7F               	infsnz	measure_current@i& (0+255),f,b
  3566   010592  2B80               	incf	(measure_current@i+1)& (0+255),f,b
  3567   010594                     
  3568                           ; BSR set to: 0
  3569   010594  BF80               	btfsc	(measure_current@i+1)& (0+255),7,b
  3570   010596  EFD6  F082         	goto	u2211
  3571   01059A  5180               	movf	(measure_current@i+1)& (0+255),w,b
  3572   01059C  E109               	bnz	u2210
  3573   01059E  0E08               	movlw	8
  3574   0105A0  5D7F               	subwf	measure_current@i& (0+255),w,b
  3575   0105A2  A0D8               	btfss	status,0,c
  3576   0105A4  EFD6  F082         	goto	u2211
  3577   0105A8  EFD8  F082         	goto	u2210
  3578   0105AC                     u2211:
  3579   0105AC  EFBC  F082         	goto	l3517
  3580   0105B0                     u2210:
  3581   0105B0                     
  3582                           ; BSR set to: 0
  3583                           ;measure.c: 61:         result/= 8;
  3584   0105B0  0E03               	movlw	3
  3585   0105B2  6F7B               	movwf	??_measure_current& (0+255),b
  3586   0105B4                     u2225:
  3587   0105B4  90D8               	bcf	status,0,c
  3588   0105B6  3384               	rrcf	(measure_current@result+3)& (0+255),f,b
  3589   0105B8  3383               	rrcf	(measure_current@result+2)& (0+255),f,b
  3590   0105BA  3382               	rrcf	(measure_current@result+1)& (0+255),f,b
  3591   0105BC  3381               	rrcf	measure_current@result& (0+255),f,b
  3592   0105BE  2F7B               	decfsz	??_measure_current& (0+255),f,b
  3593   0105C0  EFDA  F082         	goto	u2225
  3594   0105C4                     
  3595                           ; BSR set to: 0
  3596                           ;measure.c: 63:         result = (result*3300)/(1024 - 1);
  3597   0105C4  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3598   0105C8  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3599   0105CC  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3600   0105D0  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3601   0105D4  0EE4               	movlw	228
  3602   0105D6  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3603   0105D8  0E0C               	movlw	12
  3604   0105DA  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3605   0105DC  0E00               	movlw	0
  3606   0105DE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3607   0105E0  0E00               	movlw	0
  3608   0105E2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3609   0105E4  EC6C  F087         	call	___lmul	;wreg free
  3610   0105E8  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3611   0105EC  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3612   0105F0  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3613   0105F4  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3614   0105F8  0EFF               	movlw	255
  3615   0105FA  0100               	movlb	0	; () banked
  3616   0105FC  6F70               	movwf	___lldiv@divisor& (0+255),b
  3617   0105FE  0E03               	movlw	3
  3618   010600  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3619   010602  0E00               	movlw	0
  3620   010604  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3621   010606  0E00               	movlw	0
  3622   010608  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3623   01060A  EC91  F086         	call	___lldiv	;wreg free
  3624   01060E  C06C  F081         	movff	?___lldiv,measure_current@result
  3625   010612  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3626   010616  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3627   01061A  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3628   01061E                     
  3629                           ;measure.c: 65:         result *= 1000;
  3630   01061E  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3631   010622  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3632   010626  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3633   01062A  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3634   01062E  0EE8               	movlw	232
  3635   010630  0100               	movlb	0	; () banked
  3636   010632  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3637   010634  0E03               	movlw	3
  3638   010636  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3639   010638  0E00               	movlw	0
  3640   01063A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3641   01063C  0E00               	movlw	0
  3642   01063E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3643   010640  EC6C  F087         	call	___lmul	;wreg free
  3644   010644  C060  F081         	movff	?___lmul,measure_current@result
  3645   010648  C061  F082         	movff	?___lmul+1,measure_current@result+1
  3646   01064C  C062  F083         	movff	?___lmul+2,measure_current@result+2
  3647   010650  C063  F084         	movff	?___lmul+3,measure_current@result+3
  3648   010654                     
  3649                           ;measure.c: 67:         result /= 66;
  3650   010654  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3651   010658  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3652   01065C  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3653   010660  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3654   010664  0E42               	movlw	66
  3655   010666  0100               	movlb	0	; () banked
  3656   010668  6F70               	movwf	___lldiv@divisor& (0+255),b
  3657   01066A  0E00               	movlw	0
  3658   01066C  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3659   01066E  0E00               	movlw	0
  3660   010670  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3661   010672  0E00               	movlw	0
  3662   010674  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3663   010676  EC91  F086         	call	___lldiv	;wreg free
  3664   01067A  C06C  F081         	movff	?___lldiv,measure_current@result
  3665   01067E  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3666   010682  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3667   010686  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3668   01068A                     
  3669                           ;measure.c: 69:         result /= 3;
  3670   01068A  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3671   01068E  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3672   010692  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3673   010696  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3674   01069A  0E03               	movlw	3
  3675   01069C  0100               	movlb	0	; () banked
  3676   01069E  6F70               	movwf	___lldiv@divisor& (0+255),b
  3677   0106A0  0E00               	movlw	0
  3678   0106A2  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3679   0106A4  0E00               	movlw	0
  3680   0106A6  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3681   0106A8  0E00               	movlw	0
  3682   0106AA  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3683   0106AC  EC91  F086         	call	___lldiv	;wreg free
  3684   0106B0  C06C  F081         	movff	?___lldiv,measure_current@result
  3685   0106B4  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3686   0106B8  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3687   0106BC  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3688                           
  3689                           ;measure.c: 71:         if(result > offset)
  3690   0106C0  0100               	movlb	0	; () banked
  3691   0106C2  5179               	movf	measure_current@offset& (0+255),w,b
  3692   0106C4  6F7B               	movwf	??_measure_current& (0+255),b
  3693   0106C6  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3694   0106C8  6F7C               	movwf	(??_measure_current+1)& (0+255),b
  3695   0106CA  6B7D               	clrf	(??_measure_current+2)& (0+255),b
  3696   0106CC  6B7E               	clrf	(??_measure_current+3)& (0+255),b
  3697   0106CE  5181               	movf	measure_current@result& (0+255),w,b
  3698   0106D0  5D7B               	subwf	??_measure_current& (0+255),w,b
  3699   0106D2  5182               	movf	(measure_current@result+1)& (0+255),w,b
  3700   0106D4  597C               	subwfb	(??_measure_current+1)& (0+255),w,b
  3701   0106D6  5183               	movf	(measure_current@result+2)& (0+255),w,b
  3702   0106D8  597D               	subwfb	(??_measure_current+2)& (0+255),w,b
  3703   0106DA  5184               	movf	(measure_current@result+3)& (0+255),w,b
  3704   0106DC  597E               	subwfb	(??_measure_current+3)& (0+255),w,b
  3705   0106DE  B0D8               	btfsc	status,0,c
  3706   0106E0  EF74  F083         	goto	u2231
  3707   0106E4  EF76  F083         	goto	u2230
  3708   0106E8                     u2231:
  3709   0106E8  EF7E  F083         	goto	l3537
  3710   0106EC                     u2230:
  3711   0106EC                     
  3712                           ; BSR set to: 0
  3713                           ;measure.c: 72:         {;measure.c: 73:             return result-offset;
  3714   0106EC  5179               	movf	measure_current@offset& (0+255),w,b
  3715   0106EE  5D81               	subwf	measure_current@result& (0+255),w,b
  3716   0106F0  6F79               	movwf	?_measure_current& (0+255),b
  3717   0106F2  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3718   0106F4  5982               	subwfb	(measure_current@result+1)& (0+255),w,b
  3719   0106F6  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3720   0106F8  EF82  F083         	goto	l465
  3721   0106FC                     l3537:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;measure.c: 76:         return 0;
  3725   0106FC  0E00               	movlw	0
  3726   0106FE  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3727   010700  0E00               	movlw	0
  3728   010702  6F79               	movwf	?_measure_current& (0+255),b
  3729   010704                     l465:
  3730                           
  3731                           ; BSR set to: 0
  3732   010704  0012               	return		;funcret
  3733   010706                     __end_of_measure_current:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function ___lmul *****************
  3737 ;; Defined at:
  3738 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3741 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  product         4    8[BANK0 ] unsigned long 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  4    0[BANK0 ] unsigned long 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3753 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;Total ram usage:       12 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; Hardware stack levels required when called: 4
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_measure_voltage
  3764 ;;		_measure_current
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text16
  3769   010ED8                     __ptext16:
  3770                           	callstack 0
  3771   010ED8                     ___lmul:
  3772                           	callstack 25
  3773   010ED8  0E00               	movlw	0
  3774   010EDA  0100               	movlb	0	; () banked
  3775   010EDC  6F68               	movwf	___lmul@product& (0+255),b
  3776   010EDE  0E00               	movlw	0
  3777   010EE0  6F69               	movwf	(___lmul@product+1)& (0+255),b
  3778   010EE2  0E00               	movlw	0
  3779   010EE4  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  3780   010EE6  0E00               	movlw	0
  3781   010EE8  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  3782   010EEA                     l3427:
  3783                           
  3784                           ; BSR set to: 0
  3785   010EEA  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3786   010EEC  EF7A  F087         	goto	u2141
  3787   010EF0  EF7C  F087         	goto	u2140
  3788   010EF4                     u2141:
  3789   010EF4  EF84  F087         	goto	l3431
  3790   010EF8                     u2140:
  3791   010EF8                     
  3792                           ; BSR set to: 0
  3793   010EF8  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3794   010EFA  2768               	addwf	___lmul@product& (0+255),f,b
  3795   010EFC  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3796   010EFE  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  3797   010F00  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3798   010F02  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  3799   010F04  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3800   010F06  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  3801   010F08                     l3431:
  3802                           
  3803                           ; BSR set to: 0
  3804   010F08  90D8               	bcf	status,0,c
  3805   010F0A  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3806   010F0C  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3807   010F0E  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3808   010F10  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3809   010F12                     
  3810                           ; BSR set to: 0
  3811   010F12  90D8               	bcf	status,0,c
  3812   010F14  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3813   010F16  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3814   010F18  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3815   010F1A  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3816   010F1C  5160               	movf	___lmul@multiplier& (0+255),w,b
  3817   010F1E  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3818   010F20  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3819   010F22  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3820   010F24  A4D8               	btfss	status,2,c
  3821   010F26  EF97  F087         	goto	u2151
  3822   010F2A  EF99  F087         	goto	u2150
  3823   010F2E                     u2151:
  3824   010F2E  EF75  F087         	goto	l3427
  3825   010F32                     u2150:
  3826   010F32                     
  3827                           ; BSR set to: 0
  3828   010F32  C068  F060         	movff	___lmul@product,?___lmul
  3829   010F36  C069  F061         	movff	___lmul@product+1,?___lmul+1
  3830   010F3A  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  3831   010F3E  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  3832   010F42                     
  3833                           ; BSR set to: 0
  3834   010F42  0012               	return		;funcret
  3835   010F44                     __end_of___lmul:
  3836                           	callstack 0
  3837                           
  3838 ;; *************** function ___lldiv *****************
  3839 ;; Defined at:
  3840 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  dividend        4   12[BANK0 ] unsigned long 
  3843 ;;  divisor         4   16[BANK0 ] unsigned long 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  quotient        4   20[BANK0 ] unsigned long 
  3846 ;;  counter         1   24[BANK0 ] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  4   12[BANK0 ] unsigned long 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:       13 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 4
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_measure_voltage
  3867 ;;		_measure_current
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text17
  3872   010D22                     __ptext17:
  3873                           	callstack 0
  3874   010D22                     ___lldiv:
  3875                           	callstack 25
  3876   010D22  0E00               	movlw	0
  3877   010D24  0100               	movlb	0	; () banked
  3878   010D26  6F74               	movwf	___lldiv@quotient& (0+255),b
  3879   010D28  0E00               	movlw	0
  3880   010D2A  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
  3881   010D2C  0E00               	movlw	0
  3882   010D2E  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
  3883   010D30  0E00               	movlw	0
  3884   010D32  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
  3885   010D34                     
  3886                           ; BSR set to: 0
  3887   010D34  5170               	movf	___lldiv@divisor& (0+255),w,b
  3888   010D36  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3889   010D38  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3890   010D3A  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3891   010D3C  B4D8               	btfsc	status,2,c
  3892   010D3E  EFA3  F086         	goto	u2161
  3893   010D42  EFA5  F086         	goto	u2160
  3894   010D46                     u2161:
  3895   010D46  EFDB  F086         	goto	l557
  3896   010D4A                     u2160:
  3897   010D4A                     
  3898                           ; BSR set to: 0
  3899   010D4A  0E01               	movlw	1
  3900   010D4C  6F78               	movwf	___lldiv@counter& (0+255),b
  3901   010D4E  EFAF  F086         	goto	l3443
  3902   010D52                     l3441:
  3903                           
  3904                           ; BSR set to: 0
  3905   010D52  90D8               	bcf	status,0,c
  3906   010D54  3770               	rlcf	___lldiv@divisor& (0+255),f,b
  3907   010D56  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3908   010D58  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3909   010D5A  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3910   010D5C  2B78               	incf	___lldiv@counter& (0+255),f,b
  3911   010D5E                     l3443:
  3912                           
  3913                           ; BSR set to: 0
  3914   010D5E  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3915   010D60  EFB4  F086         	goto	u2171
  3916   010D64  EFB6  F086         	goto	u2170
  3917   010D68                     u2171:
  3918   010D68  EFA9  F086         	goto	l3441
  3919   010D6C                     u2170:
  3920   010D6C                     l3445:
  3921                           
  3922                           ; BSR set to: 0
  3923   010D6C  90D8               	bcf	status,0,c
  3924   010D6E  3774               	rlcf	___lldiv@quotient& (0+255),f,b
  3925   010D70  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3926   010D72  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3927   010D74  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3928   010D76                     
  3929                           ; BSR set to: 0
  3930   010D76  5170               	movf	___lldiv@divisor& (0+255),w,b
  3931   010D78  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
  3932   010D7A  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3933   010D7C  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3934   010D7E  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3935   010D80  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3936   010D82  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3937   010D84  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3938   010D86  A0D8               	btfss	status,0,c
  3939   010D88  EFC8  F086         	goto	u2181
  3940   010D8C  EFCA  F086         	goto	u2180
  3941   010D90                     u2181:
  3942   010D90  EFD3  F086         	goto	l3453
  3943   010D94                     u2180:
  3944   010D94                     
  3945                           ; BSR set to: 0
  3946   010D94  5170               	movf	___lldiv@divisor& (0+255),w,b
  3947   010D96  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
  3948   010D98  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3949   010D9A  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3950   010D9C  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3951   010D9E  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3952   010DA0  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3953   010DA2  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3954   010DA4                     
  3955                           ; BSR set to: 0
  3956   010DA4  8174               	bsf	___lldiv@quotient& (0+255),0,b
  3957   010DA6                     l3453:
  3958                           
  3959                           ; BSR set to: 0
  3960   010DA6  90D8               	bcf	status,0,c
  3961   010DA8  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3962   010DAA  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3963   010DAC  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3964   010DAE  3370               	rrcf	___lldiv@divisor& (0+255),f,b
  3965   010DB0                     
  3966                           ; BSR set to: 0
  3967   010DB0  2F78               	decfsz	___lldiv@counter& (0+255),f,b
  3968   010DB2  EFB6  F086         	goto	l3445
  3969   010DB6                     l557:
  3970                           
  3971                           ; BSR set to: 0
  3972   010DB6  C074  F06C         	movff	___lldiv@quotient,?___lldiv
  3973   010DBA  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
  3974   010DBE  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
  3975   010DC2  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
  3976   010DC6                     
  3977                           ; BSR set to: 0
  3978   010DC6  0012               	return		;funcret
  3979   010DC8                     __end_of___lldiv:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _ADC_GetConversion *****************
  3983 ;; Defined at:
  3984 ;;		line 109 in file "mcc_generated_files/adc.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  channel         1    wreg     enum E4918
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  channel         1    4[BANK0 ] enum E4918
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    0[BANK0 ] unsigned short 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:        5 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 4
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_measure_voltage
  4009 ;;		_measure_current
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text18
  4014   01125C                     __ptext18:
  4015                           	callstack 0
  4016   01125C                     _ADC_GetConversion:
  4017                           	callstack 25
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;incstack = 0
  4021                           ;ADC_GetConversion@channel stored from wreg
  4022   01125C  0100               	movlb	0	; () banked
  4023   01125E  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
  4024   011260                     
  4025                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  4026   011260  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4027   011264  0100               	movlb	0	; () banked
  4028   011266  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4029   011268  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4030   01126A  50C2               	movf	194,w,c	;volatile
  4031   01126C  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4032   01126E  0BC3               	andlw	-61
  4033   011270  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4034   011272  6EC2               	movwf	194,c	;volatile
  4035   011274                     
  4036                           ; BSR set to: 0
  4037                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  4038   011274  80C2               	bsf	194,0,c	;volatile
  4039   011276                     
  4040                           ; BSR set to: 0
  4041                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4042   011276  82C2               	bsf	194,1,c	;volatile
  4043   011278                     l86:
  4044                           
  4045                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4046   011278  B2C2               	btfsc	194,1,c	;volatile
  4047   01127A  EF41  F089         	goto	u2131
  4048   01127E  EF43  F089         	goto	u2130
  4049   011282                     u2131:
  4050   011282  EF3C  F089         	goto	l86
  4051   011286                     u2130:
  4052   011286                     
  4053                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4054   011286  50C4               	movf	196,w,c	;volatile
  4055   011288  0100               	movlb	0	; () banked
  4056   01128A  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4057   01128C  6B62               	clrf	??_ADC_GetConversion& (0+255),b
  4058   01128E  50C3               	movf	195,w,c	;volatile
  4059   011290  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
  4060   011292  6F60               	movwf	?_ADC_GetConversion& (0+255),b
  4061   011294  0E00               	movlw	0
  4062   011296  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4063   011298  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4064   01129A                     
  4065                           ; BSR set to: 0
  4066   01129A  0012               	return		;funcret
  4067   01129C                     __end_of_ADC_GetConversion:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _SYSTEM_Initialize *****************
  4071 ;; Defined at:
  4072 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; Hardware stack levels required when called: 6
  4093 ;; This function calls:
  4094 ;;		_ADC_Initialize
  4095 ;;		_EPWM1_Initialize
  4096 ;;		_EUSART1_Initialize
  4097 ;;		_INTERRUPT_Initialize
  4098 ;;		_OSCILLATOR_Initialize
  4099 ;;		_PIN_MANAGER_Initialize
  4100 ;;		_TMR0_Initialize
  4101 ;;		_TMR2_Initialize
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text19
  4108   011450                     __ptext19:
  4109                           	callstack 0
  4110   011450                     _SYSTEM_Initialize:
  4111                           	callstack 24
  4112   011450                     
  4113                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4114   011450  ECA3  F08A         	call	_INTERRUPT_Initialize	;wreg free
  4115   011454                     
  4116                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4117   011454  EC4E  F089         	call	_PIN_MANAGER_Initialize	;wreg free
  4118   011458                     
  4119                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4120   011458  EC93  F08A         	call	_OSCILLATOR_Initialize	;wreg free
  4121   01145C                     
  4122                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4123   01145C  EC50  F08A         	call	_ADC_Initialize	;wreg free
  4124   011460                     
  4125                           ;mcc_generated_files/mcc.c: 57:     EPWM1_Initialize();
  4126   011460  EC45  F08A         	call	_EPWM1_Initialize	;wreg free
  4127   011464                     
  4128                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4129   011464  EC5B  F08A         	call	_TMR2_Initialize	;wreg free
  4130   011468                     
  4131                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  4132   011468  ECAC  F089         	call	_TMR0_Initialize	;wreg free
  4133   01146C                     
  4134                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  4135   01146C  ECE4  F086         	call	_EUSART1_Initialize	;wreg free
  4136   011470  0012               	return		;funcret
  4137   011472                     __end_of_SYSTEM_Initialize:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _TMR2_Initialize *****************
  4141 ;; Defined at:
  4142 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;Total ram usage:        0 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 4
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_SYSTEM_Initialize
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text20
  4171   0114B6                     __ptext20:
  4172                           	callstack 0
  4173   0114B6                     _TMR2_Initialize:
  4174                           	callstack 25
  4175   0114B6                     
  4176                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4177   0114B6  68CB               	setf	203,c	;volatile
  4178   0114B8                     
  4179                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4180   0114B8  0E00               	movlw	0
  4181   0114BA  6ECC               	movwf	204,c	;volatile
  4182   0114BC                     
  4183                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4184   0114BC  929E               	bcf	158,1,c	;volatile
  4185                           
  4186                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4187   0114BE  0E04               	movlw	4
  4188   0114C0  6ECA               	movwf	202,c	;volatile
  4189   0114C2  0012               	return		;funcret
  4190   0114C4                     __end_of_TMR2_Initialize:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _TMR0_Initialize *****************
  4194 ;; Defined at:
  4195 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;Total ram usage:        2 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 5
  4216 ;; This function calls:
  4217 ;;		_TMR0_SetInterruptHandler
  4218 ;; This function is called by:
  4219 ;;		_SYSTEM_Initialize
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text21
  4224   011358                     __ptext21:
  4225                           	callstack 0
  4226   011358                     _TMR0_Initialize:
  4227                           	callstack 24
  4228   011358                     
  4229                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4230   011358  9CD5               	bcf	213,6,c	;volatile
  4231                           
  4232                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4233   01135A  68D7               	setf	215,c	;volatile
  4234   01135C                     
  4235                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
  4236   01135C  0E9D               	movlw	157
  4237   01135E  6ED6               	movwf	214,c	;volatile
  4238   011360                     
  4239                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4240   011360  50D6               	movf	214,w,c	;volatile
  4241   011362  CFD7 F063          	movff	4055,??_TMR0_Initialize	;volatile
  4242   011366  0100               	movlb	0	; () banked
  4243   011368  6B64               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  4244   01136A  C063  F064         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4245   01136E  6B63               	clrf	??_TMR0_Initialize& (0+255),b
  4246   011370  1163               	iorwf	??_TMR0_Initialize& (0+255),w,b
  4247   011372  6E2C               	movwf	_timer0ReloadVal^0,c	;volatile
  4248   011374  5164               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  4249   011376  6E2D               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4250   011378                     
  4251                           ; BSR set to: 0
  4252                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4253   011378  94F2               	bcf	242,2,c	;volatile
  4254   01137A                     
  4255                           ; BSR set to: 0
  4256                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4257   01137A  8AF2               	bsf	242,5,c	;volatile
  4258   01137C                     
  4259                           ; BSR set to: 0
  4260                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4261   01137C  0E4C               	movlw	low _TMR0_DefaultInterruptHandler
  4262   01137E  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  4263   011380  0E15               	movlw	high _TMR0_DefaultInterruptHandler
  4264   011382  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4265   011384  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  4266   011386  6F62               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  4267   011388  EC62  F08A         	call	_TMR0_SetInterruptHandler	;wreg free
  4268   01138C                     
  4269                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x17;
  4270   01138C  0E17               	movlw	23
  4271   01138E  6ED5               	movwf	213,c	;volatile
  4272   011390  0012               	return		;funcret
  4273   011392                     __end_of_TMR0_Initialize:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _TMR0_SetInterruptHandler *****************
  4277 ;; Defined at:
  4278 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
  4281 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4293 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;Total ram usage:        3 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 4
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_TMR0_Initialize
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text22
  4308   0114C4                     __ptext22:
  4309                           	callstack 0
  4310   0114C4                     _TMR0_SetInterruptHandler:
  4311                           	callstack 24
  4312   0114C4                     
  4313                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4314   0114C4  C060  F039         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4315   0114C8  C061  F03A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4316   0114CC  C062  F03B         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  4317   0114D0  0012               	return		;funcret
  4318   0114D2                     __end_of_TMR0_SetInterruptHandler:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _PIN_MANAGER_Initialize *****************
  4322 ;; Defined at:
  4323 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 4
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_SYSTEM_Initialize
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text23
  4352   01129C                     __ptext23:
  4353                           	callstack 0
  4354   01129C                     _PIN_MANAGER_Initialize:
  4355                           	callstack 25
  4356   01129C                     
  4357                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  4358   01129C  0E00               	movlw	0
  4359   01129E  6E8D               	movwf	141,c	;volatile
  4360                           
  4361                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  4362   0112A0  0E00               	movlw	0
  4363   0112A2  6E91               	movwf	145,c	;volatile
  4364                           
  4365                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  4366   0112A4  0E00               	movlw	0
  4367   0112A6  6E8C               	movwf	140,c	;volatile
  4368                           
  4369                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  4370   0112A8  0E00               	movlw	0
  4371   0112AA  6E89               	movwf	137,c	;volatile
  4372                           
  4373                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  4374   0112AC  0E00               	movlw	0
  4375   0112AE  6E8E               	movwf	142,c	;volatile
  4376                           
  4377                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  4378   0112B0  0E00               	movlw	0
  4379   0112B2  6E8A               	movwf	138,c	;volatile
  4380                           
  4381                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  4382   0112B4  0E00               	movlw	0
  4383   0112B6  6E8F               	movwf	143,c	;volatile
  4384                           
  4385                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4386   0112B8  0E00               	movlw	0
  4387   0112BA  6E8B               	movwf	139,c	;volatile
  4388                           
  4389                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  4390   0112BC  0E00               	movlw	0
  4391   0112BE  6E90               	movwf	144,c	;volatile
  4392   0112C0                     
  4393                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  4394   0112C0  6896               	setf	150,c	;volatile
  4395   0112C2                     
  4396                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  4397   0112C2  6897               	setf	151,c	;volatile
  4398                           
  4399                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  4400   0112C4  0E3F               	movlw	63
  4401   0112C6  6E92               	movwf	146,c	;volatile
  4402   0112C8                     
  4403                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  4404   0112C8  6898               	setf	152,c	;volatile
  4405   0112CA                     
  4406                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  4407   0112CA  6893               	setf	147,c	;volatile
  4408   0112CC                     
  4409                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  4410   0112CC  6899               	setf	153,c	;volatile
  4411                           
  4412                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBB;
  4413   0112CE  0EBB               	movlw	187
  4414   0112D0  6E94               	movwf	148,c	;volatile
  4415   0112D2                     
  4416                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  4417   0112D2  6895               	setf	149,c	;volatile
  4418   0112D4                     
  4419                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  4420   0112D4  689A               	setf	154,c	;volatile
  4421                           
  4422                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  4423   0112D6  0EF0               	movlw	-16
  4424   0112D8  16C1               	andwf	193,f,c	;volatile
  4425   0112DA  0012               	return		;funcret
  4426   0112DC                     __end_of_PIN_MANAGER_Initialize:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _OSCILLATOR_Initialize *****************
  4430 ;; Defined at:
  4431 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 4
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_SYSTEM_Initialize
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text24
  4460   011526                     __ptext24:
  4461                           	callstack 0
  4462   011526                     _OSCILLATOR_Initialize:
  4463                           	callstack 25
  4464   011526                     
  4465                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x02;
  4466   011526  0E02               	movlw	2
  4467   011528  6ED3               	movwf	211,c	;volatile
  4468                           
  4469                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4470   01152A  0E00               	movlw	0
  4471   01152C  6E9B               	movwf	155,c	;volatile
  4472   01152E  0012               	return		;funcret
  4473   011530                     __end_of_OSCILLATOR_Initialize:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _INTERRUPT_Initialize *****************
  4477 ;; Defined at:
  4478 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		None
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 4
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_SYSTEM_Initialize
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text25
  4507   011546                     __ptext25:
  4508                           	callstack 0
  4509   011546                     _INTERRUPT_Initialize:
  4510                           	callstack 25
  4511   011546                     
  4512                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4513   011546  9ED0               	bcf	208,7,c	;volatile
  4514   011548  0012               	return		;funcret
  4515   01154A                     __end_of_INTERRUPT_Initialize:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _EUSART1_Initialize *****************
  4519 ;; Defined at:
  4520 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 5
  4541 ;; This function calls:
  4542 ;;		_EUSART1_SetErrorHandler
  4543 ;;		_EUSART1_SetFramingErrorHandler
  4544 ;;		_EUSART1_SetOverrunErrorHandler
  4545 ;;		_EUSART1_SetRxInterruptHandler
  4546 ;;		_EUSART1_SetTxInterruptHandler
  4547 ;; This function is called by:
  4548 ;;		_SYSTEM_Initialize
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text26
  4553   010DC8                     __ptext26:
  4554                           	callstack 0
  4555   010DC8                     _EUSART1_Initialize:
  4556                           	callstack 24
  4557   010DC8                     
  4558                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4559   010DC8  9A9D               	bcf	157,5,c	;volatile
  4560   010DCA                     
  4561                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4562   010DCA  0E48               	movlw	low _EUSART1_Receive_ISR
  4563   010DCC  0100               	movlb	0	; () banked
  4564   010DCE  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  4565   010DD0  0E0A               	movlw	high _EUSART1_Receive_ISR
  4566   010DD2  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  4567   010DD4  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  4568   010DD6  6F62               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  4569   010DD8  EC70  F08A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4570   010DDC                     
  4571                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4572   010DDC  989D               	bcf	157,4,c	;volatile
  4573                           
  4574                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4575   010DDE  0EDC               	movlw	low _EUSART1_Transmit_ISR
  4576   010DE0  0100               	movlb	0	; () banked
  4577   010DE2  6F60               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  4578   010DE4  0E12               	movlw	high _EUSART1_Transmit_ISR
  4579   010DE6  6F61               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  4580   010DE8  0E01               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  4581   010DEA  6F62               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
  4582   010DEC  EC69  F08A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4583   010DF0                     
  4584                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4585   010DF0  0E08               	movlw	8
  4586   010DF2  6E7E               	movwf	126,c	;volatile
  4587   010DF4                     
  4588                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0xD0;
  4589   010DF4  0ED0               	movlw	208
  4590   010DF6  6EAB               	movwf	171,c	;volatile
  4591   010DF8                     
  4592                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x65;
  4593   010DF8  0E65               	movlw	101
  4594   010DFA  6EAC               	movwf	172,c	;volatile
  4595   010DFC                     
  4596                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  4597   010DFC  0E8A               	movlw	138
  4598   010DFE  6EAF               	movwf	175,c	;volatile
  4599   010E00                     
  4600                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  4601   010E00  0E02               	movlw	2
  4602   010E02  6E7F               	movwf	127,c	;volatile
  4603   010E04                     
  4604                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4605   010E04  0E4E               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4606   010E06  0100               	movlb	0	; () banked
  4607   010E08  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4608   010E0A  0E15               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4609   010E0C  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4610   010E0E  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  4611   010E10  6F62               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
  4612   010E12  EC7E  F08A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4613   010E16                     
  4614                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4615   010E16  0E3A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4616   010E18  0100               	movlb	0	; () banked
  4617   010E1A  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4618   010E1C  0E15               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4619   010E1E  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4620   010E20  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  4621   010E22  6F62               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
  4622   010E24  EC77  F08A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4623   010E28                     
  4624                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4625   010E28  0E40               	movlw	low _EUSART1_DefaultErrorHandler
  4626   010E2A  0100               	movlb	0	; () banked
  4627   010E2C  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4628   010E2E  0E15               	movlw	high _EUSART1_DefaultErrorHandler
  4629   010E30  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4630   010E32  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  4631   010E34  6F62               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)& (0+255),b
  4632   010E36  EC85  F08A         	call	_EUSART1_SetErrorHandler	;wreg free
  4633                           
  4634                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4635   010E3A  0E00               	movlw	0
  4636   010E3C  6E32               	movwf	_eusart1RxLastError^0,c	;volatile
  4637                           
  4638                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4639   010E3E  0E00               	movlw	0
  4640   010E40  6E38               	movwf	_eusart1TxHead^0,c	;volatile
  4641                           
  4642                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4643   010E42  0E00               	movlw	0
  4644   010E44  6E37               	movwf	_eusart1TxTail^0,c	;volatile
  4645                           
  4646                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4647   010E46  0E08               	movlw	8
  4648   010E48  6E36               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4649                           
  4650                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4651   010E4A  0E00               	movlw	0
  4652   010E4C  6E35               	movwf	_eusart1RxHead^0,c	;volatile
  4653                           
  4654                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4655   010E4E  0E00               	movlw	0
  4656   010E50  6E34               	movwf	_eusart1RxTail^0,c	;volatile
  4657                           
  4658                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4659   010E52  0E00               	movlw	0
  4660   010E54  6E33               	movwf	_eusart1RxCount^0,c	;volatile
  4661   010E56                     
  4662                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4663   010E56  8A9D               	bsf	157,5,c	;volatile
  4664   010E58  0012               	return		;funcret
  4665   010E5A                     __end_of_EUSART1_Initialize:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4669 ;; Defined at:
  4670 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4673 ;;		 -> EUSART1_Transmit_ISR(1), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4685 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;Total ram usage:        3 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 4
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_EUSART1_Initialize
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text27
  4700   0114D2                     __ptext27:
  4701                           	callstack 0
  4702   0114D2                     _EUSART1_SetTxInterruptHandler:
  4703                           	callstack 24
  4704   0114D2                     
  4705                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4706   0114D2  C060  F03F         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4707   0114D6  C061  F040         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4708   0114DA  C062  F041         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  4709   0114DE  0012               	return		;funcret
  4710   0114E0                     __end_of_EUSART1_SetTxInterruptHandler:
  4711                           	callstack 0
  4712                           
  4713 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4714 ;; Defined at:
  4715 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4718 ;;		 -> EUSART1_Receive_ISR(1), 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:        3 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 4
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_EUSART1_Initialize
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text28
  4745   0114E0                     __ptext28:
  4746                           	callstack 0
  4747   0114E0                     _EUSART1_SetRxInterruptHandler:
  4748                           	callstack 24
  4749   0114E0                     
  4750                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4751   0114E0  C060  F03C         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4752   0114E4  C061  F03D         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4753   0114E8  C062  F03E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  4754   0114EC  0012               	return		;funcret
  4755   0114EE                     __end_of_EUSART1_SetRxInterruptHandler:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4759 ;; Defined at:
  4760 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4763 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;Total ram usage:        3 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 4
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_EUSART1_Initialize
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text29
  4790   0114EE                     __ptext29:
  4791                           	callstack 0
  4792   0114EE                     _EUSART1_SetOverrunErrorHandler:
  4793                           	callstack 24
  4794   0114EE                     
  4795                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  4796   0114EE  C060  F0F6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4797   0114F2  C061  F0F7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4798   0114F6  C062  F0F8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  4799   0114FA  0012               	return		;funcret
  4800   0114FC                     __end_of_EUSART1_SetOverrunErrorHandler:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4804 ;; Defined at:
  4805 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4808 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4820 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;Total ram usage:        3 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 4
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_EUSART1_Initialize
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text30
  4835   0114FC                     __ptext30:
  4836                           	callstack 0
  4837   0114FC                     _EUSART1_SetFramingErrorHandler:
  4838                           	callstack 24
  4839   0114FC                     
  4840                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  4841   0114FC  C060  F0F9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4842   011500  C061  F0FA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4843   011504  C062  F0FB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  4844   011508  0012               	return		;funcret
  4845   01150A                     __end_of_EUSART1_SetFramingErrorHandler:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _EUSART1_SetErrorHandler *****************
  4849 ;; Defined at:
  4850 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4853 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;Total ram usage:        3 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 4
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_EUSART1_Initialize
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text31
  4880   01150A                     __ptext31:
  4881                           	callstack 0
  4882   01150A                     _EUSART1_SetErrorHandler:
  4883                           	callstack 24
  4884   01150A                     
  4885                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  4886   01150A  C060  F0F3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4887   01150E  C061  F0F4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4888   011512  C062  F0F5         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  4889   011516  0012               	return		;funcret
  4890   011518                     __end_of_EUSART1_SetErrorHandler:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _EPWM1_Initialize *****************
  4894 ;; Defined at:
  4895 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 4
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_SYSTEM_Initialize
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text32
  4924   01148A                     __ptext32:
  4925                           	callstack 0
  4926   01148A                     _EPWM1_Initialize:
  4927                           	callstack 25
  4928   01148A                     
  4929                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4930   01148A  0E3C               	movlw	60
  4931   01148C  6EBD               	movwf	189,c	;volatile
  4932                           
  4933                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4934   01148E  0E00               	movlw	0
  4935   011490  6EB6               	movwf	182,c	;volatile
  4936                           
  4937                           ;mcc_generated_files/epwm1.c: 75:  ECCP1DEL = 0x80;
  4938   011492  0E80               	movlw	128
  4939   011494  6E79               	movwf	121,c	;volatile
  4940                           
  4941                           ;mcc_generated_files/epwm1.c: 78:  CCPR1H = 0x00;
  4942   011496  0E00               	movlw	0
  4943   011498  6EBF               	movwf	191,c	;volatile
  4944                           
  4945                           ;mcc_generated_files/epwm1.c: 81:  CCPR1L = 0x7F;
  4946   01149A  0E7F               	movlw	127
  4947   01149C  6EBE               	movwf	190,c	;volatile
  4948   01149E  0012               	return		;funcret
  4949   0114A0                     __end_of_EPWM1_Initialize:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function _ADC_Initialize *****************
  4953 ;; Defined at:
  4954 ;;		line 61 in file "mcc_generated_files/adc.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;Total ram usage:        0 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 4
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_SYSTEM_Initialize
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text33
  4983   0114A0                     __ptext33:
  4984                           	callstack 0
  4985   0114A0                     _ADC_Initialize:
  4986                           	callstack 25
  4987   0114A0                     
  4988                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  4989   0114A0  0E00               	movlw	0
  4990   0114A2  6EC1               	movwf	193,c	;volatile
  4991                           
  4992                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0x92;
  4993   0114A4  0E92               	movlw	146
  4994   0114A6  6EC0               	movwf	192,c	;volatile
  4995                           
  4996                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  4997   0114A8  0E00               	movlw	0
  4998   0114AA  6EC3               	movwf	195,c	;volatile
  4999                           
  5000                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  5001   0114AC  0E00               	movlw	0
  5002   0114AE  6EC4               	movwf	196,c	;volatile
  5003                           
  5004                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  5005   0114B0  0E01               	movlw	1
  5006   0114B2  6EC2               	movwf	194,c	;volatile
  5007   0114B4  0012               	return		;funcret
  5008   0114B6                     __end_of_ADC_Initialize:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _Lcd_Init *****************
  5012 ;; Defined at:
  5013 ;;		line 17 in file "lcd/lcd.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      char 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;Total ram usage:        2 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; Hardware stack levels required when called: 5
  5034 ;; This function calls:
  5035 ;;		_LCD_2x16_WriteCmd
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text34
  5042   0111D2                     __ptext34:
  5043                           	callstack 0
  5044   0111D2                     _Lcd_Init:
  5045                           	callstack 25
  5046   0111D2                     
  5047                           ;lcd/lcd.c: 21:         TRISDbits.TRISD3 = 0;
  5048   0111D2  9695               	bcf	149,3,c	;volatile
  5049                           
  5050                           ;lcd/lcd.c: 22:         LATDbits.LATD3 = 0;
  5051   0111D4  968C               	bcf	140,3,c	;volatile
  5052                           
  5053                           ;lcd/lcd.c: 23:         TRISDbits.TRISD2 = 0;
  5054   0111D6  9495               	bcf	149,2,c	;volatile
  5055                           
  5056                           ;lcd/lcd.c: 24:         LATDbits.LATD2 = 0;
  5057   0111D8  948C               	bcf	140,2,c	;volatile
  5058   0111DA                     
  5059                           ;lcd/lcd.c: 25:         TRISJ = TRISJ & 0x0F;
  5060   0111DA  509A               	movf	154,w,c	;volatile
  5061   0111DC  0B0F               	andlw	15
  5062   0111DE  6E9A               	movwf	154,c	;volatile
  5063   0111E0                     
  5064                           ;lcd/lcd.c: 27:         _delay((unsigned long)((200)*(25000000L/4000.0)));
  5065   0111E0  0E07               	movlw	7
  5066   0111E2  0100               	movlb	0	; () banked
  5067   0111E4  6F63               	movwf	(??_Lcd_Init+1)& (0+255),b
  5068   0111E6  0E58               	movlw	88
  5069   0111E8  6F62               	movwf	??_Lcd_Init& (0+255),b
  5070   0111EA  0E59               	movlw	89
  5071   0111EC                     u2277:
  5072   0111EC  2EE8               	decfsz	wreg,f,c
  5073   0111EE  D7FE               	bra	u2277
  5074   0111F0  2F62               	decfsz	??_Lcd_Init& (0+255),f,b
  5075   0111F2  D7FC               	bra	u2277
  5076   0111F4  2F63               	decfsz	(??_Lcd_Init+1)& (0+255),f,b
  5077   0111F6  D7FA               	bra	u2277
  5078   0111F8  D000               	nop2	
  5079   0111FA                     
  5080                           ;lcd/lcd.c: 28:         LCD_2x16_WriteCmd(0x02);
  5081   0111FA  0E02               	movlw	2
  5082   0111FC  ECA2  F087         	call	_LCD_2x16_WriteCmd
  5083   011200                     
  5084                           ;lcd/lcd.c: 30:         LCD_2x16_WriteCmd(0x28);
  5085   011200  0E28               	movlw	40
  5086   011202  ECA2  F087         	call	_LCD_2x16_WriteCmd
  5087   011206                     
  5088                           ;lcd/lcd.c: 33:         LCD_2x16_WriteCmd(0x01);
  5089   011206  0E01               	movlw	1
  5090   011208  ECA2  F087         	call	_LCD_2x16_WriteCmd
  5091   01120C                     
  5092                           ;lcd/lcd.c: 34:         LCD_2x16_WriteCmd(0x0C);
  5093   01120C  0E0C               	movlw	12
  5094   01120E  ECA2  F087         	call	_LCD_2x16_WriteCmd
  5095   011212                     
  5096                           ;lcd/lcd.c: 37:         LCD_2x16_WriteCmd(0x06);
  5097   011212  0E06               	movlw	6
  5098   011214  ECA2  F087         	call	_LCD_2x16_WriteCmd
  5099   011218  0012               	return		;funcret
  5100   01121A                     __end_of_Lcd_Init:
  5101                           	callstack 0
  5102                           
  5103 ;; *************** function _LCD_2x16_WriteMsg *****************
  5104 ;; Defined at:
  5105 ;;		line 74 in file "lcd/lcd.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  msg             2    2[BANK0 ] PTR unsigned char 
  5108 ;;		 -> main@tempString(20), 
  5109 ;;  line            1    4[BANK0 ] unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5121 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;Total ram usage:        3 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 5
  5128 ;; This function calls:
  5129 ;;		_LCD_2x16_WriteCmd
  5130 ;;		_LCD_2x16_WriteData
  5131 ;; This function is called by:
  5132 ;;		_main
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text35
  5137   01131C                     __ptext35:
  5138                           	callstack 0
  5139   01131C                     _LCD_2x16_WriteMsg:
  5140                           	callstack 25
  5141   01131C                     
  5142                           ;lcd/lcd.c: 74: void LCD_2x16_WriteMsg(unsigned char * msg, uint8_t line);lcd/lcd.c: 75:
      +                           {;lcd/lcd.c: 76:     LCD_2x16_WriteCmd(0x80 | (line << 6));
  5143   01131C  0100               	movlb	0	; () banked
  5144   01131E  4164               	rrncf	LCD_2x16_WriteMsg@line& (0+255),w,b
  5145   011320  42E8               	rrncf	wreg,f,c
  5146   011322  0BC0               	andlw	192
  5147   011324  0980               	iorlw	128
  5148   011326  ECA2  F087         	call	_LCD_2x16_WriteCmd
  5149   01132A                     l3487:
  5150                           
  5151                           ;lcd/lcd.c: 78:     {;lcd/lcd.c: 79:         LCD_2x16_WriteData(*msg);
  5152   01132A  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5153   01132E  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5154   011332  50DF               	movf	indf2,w,c
  5155   011334  EC29  F088         	call	_LCD_2x16_WriteData
  5156   011338                     
  5157                           ;lcd/lcd.c: 80:         msg++;
  5158   011338  0100               	movlb	0	; () banked
  5159   01133A  4B62               	infsnz	LCD_2x16_WriteMsg@msg& (0+255),f,b
  5160   01133C  2B63               	incf	(LCD_2x16_WriteMsg@msg+1)& (0+255),f,b
  5161   01133E                     
  5162                           ; BSR set to: 0
  5163                           ;lcd/lcd.c: 81:     }while(*msg != 0);
  5164   01133E  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5165   011342  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5166   011346  50DF               	movf	indf2,w,c
  5167   011348  A4D8               	btfss	status,2,c
  5168   01134A  EFA9  F089         	goto	u2201
  5169   01134E  EFAB  F089         	goto	u2200
  5170   011352                     u2201:
  5171   011352  EF95  F089         	goto	l3487
  5172   011356                     u2200:
  5173   011356                     
  5174                           ; BSR set to: 0
  5175   011356  0012               	return		;funcret
  5176   011358                     __end_of_LCD_2x16_WriteMsg:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _LCD_2x16_WriteData *****************
  5180 ;; Defined at:
  5181 ;;		line 58 in file "lcd/lcd.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  command         1    wreg     unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  command         1    1[BANK0 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        2 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 4
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_LCD_2x16_WriteMsg
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text36
  5210   011052                     __ptext36:
  5211                           	callstack 0
  5212   011052                     _LCD_2x16_WriteData:
  5213                           	callstack 25
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;incstack = 0
  5217                           ;LCD_2x16_WriteData@command stored from wreg
  5218   011052  0100               	movlb	0	; () banked
  5219   011054  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5220   011056                     
  5221                           ;lcd/lcd.c: 58: void LCD_2x16_WriteData(uint8_t command);lcd/lcd.c: 59: {;lcd/lcd.c: 60:
      +                               LATDbits.LATD3 = 1;
  5222   011056  868C               	bsf	140,3,c	;volatile
  5223   011058                     
  5224                           ;lcd/lcd.c: 61:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5225   011058  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5226   01105C  0E0F               	movlw	15
  5227   01105E  0100               	movlb	0	; () banked
  5228   011060  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5229   011062  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5230   011064  0BF0               	andlw	240
  5231   011066  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5232   011068  6E91               	movwf	145,c	;volatile
  5233   01106A                     
  5234                           ; BSR set to: 0
  5235                           ;lcd/lcd.c: 62:     LATDbits.LATD2 = 1;
  5236   01106A  848C               	bsf	140,2,c	;volatile
  5237   01106C                     
  5238                           ; BSR set to: 0
  5239                           ;lcd/lcd.c: 63:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5240   01106C  D000               	nop2		;2 cycle nop
  5241   01106E  D000               	nop2		;2 cycle nop
  5242   011070  D000               	nop2		;2 cycle nop
  5243   011072                     
  5244                           ;lcd/lcd.c: 64:     LATDbits.LATD2 = 0;
  5245   011072  948C               	bcf	140,2,c	;volatile
  5246   011074                     
  5247                           ;lcd/lcd.c: 65:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5248   011074  D000               	nop2		;2 cycle nop
  5249   011076  D000               	nop2		;2 cycle nop
  5250   011078  D000               	nop2		;2 cycle nop
  5251                           
  5252                           ;lcd/lcd.c: 66:     command = command << 4;
  5253   01107A  0100               	movlb	0	; () banked
  5254   01107C  3961               	swapf	LCD_2x16_WriteData@command& (0+255),w,b
  5255   01107E  0BF0               	andlw	240
  5256   011080  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5257                           
  5258                           ;lcd/lcd.c: 67:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5259   011082  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5260   011086  0E0F               	movlw	15
  5261   011088  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5262   01108A  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5263   01108C  0BF0               	andlw	240
  5264   01108E  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5265   011090  6E91               	movwf	145,c	;volatile
  5266   011092                     
  5267                           ; BSR set to: 0
  5268                           ;lcd/lcd.c: 68:     LATDbits.LATD2 = 1;
  5269   011092  848C               	bsf	140,2,c	;volatile
  5270   011094                     
  5271                           ; BSR set to: 0
  5272                           ;lcd/lcd.c: 69:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5273   011094  D000               	nop2		;2 cycle nop
  5274   011096  D000               	nop2		;2 cycle nop
  5275   011098  D000               	nop2		;2 cycle nop
  5276   01109A                     
  5277                           ;lcd/lcd.c: 70:     LATDbits.LATD2 = 0;
  5278   01109A  948C               	bcf	140,2,c	;volatile
  5279   01109C                     
  5280                           ;lcd/lcd.c: 71:     _delay((unsigned long)((100)*(25000000L/4000000.0)));
  5281   01109C  0ED0               	movlw	208
  5282   01109E                     u2287:
  5283   01109E  2EE8               	decfsz	wreg,f,c
  5284   0110A0  D7FE               	bra	u2287
  5285   0110A2  F000               	nop	
  5286   0110A4  0012               	return		;funcret
  5287   0110A6                     __end_of_LCD_2x16_WriteData:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _LCD_2x16_WriteCmd *****************
  5291 ;; Defined at:
  5292 ;;		line 43 in file "lcd/lcd.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  command         1    wreg     unsigned char 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  command         1    1[BANK0 ] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;Total ram usage:        2 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; Hardware stack levels required when called: 4
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_Lcd_Init
  5317 ;;		_LCD_2x16_WriteMsg
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text37
  5322   010F44                     __ptext37:
  5323                           	callstack 0
  5324   010F44                     _LCD_2x16_WriteCmd:
  5325                           	callstack 25
  5326                           
  5327                           ;incstack = 0
  5328                           ;LCD_2x16_WriteCmd@command stored from wreg
  5329   010F44  0100               	movlb	0	; () banked
  5330   010F46  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5331   010F48                     
  5332                           ;lcd/lcd.c: 43: void LCD_2x16_WriteCmd(uint8_t command);lcd/lcd.c: 44: {;lcd/lcd.c: 45: 
      +                              LATDbits.LATD3 = 0;
  5333   010F48  968C               	bcf	140,3,c	;volatile
  5334   010F4A                     
  5335                           ;lcd/lcd.c: 46:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5336   010F4A  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5337   010F4E  0E0F               	movlw	15
  5338   010F50  0100               	movlb	0	; () banked
  5339   010F52  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5340   010F54  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5341   010F56  0BF0               	andlw	240
  5342   010F58  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5343   010F5A  6E91               	movwf	145,c	;volatile
  5344   010F5C                     
  5345                           ; BSR set to: 0
  5346                           ;lcd/lcd.c: 47:     LATDbits.LATD2 = 1;
  5347   010F5C  848C               	bsf	140,2,c	;volatile
  5348   010F5E                     
  5349                           ; BSR set to: 0
  5350                           ;lcd/lcd.c: 48:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5351   010F5E  0E14               	movlw	20
  5352   010F60                     u2297:
  5353   010F60  2EE8               	decfsz	wreg,f,c
  5354   010F62  D7FE               	bra	u2297
  5355   010F64  D000               	nop2	
  5356   010F66                     
  5357                           ;lcd/lcd.c: 49:     LATDbits.LATD2 = 0;
  5358   010F66  948C               	bcf	140,2,c	;volatile
  5359   010F68                     
  5360                           ;lcd/lcd.c: 50:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5361   010F68  D000               	nop2		;2 cycle nop
  5362   010F6A  D000               	nop2		;2 cycle nop
  5363   010F6C  D000               	nop2		;2 cycle nop
  5364   010F6E                     
  5365                           ;lcd/lcd.c: 51:     command = command << 4;
  5366   010F6E  0100               	movlb	0	; () banked
  5367   010F70  3961               	swapf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5368   010F72  0BF0               	andlw	240
  5369   010F74  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5370   010F76                     
  5371                           ; BSR set to: 0
  5372                           ;lcd/lcd.c: 52:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5373   010F76  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5374   010F7A  0E0F               	movlw	15
  5375   010F7C  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5376   010F7E  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5377   010F80  0BF0               	andlw	240
  5378   010F82  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5379   010F84  6E91               	movwf	145,c	;volatile
  5380   010F86                     
  5381                           ; BSR set to: 0
  5382                           ;lcd/lcd.c: 53:     LATDbits.LATD2 = 1;
  5383   010F86  848C               	bsf	140,2,c	;volatile
  5384   010F88                     
  5385                           ; BSR set to: 0
  5386                           ;lcd/lcd.c: 54:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5387   010F88  0E14               	movlw	20
  5388   010F8A                     u2307:
  5389   010F8A  2EE8               	decfsz	wreg,f,c
  5390   010F8C  D7FE               	bra	u2307
  5391   010F8E  D000               	nop2	
  5392   010F90                     
  5393                           ;lcd/lcd.c: 55:     LATDbits.LATD2 = 0;
  5394   010F90  948C               	bcf	140,2,c	;volatile
  5395   010F92                     
  5396                           ;lcd/lcd.c: 56:     _delay((unsigned long)((3)*(25000000L/4000.0)));
  5397   010F92  0E19               	movlw	25
  5398   010F94  0100               	movlb	0	; () banked
  5399   010F96  6F60               	movwf	??_LCD_2x16_WriteCmd& (0+255),b
  5400   010F98  0E58               	movlw	88
  5401   010F9A                     u2317:
  5402   010F9A  2EE8               	decfsz	wreg,f,c
  5403   010F9C  D7FE               	bra	u2317
  5404   010F9E  2F60               	decfsz	??_LCD_2x16_WriteCmd& (0+255),f,b
  5405   010FA0  D7FC               	bra	u2317
  5406   010FA2  F000               	nop	
  5407   010FA4  0012               	return		;funcret
  5408   010FA6                     __end_of_LCD_2x16_WriteCmd:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _EPWM1_LoadDutyValue *****************
  5412 ;; Defined at:
  5413 ;;		line 85 in file "mcc_generated_files/epwm1.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;Total ram usage:        4 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 4
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_main
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text38
  5442   0113CC                     __ptext38:
  5443                           	callstack 0
  5444   0113CC                     _EPWM1_LoadDutyValue:
  5445                           	callstack 26
  5446   0113CC                     
  5447                           ;mcc_generated_files/epwm1.c: 85: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 86: {;mcc_generated_files/epwm1.c: 88:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5448   0113CC  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5449   0113D0  C061  F063         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5450   0113D4  0100               	movlb	0	; () banked
  5451   0113D6  90D8               	bcf	status,0,c
  5452   0113D8  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5453   0113DA  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5454   0113DC  90D8               	bcf	status,0,c
  5455   0113DE  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5456   0113E0  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5457   0113E2  5162               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5458   0113E4  6EBE               	movwf	190,c	;volatile
  5459                           
  5460                           ;mcc_generated_files/epwm1.c: 91:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5461   0113E6  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5462   0113EA  0E03               	movlw	3
  5463   0113EC  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5464   0113EE  3B62               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5465   0113F0  0EF0               	movlw	240
  5466   0113F2  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5467   0113F4  50BD               	movf	189,w,c	;volatile
  5468   0113F6  0BCF               	andlw	207
  5469   0113F8  1162               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5470   0113FA  6EBD               	movwf	189,c	;volatile
  5471   0113FC                     
  5472                           ; BSR set to: 0
  5473   0113FC  0012               	return		;funcret
  5474   0113FE                     __end_of_EPWM1_LoadDutyValue:
  5475                           	callstack 0
  5476                           
  5477 ;; *************** function _INTERRUPT_InterruptManager *****************
  5478 ;; Defined at:
  5479 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;Total ram usage:       10 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 3
  5500 ;; This function calls:
  5501 ;;		NULL
  5502 ;;		_EUSART1_Receive_ISR
  5503 ;;		_EUSART1_Transmit_ISR
  5504 ;;		_TMR0_ISR
  5505 ;;		_TMR0_Reload
  5506 ;;		_modbus_char_recvd
  5507 ;;		_modbus_timer
  5508 ;; This function is called by:
  5509 ;;		Interrupt level 2
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	intcode
  5514   000008                     __pintcode:
  5515                           	callstack 0
  5516   000008                     _INTERRUPT_InterruptManager:
  5517                           	callstack 19
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;incstack = 0
  5521   000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5522   00000A  CFFA F017          	movff	pclath,??_INTERRUPT_InterruptManager
  5523   00000E  CFFB F018          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5524   000012  CFE1 F019          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5525   000016  CFE2 F01A          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5526   00001A  CFD9 F01B          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5527   00001E  CFDA F01C          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5528   000022  CFF6 F01D          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
  5529   000026  CFF7 F01E          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
  5530   00002A  CFF8 F01F          	movff	tblptru,??_INTERRUPT_InterruptManager+8
  5531   00002E  CFF5 F020          	movff	tablat,??_INTERRUPT_InterruptManager+9
  5532   000032                     
  5533                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5534   000032  AAF2               	btfss	242,5,c	;volatile
  5535   000034  EF1E  F000         	goto	i2u162_41
  5536   000038  EF20  F000         	goto	i2u162_40
  5537   00003C                     i2u162_41:
  5538   00003C  EF2E  F000         	goto	i2l406
  5539   000040                     i2u162_40:
  5540   000040  A4F2               	btfss	242,2,c	;volatile
  5541   000042  EF25  F000         	goto	i2u163_41
  5542   000046  EF27  F000         	goto	i2u163_40
  5543   00004A                     i2u163_41:
  5544   00004A  EF2E  F000         	goto	i2l406
  5545   00004E                     i2u163_40:
  5546   00004E                     
  5547                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         TMR0_ISR();
  5548   00004E  ECC9  F089         	call	_TMR0_ISR	;wreg free
  5549   000052                     
  5550                           ;mcc_generated_files/interrupt_manager.c: 65:         TMR0ON = 0;
  5551   000052  9ED5               	bcf	4053,7,c	;volatile
  5552   000054                     
  5553                           ;mcc_generated_files/interrupt_manager.c: 66:         modbus_timer();
  5554   000054  EC8C  F08A         	call	_modbus_timer	;wreg free
  5555                           
  5556                           ;mcc_generated_files/interrupt_manager.c: 67:     }
  5557   000058  EF75  F000         	goto	i2l414
  5558   00005C                     i2l406:
  5559   00005C  ACF2               	btfss	242,6,c	;volatile
  5560   00005E  EF33  F000         	goto	i2u164_41
  5561   000062  EF35  F000         	goto	i2u164_40
  5562   000066                     i2u164_41:
  5563   000066  EF75  F000         	goto	i2l414
  5564   00006A                     i2u164_40:
  5565   00006A                     
  5566                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5567   00006A  A89D               	btfss	157,4,c	;volatile
  5568   00006C  EF3A  F000         	goto	i2u165_41
  5569   000070  EF3C  F000         	goto	i2u165_40
  5570   000074                     i2u165_41:
  5571   000074  EF52  F000         	goto	i2l409
  5572   000078                     i2u165_40:
  5573   000078  A89E               	btfss	158,4,c	;volatile
  5574   00007A  EF41  F000         	goto	i2u166_41
  5575   00007E  EF43  F000         	goto	i2u166_40
  5576   000082                     i2u166_41:
  5577   000082  EF52  F000         	goto	i2l409
  5578   000086                     i2u166_40:
  5579   000086                     
  5580                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             EUSART1_TxDefaultInterruptHandler();
  5581   000086  D802               	call	i2u167_48
  5582   000088  EF50  F000         	goto	i2u167_49
  5583   00008C                     i2u167_48:
  5584   00008C  0005               	push	
  5585   00008E  6EFA               	movwf	pclath,c
  5586   000090  503F               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  5587   000092  6EFD               	movwf	tosl,c
  5588   000094  5040               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  5589   000096  6EFE               	movwf	tosh,c
  5590   000098  5041               	movf	(_EUSART1_TxDefaultInterruptHandler+2)^0,w,c
  5591   00009A  6EFF               	movwf	tosu,c
  5592   00009C  50FA               	movf	pclath,w,c
  5593   00009E  0012               	return		;indir
  5594   0000A0                     i2u167_49:
  5595                           
  5596                           ;mcc_generated_files/interrupt_manager.c: 73:         }
  5597   0000A0  EF75  F000         	goto	i2l414
  5598   0000A4                     i2l409:
  5599   0000A4  AA9D               	btfss	157,5,c	;volatile
  5600   0000A6  EF57  F000         	goto	i2u168_41
  5601   0000AA  EF59  F000         	goto	i2u168_40
  5602   0000AE                     i2u168_41:
  5603   0000AE  EF75  F000         	goto	i2l413
  5604   0000B2                     i2u168_40:
  5605   0000B2  AA9E               	btfss	158,5,c	;volatile
  5606   0000B4  EF5E  F000         	goto	i2u169_41
  5607   0000B8  EF60  F000         	goto	i2u169_40
  5608   0000BC                     i2u169_41:
  5609   0000BC  EF75  F000         	goto	i2l413
  5610   0000C0                     i2u169_40:
  5611   0000C0                     
  5612                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART1_RxDefaultInterruptHandler();
  5613   0000C0  D802               	call	i2u170_48
  5614   0000C2  EF6D  F000         	goto	i2u170_49
  5615   0000C6                     i2u170_48:
  5616   0000C6  0005               	push	
  5617   0000C8  6EFA               	movwf	pclath,c
  5618   0000CA  503C               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  5619   0000CC  6EFD               	movwf	tosl,c
  5620   0000CE  503D               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  5621   0000D0  6EFE               	movwf	tosh,c
  5622   0000D2  503E               	movf	(_EUSART1_RxDefaultInterruptHandler+2)^0,w,c
  5623   0000D4  6EFF               	movwf	tosu,c
  5624   0000D6  50FA               	movf	pclath,w,c
  5625   0000D8  0012               	return		;indir
  5626   0000DA                     i2u170_49:
  5627   0000DA                     
  5628                           ;mcc_generated_files/interrupt_manager.c: 77:             modbus_char_recvd(RCREG1);
  5629   0000DA  50AE               	movf	174,w,c	;volatile
  5630   0000DC  EC39  F08A         	call	_modbus_char_recvd
  5631   0000E0                     
  5632                           ;mcc_generated_files/interrupt_manager.c: 78:             TMR0_Reload();
  5633   0000E0  EC98  F08A         	call	_TMR0_Reload	;wreg free
  5634   0000E4                     
  5635                           ;mcc_generated_files/interrupt_manager.c: 79:             TMR0ON = 1;
  5636   0000E4  8ED5               	bsf	4053,7,c	;volatile
  5637                           
  5638                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  5639   0000E6  EF75  F000         	goto	i2l414
  5640   0000EA                     i2l413:
  5641   0000EA                     i2l414:
  5642   0000EA  C020  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
  5643   0000EE  C01F  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
  5644   0000F2  C01E  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
  5645   0000F6  C01D  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
  5646   0000FA  C01C  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5647   0000FE  C01B  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5648   000102  C01A  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5649   000106  C019  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5650   00010A  C018  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5651   00010E  C017  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5652   000112  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5653   000114  0011               	retfie		f
  5654   000116                     __end_of_INTERRUPT_InterruptManager:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _modbus_timer *****************
  5658 ;; Defined at:
  5659 ;;		line 33 in file "modbus.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used: 1
  5679 ;; Hardware stack levels required when called: 2
  5680 ;; This function calls:
  5681 ;;		_modbus_analyse_and_answer
  5682 ;;		_modbus_send
  5683 ;; This function is called by:
  5684 ;;		_INTERRUPT_InterruptManager
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text40
  5689   011518                     __ptext40:
  5690                           	callstack 0
  5691   011518                     _modbus_timer:
  5692                           	callstack 19
  5693   011518                     
  5694                           ;modbus.c: 36:     modbus_send(modbus_analyse_and_answer());
  5695   011518  ECD9  F081         	call	_modbus_analyse_and_answer	;wreg free
  5696   01151C  ECA0  F088         	call	_modbus_send
  5697   011520                     
  5698                           ;modbus.c: 37:     index = 0;
  5699   011520  0E00               	movlw	0
  5700   011522  6E30               	movwf	_index^0,c
  5701   011524  0012               	return		;funcret
  5702   011526                     __end_of_modbus_timer:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _modbus_send *****************
  5706 ;; Defined at:
  5707 ;;		line 115 in file "modbus.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  length          1    wreg     unsigned char 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  length          1    4[COMRAM] unsigned char 
  5712 ;;  i               2    5[COMRAM] int 
  5713 ;;  temp16          2    0        unsigned short 
  5714 ;;  i               1    0        unsigned char 
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;Total ram usage:        6 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; Hardware stack levels required when called: 1
  5731 ;; This function calls:
  5732 ;;		_EUSART1_Write
  5733 ;; This function is called by:
  5734 ;;		_modbus_timer
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text41
  5739   011140                     __ptext41:
  5740                           	callstack 0
  5741   011140                     _modbus_send:
  5742                           	callstack 19
  5743                           
  5744                           ;incstack = 0
  5745                           ;modbus_send@length stored from wreg
  5746   011140  6E05               	movwf	modbus_send@length^0,c
  5747   011142                     
  5748                           ;modbus.c: 115: void modbus_send(uint8_t length);modbus.c: 116: {;modbus.c: 117:  uint16
      +                          _t temp16;;modbus.c: 118:  uint8_t i;;modbus.c: 124:     for(int i = 0; i < length; i++)
      +                          {
  5749   011142  0E00               	movlw	0
  5750   011144  6E07               	movwf	(modbus_send@i_1194+1)^0,c
  5751   011146  0E00               	movlw	0
  5752   011148  6E06               	movwf	modbus_send@i_1194^0,c
  5753   01114A  EFB2  F088         	goto	i2l2705
  5754   01114E                     i2l2701:
  5755                           
  5756                           ;modbus.c: 125:         EUSART1_Write(tx_buf[i]);
  5757   01114E  0E00               	movlw	low _tx_buf
  5758   011150  2406               	addwf	modbus_send@i_1194^0,w,c
  5759   011152  6ED9               	movwf	fsr2l,c
  5760   011154  0E02               	movlw	high _tx_buf
  5761   011156  2007               	addwfc	(modbus_send@i_1194+1)^0,w,c
  5762   011158  6EDA               	movwf	fsr2h,c
  5763   01115A  50DF               	movf	indf2,w,c
  5764   01115C  ECFE  F087         	call	_EUSART1_Write
  5765   011160                     
  5766                           ;modbus.c: 126:     }
  5767   011160  4A06               	infsnz	modbus_send@i_1194^0,f,c
  5768   011162  2A07               	incf	(modbus_send@i_1194+1)^0,f,c
  5769   011164                     i2l2705:
  5770   011164  5005               	movf	modbus_send@length^0,w,c
  5771   011166  6E02               	movwf	??_modbus_send^0,c
  5772   011168  6A03               	clrf	(??_modbus_send+1)^0,c
  5773   01116A  5002               	movf	??_modbus_send^0,w,c
  5774   01116C  5C06               	subwf	modbus_send@i_1194^0,w,c
  5775   01116E  5007               	movf	(modbus_send@i_1194+1)^0,w,c
  5776   011170  0A80               	xorlw	128
  5777   011172  6E04               	movwf	(??_modbus_send+2)^0,c
  5778   011174  5003               	movf	(??_modbus_send+1)^0,w,c
  5779   011176  0A80               	xorlw	128
  5780   011178  5804               	subwfb	(??_modbus_send+2)^0,w,c
  5781   01117A  A0D8               	btfss	status,0,c
  5782   01117C  EFC2  F088         	goto	i2u139_41
  5783   011180  EFC4  F088         	goto	i2u139_40
  5784   011184                     i2u139_41:
  5785   011184  EFA7  F088         	goto	i2l2701
  5786   011188                     i2u139_40:
  5787   011188  0012               	return		;funcret
  5788   01118A                     __end_of_modbus_send:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function _EUSART1_Write *****************
  5792 ;; Defined at:
  5793 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  txData          1    wreg     unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  txData          1    0[COMRAM] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;Total ram usage:        1 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_modbus_send
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text42
  5821   010FFC                     __ptext42:
  5822                           	callstack 0
  5823   010FFC                     _EUSART1_Write:
  5824                           	callstack 19
  5825                           
  5826                           ;incstack = 0
  5827                           ;EUSART1_Write@txData stored from wreg
  5828   010FFC  6E01               	movwf	EUSART1_Write@txData^0,c
  5829   010FFE                     i2l2413:
  5830                           
  5831                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5832   010FFE  5036               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5833   011000  B4D8               	btfsc	status,2,c
  5834   011002  EF05  F088         	goto	i2u125_41
  5835   011006  EF07  F088         	goto	i2u125_40
  5836   01100A                     i2u125_41:
  5837   01100A  EFFF  F087         	goto	i2l2413
  5838   01100E                     i2u125_40:
  5839   01100E                     
  5840                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5841   01100E  B89D               	btfsc	157,4,c	;volatile
  5842   011010  EF0C  F088         	goto	i2u126_41
  5843   011014  EF0E  F088         	goto	i2u126_40
  5844   011018                     i2u126_41:
  5845   011018  EF12  F088         	goto	i2l284
  5846   01101C                     i2u126_40:
  5847   01101C                     
  5848                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5849   01101C  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5850                           
  5851                           ;mcc_generated_files/eusart1.c: 182:     }
  5852   011020  EF27  F088         	goto	i2l2427
  5853   011024                     i2l284:
  5854                           
  5855                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5856   011024  989D               	bcf	157,4,c	;volatile
  5857   011026                     
  5858                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5859   011026  0EBD               	movlw	low _eusart1TxBuffer
  5860   011028  2438               	addwf	_eusart1TxHead^0,w,c	;volatile
  5861   01102A  6ED9               	movwf	fsr2l,c
  5862   01102C  6ADA               	clrf	fsr2h,c
  5863   01102E  0E00               	movlw	high _eusart1TxBuffer
  5864   011030  22DA               	addwfc	fsr2h,f,c
  5865   011032  C001  FFDF         	movff	EUSART1_Write@txData,indf2
  5866   011036  2A38               	incf	_eusart1TxHead^0,f,c	;volatile
  5867   011038                     
  5868                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5869   011038  0E07               	movlw	7
  5870   01103A  6438               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5871   01103C  EF22  F088         	goto	i2u127_41
  5872   011040  EF24  F088         	goto	i2u127_40
  5873   011044                     i2u127_41:
  5874   011044  EF26  F088         	goto	i2l2425
  5875   011048                     i2u127_40:
  5876   011048                     
  5877                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5878   011048  0E00               	movlw	0
  5879   01104A  6E38               	movwf	_eusart1TxHead^0,c	;volatile
  5880   01104C                     i2l2425:
  5881                           
  5882                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5883   01104C  0636               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5884   01104E                     i2l2427:
  5885                           
  5886                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5887   01104E  889D               	bsf	157,4,c	;volatile
  5888   011050  0012               	return		;funcret
  5889   011052                     __end_of_EUSART1_Write:
  5890                           	callstack 0
  5891                           
  5892 ;; *************** function _modbus_analyse_and_answer *****************
  5893 ;; Defined at:
  5894 ;;		line 40 in file "modbus.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  i               2   16[COMRAM] int 
  5899 ;;  nbofRegister    2   20[COMRAM] unsigned short 
  5900 ;;  startingAddr    2   14[COMRAM] unsigned short 
  5901 ;;  functionCode    1   13[COMRAM] unsigned char 
  5902 ;;  crc             2   18[COMRAM] unsigned short 
  5903 ;;  crcAtt          2   11[COMRAM] unsigned short 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      unsigned char 
  5906 ;; Registers used:
  5907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;Total ram usage:       13 bytes
  5918 ;; Hardware stack levels used: 1
  5919 ;; Hardware stack levels required when called: 1
  5920 ;; This function calls:
  5921 ;;		_CRC16
  5922 ;; This function is called by:
  5923 ;;		_modbus_timer
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text43
  5928   0103B2                     __ptext43:
  5929                           	callstack 0
  5930   0103B2                     _modbus_analyse_and_answer:
  5931                           	callstack 19
  5932   0103B2                     
  5933                           ;modbus.c: 42:     if(holding_registers[1] == rx_buf[0])
  5934   0103B2  0101               	movlb	1	; () banked
  5935   0103B4  5100               	movf	_rx_buf& (0+255),w,b
  5936   0103B6  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5937   0103B8  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  5938   0103BA  0100               	movlb	0	; () banked
  5939   0103BC  51CB               	movf	(_holding_registers+2)& (0+255),w,b
  5940   0103BE  180A               	xorwf	??_modbus_analyse_and_answer^0,w,c
  5941   0103C0  E107               	bnz	i2u136_41
  5942   0103C2  51CC               	movf	(_holding_registers+3)& (0+255),w,b
  5943   0103C4  180B               	xorwf	(??_modbus_analyse_and_answer+1)^0,w,c
  5944   0103C6  A4D8               	btfss	status,2,c
  5945   0103C8  EFE8  F081         	goto	i2u136_41
  5946   0103CC  EFEA  F081         	goto	i2u136_40
  5947   0103D0                     i2u136_41:
  5948   0103D0  EFAE  F082         	goto	i2l512
  5949   0103D4                     i2u136_40:
  5950   0103D4                     
  5951                           ; BSR set to: 0
  5952                           ;modbus.c: 43:     {;modbus.c: 46:         uint16_t crc = rx_buf[index-1];
  5953   0103D4  0EFF               	movlw	low (_rx_buf+65535)
  5954   0103D6  2430               	addwf	_index^0,w,c
  5955   0103D8  6ED9               	movwf	fsr2l,c
  5956   0103DA  6ADA               	clrf	fsr2h,c
  5957   0103DC  0E00               	movlw	high (_rx_buf+65535)
  5958   0103DE  22DA               	addwfc	fsr2h,f,c
  5959   0103E0  50DF               	movf	indf2,w,c
  5960   0103E2  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5961   0103E4  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5962   0103E6  6E13               	movwf	modbus_analyse_and_answer@crc^0,c
  5963   0103E8  6A14               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  5964   0103EA                     
  5965                           ; BSR set to: 0
  5966                           ;modbus.c: 48:         crc = crc << 8;
  5967   0103EA  5013               	movf	modbus_analyse_and_answer@crc^0,w,c
  5968   0103EC  6E14               	movwf	(modbus_analyse_and_answer@crc+1)^0,c
  5969   0103EE  6A13               	clrf	modbus_analyse_and_answer@crc^0,c
  5970   0103F0                     
  5971                           ; BSR set to: 0
  5972                           ;modbus.c: 49:         crc += rx_buf[index-2];
  5973   0103F0  0EFE               	movlw	low (_rx_buf+65534)
  5974   0103F2  2430               	addwf	_index^0,w,c
  5975   0103F4  6ED9               	movwf	fsr2l,c
  5976   0103F6  6ADA               	clrf	fsr2h,c
  5977   0103F8  0E00               	movlw	high (_rx_buf+65534)
  5978   0103FA  22DA               	addwfc	fsr2h,f,c
  5979   0103FC  50DF               	movf	indf2,w,c
  5980   0103FE  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5981   010400  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5982   010402  2613               	addwf	modbus_analyse_and_answer@crc^0,f,c
  5983   010404  0E00               	movlw	0
  5984   010406  2214               	addwfc	(modbus_analyse_and_answer@crc+1)^0,f,c
  5985   010408                     
  5986                           ; BSR set to: 0
  5987                           ;modbus.c: 50:         uint16_t crcAtt = CRC16(rx_buf,index-2);
  5988   010408  0E00               	movlw	low _rx_buf
  5989   01040A  6E01               	movwf	CRC16@msg^0,c
  5990   01040C  0E01               	movlw	high _rx_buf
  5991   01040E  6E02               	movwf	(CRC16@msg+1)^0,c
  5992   010410  0EFE               	movlw	254
  5993   010412  2430               	addwf	_index^0,w,c
  5994   010414  6E03               	movwf	CRC16@length^0,c
  5995   010416  6A04               	clrf	(CRC16@length+1)^0,c
  5996   010418  0EFF               	movlw	255
  5997   01041A  2204               	addwfc	(CRC16@length+1)^0,f,c
  5998   01041C  EC2D  F087         	call	_CRC16	;wreg free
  5999   010420  C001  F00C         	movff	?_CRC16,modbus_analyse_and_answer@crcAtt
  6000   010424  C002  F00D         	movff	?_CRC16+1,modbus_analyse_and_answer@crcAtt+1
  6001   010428                     
  6002                           ;modbus.c: 51:         if(crc == crcAtt){
  6003   010428  500C               	movf	modbus_analyse_and_answer@crcAtt^0,w,c
  6004   01042A  1813               	xorwf	modbus_analyse_and_answer@crc^0,w,c
  6005   01042C  E107               	bnz	i2u137_41
  6006   01042E  500D               	movf	(modbus_analyse_and_answer@crcAtt+1)^0,w,c
  6007   010430  1814               	xorwf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6008   010432  A4D8               	btfss	status,2,c
  6009   010434  EF1E  F082         	goto	i2u137_41
  6010   010438  EF20  F082         	goto	i2u137_40
  6011   01043C                     i2u137_41:
  6012   01043C  EFAE  F082         	goto	i2l512
  6013   010440                     i2u137_40:
  6014   010440                     
  6015                           ;modbus.c: 58:             uint8_t functionCode = rx_buf[1];
  6016   010440  C101  F00E         	movff	_rx_buf+1,modbus_analyse_and_answer@functionCode
  6017   010444                     
  6018                           ;modbus.c: 60:             uint16_t nbofRegister = 0;
  6019   010444  0E00               	movlw	0
  6020   010446  6E16               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6021   010448  0E00               	movlw	0
  6022   01044A  6E15               	movwf	modbus_analyse_and_answer@nbofRegister^0,c
  6023                           
  6024                           ;modbus.c: 62:             tx_buf[0] = 0x80;
  6025   01044C  0E80               	movlw	128
  6026   01044E  0102               	movlb	2	; () banked
  6027   010450  6F00               	movwf	_tx_buf& (0+255),b
  6028                           
  6029                           ;modbus.c: 63:             switch (functionCode){
  6030   010452  EF99  F082         	goto	i2l2691
  6031   010456                     i2l508:
  6032                           
  6033                           ; BSR set to: 2
  6034                           ;modbus.c: 67:                     startingAddress = rx_buf[2];
  6035   010456  C102  F00F         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6036   01045A  6A10               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6037   01045C                     
  6038                           ; BSR set to: 2
  6039                           ;modbus.c: 68:                     startingAddress = startingAddress << 8;
  6040   01045C  500F               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6041   01045E  6E10               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6042   010460  6A0F               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6043   010462                     
  6044                           ; BSR set to: 2
  6045                           ;modbus.c: 69:                     startingAddress += rx_buf[3];
  6046   010462  0101               	movlb	1	; () banked
  6047   010464  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6048   010466  260F               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6049   010468  0E00               	movlw	0
  6050   01046A  2210               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6051   01046C                     
  6052                           ; BSR set to: 1
  6053                           ;modbus.c: 70:                     nbofRegister = rx_buf[4];
  6054   01046C  C104  F015         	movff	_rx_buf+4,modbus_analyse_and_answer@nbofRegister
  6055   010470  6A16               	clrf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6056   010472                     
  6057                           ; BSR set to: 1
  6058                           ;modbus.c: 71:                     nbofRegister <<= 8;
  6059   010472  5015               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6060   010474  6E16               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6061   010476  6A15               	clrf	modbus_analyse_and_answer@nbofRegister^0,c
  6062                           
  6063                           ;modbus.c: 72:                     nbofRegister += rx_buf[5];
  6064   010478  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6065   01047A  2615               	addwf	modbus_analyse_and_answer@nbofRegister^0,f,c
  6066   01047C  0E00               	movlw	0
  6067   01047E  2216               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,f,c
  6068   010480                     
  6069                           ; BSR set to: 1
  6070                           ;modbus.c: 74:                     tx_buf[1] = 0x04;
  6071   010480  0E04               	movlw	4
  6072   010482  0102               	movlb	2	; () banked
  6073   010484  6F01               	movwf	(_tx_buf+1)& (0+255),b
  6074   010486                     
  6075                           ; BSR set to: 2
  6076                           ;modbus.c: 75:                     tx_buf[2] = 2*nbofRegister;
  6077   010486  5015               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6078   010488  2415               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6079   01048A  6F02               	movwf	(_tx_buf+2)& (0+255),b
  6080                           
  6081                           ;modbus.c: 77:                     for(int i = 0;i < nbofRegister;i++)
  6082   01048C  0E00               	movlw	0
  6083   01048E  6E12               	movwf	(modbus_analyse_and_answer@i+1)^0,c
  6084   010490  0E00               	movlw	0
  6085   010492  6E11               	movwf	modbus_analyse_and_answer@i^0,c
  6086   010494  EF65  F082         	goto	i2l2673
  6087   010498                     i2l2669:
  6088                           
  6089                           ;modbus.c: 78:                     {;modbus.c: 79:                         tx_buf[3+i] =
      +                           input_registers[startingAddress - 1 + i];
  6090   010498  500F               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6091   01049A  2411               	addwf	modbus_analyse_and_answer@i^0,w,c
  6092   01049C  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6093   01049E  5010               	movf	(modbus_analyse_and_answer@startingAddress+1)^0,w,c
  6094   0104A0  2012               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6095   0104A2  6E0B               	movwf	(??_modbus_analyse_and_answer+1)^0,c
  6096   0104A4  90D8               	bcf	status,0,c
  6097   0104A6  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6098   0104A8  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6099   0104AA  0EC3               	movlw	low (_input_registers+65534)
  6100   0104AC  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6101   0104AE  6ED9               	movwf	fsr2l,c
  6102   0104B0  0E00               	movlw	high (_input_registers+65534)
  6103   0104B2  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6104   0104B4  6EDA               	movwf	fsr2h,c
  6105   0104B6  0E03               	movlw	low (_tx_buf+3)
  6106   0104B8  2411               	addwf	modbus_analyse_and_answer@i^0,w,c
  6107   0104BA  6EE1               	movwf	fsr1l,c
  6108   0104BC  0E02               	movlw	high (_tx_buf+3)
  6109   0104BE  2012               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6110   0104C0  6EE2               	movwf	fsr1h,c
  6111   0104C2  CFDF FFE7          	movff	indf2,indf1
  6112   0104C6                     
  6113                           ;modbus.c: 80:                     }
  6114   0104C6  4A11               	infsnz	modbus_analyse_and_answer@i^0,f,c
  6115   0104C8  2A12               	incf	(modbus_analyse_and_answer@i+1)^0,f,c
  6116   0104CA                     i2l2673:
  6117   0104CA  5015               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6118   0104CC  5C11               	subwf	modbus_analyse_and_answer@i^0,w,c
  6119   0104CE  5016               	movf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6120   0104D0  5812               	subwfb	(modbus_analyse_and_answer@i+1)^0,w,c
  6121   0104D2  A0D8               	btfss	status,0,c
  6122   0104D4  EF6E  F082         	goto	i2u138_41
  6123   0104D8  EF70  F082         	goto	i2u138_40
  6124   0104DC                     i2u138_41:
  6125   0104DC  EF4C  F082         	goto	i2l2669
  6126   0104E0                     i2u138_40:
  6127   0104E0                     
  6128                           ;modbus.c: 81:                     crc = CRC16(tx_buf,nbofRegister+3);
  6129   0104E0  0E00               	movlw	low _tx_buf
  6130   0104E2  6E01               	movwf	CRC16@msg^0,c
  6131   0104E4  0E02               	movlw	high _tx_buf
  6132   0104E6  6E02               	movwf	(CRC16@msg+1)^0,c
  6133   0104E8  0E03               	movlw	3
  6134   0104EA  2415               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6135   0104EC  6E03               	movwf	CRC16@length^0,c
  6136   0104EE  0E00               	movlw	0
  6137   0104F0  2016               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6138   0104F2  6E04               	movwf	(CRC16@length+1)^0,c
  6139   0104F4  EC2D  F087         	call	_CRC16	;wreg free
  6140   0104F8  C001  F013         	movff	?_CRC16,modbus_analyse_and_answer@crc
  6141   0104FC  C002  F014         	movff	?_CRC16+1,modbus_analyse_and_answer@crc+1
  6142   010500                     
  6143                           ;modbus.c: 82:                     tx_buf[nbofRegister+3] = crc;
  6144   010500  0E03               	movlw	low (_tx_buf+3)
  6145   010502  2415               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6146   010504  6ED9               	movwf	fsr2l,c
  6147   010506  0E02               	movlw	high (_tx_buf+3)
  6148   010508  2016               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6149   01050A  6EDA               	movwf	fsr2h,c
  6150   01050C  C013  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6151   010510                     
  6152                           ;modbus.c: 83:                     crc >>= 8;
  6153   010510  5014               	movf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6154   010512  6E13               	movwf	modbus_analyse_and_answer@crc^0,c
  6155   010514  6A14               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  6156   010516                     
  6157                           ;modbus.c: 84:                     tx_buf[nbofRegister+4] = crc;
  6158   010516  0E04               	movlw	low (_tx_buf+4)
  6159   010518  2415               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6160   01051A  6ED9               	movwf	fsr2l,c
  6161   01051C  0E02               	movlw	high (_tx_buf+4)
  6162   01051E  2016               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6163   010520  6EDA               	movwf	fsr2h,c
  6164   010522  C013  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6165   010526                     
  6166                           ;modbus.c: 85:                     return nbofRegister+5;
  6167   010526  5015               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6168   010528  0F05               	addlw	5
  6169   01052A  EFAE  F082         	goto	i2l512
  6170   01052E                     i2l2685:
  6171                           
  6172                           ; BSR set to: 2
  6173   01052E  EFAE  F082         	goto	i2l512
  6174   010532                     i2l2691:
  6175                           
  6176                           ; BSR set to: 2
  6177   010532  500E               	movf	modbus_analyse_and_answer@functionCode^0,w,c
  6178   010534  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6179   010536  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  6180                           
  6181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6182                           ; Switch size 1, requested type "simple"
  6183                           ; Number of cases is 1, Range of values is 0 to 0
  6184                           ; switch strategies available:
  6185                           ; Name         Instructions Cycles
  6186                           ; simple_byte            4     3 (average)
  6187                           ;	Chosen strategy is simple_byte
  6188   010538  500B               	movf	(??_modbus_analyse_and_answer+1)^0,w,c
  6189   01053A  0A00               	xorlw	0	; case 0
  6190   01053C  B4D8               	btfsc	status,2,c
  6191   01053E  EFA3  F082         	goto	i2l3663
  6192   010542  EF97  F082         	goto	i2l2685
  6193   010546                     i2l3663:
  6194                           
  6195                           ; BSR set to: 2
  6196                           ; Switch size 1, requested type "simple"
  6197                           ; Number of cases is 2, Range of values is 4 to 6
  6198                           ; switch strategies available:
  6199                           ; Name         Instructions Cycles
  6200                           ; simple_byte            7     4 (average)
  6201                           ;	Chosen strategy is simple_byte
  6202   010546  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  6203   010548  0A04               	xorlw	4	; case 4
  6204   01054A  B4D8               	btfsc	status,2,c
  6205   01054C  EF2B  F082         	goto	i2l508
  6206   010550  0A02               	xorlw	2	; case 6
  6207   010552  B4D8               	btfsc	status,2,c
  6208   010554  EF97  F082         	goto	i2l2685
  6209   010558  EF97  F082         	goto	i2l2685
  6210   01055C                     i2l512:
  6211   01055C  0012               	return		;funcret
  6212   01055E                     __end_of_modbus_analyse_and_answer:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function _CRC16 *****************
  6216 ;; Defined at:
  6217 ;;		line 48 in file "crc.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  msg             2    0[COMRAM] PTR const unsigned char 
  6220 ;;		 -> tx_buf(256), rx_buf(256), 
  6221 ;;  length          2    2[COMRAM] unsigned short 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  uchCRCLo        1    8[COMRAM] unsigned char 
  6224 ;;  uchCRCHi        1    7[COMRAM] unsigned char 
  6225 ;;  uIndex          1    6[COMRAM] unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  2    0[COMRAM] unsigned short 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;Total ram usage:        9 bytes
  6240 ;; Hardware stack levels used: 1
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_modbus_analyse_and_answer
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text44
  6249   010E5A                     __ptext44:
  6250                           	callstack 0
  6251   010E5A                     _CRC16:
  6252                           	callstack 19
  6253   010E5A                     
  6254                           ;crc.c: 48: uint16_t CRC16(const uint8_t *msg, uint16_t length);crc.c: 49: {;crc.c: 50: 
      +                           uint8_t uchCRCHi = 0xFF;
  6255   010E5A  6808               	setf	CRC16@uchCRCHi^0,c
  6256                           
  6257                           ;crc.c: 51:  uint8_t uchCRCLo = 0xFF;
  6258   010E5C  6809               	setf	CRC16@uchCRCLo^0,c
  6259                           
  6260                           ;crc.c: 52:  uint8_t uIndex;;crc.c: 54:  while (length--) {
  6261   010E5E  EF53  F087         	goto	i2l2451
  6262   010E62                     i2l2443:
  6263                           
  6264                           ;crc.c: 55:   uIndex = uchCRCLo ^ *msg++;
  6265   010E62  C001  FFD9         	movff	CRC16@msg,fsr2l
  6266   010E66  C002  FFDA         	movff	CRC16@msg+1,fsr2h
  6267   010E6A  50DF               	movf	indf2,w,c
  6268   010E6C  1809               	xorwf	CRC16@uchCRCLo^0,w,c
  6269   010E6E  6E07               	movwf	CRC16@uIndex^0,c
  6270   010E70  4A01               	infsnz	CRC16@msg^0,f,c
  6271   010E72  2A02               	incf	(CRC16@msg+1)^0,f,c
  6272   010E74                     
  6273                           ;crc.c: 56:   uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex];
  6274   010E74  0EE5               	movlw	low _auchCRCHi
  6275   010E76  2407               	addwf	CRC16@uIndex^0,w,c
  6276   010E78  6EF6               	movwf	tblptrl,c
  6277   010E7A  6AF7               	clrf	tblptrh,c
  6278   010E7C  0EFE               	movlw	high _auchCRCHi
  6279   010E7E  22F7               	addwfc	tblptrh,f,c
  6280   010E80                     	if	1	;There are 3 active tblptr bytes
  6281   010E80  6AF8               	clrf	tblptru,c
  6282   010E82  0E00               	movlw	low (__mediumconst shr (0+16))
  6283   010E84  22F8               	addwfc	tblptru,f,c
  6284   010E86                     	endif
  6285   010E86  0008               	tblrd		*
  6286   010E88  50F5               	movf	tablat,w,c
  6287   010E8A  1808               	xorwf	CRC16@uchCRCHi^0,w,c
  6288   010E8C  6E09               	movwf	CRC16@uchCRCLo^0,c
  6289   010E8E                     
  6290                           ;crc.c: 57:   uchCRCHi = auchCRCLo[uIndex];
  6291   010E8E  0EE5               	movlw	low _auchCRCLo
  6292   010E90  2407               	addwf	CRC16@uIndex^0,w,c
  6293   010E92  6EF6               	movwf	tblptrl,c
  6294   010E94  6AF7               	clrf	tblptrh,c
  6295   010E96  0EFD               	movlw	high _auchCRCLo
  6296   010E98  22F7               	addwfc	tblptrh,f,c
  6297   010E9A                     	if	1	;There are 3 active tblptr bytes
  6298   010E9A  6AF8               	clrf	tblptru,c
  6299   010E9C  0E00               	movlw	low (__mediumconst shr (0+16))
  6300   010E9E  22F8               	addwfc	tblptru,f,c
  6301   010EA0                     	endif
  6302   010EA0  0008               	tblrd		*
  6303   010EA2  CFF5 F008          	movff	tablat,CRC16@uchCRCHi
  6304   010EA6                     i2l2451:
  6305                           
  6306                           ;crc.c: 54:  while (length--) {
  6307   010EA6  0603               	decf	CRC16@length^0,f,c
  6308   010EA8  A0D8               	btfss	status,0,c
  6309   010EAA  0604               	decf	(CRC16@length+1)^0,f,c
  6310   010EAC  2803               	incf	CRC16@length^0,w,c
  6311   010EAE  E106               	bnz	i2u129_41
  6312   010EB0  2804               	incf	(CRC16@length+1)^0,w,c
  6313   010EB2  A4D8               	btfss	status,2,c
  6314   010EB4  EF5E  F087         	goto	i2u129_41
  6315   010EB8  EF60  F087         	goto	i2u129_40
  6316   010EBC                     i2u129_41:
  6317   010EBC  EF31  F087         	goto	i2l2443
  6318   010EC0                     i2u129_40:
  6319   010EC0                     
  6320                           ;crc.c: 59:  return (uchCRCHi << 8 | uchCRCLo);
  6321   010EC0  5009               	movf	CRC16@uchCRCLo^0,w,c
  6322   010EC2  C008  F005         	movff	CRC16@uchCRCHi,??_CRC16
  6323   010EC6  6A06               	clrf	(??_CRC16+1)^0,c
  6324   010EC8  C005  F006         	movff	??_CRC16,??_CRC16+1
  6325   010ECC  6A05               	clrf	??_CRC16^0,c
  6326   010ECE  1005               	iorwf	??_CRC16^0,w,c
  6327   010ED0  6E01               	movwf	?_CRC16^0,c
  6328   010ED2  5006               	movf	(??_CRC16+1)^0,w,c
  6329   010ED4  6E02               	movwf	(?_CRC16+1)^0,c
  6330   010ED6  0012               	return		;funcret
  6331   010ED8                     __end_of_CRC16:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _modbus_char_recvd *****************
  6335 ;; Defined at:
  6336 ;;		line 107 in file "modbus.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  c               1    wreg     unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  c               1    0[COMRAM] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;Total ram usage:        1 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_INTERRUPT_InterruptManager
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text45
  6364   011472                     __ptext45:
  6365                           	callstack 0
  6366   011472                     _modbus_char_recvd:
  6367                           	callstack 21
  6368                           
  6369                           ;incstack = 0
  6370                           ;modbus_char_recvd@c stored from wreg
  6371   011472  6E01               	movwf	modbus_char_recvd@c^0,c
  6372   011474                     
  6373                           ;modbus.c: 107: void modbus_char_recvd(uint8_t c);modbus.c: 108: {;modbus.c: 110:     TM
      +                          R0ON = 1;
  6374   011474  8ED5               	bsf	4053,7,c	;volatile
  6375   011476                     
  6376                           ;modbus.c: 111:     rx_buf[index] = c;
  6377   011476  0E00               	movlw	low _rx_buf
  6378   011478  2430               	addwf	_index^0,w,c
  6379   01147A  6ED9               	movwf	fsr2l,c
  6380   01147C  6ADA               	clrf	fsr2h,c
  6381   01147E  0E01               	movlw	high _rx_buf
  6382   011480  22DA               	addwfc	fsr2h,f,c
  6383   011482  C001  FFDF         	movff	modbus_char_recvd@c,indf2
  6384   011486                     
  6385                           ;modbus.c: 112:     index ++;
  6386   011486  2A30               	incf	_index^0,f,c
  6387   011488  0012               	return		;funcret
  6388   01148A                     __end_of_modbus_char_recvd:
  6389                           	callstack 0
  6390                           
  6391 ;; *************** function _TMR0_Reload *****************
  6392 ;; Defined at:
  6393 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_INTERRUPT_InterruptManager
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text46
  6421   011530                     __ptext46:
  6422                           	callstack 0
  6423   011530                     _TMR0_Reload:
  6424                           	callstack 21
  6425   011530                     
  6426                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  6427   011530  502D               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6428   011532  6ED7               	movwf	215,c	;volatile
  6429   011534                     
  6430                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  6431   011534  C02C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6432   011538  0012               	return		;funcret
  6433   01153A                     __end_of_TMR0_Reload:
  6434                           	callstack 0
  6435                           
  6436 ;; *************** function _TMR0_ISR *****************
  6437 ;; Defined at:
  6438 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 1
  6459 ;; This function calls:
  6460 ;;		NULL
  6461 ;;		_TMR0_DefaultInterruptHandler
  6462 ;; This function is called by:
  6463 ;;		_INTERRUPT_InterruptManager
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text47
  6468   011392                     __ptext47:
  6469                           	callstack 0
  6470   011392                     _TMR0_ISR:
  6471                           	callstack 20
  6472   011392                     
  6473                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6474   011392  94F2               	bcf	242,2,c	;volatile
  6475   011394                     
  6476                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6477   011394  502D               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6478   011396  6ED7               	movwf	215,c	;volatile
  6479   011398                     
  6480                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6481   011398  C02C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6482   01139C                     
  6483                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  6484   01139C  5039               	movf	_TMR0_InterruptHandler^0,w,c
  6485   01139E  103A               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  6486   0113A0  103B               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  6487   0113A2  B4D8               	btfsc	status,2,c
  6488   0113A4  EFD6  F089         	goto	i2u68_41
  6489   0113A8  EFD8  F089         	goto	i2u68_40
  6490   0113AC                     i2u68_41:
  6491   0113AC  EFE5  F089         	goto	i2l368
  6492   0113B0                     i2u68_40:
  6493   0113B0                     
  6494                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  6495   0113B0  D802               	call	i2u69_48
  6496   0113B2  EFE5  F089         	goto	i2u69_49
  6497   0113B6                     i2u69_48:
  6498   0113B6  0005               	push	
  6499   0113B8  6EFA               	movwf	pclath,c
  6500   0113BA  5039               	movf	_TMR0_InterruptHandler^0,w,c
  6501   0113BC  6EFD               	movwf	tosl,c
  6502   0113BE  503A               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  6503   0113C0  6EFE               	movwf	tosh,c
  6504   0113C2  503B               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  6505   0113C4  6EFF               	movwf	tosu,c
  6506   0113C6  50FA               	movf	pclath,w,c
  6507   0113C8  0012               	return		;indir
  6508   0113CA                     i2u69_49:
  6509   0113CA                     i2l368:
  6510   0113CA  0012               	return		;funcret
  6511   0113CC                     __end_of_TMR0_ISR:
  6512                           	callstack 0
  6513                           
  6514 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6515 ;; Defined at:
  6516 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;		None
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      void 
  6523 ;; Registers used:
  6524 ;;		None
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used: 1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_TMR0_Initialize
  6540 ;;		_TMR0_ISR
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text48
  6545   01154C                     __ptext48:
  6546                           	callstack 0
  6547   01154C                     _TMR0_DefaultInterruptHandler:
  6548                           	callstack 20
  6549   01154C  0012               	return		;funcret
  6550   01154E                     __end_of_TMR0_DefaultInterruptHandler:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _EUSART1_Transmit_ISR *****************
  6554 ;; Defined at:
  6555 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_EUSART1_Initialize
  6579 ;;		_INTERRUPT_InterruptManager
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text49
  6584   0112DC                     __ptext49:
  6585                           	callstack 0
  6586   0112DC                     _EUSART1_Transmit_ISR:
  6587                           	callstack 21
  6588   0112DC                     
  6589                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6590   0112DC  0E08               	movlw	8
  6591   0112DE  6036               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  6592   0112E0  EF74  F089         	goto	i2u147_41
  6593   0112E4  EF76  F089         	goto	i2u147_40
  6594   0112E8                     i2u147_41:
  6595   0112E8  EF8C  F089         	goto	i2l290
  6596   0112EC                     i2u147_40:
  6597   0112EC                     
  6598                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6599   0112EC  0EBD               	movlw	low _eusart1TxBuffer
  6600   0112EE  2437               	addwf	_eusart1TxTail^0,w,c	;volatile
  6601   0112F0  6ED9               	movwf	fsr2l,c
  6602   0112F2  6ADA               	clrf	fsr2h,c
  6603   0112F4  0E00               	movlw	high _eusart1TxBuffer
  6604   0112F6  22DA               	addwfc	fsr2h,f,c
  6605   0112F8  50DF               	movf	indf2,w,c
  6606   0112FA  6EAD               	movwf	173,c	;volatile
  6607   0112FC  2A37               	incf	_eusart1TxTail^0,f,c	;volatile
  6608   0112FE                     
  6609                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6610   0112FE  0E07               	movlw	7
  6611   011300  6437               	cpfsgt	_eusart1TxTail^0,c	;volatile
  6612   011302  EF85  F089         	goto	i2u148_41
  6613   011306  EF87  F089         	goto	i2u148_40
  6614   01130A                     i2u148_41:
  6615   01130A  EF89  F089         	goto	i2l2803
  6616   01130E                     i2u148_40:
  6617   01130E                     
  6618                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6619   01130E  0E00               	movlw	0
  6620   011310  6E37               	movwf	_eusart1TxTail^0,c	;volatile
  6621   011312                     i2l2803:
  6622                           
  6623                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6624   011312  2A36               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  6625                           
  6626                           ;mcc_generated_files/eusart1.c: 209:     }
  6627   011314  EF8D  F089         	goto	i2l293
  6628   011318                     i2l290:
  6629                           
  6630                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE1bits.TX1IE = 0;
  6631   011318  989D               	bcf	157,4,c	;volatile
  6632   01131A                     i2l293:
  6633   01131A  0012               	return		;funcret
  6634   01131C                     __end_of_EUSART1_Transmit_ISR:
  6635                           	callstack 0
  6636                           
  6637 ;; *************** function _EUSART1_Receive_ISR *****************
  6638 ;; Defined at:
  6639 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 2
  6660 ;; This function calls:
  6661 ;;		NULL
  6662 ;;		_EUSART1_DefaultErrorHandler
  6663 ;;		_EUSART1_DefaultFramingErrorHandler
  6664 ;;		_EUSART1_DefaultOverrunErrorHandler
  6665 ;;		_EUSART1_RxDataHandler
  6666 ;; This function is called by:
  6667 ;;		_EUSART1_Initialize
  6668 ;;		_INTERRUPT_InterruptManager
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text50
  6673   010A48                     __ptext50:
  6674                           	callstack 0
  6675   010A48                     _EUSART1_Receive_ISR:
  6676                           	callstack 19
  6677   010A48                     
  6678                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6679   010A48  0E21               	movlw	low _eusart1RxStatusBuffer
  6680   010A4A  2435               	addwf	_eusart1RxHead^0,w,c	;volatile
  6681   010A4C  6ED9               	movwf	fsr2l,c
  6682   010A4E  6ADA               	clrf	fsr2h,c
  6683   010A50  0E00               	movlw	high _eusart1RxStatusBuffer
  6684   010A52  22DA               	addwfc	fsr2h,f,c
  6685   010A54  6ADF               	clrf	indf2,c
  6686   010A56                     
  6687                           ;mcc_generated_files/eusart1.c: 221:     if(RCSTA1bits.FERR){
  6688   010A56  A4AB               	btfss	171,2,c	;volatile
  6689   010A58  EF30  F085         	goto	i2u149_41
  6690   010A5C  EF32  F085         	goto	i2u149_40
  6691   010A60                     i2u149_41:
  6692   010A60  EF47  F085         	goto	i2l2813
  6693   010A64                     i2u149_40:
  6694   010A64                     
  6695                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6696   010A64  0E21               	movlw	low _eusart1RxStatusBuffer
  6697   010A66  2435               	addwf	_eusart1RxHead^0,w,c	;volatile
  6698   010A68  6ED9               	movwf	fsr2l,c
  6699   010A6A  6ADA               	clrf	fsr2h,c
  6700   010A6C  0E00               	movlw	high _eusart1RxStatusBuffer
  6701   010A6E  22DA               	addwfc	fsr2h,f,c
  6702   010A70  82DF               	bsf	indf2,1,c
  6703   010A72                     
  6704                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6705   010A72  D802               	call	i2u150_48
  6706   010A74  EF47  F085         	goto	i2u150_49
  6707   010A78                     i2u150_48:
  6708   010A78  0005               	push	
  6709   010A7A  6EFA               	movwf	pclath,c
  6710   010A7C  0100               	movlb	0	; () banked
  6711   010A7E  51F9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6712   010A80  6EFD               	movwf	tosl,c
  6713   010A82  51FA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6714   010A84  6EFE               	movwf	tosh,c
  6715   010A86  51FB               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  6716   010A88  6EFF               	movwf	tosu,c
  6717   010A8A  50FA               	movf	pclath,w,c
  6718   010A8C  0012               	return		;indir
  6719   010A8E                     i2u150_49:
  6720   010A8E                     i2l2813:
  6721                           
  6722                           ;mcc_generated_files/eusart1.c: 226:     if(RCSTA1bits.OERR){
  6723   010A8E  A2AB               	btfss	171,1,c	;volatile
  6724   010A90  EF4C  F085         	goto	i2u151_41
  6725   010A94  EF4E  F085         	goto	i2u151_40
  6726   010A98                     i2u151_41:
  6727   010A98  EF63  F085         	goto	i2l2819
  6728   010A9C                     i2u151_40:
  6729   010A9C                     
  6730                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6731   010A9C  0E21               	movlw	low _eusart1RxStatusBuffer
  6732   010A9E  2435               	addwf	_eusart1RxHead^0,w,c	;volatile
  6733   010AA0  6ED9               	movwf	fsr2l,c
  6734   010AA2  6ADA               	clrf	fsr2h,c
  6735   010AA4  0E00               	movlw	high _eusart1RxStatusBuffer
  6736   010AA6  22DA               	addwfc	fsr2h,f,c
  6737   010AA8  84DF               	bsf	indf2,2,c
  6738   010AAA                     
  6739                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6740   010AAA  D802               	call	i2u152_48
  6741   010AAC  EF63  F085         	goto	i2u152_49
  6742   010AB0                     i2u152_48:
  6743   010AB0  0005               	push	
  6744   010AB2  6EFA               	movwf	pclath,c
  6745   010AB4  0100               	movlb	0	; () banked
  6746   010AB6  51F6               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6747   010AB8  6EFD               	movwf	tosl,c
  6748   010ABA  51F7               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6749   010ABC  6EFE               	movwf	tosh,c
  6750   010ABE  51F8               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  6751   010AC0  6EFF               	movwf	tosu,c
  6752   010AC2  50FA               	movf	pclath,w,c
  6753   010AC4  0012               	return		;indir
  6754   010AC6                     i2u152_49:
  6755   010AC6                     i2l2819:
  6756                           
  6757                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6758   010AC6  0E21               	movlw	low _eusart1RxStatusBuffer
  6759   010AC8  2435               	addwf	_eusart1RxHead^0,w,c	;volatile
  6760   010ACA  6ED9               	movwf	fsr2l,c
  6761   010ACC  6ADA               	clrf	fsr2h,c
  6762   010ACE  0E00               	movlw	high _eusart1RxStatusBuffer
  6763   010AD0  22DA               	addwfc	fsr2h,f,c
  6764   010AD2  50DF               	movf	indf2,w,c
  6765   010AD4  B4D8               	btfsc	status,2,c
  6766   010AD6  EF6F  F085         	goto	i2u153_41
  6767   010ADA  EF71  F085         	goto	i2u153_40
  6768   010ADE                     i2u153_41:
  6769   010ADE  EF81  F085         	goto	i2l2823
  6770   010AE2                     i2u153_40:
  6771   010AE2                     
  6772                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6773   010AE2  D802               	call	i2u154_48
  6774   010AE4  EF7F  F085         	goto	i2u154_49
  6775   010AE8                     i2u154_48:
  6776   010AE8  0005               	push	
  6777   010AEA  6EFA               	movwf	pclath,c
  6778   010AEC  0100               	movlb	0	; () banked
  6779   010AEE  51F3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6780   010AF0  6EFD               	movwf	tosl,c
  6781   010AF2  51F4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6782   010AF4  6EFE               	movwf	tosh,c
  6783   010AF6  51F5               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  6784   010AF8  6EFF               	movwf	tosu,c
  6785   010AFA  50FA               	movf	pclath,w,c
  6786   010AFC  0012               	return		;indir
  6787   010AFE                     i2u154_49:
  6788                           
  6789                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6790   010AFE  EF83  F085         	goto	i2l300
  6791   010B02                     i2l2823:
  6792                           
  6793                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6794   010B02  ECFF  F089         	call	_EUSART1_RxDataHandler	;wreg free
  6795   010B06                     i2l300:
  6796   010B06  0012               	return		;funcret
  6797   010B08                     __end_of_EUSART1_Receive_ISR:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6801 ;; Defined at:
  6802 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;		None
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		None
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;Total ram usage:        0 bytes
  6821 ;; Hardware stack levels used: 1
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_EUSART1_Initialize
  6826 ;;		_EUSART1_Receive_ISR
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text51
  6831   01153A                     __ptext51:
  6832                           	callstack 0
  6833   01153A                     _EUSART1_DefaultOverrunErrorHandler:
  6834                           	callstack 20
  6835   01153A                     
  6836                           ;mcc_generated_files/eusart1.c: 255:     RCSTA1bits.CREN = 0;
  6837   01153A  98AB               	bcf	171,4,c	;volatile
  6838                           
  6839                           ;mcc_generated_files/eusart1.c: 256:     RCSTA1bits.CREN = 1;
  6840   01153C  88AB               	bsf	171,4,c	;volatile
  6841   01153E  0012               	return		;funcret
  6842   011540                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6846 ;; Defined at:
  6847 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		None
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_EUSART1_Initialize
  6871 ;;		_EUSART1_Receive_ISR
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text52
  6876   01154E                     __ptext52:
  6877                           	callstack 0
  6878   01154E                     _EUSART1_DefaultFramingErrorHandler:
  6879                           	callstack 20
  6880   01154E  0012               	return		;funcret
  6881   011550                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6885 ;; Defined at:
  6886 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;		None
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;		None
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      void 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;Total ram usage:        0 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; Hardware stack levels required when called: 1
  6907 ;; This function calls:
  6908 ;;		_EUSART1_RxDataHandler
  6909 ;; This function is called by:
  6910 ;;		_EUSART1_Initialize
  6911 ;;		_EUSART1_Receive_ISR
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text53
  6916   011540                     __ptext53:
  6917                           	callstack 0
  6918   011540                     _EUSART1_DefaultErrorHandler:
  6919                           	callstack 19
  6920   011540                     
  6921                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  6922   011540  ECFF  F089         	call	_EUSART1_RxDataHandler	;wreg free
  6923   011544  0012               	return		;funcret
  6924   011546                     __end_of_EUSART1_DefaultErrorHandler:
  6925                           	callstack 0
  6926                           
  6927 ;; *************** function _EUSART1_RxDataHandler *****************
  6928 ;; Defined at:
  6929 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used: 1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_EUSART1_Receive_ISR
  6953 ;;		_EUSART1_DefaultErrorHandler
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text54
  6958   0113FE                     __ptext54:
  6959                           	callstack 0
  6960   0113FE                     _EUSART1_RxDataHandler:
  6961                           	callstack 20
  6962   0113FE                     
  6963                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6964   0113FE  0EB5               	movlw	low _eusart1RxBuffer
  6965   011400  2435               	addwf	_eusart1RxHead^0,w,c	;volatile
  6966   011402  6ED9               	movwf	fsr2l,c
  6967   011404  6ADA               	clrf	fsr2h,c
  6968   011406  0E00               	movlw	high _eusart1RxBuffer
  6969   011408  22DA               	addwfc	fsr2h,f,c
  6970   01140A  CFAE FFDF          	movff	4014,indf2	;volatile
  6971   01140E  2A35               	incf	_eusart1RxHead^0,f,c	;volatile
  6972   011410                     
  6973                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6974   011410  0E07               	movlw	7
  6975   011412  6435               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6976   011414  EF0E  F08A         	goto	i2u128_41
  6977   011418  EF10  F08A         	goto	i2u128_40
  6978   01141C                     i2u128_41:
  6979   01141C  EF12  F08A         	goto	i2l2437
  6980   011420                     i2u128_40:
  6981   011420                     
  6982                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  6983   011420  0E00               	movlw	0
  6984   011422  6E35               	movwf	_eusart1RxHead^0,c	;volatile
  6985   011424                     i2l2437:
  6986                           
  6987                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  6988   011424  2A33               	incf	_eusart1RxCount^0,f,c	;volatile
  6989   011426  0012               	return		;funcret
  6990   011428                     __end_of_EUSART1_RxDataHandler:
  6991                           	callstack 0
  6992                           
  6993                           	psect	text55
  6994   000000                     __ptext55:
  6995                           	callstack 0
  6996   000000                     
  6997                           	psect	rparam
  6998   000000                     
  6999                           	psect	temp
  7000   000042                     btemp:
  7001                           	callstack 0
  7002   000042                     	ds	1
  7003   000000                     int$flags	set	btemp
  7004   000000                     wtemp8	set	btemp+1
  7005   000000                     ttemp5	set	btemp+1
  7006   000000                     ttemp6	set	btemp+4
  7007   000000                     ttemp7	set	btemp+8
  7008                           
  7009                           	psect	config
  7010                           
  7011                           ;Config register CONFIG1L @ 0x1FFF8
  7012                           ;	Watchdog Timer Enable bit
  7013                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  7014                           ;	Stack Overflow/Underflow Reset Enable bit
  7015                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  7016                           ;	Extended Instruction Set Enable bit
  7017                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7018                           ;	Background Debugger Enable bit
  7019                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  7020   01FFF8                     	org	131064
  7021   01FFF8  A0                 	db	160
  7022                           
  7023                           ;Config register CONFIG1H @ 0x1FFF9
  7024                           ;	Code Protection bit
  7025                           ;	CP0 = OFF, Program memory is not code-protected
  7026   01FFF9                     	org	131065
  7027   01FFF9  F4                 	db	244
  7028                           
  7029                           ;Config register CONFIG2L @ 0x1FFFA
  7030                           ;	Oscillator Selection bits
  7031                           ;	FOSC = HS, HS oscillator
  7032                           ;	Default/Reset System Clock Select bit
  7033                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  7034                           ;	Fail-Safe Clock Monitor Enable
  7035                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7036                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  7037                           ;	IESO = ON, Two-Speed Start-up enabled
  7038   01FFFA                     	org	131066
  7039   01FFFA  C4                 	db	196
  7040                           
  7041                           ;Config register CONFIG2H @ 0x1FFFB
  7042                           ;	Watchdog Timer Postscaler Select bits
  7043                           ;	WDTPS = 32768, 1:32768
  7044   01FFFB                     	org	131067
  7045   01FFFB  FF                 	db	255
  7046                           
  7047                           ;Config register CONFIG3L @ 0x1FFFC
  7048                           ;	External Address Bus Shift Enable bit
  7049                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  7050                           ;	External Memory Bus
  7051                           ;	MODE = MM, Microcontroller mode, external bus disabled
  7052                           ;	Data Bus Width Select bit
  7053                           ;	BW = 16, 16-Bit Data Width mode
  7054                           ;	External Bus Wait Enable bit
  7055                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  7056   01FFFC                     	org	131068
  7057   01FFFC  F8                 	db	248
  7058                           
  7059                           ;Config register CONFIG3H @ 0x1FFFD
  7060                           ;	ECCP2 MUX bit
  7061                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  7062                           ;	ECCP MUX bit
  7063                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  7064                           ;	Ethernet LED Enable bit
  7065                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  7066   01FFFD                     	org	131069
  7067   01FFFD  F7                 	db	247
  7068                           tosu	equ	0xFFF
  7069                           tosh	equ	0xFFE
  7070                           tosl	equ	0xFFD
  7071                           stkptr	equ	0xFFC
  7072                           pclatu	equ	0xFFB
  7073                           pclath	equ	0xFFA
  7074                           pcl	equ	0xFF9
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           indf0	equ	0xFEF
  7082                           postinc0	equ	0xFEE
  7083                           postdec0	equ	0xFED
  7084                           preinc0	equ	0xFEC
  7085                           plusw0	equ	0xFEB
  7086                           fsr0h	equ	0xFEA
  7087                           fsr0l	equ	0xFE9
  7088                           wreg	equ	0xFE8
  7089                           indf1	equ	0xFE7
  7090                           postinc1	equ	0xFE6
  7091                           postdec1	equ	0xFE5
  7092                           preinc1	equ	0xFE4
  7093                           plusw1	equ	0xFE3
  7094                           fsr1h	equ	0xFE2
  7095                           fsr1l	equ	0xFE1
  7096                           bsr	equ	0xFE0
  7097                           indf2	equ	0xFDF
  7098                           postinc2	equ	0xFDE
  7099                           postdec2	equ	0xFDD
  7100                           preinc2	equ	0xFDC
  7101                           plusw2	equ	0xFDB
  7102                           fsr2h	equ	0xFDA
  7103                           fsr2l	equ	0xFD9
  7104                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    512
    Data        0
    BSS         598
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      65
    BANK0           160     85     156
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256     20      20
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1694$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1635$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1635$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    CRC16@msg	PTR const unsigned char  size(2) Largest target is 256
		 -> tx_buf(BANK2[256]), rx_buf(BANK1[256]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    LCD_2x16_WriteMsg@msg	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _modbus_timer->_modbus_analyse_and_answer
    _modbus_send->_EUSART1_Write
    _modbus_analyse_and_answer->_CRC16

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _measure_voltage->___lldiv
    _measure_current->___lldiv
    ___lldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _Lcd_Init->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   14876
                                             84 BANK0      1     1      0
                                              0 BANK3     20    20      0
                _EPWM1_LoadDutyValue
                  _LCD_2x16_WriteMsg
                           _Lcd_Init
                  _SYSTEM_Initialize
                    _measure_current
                    _measure_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    8781
                                             64 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8109
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    7621
                                             40 BANK0     16    10      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     852
                                              6 BANK0      9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    5041
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _measure_voltage                                      9     7      2    1916
                                             25 BANK0      9     7      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _measure_current                                     12    10      2    2325
                                             25 BANK0     12    10      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     726
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                              3 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      96
                                              2 BANK0      2     2      0
                  _LCD_2x16_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_2x16_WriteMsg                                    3     0      3     648
                                              2 BANK0      3     0      3
                  _LCD_2x16_WriteCmd
                 _LCD_2x16_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteData                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteCmd                                    2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          10    10      0    1004
                                             22 COMRAM    10    10      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                        _TMR0_Reload
                  _modbus_char_recvd
                       _modbus_timer
 ---------------------------------------------------------------------------------
 (10) _modbus_timer                                        0     0      0     989
          _modbus_analyse_and_answer
                        _modbus_send
 ---------------------------------------------------------------------------------
 (11) _modbus_send                                         9     9      0     112
                                              1 COMRAM     6     6      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _modbus_analyse_and_answer                          13    13      0     877
                                              9 COMRAM    13    13      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (12) _CRC16                                               9     5      4     486
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _modbus_char_recvd                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _LCD_2x16_WriteMsg
     _LCD_2x16_WriteCmd
     _LCD_2x16_WriteData
   _Lcd_Init
     _LCD_2x16_WriteCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _measure_current
     _ADC_GetConversion
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _measure_voltage
     _ADC_GetConversion
     ___lldiv
     ___lmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR0_Reload *
   _modbus_char_recvd *
   _modbus_timer *
     _modbus_analyse_and_answer
       _CRC16
     _modbus_send
       _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      52        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      14      11        7.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      9C       5       97.5%
BITBIGSFR           80      0       0      51        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      50        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      41       1       69.1%
BITBIGSFR_1hhhh     1A      0       0      38        0.0%
BITBIGSFR_1llll     19      0       0      49        0.0%
BITBIGSFR_1hhhh      D      0       0      37        0.0%
BITBIGSFR_1hhll      C      0       0      45        0.0%
BITBIGSFR_1lllh      9      0       0      47        0.0%
BITBIGSFR_1hhll      6      0       0      44        0.0%
BITBIGSFR_1hhll      6      0       0      43        0.0%
BITBIGSFR_1hhlh      5      0       0      42        0.0%
BITBIGSFR_1lllh      4      0       0      48        0.0%
BITBIGSFR_1hhlh      3      0       0      41        0.0%
BITBIGSFR_1hhlh      2      0       0      40        0.0%
BITBIGSFR_1hhhl      1      0       0      39        0.0%
BITBIGSFR_1hhll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F1      32        0.0%
DATA                 0      0     2F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Mar 03 16:16:07 2023

               modbus_analyse_and_answer@crcAtt 000C                        _eusart1TxBufferRemaining 0036  
                                            l21 10A4                                              l15 1218  
                                            l18 0FA4                                              l26 1356  
                                            l52 152E                                              l71 14B4  
                                            l49 1470                                              l86 1278  
                                            l89 129A                                    ___awdiv@sign 0065  
                           ___wmul@multiplicand 0062                                 _timer0ReloadVal 002C  
                                           l133 12DA                                             l152 13FC  
                                           l401 1548                                             l322 1516  
                                           l316 1508                                             l149 149E  
                                           l325 14DE                                             l165 14C2  
                                           l319 14FA                                             l328 14EC  
                                           l530 144E                                             l259 0E58  
                                           l371 14D0                                             l349 1390  
                                           l541 0F32                                             l542 0F42  
                                           l465 0704                                             l459 0BC0  
                                           l564 0DC6                                             l557 0DB6  
                                           l761 0A46                                             l774 0C72  
                                           _PR2 0FCB           modbus_analyse_and_answer@nbofRegister 0015  
                                           _abs 121A                                             _pad 0C74  
                               _input_registers 00C5                                    ___awmod@sign 0065  
                               _TMR2_Initialize 14B6                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                       __end_of_measure_current 0706                                            ?_abs 0066  
                                          l1231 0CBA                                            l1208 10F4  
                                          l1306 0980                                            l1314 11D0  
                                          l1234 0CFE                                            l1242 023A  
                                          l1236 0D20                                            l1244 0242  
                                          l3101 0A36                                            l1317 154A  
                                          l1245 0288                                            l1262 08AC  
                                          l3103 0A3E                                            l3111 0BD6  
                                          l3121 0C0A                                            l3113 0BDE  
                                          l3041 08E6                                            l3201 02DE  
                                          l1281 01E0                                            l1258 03B0  
                                          l1266 08B4                                            l3131 0C46  
                                          l3123 0C12                                            l3115 0BE2  
                                          l3107 0BC2                                            l1291 1252  
                                          l3043 0904                                            l3035 08B6  
                                          l3051 1198                                            l3211 035C  
                                          l3203 02FA                                            l3133 0C4C  
                                          l3125 0C1A                                            l3117 0BF0  
                                          l3109 0BC8                                            l3045 093A  
                                          l3037 08CA                                            l3053 11AA  
                                          l3205 0316                                            l3213 036A  
                                          l1294 125A                                            l3311 0F66  
                                          l3303 0F48                                            l3071 09A2  
                                          l3063 0982                                            l3127 0C28  
                                          l3135 0C52                                            l3119 0BF8  
                                          l3039 08DC                                            l3055 11B0  
                                          l3151 0CB2                                            l3143 0C74  
                                          l3215 037A                                            l3207 0328  
                                          l3231 0872                                            l3223 07E4  
                                          l1287 0FFA                                            l3321 0F88  
                                          l3313 0F68                                            l3305 0F4A  
                                          l3241 14EE                                            l3401 0DF8  
                                          l3081 09D6                                            l3073 09B0  
                                          l3065 0988                                            l3137 0C62  
                                          l3129 0C3E                                            l3161 121A  
                                          l3049 118A                                            l3153 0CC6  
                                          l3145 0C82                                            l3217 0380  
                                          l3209 0342                                            l3057 1428  
                                          l3233 0880                                            l3225 07EE  
                                          l3323 0F90                                            l3315 0F6E  
                                          l3307 0F5C                                            l3331 106A  
                                          l3243 150A                                            l3235 14E0  
                                          l3411 0E28                                            l3403 0DFC  
                                          l3091 0A10                                            l3083 09DE  
                                          l3075 09B8                                            l3067 0996  
                                          l3139 0C6A                                            l3163 1236  
                                          l3155 0CDA                                            l3147 0C96  
                                          l3219 0390                                            l3171 0210  
                                          l3059 1446                                            l3227 0816  
                                          l3251 0036                                            l3325 0F92  
                                          l3317 0F76                                            l3309 0F5E  
                                          l3341 1094                                            l3333 106C  
                                          l3237 14D2                                            l3413 0E56  
                                          l3405 0E00                                            l3245 14C4  
                                          l3501 1460                                            l3421 1286  
                                          l3093 0A18                                            l3085 09E6  
                                          l3077 09BC                                            l3069 099E  
                                          l3157 0CE0                                            l3149 0CA6  
                                          l3181 025A                                            l3173 021E  
                                          l3165 01E2                                            l3229 0850  
                                          l3261 0068                                            l3253 0044  
                                          l3319 0F86                                            l3343 109A  
                                          l3335 1072                                            l3327 1056  
                                          l3239 14FC                                            l3407 0E04  
                                          l3351 12C0                                            l3503 1464  
                                          l3415 1260                                            l3431 0F08  
                                          l3511 055E                                            l3095 0A1A  
                                          l3087 09F4                                            l3079 09C4  
                                          l3159 0D0C                                            l3191 0290  
                                          l3183 0260                                            l3175 0220  
                                          l3167 01F8                                            l3271 00DA  
                                          l3255 0048                                            l3247 0000  
                                          l3345 109C                                            l3337 1074  
                                          l3329 1058                                            l3409 0E16  
                                          l3361 12D2                                            l3353 12C2  
                                          l3505 1468                                            l3417 1274  
                                          l3441 0D52                                            l3433 0F12  
                                          l3425 0ED8                                            l3521 0594  
                                          l3097 0A20                                            l3089 09FA  
                                          l3193 0298                                            l3185 0270  
                                          l3177 022E                                            l3169 0208  
                                          l3281 0144                                            l3273 00EA  
                                          l3265 0074                                            l3257 0054  
                                          l3249 0028                                            l3339 1092  
                                          l3347 1546                                            l3363 12D4  
                                          l3355 12C8                                            l3371 14B6  
                                          l3507 146C                                            l3419 1276  
                                          l3451 0DA4                                            l3443 0D5E  
                                          l3435 0D22                                            l3427 0EEA  
                                          l3531 068A                                            l3523 05B0  
                                          l3099 0A26                                            l3195 029E  
                                          l3187 027C                                            l3179 024A  
                                          l3283 0188                                            l3275 00F4  
                                          l3259 0056                                            l3267 00AC  
                                          l3291 01B2                                            l3509 13CC  
                                          l3365 1526                                            l3357 12CA  
                                          l3349 129C                                            l3381 1360  
                                          l3373 14B8                                            l3453 0DA6  
                                          l3445 0D6C                                            l3437 0D34  
                                          l3429 0EF8                                            l3533 06EC  
                                          l3525 05C4                                            l3517 0578  
                                          l3541 0B08                                            l3197 02D2  
                                          l3189 0284                                            l3277 0104  
                                          l3269 00BE                                            l3461 0FD0  
                                          l3471 11E0                                            l3367 14A0  
                                          l3391 0DC8                                            l3359 12CC  
                                          l3383 1378                                            l3375 14BC  
                                          l3455 0DB0                                            l3447 0D76  
                                          l3439 0D4A                                            l3527 061E  
                                          l3519 0590                                            l3551 0B3E  
                                          l3199 02D8                                            l3287 01A0  
                                          l3279 0124                                            l3463 0FF0  
                                          l3481 1212                                            l3473 11FA  
                                          l3369 148A                                            l3393 0DCA  
                                          l3385 137A                                            l3377 1358  
                                          l3449 0D94                                            l3537 06FC  
                                          l3529 0654                                            l3553 0B5A  
                                          l3457 0FA6                                            l3561 10B8  
                                          l3491 133E                                            l3475 1200  
                                          l3467 11D2                                            l3395 0DDC  
                                          l3387 137C                                            l3379 135C  
                                          l3555 0B6E                                            l3547 0B22  
                                          l3459 0FB2                                            l3563 10C0  
                                          l3571 0706                                            l3485 131C  
                                          l3477 1206                                            l3469 11DA  
                                          l3397 0DF0                                            l3389 138C  
                                          l3493 1450                                            l3549 0B3A  
                                          l3661 009E                                            l3565 10C8  
                                          l3581 0724                                            l3573 070A  
                                          ?_pad 0070                                            l3487 132A  
                                          l3479 120C                                            l3399 0DF4  
                                          l3495 1454                                            l3567 10E4  
                                          l3559 10A6                                            l3591 0770  
                                          l3583 0728                                            l3575 070C  
                                          l3489 1338                                            l3497 1458  
                                          l3593 077C                                            l3585 073A  
                                          l3577 070E                                            l3499 145C  
                                          l3595 079A                                            l3587 0750  
                                          l3579 0718                                            l3597 07AC  
                                          l3589 075C                                            l3599 07CA  
                                          STR_1 FFF2                                            STR_2 FFE5  
                                          u2000 0316                                            u2001 0312  
                                          u2010 0328                                            u2011 0324  
                                          u2020 0342                                            u2100 00EA  
                                          u2021 033E                                            u2101 00E6  
                                          u2030 035C                                            u2110 0124  
                                          u2031 0358                                            u2111 0120  
                                          u2200 1356                                            u2040 036A  
                                          u2120 0144                                            u2201 1352  
                                          u2041 0366                                            u2121 0140  
                                          u2130 1286                                            u2210 05B0  
                                          u2050 037A                                            u2131 1282  
                                          u2211 05AC                                            u2051 0376  
                                          u2140 0EF8                                            u2060 0816  
                                          u2141 0EF4                                            u2061 0812  
                                          _LATA 0F89                                            u2150 0F32  
                                          u2230 06EC                                            u2070 08AC  
                                          _LATB 0F8A                                            u2151 0F2E  
                                          u2231 06E8                                            u2071 08A8  
                                          _LATC 0F8B                                            u2160 0D4A  
                                          u2240 0B5A                                            u2080 0028  
                                          _LATD 0F8C                                            u2161 0D46  
                                          u2225 05B4                                            u2241 0B56  
                                          u2081 0024                                            _LATE 0F8D  
                                          u2170 0D6C                                            u2090 00BE  
                                          _LATF 0F8E                                            u2307 0F8A  
                                          u2171 0D68                                            u2091 00BA  
                                          _LATG 0F8F                                            u2180 0D94  
                                          _LATH 0F90                                            u2317 0F9A  
                                          u2181 0D90                                            u1710 08CA  
                                          u2190 0FF0                                            _LATJ 0F91  
                                          u2255 0B5E                                            u1711 08C6  
                                          u2191 0FEC                                            u1800 0A10  
                                          u1720 08DC                                            u1801 0A0C  
                                          u1721 08D8                                            u1810 0A36  
                                          u1730 0904                                            u1811 0A32  
                                          u1731 0900                                            u2267 0730  
                                          u1820 0BD6                                            u1740 093A  
                                          u1900 0CFE                                            u2277 11EC  
                                          u1821 0BD2                                            u1741 0936  
                                          u1901 0CFA                                            u1830 0BF0  
                                          u1750 11D0                                            u1910 0D0C  
                                          u2287 109E                                            u1831 0BEC  
                                          u1751 11CC                                            u1911 0D08  
                                          u1760 0996                                            u1840 0C0A  
                                          u1920 1236                                            u2297 0F60  
                                          u1761 0992                                            u1841 0C06  
                                          u1921 1232                                            u1770 09B0  
                                          u1850 0C28                                            u1930 01F4  
                                          u1771 09AC                                            u1851 0C24  
                                          u1931 01EE                                            u1780 09D6  
                                          u1860 0C3E                                            u1940 01F6  
                                          u1781 09D2                                            u1861 0C3A  
                                          u1790 09F4                                            u1870 0C62  
                                          u1950 0208                                            u1791 09F0  
                                          u1871 0C5E                                            u1951 0204  
                                          u1880 0C82                                            u1960 021E  
                                          u1881 0C7E                                            u1961 021A  
                                          u1890 0CA6                                            u1970 022E  
                                          u1891 0CA2                                            u1971 022A  
                                          u1980 025A                                            u1981 0256  
                                          u1990 0270                                            u1991 026C  
                                          _TMR2 0FCC                                   _EUSART1_Write 0FFC  
                                          abs@a 0066                         __end_of_measure_voltage 0BC2  
                                          _dbuf 00D3                                            _main 0706  
                                          _dtoa 01E2                                            _prec 00CF  
                                          pad@i 0077                                            pad@p 0074  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf1 0FE7                                            indf2 0FDF  
                                          fsr1l 0FE1                                            pad@w 0079  
                                          fsr2l 0FD9                                            btemp 0042  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 0116                           ??_EPWM1_LoadDutyValue 0062  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 0000  
                                         ??_abs 0068                                           ??_pad 0076  
                       __end_of_TMR0_Initialize 1392                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 1530                           _eusart1RxStatusBuffer 0021  
                                         ?_main 0001                                           ?_dtoa 007B  
                               __end_of___awdiv 0A48                                           _CRC16 0E5A  
                               __end_of___awmod 0C74                                 __end_of___lldiv 0DC8  
                                         _T0CON 0FD5                                 ___awdiv@divisor 0062  
                                         _T2CON 0FCA                                           i2l300 0B06  
                                         i2l310 153E                                           i2l304 1426  
                                         i2l313 1544                                           i2l307 154E  
                                         i2l413 00EA                                           i2l502 1524  
                                         i2l414 00EA                                           i2l406 005C  
                                         i2l512 055C                                           i2l409 00A4  
                                         i2l290 1318                                           i2l283 100E  
                                         i2l364 1538                                           i2l508 0456  
                                         i2l284 1024                                           i2l524 1188  
                                         i2l293 131A                                           i2l374 154C  
                                         i2l518 1488                                           i2l287 1050  
                                         i2l368 13CA                                           i2l475 0ED6  
                               ___awdiv@counter 0064                                    vfpfcnvrt@fmt 008A  
                                         _TMR0H 0FD7                                           _TMR0L 0FD6  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _TRISD 0F95  
                                         _TRISE 0F96                                           _TRISF 0F97  
                                         _TRISG 0F98                                           _TRISH 0F99  
                                         _TRISJ 0F9A                             ___lmul@multiplicand 0064  
                     ?_TMR0_SetInterruptHandler 0060                            _EUSART1_Transmit_ISR 12DC  
                              __end_of_TMR0_ISR 13CC                                           _flags 002E  
                                         _index 0030                             read_prec_or_width@c 006C  
                           read_prec_or_width@n 006D                                           _fputc 08B6  
                                         _fputs 118A                                           pad@fp 0070  
                                         _width 00CD                                           _putch 154A  
                                         dtoa@d 007D                                           dtoa@i 0086  
                                         dtoa@p 0081                                           dtoa@s 0085  
                                         dtoa@w 0083                                  ?_EUSART1_Write 0001  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ttemp5 0043  
                                         ttemp6 0046                                           ttemp7 004A  
                                         status 0FD8                                           wtemp8 0043  
                               __end_of_sprintf 10F6           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1550            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 154E  
                              __end_of_Lcd_Init 121A           modbus_analyse_and_answer@functionCode 000E  
                               __initialization 10F6                                    ?_modbus_send 0001  
                    __end_of_EUSART1_Initialize 0E5A                                    __end_of_main 07E4  
                                  __end_of_dtoa 03B2                         __end_of_TMR2_Initialize 14C4  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 00B4  
                                        ??_dtoa 007F                                          ?_CRC16 0001  
                                 __activetblptr 0003                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_read_prec_or_width 08B6                                ?_measure_current 0079  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0060  
                                        ?_fputs 0069                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                          _CCPR1H 0FBF  
                                        _CCPR1L 0FBE                                ___awdiv@dividend 0060  
                                        ?_putch 0001                                          i2l2411 0FFE  
                                        i2l2421 1038                                          i2l2413 0FFE  
                                        i2l2431 140E                                          i2l2423 1048  
                                        i2l2415 101C                                          i2l2433 1410  
                                        i2l2441 0E5A                                          i2l2425 104C  
                                        i2l2417 1026                                          i2l2435 1420  
                                        i2l2443 0E62                                          i2l2451 0EA6  
                                        i2l2419 1036                                          i2l2427 104E  
                                        i2l2437 1424                                          i2l2429 13FE  
                                        i2l2453 0EC0                                          i2l2445 0E70  
                                        i2l2701 114E                                          i2l2447 0E74  
                                        i2l2703 1160                                          i2l2801 130E  
                                        i2l2449 0E8E                                          i2l2641 03B2  
                                        i2l2705 1164                                          i2l2811 0A72  
                                        i2l2803 1312                                          i2l2651 0428  
                                        i2l2643 03D4                                          i2l2637 153A  
                                        i2l2821 0AE2                                          i2l2813 0A8E  
                                        i2l2805 0A48                                          i2l1941 1534  
                                        i2l2661 046C                                          i2l2653 0440  
                                        i2l2645 03EA                                          i2l2639 1540  
                                        i2l2823 0B02                                          i2l2815 0A9C  
                                        i2l2807 0A56                                          i2l1951 13B0  
                                        i2l1943 1392                                          i2l2671 04C6  
                                        i2l2663 0472                                          i2l2655 0444  
                                        i2l2647 03F0                                          i2l2911 0040  
                                        i2l2817 0AAA                                          i2l2809 0A64  
                                        i2l1945 1394                                          i2l1961 1486  
                                        i2l2681 0516                                          i2l2673 04CA  
                                        i2l2665 0480                                          i2l2657 045C  
                                        i2l2649 0408                                          i2l2825 1518  
                                        i2l2921 0078                                          i2l2913 004E  
                                        i2l2819 0AC6                                          i2l1947 1398  
                                        i2l1939 1530                                          i2l2683 0526  
                                        i2l2675 04E0                                          i2l2667 0486  
                                        i2l2659 0462                                          i2l2691 0532  
                                        i2l2827 1520                                          i2l2931 00E0  
                                        i2l2923 0086                                          i2l2915 0052  
                                        i2l1949 139C                                          i2l1957 1474  
                                        i2l2685 052E                                          i2l2677 0500  
                                        i2l2669 0498                                          i2l2933 00E4  
                                        i2l2925 00B2                                          i2l2917 0054  
                                        i2l2909 0032                                          i2l1959 1476  
                                        i2l3663 0546                                          i2l2679 0510  
                                        i2l2927 00C0                                          i2l2919 006A  
                                        i2l2793 12DC                                          i2l2929 00DA  
                                        i2l2795 12EC                                          i2l2699 1142  
                                        i2l2797 12FC                                          i2l2799 12FE  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                   vfpfcnvrt@done 0094  
                                        _SPBRG1 0FAF                                          _TMR0ON 7EAF  
                              ?_measure_voltage 0079                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                                    vfprintf@cfmt 009E  
                                  ?_TMR0_Reload 0001                                          ___lmul 0ED8  
                                        ___wmul 1428                                       ??___awdiv 0064  
                                     ??___awmod 0064                                       ??___lldiv 0074  
                      ?_EUSART1_SetErrorHandler 0060                                          _recPtr 002F  
                              ?_TMR0_Initialize 0001                            read_prec_or_width@ap 0068  
                                        _offset 00D1                                          clear_0 10FE  
                                        clear_1 1112                                          clear_2 1124  
                                        clear_3 1130                      ?_modbus_analyse_and_answer 0001  
                              ___awdiv@quotient 0066                                 ___awmod@divisor 0062  
                                        isa$std 0001                                 ___awmod@counter 0064  
                                        pad@buf 0072                                          _rx_buf 0100  
              ??_EUSART1_SetOverrunErrorHandler 0063                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        _tx_buf 0200                                          dtoa@fp 007B  
                                        fputc@c 0060                                          fputs@c 006D  
                                        fputs@i 006E                                          fputs@s 0069  
                                  __mediumconst FDE4                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                    modbus_analyse_and_answer@i 0011                        ADC_GetConversion@channel 0064  
                                        putch@c 0001                                __end_of_vfprintf 0FFC  
                               ??_EUSART1_Write 0001        TMR0_SetInterruptHandler@InterruptHandler 0060  
                                     ??_sprintf 00A6                                 _eusart1RxBuffer 00B5  
                               _eusart1TxBuffer 00BD                               _SYSTEM_Initialize 1450  
                                    __accesstop 0060                         __end_of__initialization 1136  
                            ?_SYSTEM_Initialize 0001                                   __end_of_CRC16 0ED8  
                                 ___rparam_used 0001                   __end_of_EUSART1_RxDataHandler 1428  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                                 ?_modbus_timer 0001                             ??_SYSTEM_Initialize 0065  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0060  
                                 __end_of_fputc 0982                                   __end_of_fputs 11D2  
                                 __end_of_putch 154C                                ?_TMR2_Initialize 0001  
                                       ??_CRC16 0005                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 0B08                               _LCD_2x16_WriteCmd 0F44  
                                     ?_Lcd_Init 0001                               _LCD_2x16_WriteMsg 131C  
                                       ??_fputc 0064                       __end_of_SYSTEM_Initialize 1472  
                                       ??_fputs 006D                                         ??_putch 0060  
                                 _eusart1RxHead 0035                              ?_LCD_2x16_WriteCmd 0001  
                                 _eusart1TxHead 0038                              ?_LCD_2x16_WriteMsg 0062  
                    __end_of_LCD_2x16_WriteData 10A6                                   _eusart1RxTail 0034  
                                    __pbssBANK0 00B5                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart1TxTail 0037  
             _EUSART1_TxDefaultInterruptHandler 003F                 ??_EUSART1_SetRxInterruptHandler 0063  
                                    __pnvCOMRAM 0039                             ??_LCD_2x16_WriteCmd 0060  
                           ??_LCD_2x16_WriteMsg 0065                 __end_of_EUSART1_SetErrorHandler 1518  
                                ??_modbus_timer 0017                __end_of_TMR0_SetInterruptHandler 14D2  
                                       ?___lmul 0060                                         ?___wmul 0060  
                                    ??_TMR0_ISR 0001                                         _CCP1CON 0FBD  
                                       _ECCP1AS 0FB6                                  ___lmul@product 0068  
        __end_of_EUSART1_SetFramingErrorHandler 150A                  _EUSART1_SetFramingErrorHandler 14FC  
                     __end_of_LCD_2x16_WriteCmd 0FA6                       __end_of_LCD_2x16_WriteMsg 1358  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0F7F                                         i2u68_40 13B0  
                                       i2u68_41 13AC                                      ??_Lcd_Init 0062  
                                       i2u69_48 13B6                                         i2u69_49 13CA  
                             __end_of_auchCRCHi FFE5                               __end_of_auchCRCLo FEE5  
                   __end_of_EPWM1_LoadDutyValue 13FE        modbus_analyse_and_answer@startingAddress 000F  
                          _ADC_InterruptHandler 0029                                         __Hparam 0000  
                                       __Lparam 0000                                         ___awdiv 0982  
                                       ___awmod 0BC2                                         ___lldiv 0D22  
                                     ?_vfprintf 0098                                         __pcinit 10F6  
                                       __ramtop 1000                            LCD_2x16_WriteMsg@msg 0062  
                                       __ptext0 0706                                         __ptext1 10A6  
                                       __ptext2 0FA6                                         __ptext3 0000  
                                       __ptext4 07E4                                         __ptext5 1428  
                                       __ptext6 01E2                                         __ptext7 0C74  
                                       __ptext8 118A                                         __ptext9 08B6  
                                     _T0CONbits 0FD5                           _OSCILLATOR_Initialize 1526  
                                     _T2CONbits 0FCA                           read_prec_or_width@fmt 0066  
                              ___awmod@dividend 0060                              _EUSART1_Initialize 0DC8  
                      ??_PIN_MANAGER_Initialize 0060                   ??_EUSART1_DefaultErrorHandler 0001  
                                main@tempString 0300                        LCD_2x16_WriteCmd@command 0061  
                                       _sprintf 10A6                                   _modbusAddress 0031  
                          end_of_initialization 1136                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 00F6  
                                       fputs@fp 006B                              _read_prec_or_width 07E4  
                               ___lldiv@divisor 0070           __end_of_EUSART1_SetRxInterruptHandler 14EE  
                 _EUSART1_SetRxInterruptHandler 14E0                                 ___lldiv@counter 0078  
                             __end_of_vfpfcnvrt 01E2                                         postdec1 0FE5  
                                       postdec2 0FDD                             ?_read_prec_or_width 0066  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 0090  
                                    ??_vfprintf 009E                            ??_EUSART1_Initialize 0063  
                   ??_modbus_analyse_and_answer 000A                        _TMR0_SetInterruptHandler 14C4  
                     LCD_2x16_WriteData@command 0061                                       _TRISDbits 0F95  
                       fp__EUSART1_Transmit_ISR 0000                            ??_read_prec_or_width 006A  
                          __end_of_modbus_timer 1526                             EUSART1_Write@txData 0001  
                  modbus_analyse_and_answer@crc 0013                    __end_of_INTERRUPT_Initialize 154A  
                             _modbus_char_recvd 1472                                  __end_of___lmul 0F44  
                                   vfpfcnvrt@ap 008C                                     vfpfcnvrt@cp 0096  
                                   vfpfcnvrt@fp 0088                                  __end_of___wmul 1450  
                                _ADC_Initialize 14A0                              ?_modbus_char_recvd 0001  
                        ?_OSCILLATOR_Initialize 0001                             start_initialization 10F6  
                           ??_modbus_char_recvd 0001                                     __end_of_abs 125C  
                                   __end_of_pad 0D22   EUSART1_SetRxInterruptHandler@interruptHandler 0060  
 EUSART1_SetTxInterruptHandler@interruptHandler 0060                    EPWM1_LoadDutyValue@dutyValue 0060  
                         __end_of_EUSART1_Write 1052                       _modbus_analyse_and_answer 03B2  
                        fp__EUSART1_Receive_ISR 0000                                        CRC16@msg 0001  
                                   vfprintf@fmt 009A                       __end_of_modbus_char_recvd 148A  
                            _LCD_2x16_WriteData 1052                                        ??___lmul 0068  
                                      ??___wmul 0064                           _EUSART1_RxDataHandler 13FE  
                ?_EUSART1_SetRxInterruptHandler 0060                          __end_of_ADC_Initialize 14B6  
                           ?_LCD_2x16_WriteData 0001                                  _eusart1RxCount 0033  
                             modbus_send@i_1194 0006                                     __pbssCOMRAM 0021  
             _EUSART1_RxDefaultInterruptHandler 003C                                   __pcstackBANK0 0060  
                                 __pcstackBANK3 0300                               modbus_send@length 0005  
               ??_EUSART1_SetTxInterruptHandler 0063                ??_EUSART1_SetFramingErrorHandler 0063  
               ?_EUSART1_SetFramingErrorHandler 0060                            ??_LCD_2x16_WriteData 0060  
                         _TMR0_InterruptHandler 0039                                       __pnvBANK0 00F3  
                                     _auchCRCHi FEE5                                       _auchCRCLo FDE5  
                        _PIN_MANAGER_Initialize 129C                                       _dtoa$1716 007F  
                                 ??_modbus_send 0002                                       __pintcode 0008  
                                 __pmediumconst FDE4                                        ?___awdiv 0060  
                                      ?___awmod 0060                                        ?___lldiv 006C  
                             ??_measure_current 007B                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0017                               ??_measure_voltage 007B  
                                      _ECCP1DEL 0F79                                        _BAUDCON1 0F7E  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1540  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 153A                            _EUSART1_ErrorHandler 00F3  
                       _EUSART1_SetErrorHandler 150A                                        ?_sprintf 00A0  
                          _INTERRUPT_Initialize 1546                               ??_TMR0_Initialize 0063  
                                ___wmul@product 0064         EUSART1_SetErrorHandler@interruptHandler 0060  
                                      _LATDbits 0F8C                                     CRC16@uIndex 0007  
                                   CRC16@length 0003                                        _PIE1bits 0F9D  
                                      i2u125_40 100E                                        i2u125_41 100A  
                                      i2u126_40 101C                               _holding_registers 00C9  
                                      i2u126_41 1018                                        i2u151_40 0A9C  
                                      i2u150_48 0A78                                        i2u127_40 1048  
                                      i2u151_41 0A98                                        i2u150_49 0A8E  
                                      i2u127_41 1044                                        i2u128_40 1420  
                                      i2u136_40 03D4                                        i2u128_41 141C  
                                      i2u136_41 03D0                                        i2u153_40 0AE2  
                                      i2u152_48 0AB0                                        i2u129_40 0EC0  
                                      i2u137_40 0440                                        i2u153_41 0ADE  
                                      i2u152_49 0AC6                                        i2u129_41 0EBC  
                                      i2u137_41 043C                                        i2u138_40 04E0  
                                      i2u162_40 0040                                        i2u138_41 04DC  
                                      i2u162_41 003C                                        i2u154_48 0AE8  
                                      i2u147_40 12EC                                        i2u139_40 1188  
                                      i2u170_48 00C6                                        i2u163_40 004E  
                                      i2u154_49 0AFE                                        i2u147_41 12E8  
                                      i2u139_41 1184                                        i2u170_49 00DA  
                                      i2u163_41 004A                                        i2u148_40 130E  
                                      i2u164_40 006A                                        i2u148_41 130A  
                                      i2u164_41 0066                                        i2u149_40 0A64  
                                      i2u165_40 0078                      ??_TMR0_SetInterruptHandler 0063  
                                      i2u149_41 0A60                                        i2u165_41 0074  
                                      i2u166_40 0086                                        i2u166_41 0082  
                                      i2u168_40 00B2                                        i2u167_48 008C  
                                      i2u168_41 00AE                                        i2u167_49 00A0  
                                      i2u169_40 00C0                                        i2u169_41 00BC  
                                      _PIR1bits 0F9E                                   ??_TMR0_Reload 0001  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 0FD0  
                                      _TMR0_ISR 1392                                    _modbus_timer 1518  
                                     _vfpfcnvrt 0000                             __end_of_modbus_send 118A  
                                    _ADCON0bits 0FC2                                      _ADCON1bits 0FC1  
                             ___wmul@multiplier 0060                           measure_voltage@result 007C  
                              _EPWM1_Initialize 148A                                        _Lcd_Init 11D2  
                             ___lmul@multiplier 0060                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0060           __end_of_EUSART1_SetTxInterruptHandler 14E0  
                 _EUSART1_SetTxInterruptHandler 14D2                                        __Hrparam 0000  
                                    vfprintf@ap 009C                                        __Lrparam 0000  
                                    vfprintf@fp 0098                               _ADC_GetConversion 125C  
                       ??_OSCILLATOR_Initialize 0060                              ?_ADC_GetConversion 0060  
                                    ?_vfpfcnvrt 0088                              modbus_char_recvd@c 0001  
                           __end_of_TMR0_Reload 153A                       ??_EUSART1_SetErrorHandler 0063  
           __end_of_EUSART1_DefaultErrorHandler 1546                     _EUSART1_DefaultErrorHandler 1540  
                           ??_ADC_GetConversion 0062                                      sprintf@fmt 00A2  
                         LCD_2x16_WriteMsg@line 0064                                        __ptext10 154A  
                                      __ptext11 121A                                        __ptext20 14B6  
                                      __ptext12 0BC2                                        __ptext21 1358  
                                      __ptext13 0982                                        __ptext30 14FC  
                                      __ptext22 14C4                                        __ptext14 0B08  
                                      __ptext31 150A                                        __ptext23 129C  
                                      __ptext15 055E                                        __ptext40 1518  
                                      __ptext32 148A                                        __ptext24 1526  
                                      __ptext16 0ED8                                        __ptext41 1140  
                                      __ptext33 14A0                                        __ptext25 1546  
                                      __ptext17 0D22                                        __ptext50 0A48  
                                      __ptext42 0FFC                                        __ptext34 11D2  
                                      __ptext26 0DC8                                        __ptext18 125C  
                                      __ptext51 153A                                        __ptext43 03B2  
                                      __ptext35 131C                                        __ptext27 14D2  
                                      __ptext19 1450                                        __ptext52 154E  
                                      __ptext44 0E5A                                        __ptext36 1052  
                                      __ptext28 14E0                                        __ptext53 1540  
                                      __ptext45 1472                                        __ptext37 0F44  
                                      __ptext29 14EE                                        __ptext54 13FE  
                                      __ptext46 1530                                        __ptext38 13CC  
                                      __ptext55 0000                                        __ptext47 1392  
                                      __ptext48 154C                                        __ptext49 12DC  
                              measure_current@i 007F                           measure_current@offset 0079  
                         measure_current@result 0081            __end_of_TMR0_DefaultInterruptHandler 154E  
                  _TMR0_DefaultInterruptHandler 154C                       __end_of_ADC_GetConversion 129C  
EUSART1_SetOverrunErrorHandler@interruptHandler 0060                                        isa$xinst 0000  
                                   _modbus_send 1140                                        int$flags 0042  
             __end_of_modbus_analyse_and_answer 055E                                        _vfprintf 0FA6  
            __end_of_INTERRUPT_InterruptManager 0116                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 00F9                             _EUSART1_Receive_ISR 0A48  
                                    _INTCONbits 0FF2                                   CRC16@uchCRCHi 0008  
                                 CRC16@uchCRCLo 0009                                measure_voltage@i 0080  
                        ??_INTERRUPT_Initialize 0060                                        intlevel2 0000  
                                     sprintf@ap 00A6                            ?_EUSART1_Receive_ISR 0001  
                              ___lldiv@dividend 006C                                 _measure_current 055E  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 14FC  
                _EUSART1_SetOverrunErrorHandler 14EE                                      _RCSTA1bits 0FAB  
                  __end_of_EUSART1_Transmit_ISR 131C                                ??_ADC_Initialize 0060  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                               _measure_voltage 0B08                                     _TMR0_Reload 1530  
EUSART1_SetFramingErrorHandler@interruptHandler 0060                  ?_EUSART1_SetTxInterruptHandler 0060  
                                   ??_vfpfcnvrt 008E                              _eusart1RxLastError 0032  
                                      sprintf@f 00A8                                        sprintf@s 00A0  
                              ___lldiv@quotient 0074                                 _TMR0_Initialize 1358  
                           _EPWM1_LoadDutyValue 13CC                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 12DC                         ??_EUSART1_RxDataHandler 0001  
                      __end_of_EPWM1_Initialize 14A0                            ?_EPWM1_LoadDutyValue 0060  
