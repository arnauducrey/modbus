

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Feb 28 16:19:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Version 2.40
    76                           ; Generated 17/11/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F97J60 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	mediumconst
   112   00FDE4                     __pmediumconst:
   113                           	callstack 0
   114   00FDE4  00                 	db	0
   115   00FDE5                     _auchCRCLo:
   116                           	callstack 0
   117   00FDE5  00                 	db	0
   118   00FDE6  C0                 	db	192
   119   00FDE7  C1                 	db	193
   120   00FDE8  01                 	db	1
   121   00FDE9  C3                 	db	195
   122   00FDEA  03                 	db	3
   123   00FDEB  02                 	db	2
   124   00FDEC  C2                 	db	194
   125   00FDED  C6                 	db	198
   126   00FDEE  06                 	db	6
   127   00FDEF  07                 	db	7
   128   00FDF0  C7                 	db	199
   129   00FDF1  05                 	db	5
   130   00FDF2  C5                 	db	197
   131   00FDF3  C4                 	db	196
   132   00FDF4  04                 	db	4
   133   00FDF5  CC                 	db	204
   134   00FDF6  0C                 	db	12
   135   00FDF7  0D                 	db	13
   136   00FDF8  CD                 	db	205
   137   00FDF9  0F                 	db	15
   138   00FDFA  CF                 	db	207
   139   00FDFB  CE                 	db	206
   140   00FDFC  0E                 	db	14
   141   00FDFD  0A                 	db	10
   142   00FDFE  CA                 	db	202
   143   00FDFF  CB                 	db	203
   144   00FE00  0B                 	db	11
   145   00FE01  C9                 	db	201
   146   00FE02  09                 	db	9
   147   00FE03  08                 	db	8
   148   00FE04  C8                 	db	200
   149   00FE05  D8                 	db	216
   150   00FE06  18                 	db	24
   151   00FE07  19                 	db	25
   152   00FE08  D9                 	db	217
   153   00FE09  1B                 	db	27
   154   00FE0A  DB                 	db	219
   155   00FE0B  DA                 	db	218
   156   00FE0C  1A                 	db	26
   157   00FE0D  1E                 	db	30
   158   00FE0E  DE                 	db	222
   159   00FE0F  DF                 	db	223
   160   00FE10  1F                 	db	31
   161   00FE11  DD                 	db	221
   162   00FE12  1D                 	db	29
   163   00FE13  1C                 	db	28
   164   00FE14  DC                 	db	220
   165   00FE15  14                 	db	20
   166   00FE16  D4                 	db	212
   167   00FE17  D5                 	db	213
   168   00FE18  15                 	db	21
   169   00FE19  D7                 	db	215
   170   00FE1A  17                 	db	23
   171   00FE1B  16                 	db	22
   172   00FE1C  D6                 	db	214
   173   00FE1D  D2                 	db	210
   174   00FE1E  12                 	db	18
   175   00FE1F  13                 	db	19
   176   00FE20  D3                 	db	211
   177   00FE21  11                 	db	17
   178   00FE22  D1                 	db	209
   179   00FE23  D0                 	db	208
   180   00FE24  10                 	db	16
   181   00FE25  F0                 	db	240
   182   00FE26  30                 	db	48
   183   00FE27  31                 	db	49
   184   00FE28  F1                 	db	241
   185   00FE29  33                 	db	51
   186   00FE2A  F3                 	db	243
   187   00FE2B  F2                 	db	242
   188   00FE2C  32                 	db	50
   189   00FE2D  36                 	db	54
   190   00FE2E  F6                 	db	246
   191   00FE2F  F7                 	db	247
   192   00FE30  37                 	db	55
   193   00FE31  F5                 	db	245
   194   00FE32  35                 	db	53
   195   00FE33  34                 	db	52
   196   00FE34  F4                 	db	244
   197   00FE35  3C                 	db	60
   198   00FE36  FC                 	db	252
   199   00FE37  FD                 	db	253
   200   00FE38  3D                 	db	61
   201   00FE39  FF                 	db	255
   202   00FE3A  3F                 	db	63
   203   00FE3B  3E                 	db	62
   204   00FE3C  FE                 	db	254
   205   00FE3D  FA                 	db	250
   206   00FE3E  3A                 	db	58
   207   00FE3F  3B                 	db	59
   208   00FE40  FB                 	db	251
   209   00FE41  39                 	db	57
   210   00FE42  F9                 	db	249
   211   00FE43  F8                 	db	248
   212   00FE44  38                 	db	56
   213   00FE45  28                 	db	40
   214   00FE46  E8                 	db	232
   215   00FE47  E9                 	db	233
   216   00FE48  29                 	db	41
   217   00FE49  EB                 	db	235
   218   00FE4A  2B                 	db	43
   219   00FE4B  2A                 	db	42
   220   00FE4C  EA                 	db	234
   221   00FE4D  EE                 	db	238
   222   00FE4E  2E                 	db	46
   223   00FE4F  2F                 	db	47
   224   00FE50  EF                 	db	239
   225   00FE51  2D                 	db	45
   226   00FE52  ED                 	db	237
   227   00FE53  EC                 	db	236
   228   00FE54  2C                 	db	44
   229   00FE55  E4                 	db	228
   230   00FE56  24                 	db	36
   231   00FE57  25                 	db	37
   232   00FE58  E5                 	db	229
   233   00FE59  27                 	db	39
   234   00FE5A  E7                 	db	231
   235   00FE5B  E6                 	db	230
   236   00FE5C  26                 	db	38
   237   00FE5D  22                 	db	34
   238   00FE5E  E2                 	db	226
   239   00FE5F  E3                 	db	227
   240   00FE60  23                 	db	35
   241   00FE61  E1                 	db	225
   242   00FE62  21                 	db	33
   243   00FE63  20                 	db	32
   244   00FE64  E0                 	db	224
   245   00FE65  A0                 	db	160
   246   00FE66  60                 	db	96
   247   00FE67  61                 	db	97
   248   00FE68  A1                 	db	161
   249   00FE69  63                 	db	99
   250   00FE6A  A3                 	db	163
   251   00FE6B  A2                 	db	162
   252   00FE6C  62                 	db	98
   253   00FE6D  66                 	db	102
   254   00FE6E  A6                 	db	166
   255   00FE6F  A7                 	db	167
   256   00FE70  67                 	db	103
   257   00FE71  A5                 	db	165
   258   00FE72  65                 	db	101
   259   00FE73  64                 	db	100
   260   00FE74  A4                 	db	164
   261   00FE75  6C                 	db	108
   262   00FE76  AC                 	db	172
   263   00FE77  AD                 	db	173
   264   00FE78  6D                 	db	109
   265   00FE79  AF                 	db	175
   266   00FE7A  6F                 	db	111
   267   00FE7B  6E                 	db	110
   268   00FE7C  AE                 	db	174
   269   00FE7D  AA                 	db	170
   270   00FE7E  6A                 	db	106
   271   00FE7F  6B                 	db	107
   272   00FE80  AB                 	db	171
   273   00FE81  69                 	db	105
   274   00FE82  A9                 	db	169
   275   00FE83  A8                 	db	168
   276   00FE84  68                 	db	104
   277   00FE85  78                 	db	120
   278   00FE86  B8                 	db	184
   279   00FE87  B9                 	db	185
   280   00FE88  79                 	db	121
   281   00FE89  BB                 	db	187
   282   00FE8A  7B                 	db	123
   283   00FE8B  7A                 	db	122
   284   00FE8C  BA                 	db	186
   285   00FE8D  BE                 	db	190
   286   00FE8E  7E                 	db	126
   287   00FE8F  7F                 	db	127
   288   00FE90  BF                 	db	191
   289   00FE91  7D                 	db	125
   290   00FE92  BD                 	db	189
   291   00FE93  BC                 	db	188
   292   00FE94  7C                 	db	124
   293   00FE95  B4                 	db	180
   294   00FE96  74                 	db	116
   295   00FE97  75                 	db	117
   296   00FE98  B5                 	db	181
   297   00FE99  77                 	db	119
   298   00FE9A  B7                 	db	183
   299   00FE9B  B6                 	db	182
   300   00FE9C  76                 	db	118
   301   00FE9D  72                 	db	114
   302   00FE9E  B2                 	db	178
   303   00FE9F  B3                 	db	179
   304   00FEA0  73                 	db	115
   305   00FEA1  B1                 	db	177
   306   00FEA2  71                 	db	113
   307   00FEA3  70                 	db	112
   308   00FEA4  B0                 	db	176
   309   00FEA5  50                 	db	80
   310   00FEA6  90                 	db	144
   311   00FEA7  91                 	db	145
   312   00FEA8  51                 	db	81
   313   00FEA9  93                 	db	147
   314   00FEAA  53                 	db	83
   315   00FEAB  52                 	db	82
   316   00FEAC  92                 	db	146
   317   00FEAD  96                 	db	150
   318   00FEAE  56                 	db	86
   319   00FEAF  57                 	db	87
   320   00FEB0  97                 	db	151
   321   00FEB1  55                 	db	85
   322   00FEB2  95                 	db	149
   323   00FEB3  94                 	db	148
   324   00FEB4  54                 	db	84
   325   00FEB5  9C                 	db	156
   326   00FEB6  5C                 	db	92
   327   00FEB7  5D                 	db	93
   328   00FEB8  9D                 	db	157
   329   00FEB9  5F                 	db	95
   330   00FEBA  9F                 	db	159
   331   00FEBB  9E                 	db	158
   332   00FEBC  5E                 	db	94
   333   00FEBD  5A                 	db	90
   334   00FEBE  9A                 	db	154
   335   00FEBF  9B                 	db	155
   336   00FEC0  5B                 	db	91
   337   00FEC1  99                 	db	153
   338   00FEC2  59                 	db	89
   339   00FEC3  58                 	db	88
   340   00FEC4  98                 	db	152
   341   00FEC5  88                 	db	136
   342   00FEC6  48                 	db	72
   343   00FEC7  49                 	db	73
   344   00FEC8  89                 	db	137
   345   00FEC9  4B                 	db	75
   346   00FECA  8B                 	db	139
   347   00FECB  8A                 	db	138
   348   00FECC  4A                 	db	74
   349   00FECD  4E                 	db	78
   350   00FECE  8E                 	db	142
   351   00FECF  8F                 	db	143
   352   00FED0  4F                 	db	79
   353   00FED1  8D                 	db	141
   354   00FED2  4D                 	db	77
   355   00FED3  4C                 	db	76
   356   00FED4  8C                 	db	140
   357   00FED5  44                 	db	68
   358   00FED6  84                 	db	132
   359   00FED7  85                 	db	133
   360   00FED8  45                 	db	69
   361   00FED9  87                 	db	135
   362   00FEDA  47                 	db	71
   363   00FEDB  46                 	db	70
   364   00FEDC  86                 	db	134
   365   00FEDD  82                 	db	130
   366   00FEDE  42                 	db	66
   367   00FEDF  43                 	db	67
   368   00FEE0  83                 	db	131
   369   00FEE1  41                 	db	65
   370   00FEE2  81                 	db	129
   371   00FEE3  80                 	db	128
   372   00FEE4  40                 	db	64
   373   00FEE5                     __end_of_auchCRCLo:
   374                           	callstack 0
   375   00FEE5                     _auchCRCHi:
   376                           	callstack 0
   377   00FEE5  00                 	db	0
   378   00FEE6  C1                 	db	193
   379   00FEE7  81                 	db	129
   380   00FEE8  40                 	db	64
   381   00FEE9  01                 	db	1
   382   00FEEA  C0                 	db	192
   383   00FEEB  80                 	db	128
   384   00FEEC  41                 	db	65
   385   00FEED  01                 	db	1
   386   00FEEE  C0                 	db	192
   387   00FEEF  80                 	db	128
   388   00FEF0  41                 	db	65
   389   00FEF1  00                 	db	0
   390   00FEF2  C1                 	db	193
   391   00FEF3  81                 	db	129
   392   00FEF4  40                 	db	64
   393   00FEF5  01                 	db	1
   394   00FEF6  C0                 	db	192
   395   00FEF7  80                 	db	128
   396   00FEF8  41                 	db	65
   397   00FEF9  00                 	db	0
   398   00FEFA  C1                 	db	193
   399   00FEFB  81                 	db	129
   400   00FEFC  40                 	db	64
   401   00FEFD  00                 	db	0
   402   00FEFE  C1                 	db	193
   403   00FEFF  81                 	db	129
   404   00FF00  40                 	db	64
   405   00FF01  01                 	db	1
   406   00FF02  C0                 	db	192
   407   00FF03  80                 	db	128
   408   00FF04  41                 	db	65
   409   00FF05  01                 	db	1
   410   00FF06  C0                 	db	192
   411   00FF07  80                 	db	128
   412   00FF08  41                 	db	65
   413   00FF09  00                 	db	0
   414   00FF0A  C1                 	db	193
   415   00FF0B  81                 	db	129
   416   00FF0C  40                 	db	64
   417   00FF0D  00                 	db	0
   418   00FF0E  C1                 	db	193
   419   00FF0F  81                 	db	129
   420   00FF10  40                 	db	64
   421   00FF11  01                 	db	1
   422   00FF12  C0                 	db	192
   423   00FF13  80                 	db	128
   424   00FF14  41                 	db	65
   425   00FF15  00                 	db	0
   426   00FF16  C1                 	db	193
   427   00FF17  81                 	db	129
   428   00FF18  40                 	db	64
   429   00FF19  01                 	db	1
   430   00FF1A  C0                 	db	192
   431   00FF1B  80                 	db	128
   432   00FF1C  41                 	db	65
   433   00FF1D  01                 	db	1
   434   00FF1E  C0                 	db	192
   435   00FF1F  80                 	db	128
   436   00FF20  41                 	db	65
   437   00FF21  00                 	db	0
   438   00FF22  C1                 	db	193
   439   00FF23  81                 	db	129
   440   00FF24  40                 	db	64
   441   00FF25  01                 	db	1
   442   00FF26  C0                 	db	192
   443   00FF27  80                 	db	128
   444   00FF28  41                 	db	65
   445   00FF29  00                 	db	0
   446   00FF2A  C1                 	db	193
   447   00FF2B  81                 	db	129
   448   00FF2C  40                 	db	64
   449   00FF2D  00                 	db	0
   450   00FF2E  C1                 	db	193
   451   00FF2F  81                 	db	129
   452   00FF30  40                 	db	64
   453   00FF31  01                 	db	1
   454   00FF32  C0                 	db	192
   455   00FF33  80                 	db	128
   456   00FF34  41                 	db	65
   457   00FF35  00                 	db	0
   458   00FF36  C1                 	db	193
   459   00FF37  81                 	db	129
   460   00FF38  40                 	db	64
   461   00FF39  01                 	db	1
   462   00FF3A  C0                 	db	192
   463   00FF3B  80                 	db	128
   464   00FF3C  41                 	db	65
   465   00FF3D  01                 	db	1
   466   00FF3E  C0                 	db	192
   467   00FF3F  80                 	db	128
   468   00FF40  41                 	db	65
   469   00FF41  00                 	db	0
   470   00FF42  C1                 	db	193
   471   00FF43  81                 	db	129
   472   00FF44  40                 	db	64
   473   00FF45  00                 	db	0
   474   00FF46  C1                 	db	193
   475   00FF47  81                 	db	129
   476   00FF48  40                 	db	64
   477   00FF49  01                 	db	1
   478   00FF4A  C0                 	db	192
   479   00FF4B  80                 	db	128
   480   00FF4C  41                 	db	65
   481   00FF4D  01                 	db	1
   482   00FF4E  C0                 	db	192
   483   00FF4F  80                 	db	128
   484   00FF50  41                 	db	65
   485   00FF51  00                 	db	0
   486   00FF52  C1                 	db	193
   487   00FF53  81                 	db	129
   488   00FF54  40                 	db	64
   489   00FF55  01                 	db	1
   490   00FF56  C0                 	db	192
   491   00FF57  80                 	db	128
   492   00FF58  41                 	db	65
   493   00FF59  00                 	db	0
   494   00FF5A  C1                 	db	193
   495   00FF5B  81                 	db	129
   496   00FF5C  40                 	db	64
   497   00FF5D  00                 	db	0
   498   00FF5E  C1                 	db	193
   499   00FF5F  81                 	db	129
   500   00FF60  40                 	db	64
   501   00FF61  01                 	db	1
   502   00FF62  C0                 	db	192
   503   00FF63  80                 	db	128
   504   00FF64  41                 	db	65
   505   00FF65  01                 	db	1
   506   00FF66  C0                 	db	192
   507   00FF67  80                 	db	128
   508   00FF68  41                 	db	65
   509   00FF69  00                 	db	0
   510   00FF6A  C1                 	db	193
   511   00FF6B  81                 	db	129
   512   00FF6C  40                 	db	64
   513   00FF6D  00                 	db	0
   514   00FF6E  C1                 	db	193
   515   00FF6F  81                 	db	129
   516   00FF70  40                 	db	64
   517   00FF71  01                 	db	1
   518   00FF72  C0                 	db	192
   519   00FF73  80                 	db	128
   520   00FF74  41                 	db	65
   521   00FF75  00                 	db	0
   522   00FF76  C1                 	db	193
   523   00FF77  81                 	db	129
   524   00FF78  40                 	db	64
   525   00FF79  01                 	db	1
   526   00FF7A  C0                 	db	192
   527   00FF7B  80                 	db	128
   528   00FF7C  41                 	db	65
   529   00FF7D  01                 	db	1
   530   00FF7E  C0                 	db	192
   531   00FF7F  80                 	db	128
   532   00FF80  41                 	db	65
   533   00FF81  00                 	db	0
   534   00FF82  C1                 	db	193
   535   00FF83  81                 	db	129
   536   00FF84  40                 	db	64
   537   00FF85  00                 	db	0
   538   00FF86  C1                 	db	193
   539   00FF87  81                 	db	129
   540   00FF88  40                 	db	64
   541   00FF89  01                 	db	1
   542   00FF8A  C0                 	db	192
   543   00FF8B  80                 	db	128
   544   00FF8C  41                 	db	65
   545   00FF8D  01                 	db	1
   546   00FF8E  C0                 	db	192
   547   00FF8F  80                 	db	128
   548   00FF90  41                 	db	65
   549   00FF91  00                 	db	0
   550   00FF92  C1                 	db	193
   551   00FF93  81                 	db	129
   552   00FF94  40                 	db	64
   553   00FF95  01                 	db	1
   554   00FF96  C0                 	db	192
   555   00FF97  80                 	db	128
   556   00FF98  41                 	db	65
   557   00FF99  00                 	db	0
   558   00FF9A  C1                 	db	193
   559   00FF9B  81                 	db	129
   560   00FF9C  40                 	db	64
   561   00FF9D  00                 	db	0
   562   00FF9E  C1                 	db	193
   563   00FF9F  81                 	db	129
   564   00FFA0  40                 	db	64
   565   00FFA1  01                 	db	1
   566   00FFA2  C0                 	db	192
   567   00FFA3  80                 	db	128
   568   00FFA4  41                 	db	65
   569   00FFA5  00                 	db	0
   570   00FFA6  C1                 	db	193
   571   00FFA7  81                 	db	129
   572   00FFA8  40                 	db	64
   573   00FFA9  01                 	db	1
   574   00FFAA  C0                 	db	192
   575   00FFAB  80                 	db	128
   576   00FFAC  41                 	db	65
   577   00FFAD  01                 	db	1
   578   00FFAE  C0                 	db	192
   579   00FFAF  80                 	db	128
   580   00FFB0  41                 	db	65
   581   00FFB1  00                 	db	0
   582   00FFB2  C1                 	db	193
   583   00FFB3  81                 	db	129
   584   00FFB4  40                 	db	64
   585   00FFB5  01                 	db	1
   586   00FFB6  C0                 	db	192
   587   00FFB7  80                 	db	128
   588   00FFB8  41                 	db	65
   589   00FFB9  00                 	db	0
   590   00FFBA  C1                 	db	193
   591   00FFBB  81                 	db	129
   592   00FFBC  40                 	db	64
   593   00FFBD  00                 	db	0
   594   00FFBE  C1                 	db	193
   595   00FFBF  81                 	db	129
   596   00FFC0  40                 	db	64
   597   00FFC1  01                 	db	1
   598   00FFC2  C0                 	db	192
   599   00FFC3  80                 	db	128
   600   00FFC4  41                 	db	65
   601   00FFC5  01                 	db	1
   602   00FFC6  C0                 	db	192
   603   00FFC7  80                 	db	128
   604   00FFC8  41                 	db	65
   605   00FFC9  00                 	db	0
   606   00FFCA  C1                 	db	193
   607   00FFCB  81                 	db	129
   608   00FFCC  40                 	db	64
   609   00FFCD  00                 	db	0
   610   00FFCE  C1                 	db	193
   611   00FFCF  81                 	db	129
   612   00FFD0  40                 	db	64
   613   00FFD1  01                 	db	1
   614   00FFD2  C0                 	db	192
   615   00FFD3  80                 	db	128
   616   00FFD4  41                 	db	65
   617   00FFD5  00                 	db	0
   618   00FFD6  C1                 	db	193
   619   00FFD7  81                 	db	129
   620   00FFD8  40                 	db	64
   621   00FFD9  01                 	db	1
   622   00FFDA  C0                 	db	192
   623   00FFDB  80                 	db	128
   624   00FFDC  41                 	db	65
   625   00FFDD  01                 	db	1
   626   00FFDE  C0                 	db	192
   627   00FFDF  80                 	db	128
   628   00FFE0  41                 	db	65
   629   00FFE1  00                 	db	0
   630   00FFE2  C1                 	db	193
   631   00FFE3  81                 	db	129
   632   00FFE4  40                 	db	64
   633   00FFE5                     __end_of_auchCRCHi:
   634                           	callstack 0
   635   000000                     _RCREG1	set	4014
   636   000000                     _TXREG1	set	4013
   637   000000                     _SPBRG1	set	4015
   638   000000                     _TXSTA1	set	4012
   639   000000                     _CCPR1L	set	4030
   640   000000                     _CCPR1H	set	4031
   641   000000                     _TRISJ	set	3994
   642   000000                     _TRISD	set	3989
   643   000000                     _TRISC	set	3988
   644   000000                     _TRISH	set	3993
   645   000000                     _TRISB	set	3987
   646   000000                     _TRISG	set	3992
   647   000000                     _TRISA	set	3986
   648   000000                     _TRISF	set	3991
   649   000000                     _TRISE	set	3990
   650   000000                     _LATH	set	3984
   651   000000                     _LATC	set	3979
   652   000000                     _LATG	set	3983
   653   000000                     _LATB	set	3978
   654   000000                     _LATF	set	3982
   655   000000                     _LATJ	set	3985
   656   000000                     _ADCON0	set	4034
   657   000000                     _ADRESL	set	4035
   658   00FFE5                     STR_2:
   659   00FFE5  49                 	db	73	;'I'
   660   00FFE6  20                 	db	32
   661   00FFE7  3D                 	db	61	;'='
   662   00FFE8  20                 	db	32
   663   00FFE9  25                 	db	37
   664   00FFEA  30                 	db	48	;'0'
   665   00FFEB  33                 	db	51	;'3'
   666   00FFEC  64                 	db	100	;'d'
   667   00FFED  5B                 	db	91	;'['
   668   00FFEE  75                 	db	117	;'u'
   669   00FFEF  41                 	db	65	;'A'
   670   00FFF0  5D                 	db	93	;']'
   671   00FFF1  00                 	db	0
   672   00FFF2                     STR_1:
   673   00FFF2  55                 	db	85	;'U'
   674   00FFF3  20                 	db	32
   675   00FFF4  3D                 	db	61	;'='
   676   00FFF5  20                 	db	32
   677   00FFF6  25                 	db	37
   678   00FFF7  30                 	db	48	;'0'
   679   00FFF8  33                 	db	51	;'3'
   680   00FFF9  64                 	db	100	;'d'
   681   00FFFA  5B                 	db	91	;'['
   682   00FFFB  6D                 	db	109	;'m'
   683   00FFFC  56                 	db	86	;'V'
   684   00FFFD  5D                 	db	93	;']'
   685   00FFFE  00                 	db	0
   686   00FFFF  00                 	db	0	; dummy byte at the end
   687   000000                     
   688                           	psect	nvCOMRAM
   689   000048                     __pnvCOMRAM:
   690                           	callstack 0
   691   000048                     _TMR0_InterruptHandler:
   692                           	callstack 0
   693   000048                     	ds	3
   694                           
   695                           	psect	nvBANK0
   696   0000EA                     __pnvBANK0:
   697                           	callstack 0
   698   0000EA                     _EUSART1_ErrorHandler:
   699                           	callstack 0
   700   0000EA                     	ds	3
   701   0000ED                     _EUSART1_OverrunErrorHandler:
   702                           	callstack 0
   703   0000ED                     	ds	3
   704   0000F0                     _EUSART1_FramingErrorHandler:
   705                           	callstack 0
   706   0000F0                     	ds	3
   707   0000F3                     _EUSART1_RxDefaultInterruptHandler:
   708                           	callstack 0
   709   0000F3                     	ds	3
   710   0000F6                     _EUSART1_TxDefaultInterruptHandler:
   711                           	callstack 0
   712   0000F6                     	ds	3
   713   000000                     _LATDbits	set	3980
   714   000000                     _TRISDbits	set	3989
   715   000000                     _T0CONbits	set	4053
   716   000000                     _RCSTA1bits	set	4011
   717   000000                     _TXSTA1bits	set	4012
   718   000000                     _T2CONbits	set	4042
   719   000000                     _ADCON1bits	set	4033
   720   000000                     _ADCON0bits	set	4034
   721   000000                     _TMR0ON	set	32431
   722   000000                     _ECCP1DEL	set	3961
   723   000000                     _LATA	set	3977
   724   000000                     _LATD	set	3980
   725   000000                     _LATE	set	3981
   726   000000                     _OSCTUNE	set	3995
   727   000000                     _OSCCON	set	4051
   728   000000                     _T0CON	set	4053
   729   000000                     _TMR0L	set	4054
   730   000000                     _TMR0H	set	4055
   731   000000                     _PIE1bits	set	3997
   732   000000                     _PIR1bits	set	3998
   733   000000                     _ECCP1AS	set	4022
   734   000000                     _CCP1CON	set	4029
   735   000000                     _ADCON2	set	4032
   736   000000                     _ADCON1	set	4033
   737   000000                     _T2CON	set	4042
   738   000000                     _PR2	set	4043
   739   000000                     _ADRESH	set	4036
   740   000000                     _BAUDCON1	set	3966
   741   000000                     _RCONbits	set	4048
   742   000000                     _TMR2	set	4044
   743   000000                     _RCSTA1	set	4011
   744   000000                     _SPBRGH1	set	3967
   745   000000                     _INTCONbits	set	4082
   746                           
   747                           ; #config settings
   748                           
   749                           	psect	cinit
   750   010EF4                     __pcinit:
   751                           	callstack 0
   752   010EF4                     start_initialization:
   753                           	callstack 0
   754   010EF4                     __initialization:
   755                           	callstack 0
   756                           
   757                           ; Clear objects allocated to BANK2 (256 bytes)
   758   010EF4  EE02  F000         	lfsr	0,__pbssBANK2
   759   010EF8  EE11 F000          	lfsr	1,256
   760   010EFC                     clear_0:
   761   010EFC  6AEE               	clrf	postinc0,c
   762   010EFE  50E5               	movf	postdec1,w,c
   763   010F00  50E1               	movf	fsr1l,w,c
   764   010F02  E1FC               	bnz	clear_0
   765   010F04  50E2               	movf	fsr1h,w,c
   766   010F06  E1FA               	bnz	clear_0
   767                           
   768                           ; Clear objects allocated to BANK1 (256 bytes)
   769   010F08  EE01  F000         	lfsr	0,__pbssBANK1
   770   010F0C  EE11 F000          	lfsr	1,256
   771   010F10                     clear_1:
   772   010F10  6AEE               	clrf	postinc0,c
   773   010F12  50E5               	movf	postdec1,w,c
   774   010F14  50E1               	movf	fsr1l,w,c
   775   010F16  E1FC               	bnz	clear_1
   776   010F18  50E2               	movf	fsr1h,w,c
   777   010F1A  E1FA               	bnz	clear_1
   778                           
   779                           ; Clear objects allocated to BANK0 (69 bytes)
   780   010F1C  EE00  F060         	lfsr	0,__pbssBANK0
   781   010F20  0E45               	movlw	69
   782   010F22                     clear_2:
   783   010F22  6AEE               	clrf	postinc0,c
   784   010F24  06E8               	decf	wreg,f,c
   785   010F26  E1FD               	bnz	clear_2
   786                           
   787                           ; Clear objects allocated to COMRAM (16 bytes)
   788   010F28  EE00  F038         	lfsr	0,__pbssCOMRAM
   789   010F2C  0E10               	movlw	16
   790   010F2E                     clear_3:
   791   010F2E  6AEE               	clrf	postinc0,c
   792   010F30  06E8               	decf	wreg,f,c
   793   010F32  E1FD               	bnz	clear_3
   794   010F34                     end_of_initialization:
   795                           	callstack 0
   796   010F34                     __end_of__initialization:
   797                           	callstack 0
   798   010F34  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   799   010F36  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   800   010F38  0100               	movlb	0
   801   010F3A  EFD6  F083         	goto	_main	;jump to C main() function
   802                           
   803                           	psect	bssCOMRAM
   804   000038                     __pbssCOMRAM:
   805                           	callstack 0
   806   000038                     _width:
   807                           	callstack 0
   808   000038                     	ds	2
   809   00003A                     _prec:
   810                           	callstack 0
   811   00003A                     	ds	2
   812   00003C                     _flags:
   813                           	callstack 0
   814   00003C                     	ds	1
   815   00003D                     _recPtr:
   816                           	callstack 0
   817   00003D                     	ds	1
   818   00003E                     _index:
   819                           	callstack 0
   820   00003E                     	ds	1
   821   00003F                     _modbusAddress:
   822                           	callstack 0
   823   00003F                     	ds	1
   824   000040                     _timer0ReloadVal:
   825                           	callstack 0
   826   000040                     	ds	1
   827   000041                     _eusart1RxLastError:
   828                           	callstack 0
   829   000041                     	ds	1
   830   000042                     _eusart1RxCount:
   831                           	callstack 0
   832   000042                     	ds	1
   833   000043                     _eusart1RxTail:
   834                           	callstack 0
   835   000043                     	ds	1
   836   000044                     _eusart1RxHead:
   837                           	callstack 0
   838   000044                     	ds	1
   839   000045                     _eusart1TxBufferRemaining:
   840                           	callstack 0
   841   000045                     	ds	1
   842   000046                     _eusart1TxTail:
   843                           	callstack 0
   844   000046                     	ds	1
   845   000047                     _eusart1TxHead:
   846                           	callstack 0
   847   000047                     	ds	1
   848                           
   849                           	psect	bssBANK0
   850   000060                     __pbssBANK0:
   851                           	callstack 0
   852   000060                     _eusart1RxStatusBuffer:
   853                           	callstack 0
   854   000060                     	ds	8
   855   000068                     _eusart1RxBuffer:
   856                           	callstack 0
   857   000068                     	ds	8
   858   000070                     _eusart1TxBuffer:
   859                           	callstack 0
   860   000070                     	ds	8
   861   000078                     _input_registers:
   862                           	callstack 0
   863   000078                     	ds	4
   864   00007C                     _holding_registers:
   865                           	callstack 0
   866   00007C                     	ds	4
   867   000080                     _ADC_InterruptHandler:
   868                           	callstack 0
   869   000080                     	ds	3
   870   000083                     _offset:
   871                           	callstack 0
   872   000083                     	ds	2
   873   000085                     _dbuf:
   874                           	callstack 0
   875   000085                     	ds	32
   876                           
   877                           	psect	bssBANK1
   878   000100                     __pbssBANK1:
   879                           	callstack 0
   880   000100                     _rx_buf:
   881                           	callstack 0
   882   000100                     	ds	256
   883                           
   884                           	psect	bssBANK2
   885   000200                     __pbssBANK2:
   886                           	callstack 0
   887   000200                     _tx_buf:
   888                           	callstack 0
   889   000200                     	ds	256
   890                           
   891                           	psect	cstackBANK0
   892   0000A5                     __pcstackBANK0:
   893                           	callstack 0
   894   0000A5                     measure_current@i:
   895                           	callstack 0
   896   0000A5                     _dtoa$1684:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x0
   900   0000A5                     	ds	2
   901   0000A7                     dtoa@p:
   902                           	callstack 0
   903   0000A7                     measure_current@result:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x2
   907   0000A7                     	ds	2
   908   0000A9                     dtoa@w:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x4
   912   0000A9                     	ds	2
   913   0000AB                     dtoa@s:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x6
   917   0000AB                     	ds	1
   918   0000AC                     dtoa@i:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x7
   922   0000AC                     	ds	2
   923   0000AE                     vfpfcnvrt@fp:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x9
   927   0000AE                     	ds	2
   928   0000B0                     vfpfcnvrt@fmt:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xB
   932   0000B0                     	ds	2
   933   0000B2                     vfpfcnvrt@ap:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0xD
   937   0000B2                     	ds	2
   938   0000B4                     vfpfcnvrt@convarg:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0xF
   942   0000B4                     	ds	4
   943   0000B8                     vfpfcnvrt@done:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x13
   947   0000B8                     	ds	2
   948   0000BA                     vfpfcnvrt@cp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x15
   952   0000BA                     	ds	2
   953   0000BC                     ?_vfprintf:
   954                           	callstack 0
   955   0000BC                     vfprintf@fp:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x17
   959   0000BC                     	ds	2
   960   0000BE                     vfprintf@fmt:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x19
   964   0000BE                     	ds	2
   965   0000C0                     vfprintf@ap:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x1B
   969   0000C0                     	ds	2
   970   0000C2                     ?_sprintf:
   971                           	callstack 0
   972   0000C2                     sprintf@s:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x1D
   976   0000C2                     	ds	2
   977   0000C4                     sprintf@fmt:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x1F
   981   0000C4                     	ds	4
   982   0000C8                     sprintf@ap:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x23
   986   0000C8                     	ds	2
   987   0000CA                     sprintf@f:
   988                           	callstack 0
   989                           
   990                           ; 12 bytes @ 0x25
   991   0000CA                     	ds	12
   992   0000D6                     main@tempString:
   993                           	callstack 0
   994                           
   995                           ; 20 bytes @ 0x31
   996   0000D6                     	ds	20
   997                           
   998                           	psect	cstackCOMRAM
   999   000001                     __pcstackCOMRAM:
  1000                           	callstack 0
  1001   000001                     ?_CRC16:
  1002                           	callstack 0
  1003   000001                     EUSART1_Write@txData:
  1004                           	callstack 0
  1005   000001                     modbus_char_recvd@c:
  1006                           	callstack 0
  1007   000001                     CRC16@msg:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x0
  1011   000001                     	ds	1
  1012   000002                     modbus_send@length:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x1
  1016   000002                     	ds	1
  1017   000003                     CRC16@length:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2
  1021   000003                     	ds	2
  1022   000005                     ??_CRC16:
  1023                           
  1024                           ; 1 bytes @ 0x4
  1025   000005                     	ds	2
  1026   000007                     CRC16@uIndex:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x6
  1030   000007                     	ds	1
  1031   000008                     CRC16@uchCRCHi:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x7
  1035   000008                     	ds	1
  1036   000009                     CRC16@uchCRCLo:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x8
  1040   000009                     	ds	1
  1041   00000A                     ??_modbus_analyse_and_answer:
  1042                           
  1043                           ; 1 bytes @ 0x9
  1044   00000A                     	ds	1
  1045   00000B                     modbus_analyse_and_answer@crc:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xA
  1049   00000B                     	ds	2
  1050   00000D                     ??_INTERRUPT_InterruptManager:
  1051                           
  1052                           ; 1 bytes @ 0xC
  1053   00000D                     	ds	8
  1054   000015                     ??_LCD_2x16_WriteCmd:
  1055   000015                     ??_LCD_2x16_WriteData:
  1056   000015                     ?_ADC_GetConversion:
  1057                           	callstack 0
  1058   000015                     ?___wmul:
  1059                           	callstack 0
  1060   000015                     ?___awdiv:
  1061                           	callstack 0
  1062   000015                     ?___awmod:
  1063                           	callstack 0
  1064   000015                     ?___lmul:
  1065                           	callstack 0
  1066   000015                     EPWM1_LoadDutyValue@dutyValue:
  1067                           	callstack 0
  1068   000015                     ___wmul@multiplier:
  1069                           	callstack 0
  1070   000015                     ___awdiv@dividend:
  1071                           	callstack 0
  1072   000015                     ___awmod@dividend:
  1073                           	callstack 0
  1074   000015                     fputc@c:
  1075                           	callstack 0
  1076   000015                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1077                           	callstack 0
  1078   000015                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1079                           	callstack 0
  1080   000015                     EUSART1_SetErrorHandler@interruptHandler:
  1081                           	callstack 0
  1082   000015                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1083                           	callstack 0
  1084   000015                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1085                           	callstack 0
  1086   000015                     TMR0_SetInterruptHandler@InterruptHandler:
  1087                           	callstack 0
  1088   000015                     ___lmul@multiplier:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x14
  1092   000015                     	ds	1
  1093   000016                     LCD_2x16_WriteCmd@command:
  1094                           	callstack 0
  1095   000016                     LCD_2x16_WriteData@command:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x15
  1099   000016                     	ds	1
  1100   000017                     ??_Lcd_Init:
  1101   000017                     ??_ADC_GetConversion:
  1102   000017                     ??_EPWM1_LoadDutyValue:
  1103   000017                     LCD_2x16_WriteMsg@msg:
  1104                           	callstack 0
  1105   000017                     ___wmul@multiplicand:
  1106                           	callstack 0
  1107   000017                     ___awdiv@divisor:
  1108                           	callstack 0
  1109   000017                     ___awmod@divisor:
  1110                           	callstack 0
  1111   000017                     fputc@fp:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x16
  1115   000017                     	ds	1
  1116   000018                     
  1117                           ; 1 bytes @ 0x17
  1118   000018                     	ds	1
  1119   000019                     ??_fputc:
  1120   000019                     ADC_GetConversion@channel:
  1121                           	callstack 0
  1122   000019                     LCD_2x16_WriteMsg@line:
  1123                           	callstack 0
  1124   000019                     ___awdiv@counter:
  1125                           	callstack 0
  1126   000019                     ___awmod@counter:
  1127                           	callstack 0
  1128   000019                     ___wmul@product:
  1129                           	callstack 0
  1130   000019                     ___lmul@multiplicand:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x18
  1134   000019                     	ds	1
  1135   00001A                     ___awdiv@sign:
  1136                           	callstack 0
  1137   00001A                     ___awmod@sign:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x19
  1141   00001A                     	ds	1
  1142   00001B                     ?_abs:
  1143                           	callstack 0
  1144   00001B                     ?_read_prec_or_width:
  1145                           	callstack 0
  1146   00001B                     ___awdiv@quotient:
  1147                           	callstack 0
  1148   00001B                     read_prec_or_width@fmt:
  1149                           	callstack 0
  1150   00001B                     abs@a:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1A
  1154   00001B                     	ds	2
  1155   00001D                     ??_abs:
  1156   00001D                     read_prec_or_width@ap:
  1157                           	callstack 0
  1158   00001D                     ___lmul@product:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x1C
  1162   00001D                     	ds	1
  1163   00001E                     fputs@s:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x1D
  1167   00001E                     	ds	1
  1168   00001F                     ??_read_prec_or_width:
  1169                           
  1170                           ; 1 bytes @ 0x1E
  1171   00001F                     	ds	1
  1172   000020                     fputs@fp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x1F
  1176   000020                     	ds	1
  1177   000021                     ?___lldiv:
  1178                           	callstack 0
  1179   000021                     read_prec_or_width@c:
  1180                           	callstack 0
  1181   000021                     ___lldiv@dividend:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x20
  1185   000021                     	ds	1
  1186   000022                     fputs@c:
  1187                           	callstack 0
  1188   000022                     read_prec_or_width@n:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x21
  1192   000022                     	ds	1
  1193   000023                     fputs@i:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x22
  1197   000023                     	ds	2
  1198   000025                     pad@fp:
  1199                           	callstack 0
  1200   000025                     ___lldiv@divisor:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x24
  1204   000025                     	ds	2
  1205   000027                     pad@buf:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x26
  1209   000027                     	ds	2
  1210   000029                     pad@p:
  1211                           	callstack 0
  1212   000029                     ___lldiv@quotient:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x28
  1216   000029                     	ds	2
  1217   00002B                     ??_pad:
  1218                           
  1219                           ; 1 bytes @ 0x2A
  1220   00002B                     	ds	1
  1221   00002C                     pad@i:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x2B
  1225   00002C                     	ds	1
  1226   00002D                     ___lldiv@counter:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x2C
  1230   00002D                     	ds	1
  1231   00002E                     ?_measure_current:
  1232                           	callstack 0
  1233   00002E                     ?_measure_voltage:
  1234                           	callstack 0
  1235   00002E                     measure_current@offset:
  1236                           	callstack 0
  1237   00002E                     pad@w:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x2D
  1241   00002E                     	ds	2
  1242   000030                     ??_measure_current:
  1243   000030                     ??_measure_voltage:
  1244   000030                     dtoa@fp:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x2F
  1248   000030                     	ds	1
  1249   000031                     measure_voltage@result:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x30
  1253   000031                     	ds	1
  1254   000032                     dtoa@d:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x31
  1258   000032                     	ds	2
  1259   000034                     ??_vfpfcnvrt:
  1260                           
  1261                           ; 1 bytes @ 0x33
  1262   000034                     	ds	1
  1263   000035                     measure_voltage@i:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x34
  1267   000035                     	ds	1
  1268   000036                     vfprintf@cfmt:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x35
  1272   000036                     	ds	2
  1273   000038                     
  1274                           ; 1 bytes @ 0x37
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 54 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  tempString     20   49[BANK0 ] unsigned char [20]
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:       20 bytes
  1299 ;; Hardware stack levels required when called: 12
  1300 ;; This function calls:
  1301 ;;		_EPWM1_LoadDutyValue
  1302 ;;		_LCD_2x16_WriteMsg
  1303 ;;		_Lcd_Init
  1304 ;;		_SYSTEM_Initialize
  1305 ;;		_measure_current
  1306 ;;		_measure_voltage
  1307 ;;		_sprintf
  1308 ;; This function is called by:
  1309 ;;		Startup code after reset
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text0
  1314   0107AC                     __ptext0:
  1315                           	callstack 0
  1316   0107AC                     _main:
  1317                           	callstack 19
  1318   0107AC                     
  1319                           ;main.c: 57:     SYSTEM_Initialize();
  1320   0107AC  EC0B  F089         	call	_SYSTEM_Initialize	;wreg free
  1321   0107B0                     
  1322                           ;main.c: 76:     holding_registers[1] = 0x80;
  1323   0107B0  0E00               	movlw	0
  1324   0107B2  0100               	movlb	0	; () banked
  1325   0107B4  6F7F               	movwf	(_holding_registers+3)& (0+255),b
  1326   0107B6  0E80               	movlw	128
  1327   0107B8  6F7E               	movwf	(_holding_registers+2)& (0+255),b
  1328   0107BA                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 77:     EPWM1_LoadDutyValue(0);
  1331   0107BA  0E00               	movlw	0
  1332   0107BC  6E16               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1333   0107BE  0E00               	movlw	0
  1334   0107C0  6E15               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1335   0107C2  ECB8  F088         	call	_EPWM1_LoadDutyValue	;wreg free
  1336   0107C6                     
  1337                           ;main.c: 79:     char tempString[20];;main.c: 80:     Lcd_Init();
  1338   0107C6  ECC1  F087         	call	_Lcd_Init	;wreg free
  1339   0107CA                     
  1340                           ;main.c: 81:     offset = measure_current(0);
  1341   0107CA  0E00               	movlw	0
  1342   0107CC  6E2F               	movwf	(measure_current@offset+1)^0,c
  1343   0107CE  0E00               	movlw	0
  1344   0107D0  6E2E               	movwf	measure_current@offset^0,c
  1345   0107D2  ECD8  F081         	call	_measure_current	;wreg free
  1346   0107D6  C02E  F083         	movff	?_measure_current,_offset
  1347   0107DA  C02F  F084         	movff	?_measure_current+1,_offset+1
  1348   0107DE                     l3193:
  1349                           
  1350                           ;main.c: 83:     {;main.c: 86:          input_registers[0] = measure_voltage();
  1351   0107DE  EC97  F084         	call	_measure_voltage	;wreg free
  1352   0107E2  C02E  F078         	movff	?_measure_voltage,_input_registers
  1353   0107E6  C02F  F079         	movff	?_measure_voltage+1,_input_registers+1
  1354   0107EA                     
  1355                           ;main.c: 87:          input_registers[1] = measure_current(offset);
  1356   0107EA  C083  F02E         	movff	_offset,measure_current@offset
  1357   0107EE  C084  F02F         	movff	_offset+1,measure_current@offset+1
  1358   0107F2  ECD8  F081         	call	_measure_current	;wreg free
  1359   0107F6  C02E  F07A         	movff	?_measure_current,_input_registers+2
  1360   0107FA  C02F  F07B         	movff	?_measure_current+1,_input_registers+3
  1361   0107FE                     
  1362                           ;main.c: 88:          EPWM1_LoadDutyValue(holding_registers[0]);
  1363   0107FE  C07C  F015         	movff	_holding_registers,EPWM1_LoadDutyValue@dutyValue
  1364   010802  C07D  F016         	movff	_holding_registers+1,EPWM1_LoadDutyValue@dutyValue+1
  1365   010806  ECB8  F088         	call	_EPWM1_LoadDutyValue	;wreg free
  1366   01080A                     
  1367                           ;main.c: 90:          sprintf(tempString,"U = %03d[mV]",input_registers[0]);
  1368   01080A  0ED6               	movlw	low main@tempString
  1369   01080C  0100               	movlb	0	; () banked
  1370   01080E  6FC2               	movwf	sprintf@s& (0+255),b
  1371   010810  0E00               	movlw	high main@tempString
  1372   010812  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1373   010814  0EF2               	movlw	low STR_1
  1374   010816  6FC4               	movwf	sprintf@fmt& (0+255),b
  1375   010818  0EFF               	movlw	high STR_1
  1376   01081A  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1377   01081C  C078  F0C6         	movff	_input_registers,?_sprintf+4
  1378   010820  C079  F0C7         	movff	_input_registers+1,?_sprintf+5
  1379   010824  EC2B  F087         	call	_sprintf	;wreg free
  1380   010828                     
  1381                           ;main.c: 91:          LCD_2x16_WriteMsg(tempString,0);
  1382   010828  0ED6               	movlw	low main@tempString
  1383   01082A  6E17               	movwf	LCD_2x16_WriteMsg@msg^0,c
  1384   01082C  0E00               	movlw	high main@tempString
  1385   01082E  6E18               	movwf	(LCD_2x16_WriteMsg@msg+1)^0,c
  1386   010830  0E00               	movlw	0
  1387   010832  6E19               	movwf	LCD_2x16_WriteMsg@line^0,c
  1388   010834  EC81  F088         	call	_LCD_2x16_WriteMsg	;wreg free
  1389   010838                     
  1390                           ;main.c: 92:          sprintf(tempString,"I = %03d[uA]",input_registers[1]);
  1391   010838  0ED6               	movlw	low main@tempString
  1392   01083A  0100               	movlb	0	; () banked
  1393   01083C  6FC2               	movwf	sprintf@s& (0+255),b
  1394   01083E  0E00               	movlw	high main@tempString
  1395   010840  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1396   010842  0EE5               	movlw	low STR_2
  1397   010844  6FC4               	movwf	sprintf@fmt& (0+255),b
  1398   010846  0EFF               	movlw	high STR_2
  1399   010848  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1400   01084A  C07A  F0C6         	movff	_input_registers+2,?_sprintf+4
  1401   01084E  C07B  F0C7         	movff	_input_registers+3,?_sprintf+5
  1402   010852  EC2B  F087         	call	_sprintf	;wreg free
  1403   010856                     
  1404                           ;main.c: 93:          LCD_2x16_WriteMsg(tempString,1);
  1405   010856  0ED6               	movlw	low main@tempString
  1406   010858  6E17               	movwf	LCD_2x16_WriteMsg@msg^0,c
  1407   01085A  0E00               	movlw	high main@tempString
  1408   01085C  6E18               	movwf	(LCD_2x16_WriteMsg@msg+1)^0,c
  1409   01085E  0E01               	movlw	1
  1410   010860  6E19               	movwf	LCD_2x16_WriteMsg@line^0,c
  1411   010862  EC81  F088         	call	_LCD_2x16_WriteMsg	;wreg free
  1412   010866  EFEF  F083         	goto	l3193
  1413   01086A  EF84  F000         	goto	start
  1414   01086E                     __end_of_main:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _sprintf *****************
  1418 ;; Defined at:
  1419 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  s               2   29[BANK0 ] PTR unsigned char 
  1422 ;;		 -> main@tempString(20), 
  1423 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  1424 ;;		 -> STR_2(13), STR_1(13), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  f              12   37[BANK0 ] struct _IO_FILE
  1427 ;;  ap              2   35[BANK0 ] PTR void [1]
  1428 ;;		 -> ?_sprintf(2), 
  1429 ;;  ret             2    0        int 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  2   29[BANK0 ] int 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:       20 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 11
  1446 ;; This function calls:
  1447 ;;		_vfprintf
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text1
  1454   010E56                     __ptext1:
  1455                           	callstack 0
  1456   010E56                     _sprintf:
  1457                           	callstack 19
  1458   010E56  0EC6               	movlw	low (?_sprintf+4)
  1459   010E58  0100               	movlb	0	; () banked
  1460   010E5A  6FC8               	movwf	sprintf@ap& (0+255),b
  1461   010E5C  0E00               	movlw	high (?_sprintf+4)
  1462   010E5E  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1463   010E60  C0C2  F0CA         	movff	sprintf@s,sprintf@f
  1464   010E64  C0C3  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1465   010E68                     
  1466                           ; BSR set to: 0
  1467   010E68  0E00               	movlw	0
  1468   010E6A  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1469   010E6C  0E00               	movlw	0
  1470   010E6E  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1471   010E70                     
  1472                           ; BSR set to: 0
  1473   010E70  0E00               	movlw	0
  1474   010E72  6FD5               	movwf	(sprintf@f+11)& (0+255),b
  1475   010E74  0E00               	movlw	0
  1476   010E76  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1477   010E78                     
  1478                           ; BSR set to: 0
  1479   010E78  0ECA               	movlw	low sprintf@f
  1480   010E7A  6FBC               	movwf	vfprintf@fp& (0+255),b
  1481   010E7C  0E00               	movlw	high sprintf@f
  1482   010E7E  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  1483   010E80  C0C4  F0BE         	movff	sprintf@fmt,vfprintf@fmt
  1484   010E84  C0C5  F0BF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1485   010E88  0EC8               	movlw	low sprintf@ap
  1486   010E8A  6FC0               	movwf	vfprintf@ap& (0+255),b
  1487   010E8C  0E00               	movlw	high sprintf@ap
  1488   010E8E  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  1489   010E90  ECD5  F086         	call	_vfprintf	;wreg free
  1490   010E94  0100               	movlb	0	; () banked
  1491   010E96  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1492   010E98  25C2               	addwf	sprintf@s& (0+255),w,b
  1493   010E9A  6ED9               	movwf	fsr2l,c
  1494   010E9C  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1495   010E9E  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1496   010EA0  6EDA               	movwf	fsr2h,c
  1497   010EA2  6ADF               	clrf	indf2,c
  1498   010EA4                     
  1499                           ; BSR set to: 0
  1500   010EA4  0012               	return		;funcret
  1501   010EA6                     __end_of_sprintf:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _vfprintf *****************
  1505 ;; Defined at:
  1506 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  1509 ;;		 -> sprintf@f(12), 
  1510 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  1511 ;;		 -> STR_2(13), STR_1(13), 
  1512 ;;  ap              2   27[BANK0 ] PTR PTR void 
  1513 ;;		 -> sprintf@ap(2), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  cfmt            2   53[COMRAM] PTR unsigned char 
  1516 ;;		 -> STR_2(13), STR_1(13), 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2   23[BANK0 ] int 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        8 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 10
  1533 ;; This function calls:
  1534 ;;		_vfpfcnvrt
  1535 ;; This function is called by:
  1536 ;;		_sprintf
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text2
  1541   010DAA                     __ptext2:
  1542                           	callstack 0
  1543   010DAA                     _vfprintf:
  1544                           	callstack 19
  1545   010DAA                     
  1546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1547   010DAA  C0BE  F036         	movff	vfprintf@fmt,vfprintf@cfmt
  1548   010DAE  C0BF  F037         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1551   010DB2  EFEA  F086         	goto	l3117
  1552   010DB6                     l3115:
  1553                           
  1554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1555   010DB6  C0BC  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  1556   010DBA  C0BD  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1557   010DBE  0E36               	movlw	low vfprintf@cfmt
  1558   010DC0  0100               	movlb	0	; () banked
  1559   010DC2  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1560   010DC4  0E00               	movlw	high vfprintf@cfmt
  1561   010DC6  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1562   010DC8  C0C0  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  1563   010DCC  C0C1  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1564   010DD0  EC00  F080         	call	_vfpfcnvrt	;wreg free
  1565   010DD4                     l3117:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1568   010DD4  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
  1569   010DD8  C037  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1570   010DDC                     	if	0	;tblptru may be non-zero
  1571   010DDC                     	endif
  1572   010DDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1573   010DDC  0E00               	movlw	low (__mediumconst shr (0+16))
  1574   010DDE  6EF8               	movwf	tblptru,c
  1575   010DE0                     	endif
  1576   010DE0  0008               	tblrd		*
  1577   010DE2  50F5               	movf	tablat,w,c
  1578   010DE4  0900               	iorlw	0
  1579   010DE6  A4D8               	btfss	status,2,c
  1580   010DE8  EFF8  F086         	goto	u2131
  1581   010DEC  EFFA  F086         	goto	u2130
  1582   010DF0                     u2131:
  1583   010DF0  EFDB  F086         	goto	l3115
  1584   010DF4                     u2130:
  1585   010DF4                     
  1586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1587   010DF4  0E00               	movlw	0
  1588   010DF6  0100               	movlb	0	; () banked
  1589   010DF8  6FBD               	movwf	(?_vfprintf+1)& (0+255),b
  1590   010DFA  0E00               	movlw	0
  1591   010DFC  6FBC               	movwf	?_vfprintf& (0+255),b
  1592   010DFE                     
  1593                           ; BSR set to: 0
  1594   010DFE  0012               	return		;funcret
  1595   010E00                     __end_of_vfprintf:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _vfpfcnvrt *****************
  1599 ;; Defined at:
  1600 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  1603 ;;		 -> sprintf@f(12), 
  1604 ;;  fmt             2   11[BANK0 ] PTR PTR unsigned char 
  1605 ;;		 -> vfprintf@cfmt(2), 
  1606 ;;  ap              2   13[BANK0 ] PTR PTR void 
  1607 ;;		 -> sprintf@ap(2), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  convarg         4   15[BANK0 ] struct .
  1610 ;;  cp              2   21[BANK0 ] PTR unsigned char 
  1611 ;;		 -> STR_2(13), STR_1(13), 
  1612 ;;  done            2   19[BANK0 ] int 
  1613 ;;  i               2    0        int 
  1614 ;;  c               1    0        unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:       16 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 9
  1631 ;; This function calls:
  1632 ;;		_dtoa
  1633 ;;		_fputc
  1634 ;;		_read_prec_or_width
  1635 ;; This function is called by:
  1636 ;;		_vfprintf
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text3
  1641   010000                     __ptext3:
  1642                           	callstack 0
  1643   010000                     _vfpfcnvrt:
  1644                           	callstack 19
  1645   010000                     
  1646                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1647   010000  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1648   010004  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1649   010008  CFDE FFF6          	movff	postinc2,tblptrl
  1650   01000C  CFDD FFF7          	movff	postdec2,tblptrh
  1651   010010                     	if	0	;tblptru may be non-zero
  1652   010010                     	endif
  1653   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1654   010010  0E00               	movlw	low (__mediumconst shr (0+16))
  1655   010012  6EF8               	movwf	tblptru,c
  1656   010014                     	endif
  1657   010014  0008               	tblrd		*
  1658   010016  50F5               	movf	tablat,w,c
  1659   010018  0A25               	xorlw	37
  1660   01001A  A4D8               	btfss	status,2,c
  1661   01001C  EF12  F080         	goto	u2021
  1662   010020  EF14  F080         	goto	u2020
  1663   010024                     u2021:
  1664   010024  EFD9  F080         	goto	l3057
  1665   010028                     u2020:
  1666   010028                     
  1667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1668   010028  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669   01002C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670   010030  2ADE               	incf	postinc2,f,c
  1671   010032  0E00               	movlw	0
  1672   010034  22DD               	addwfc	postdec2,f,c
  1673   010036                     
  1674                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1675   010036  0E00               	movlw	0
  1676   010038  6E39               	movwf	(_width+1)^0,c
  1677   01003A  0E00               	movlw	0
  1678   01003C  6E38               	movwf	_width^0,c
  1679   01003E  C038  F03C         	movff	_width,_flags
  1680   010042                     
  1681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1682   010042  683A               	setf	_prec^0,c
  1683   010044  683B               	setf	(_prec+1)^0,c
  1684   010046                     
  1685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1686   010046  0E00               	movlw	0
  1687   010048  0100               	movlb	0	; () banked
  1688   01004A  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1689   01004C  0E00               	movlw	0
  1690   01004E  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1693   010050  EF56  F080         	goto	l3033
  1694   010054                     l3023:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1698   010054  823C               	bsf	_flags^0,1,c
  1699   010056                     
  1700                           ; BSR set to: 0
  1701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1702   010056  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1703   01005A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1704   01005E  2ADE               	incf	postinc2,f,c
  1705   010060  0E00               	movlw	0
  1706   010062  22DD               	addwfc	postdec2,f,c
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1709   010064  EF56  F080         	goto	l3033
  1710   010068                     l3027:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1714   010068  0E00               	movlw	0
  1715   01006A  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1716   01006C  0E01               	movlw	1
  1717   01006E  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1720   010070  EF56  F080         	goto	l3033
  1721   010074                     l3031:
  1722                           
  1723                           ; BSR set to: 0
  1724   010074  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1725   010078  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1726   01007C  CFDE FFF6          	movff	postinc2,tblptrl
  1727   010080  CFDD FFF7          	movff	postdec2,tblptrh
  1728   010084                     	if	0	;tblptru may be non-zero
  1729   010084                     	endif
  1730   010084                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1731   010084  0E00               	movlw	low (__mediumconst shr (0+16))
  1732   010086  6EF8               	movwf	tblptru,c
  1733   010088                     	endif
  1734   010088  0008               	tblrd		*
  1735   01008A  50F5               	movf	tablat,w,c
  1736   01008C  6E34               	movwf	??_vfpfcnvrt^0,c
  1737   01008E  6A35               	clrf	(??_vfpfcnvrt+1)^0,c
  1738                           
  1739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 1, Range of values is 0 to 0
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            4     3 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746   010090  5035               	movf	(??_vfpfcnvrt+1)^0,w,c
  1747   010092  0A00               	xorlw	0	; case 0
  1748   010094  B4D8               	btfsc	status,2,c
  1749   010096  EF4F  F080         	goto	l3247
  1750   01009A  EF34  F080         	goto	l3027
  1751   01009E                     l3247:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ; Switch size 1, requested type "simple"
  1755                           ; Number of cases is 1, Range of values is 48 to 48
  1756                           ; switch strategies available:
  1757                           ; Name         Instructions Cycles
  1758                           ; simple_byte            4     3 (average)
  1759                           ;	Chosen strategy is simple_byte
  1760   01009E  5034               	movf	??_vfpfcnvrt^0,w,c
  1761   0100A0  0A30               	xorlw	48	; case 48
  1762   0100A2  B4D8               	btfsc	status,2,c
  1763   0100A4  EF2A  F080         	goto	l3023
  1764   0100A8  EF34  F080         	goto	l3027
  1765   0100AC                     l3033:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1769   0100AC  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  1770   0100AE  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1771   0100B0  B4D8               	btfsc	status,2,c
  1772   0100B2  EF5D  F080         	goto	u2031
  1773   0100B6  EF5F  F080         	goto	u2030
  1774   0100BA                     u2031:
  1775   0100BA  EF3A  F080         	goto	l3031
  1776   0100BE                     u2030:
  1777   0100BE                     
  1778                           ; BSR set to: 0
  1779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1780   0100BE  C0B0  F01B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1781   0100C2  C0B1  F01C         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1782   0100C6  C0B2  F01D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1783   0100CA  C0B3  F01E         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1784   0100CE  ECA8  F082         	call	_read_prec_or_width	;wreg free
  1785   0100D2  C01B  F038         	movff	?_read_prec_or_width,_width
  1786   0100D6  C01C  F039         	movff	?_read_prec_or_width+1,_width+1
  1787   0100DA                     
  1788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1789   0100DA  BE39               	btfsc	(_width+1)^0,7,c
  1790   0100DC  EF74  F080         	goto	u2040
  1791   0100E0  EF72  F080         	goto	u2041
  1792   0100E4                     u2041:
  1793   0100E4  EF79  F080         	goto	l3041
  1794   0100E8                     u2040:
  1795   0100E8                     
  1796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1797   0100E8  803C               	bsf	_flags^0,0,c
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1800   0100EA  6C38               	negf	_width^0,c
  1801   0100EC  1E39               	comf	(_width+1)^0,f,c
  1802   0100EE  B0D8               	btfsc	status,0,c
  1803   0100F0  2A39               	incf	(_width+1)^0,f,c
  1804   0100F2                     l3041:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1807   0100F2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1808   0100F6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1809   0100FA  CFDE F0BA          	movff	postinc2,vfpfcnvrt@cp
  1810   0100FE  CFDD F0BB          	movff	postdec2,vfpfcnvrt@cp+1
  1811   010102                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1813   010102  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1814   010106  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1815   01010A                     	if	0	;tblptru may be non-zero
  1816   01010A                     	endif
  1817   01010A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1818   01010A  0E00               	movlw	low (__mediumconst shr (0+16))
  1819   01010C  6EF8               	movwf	tblptru,c
  1820   01010E                     	endif
  1821   01010E  0008               	tblrd		*
  1822   010110  50F5               	movf	tablat,w,c
  1823   010112  0A64               	xorlw	100
  1824   010114  B4D8               	btfsc	status,2,c
  1825   010116  EF8F  F080         	goto	u2051
  1826   01011A  EF91  F080         	goto	u2050
  1827   01011E                     u2051:
  1828   01011E  EFA1  F080         	goto	l3047
  1829   010122                     u2050:
  1830   010122  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1831   010126  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1832   01012A                     	if	0	;tblptru may be non-zero
  1833   01012A                     	endif
  1834   01012A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1835   01012A  0E00               	movlw	low (__mediumconst shr (0+16))
  1836   01012C  6EF8               	movwf	tblptru,c
  1837   01012E                     	endif
  1838   01012E  0008               	tblrd		*
  1839   010130  50F5               	movf	tablat,w,c
  1840   010132  0A69               	xorlw	105
  1841   010134  A4D8               	btfss	status,2,c
  1842   010136  EF9F  F080         	goto	u2061
  1843   01013A  EFA1  F080         	goto	u2060
  1844   01013E                     u2061:
  1845   01013E  EFD0  F080         	goto	l3053
  1846   010142                     u2060:
  1847   010142                     l3047:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1850   010142  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1851   010146  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1852   01014A  CFDF F034          	movff	indf2,??_vfpfcnvrt
  1853   01014E  0E02               	movlw	2
  1854   010150  26DE               	addwf	postinc2,f,c
  1855   010152  CFDF F035          	movff	indf2,??_vfpfcnvrt+1
  1856   010156  0E00               	movlw	0
  1857   010158  22DD               	addwfc	postdec2,f,c
  1858   01015A  C034  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1859   01015E  C035  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1860   010162  CFDE F0B4          	movff	postinc2,vfpfcnvrt@convarg
  1861   010166  CFDD F0B5          	movff	postdec2,vfpfcnvrt@convarg+1
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1864   01016A  0E01               	movlw	1
  1865   01016C  0100               	movlb	0	; () banked
  1866   01016E  25BA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1867   010170  6E34               	movwf	??_vfpfcnvrt^0,c
  1868   010172  0E00               	movlw	0
  1869   010174  21BB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1870   010176  6E35               	movwf	(??_vfpfcnvrt+1)^0,c
  1871   010178  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1872   01017C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1873   010180  C034  FFDE         	movff	??_vfpfcnvrt,postinc2
  1874   010184  C035  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1875   010188                     
  1876                           ; BSR set to: 0
  1877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1878   010188  C0AE  F030         	movff	vfpfcnvrt@fp,dtoa@fp
  1879   01018C  C0AF  F031         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1880   010190  C0B4  F032         	movff	vfpfcnvrt@convarg,dtoa@d
  1881   010194  C0B5  F033         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1882   010198  ECF0  F080         	call	_dtoa	;wreg free
  1883   01019C  EFEF  F080         	goto	l1263
  1884   0101A0                     l3053:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1887   0101A0  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1888   0101A4  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1889   0101A8  2ADE               	incf	postinc2,f,c
  1890   0101AA  0E00               	movlw	0
  1891   0101AC  22DD               	addwfc	postdec2,f,c
  1892   0101AE  EFEF  F080         	goto	l1263
  1893   0101B2                     l3057:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1896   0101B2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1897   0101B6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1898   0101BA  CFDE FFF6          	movff	postinc2,tblptrl
  1899   0101BE  CFDD FFF7          	movff	postdec2,tblptrh
  1900   0101C2                     	if	0	;tblptru may be non-zero
  1901   0101C2                     	endif
  1902   0101C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1903   0101C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1904   0101C4  6EF8               	movwf	tblptru,c
  1905   0101C6                     	endif
  1906   0101C6  0008               	tblrd		*
  1907   0101C8  50F5               	movf	tablat,w,c
  1908   0101CA  6E15               	movwf	fputc@c^0,c
  1909   0101CC  6A16               	clrf	(fputc@c+1)^0,c
  1910   0101CE  C0AE  F017         	movff	vfpfcnvrt@fp,fputc@fp
  1911   0101D2  C0AF  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1912   0101D6  EC0F  F083         	call	_fputc	;wreg free
  1913   0101DA  EFD0  F080         	goto	l3053
  1914   0101DE                     l1263:
  1915   0101DE  0012               	return		;funcret
  1916   0101E0                     __end_of_vfpfcnvrt:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _read_prec_or_width *****************
  1920 ;; Defined at:
  1921 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  fmt             2   26[COMRAM] PTR PTR const unsigned c
  1924 ;;		 -> vfprintf@cfmt(2), 
  1925 ;;  ap              2   28[COMRAM] PTR PTR void [1]
  1926 ;;		 -> sprintf@ap(2), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  c               1   32[COMRAM] unsigned char 
  1929 ;;  n               2   33[COMRAM] int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2   26[COMRAM] int 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;Total ram usage:        9 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 5
  1946 ;; This function calls:
  1947 ;;		___wmul
  1948 ;; This function is called by:
  1949 ;;		_vfpfcnvrt
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text4
  1954   010550                     __ptext4:
  1955                           	callstack 0
  1956   010550                     _read_prec_or_width:
  1957                           	callstack 22
  1958   010550                     
  1959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1960   010550  0E00               	movlw	0
  1961   010552  6E23               	movwf	(read_prec_or_width@n+1)^0,c
  1962   010554  0E00               	movlw	0
  1963   010556  6E22               	movwf	read_prec_or_width@n^0,c
  1964   010558                     
  1965                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1966   010558  C01B  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1967   01055C  C01C  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1968   010560  CFDE FFF6          	movff	postinc2,tblptrl
  1969   010564  CFDD FFF7          	movff	postdec2,tblptrh
  1970   010568                     	if	0	;tblptru may be non-zero
  1971   010568                     	endif
  1972   010568                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1973   010568  0E00               	movlw	low (__mediumconst shr (0+16))
  1974   01056A  6EF8               	movwf	tblptru,c
  1975   01056C                     	endif
  1976   01056C  0008               	tblrd		*
  1977   01056E  50F5               	movf	tablat,w,c
  1978   010570  0A2A               	xorlw	42
  1979   010572  A4D8               	btfss	status,2,c
  1980   010574  EFBE  F082         	goto	u2001
  1981   010578  EFC0  F082         	goto	u2000
  1982   01057C                     u2001:
  1983   01057C  EFF4  F082         	goto	l3011
  1984   010580                     u2000:
  1985   010580                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1987   010580  C01B  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1988   010584  C01C  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1989   010588  2ADE               	incf	postinc2,f,c
  1990   01058A  0E00               	movlw	0
  1991   01058C  22DD               	addwfc	postdec2,f,c
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1994   01058E  C01D  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1995   010592  C01E  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1996   010596  CFDF F01F          	movff	indf2,??_read_prec_or_width
  1997   01059A  0E02               	movlw	2
  1998   01059C  26DE               	addwf	postinc2,f,c
  1999   01059E  CFDF F020          	movff	indf2,??_read_prec_or_width+1
  2000   0105A2  0E00               	movlw	0
  2001   0105A4  22DD               	addwfc	postdec2,f,c
  2002   0105A6  C01F  FFD9         	movff	??_read_prec_or_width,fsr2l
  2003   0105AA  C020  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2004   0105AE  CFDE F022          	movff	postinc2,read_prec_or_width@n
  2005   0105B2  CFDD F023          	movff	postdec2,read_prec_or_width@n+1
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2008   0105B6  EF0A  F083         	goto	l1244
  2009   0105BA                     l3007:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2012   0105BA  C022  F015         	movff	read_prec_or_width@n,___wmul@multiplier
  2013   0105BE  C023  F016         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2014   0105C2  0E00               	movlw	0
  2015   0105C4  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  2016   0105C6  0E0A               	movlw	10
  2017   0105C8  6E17               	movwf	___wmul@multiplicand^0,c
  2018   0105CA  ECE5  F088         	call	___wmul	;wreg free
  2019   0105CE  5021               	movf	read_prec_or_width@c^0,w,c
  2020   0105D0  2415               	addwf	?___wmul^0,w,c
  2021   0105D2  6E22               	movwf	read_prec_or_width@n^0,c
  2022   0105D4  0E00               	movlw	0
  2023   0105D6  2016               	addwfc	(?___wmul+1)^0,w,c
  2024   0105D8  6E23               	movwf	(read_prec_or_width@n+1)^0,c
  2025   0105DA                     
  2026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2027   0105DA  C01B  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2028   0105DE  C01C  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2029   0105E2  2ADE               	incf	postinc2,f,c
  2030   0105E4  0E00               	movlw	0
  2031   0105E6  22DD               	addwfc	postdec2,f,c
  2032   0105E8                     l3011:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2035   0105E8  C01B  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2036   0105EC  C01C  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2037   0105F0  CFDE FFF6          	movff	postinc2,tblptrl
  2038   0105F4  CFDD FFF7          	movff	postdec2,tblptrh
  2039   0105F8                     	if	0	;tblptru may be non-zero
  2040   0105F8                     	endif
  2041   0105F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2042   0105F8  0E00               	movlw	low (__mediumconst shr (0+16))
  2043   0105FA  6EF8               	movwf	tblptru,c
  2044   0105FC                     	endif
  2045   0105FC  0008               	tblrd		*
  2046   0105FE  50F5               	movf	tablat,w,c
  2047   010600  0FD0               	addlw	208
  2048   010602  6E21               	movwf	read_prec_or_width@c^0,c
  2049   010604  0E09               	movlw	9
  2050   010606  6421               	cpfsgt	read_prec_or_width@c^0,c
  2051   010608  EF08  F083         	goto	u2011
  2052   01060C  EF0A  F083         	goto	u2010
  2053   010610                     u2011:
  2054   010610  EFDD  F082         	goto	l3007
  2055   010614                     u2010:
  2056   010614                     l1244:
  2057                           
  2058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2059   010614  C022  F01B         	movff	read_prec_or_width@n,?_read_prec_or_width
  2060   010618  C023  F01C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2061   01061C  0012               	return		;funcret
  2062   01061E                     __end_of_read_prec_or_width:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function ___wmul *****************
  2066 ;; Defined at:
  2067 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  multiplier      2   20[COMRAM] unsigned int 
  2070 ;;  multiplicand    2   22[COMRAM] unsigned int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  product         2   24[COMRAM] unsigned int 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  2   20[COMRAM] unsigned int 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, prodl, prodh
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:        6 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_read_prec_or_width
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text5
  2097   0111CA                     __ptext5:
  2098                           	callstack 0
  2099   0111CA                     ___wmul:
  2100                           	callstack 22
  2101   0111CA  5015               	movf	___wmul@multiplier^0,w,c
  2102   0111CC  0217               	mulwf	___wmul@multiplicand^0,c
  2103   0111CE  CFF3 F019          	movff	prodl,___wmul@product
  2104   0111D2  CFF4 F01A          	movff	prodh,___wmul@product+1
  2105   0111D6  5015               	movf	___wmul@multiplier^0,w,c
  2106   0111D8  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  2107   0111DA  50F3               	movf	243,w,c
  2108   0111DC  261A               	addwf	(___wmul@product+1)^0,f,c
  2109   0111DE  5016               	movf	(___wmul@multiplier+1)^0,w,c
  2110   0111E0  0217               	mulwf	___wmul@multiplicand^0,c
  2111   0111E2  50F3               	movf	243,w,c
  2112   0111E4  261A               	addwf	(___wmul@product+1)^0,f,c
  2113   0111E6  C019  F015         	movff	___wmul@product,?___wmul
  2114   0111EA  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  2115   0111EE  0012               	return		;funcret
  2116   0111F0                     __end_of___wmul:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _dtoa *****************
  2120 ;; Defined at:
  2121 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  2124 ;;		 -> sprintf@f(12), 
  2125 ;;  d               2   49[COMRAM] int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  i               2    7[BANK0 ] int 
  2128 ;;  w               2    4[BANK0 ] int 
  2129 ;;  p               2    2[BANK0 ] int 
  2130 ;;  s               1    6[BANK0 ] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:       13 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 8
  2147 ;; This function calls:
  2148 ;;		___awdiv
  2149 ;;		___awmod
  2150 ;;		_abs
  2151 ;;		_pad
  2152 ;; This function is called by:
  2153 ;;		_vfpfcnvrt
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text6
  2158   0101E0                     __ptext6:
  2159                           	callstack 0
  2160   0101E0                     _dtoa:
  2161                           	callstack 19
  2162   0101E0                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2164   0101E0  BE33               	btfsc	(dtoa@d+1)^0,7,c
  2165   0101E2  EFF5  F080         	goto	u1871
  2166   0101E6  EFF8  F080         	goto	u1870
  2167   0101EA                     u1871:
  2168   0101EA  0E01               	movlw	1
  2169   0101EC  EFF9  F080         	goto	u1880
  2170   0101F0                     u1870:
  2171   0101F0  0E00               	movlw	0
  2172   0101F2                     u1880:
  2173   0101F2  0100               	movlb	0	; () banked
  2174   0101F4  6FAB               	movwf	dtoa@s& (0+255),b
  2175   0101F6                     
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2178   0101F6  51AB               	movf	dtoa@s& (0+255),w,b
  2179   0101F8  B4D8               	btfsc	status,2,c
  2180   0101FA  EF01  F081         	goto	u1891
  2181   0101FE  EF03  F081         	goto	u1890
  2182   010202                     u1891:
  2183   010202  EF07  F081         	goto	l2949
  2184   010206                     u1890:
  2185   010206                     
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2188   010206  6C32               	negf	dtoa@d^0,c
  2189   010208  1E33               	comf	(dtoa@d+1)^0,f,c
  2190   01020A  B0D8               	btfsc	status,0,c
  2191   01020C  2A33               	incf	(dtoa@d+1)^0,f,c
  2192   01020E                     l2949:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2196   01020E  BE3B               	btfsc	(_prec+1)^0,7,c
  2197   010210  EF0C  F081         	goto	u1901
  2198   010214  EF0E  F081         	goto	u1900
  2199   010218                     u1901:
  2200   010218  EF0F  F081         	goto	l2953
  2201   01021C                     u1900:
  2202   01021C                     
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2205   01021C  923C               	bcf	_flags^0,1,c
  2206   01021E                     l2953:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2210   01021E  BE3B               	btfsc	(_prec+1)^0,7,c
  2211   010220  EF16  F081         	goto	u1910
  2212   010224  EF14  F081         	goto	u1911
  2213   010228                     u1911:
  2214   010228  EF1C  F081         	goto	l1224
  2215   01022C                     u1910:
  2216   01022C                     
  2217                           ; BSR set to: 0
  2218   01022C  0E00               	movlw	0
  2219   01022E  6FA8               	movwf	(dtoa@p+1)& (0+255),b
  2220   010230  0E01               	movlw	1
  2221   010232  6FA7               	movwf	dtoa@p& (0+255),b
  2222   010234  EF20  F081         	goto	l1226
  2223   010238                     l1224:
  2224                           
  2225                           ; BSR set to: 0
  2226   010238  C03A  F0A7         	movff	_prec,dtoa@p
  2227   01023C  C03B  F0A8         	movff	_prec+1,dtoa@p+1
  2228   010240                     l1226:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2232   010240  C038  F0A9         	movff	_width,dtoa@w
  2233   010244  C039  F0AA         	movff	_width+1,dtoa@w+1
  2234   010248                     
  2235                           ; BSR set to: 0
  2236                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2237   010248  51AB               	movf	dtoa@s& (0+255),w,b
  2238   01024A  B4D8               	btfsc	status,2,c
  2239   01024C  EF2A  F081         	goto	u1921
  2240   010250  EF2C  F081         	goto	u1920
  2241   010254                     u1921:
  2242   010254  EF43  F081         	goto	l1227
  2243   010258                     u1920:
  2244   010258                     
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2247   010258  07A9               	decf	dtoa@w& (0+255),f,b
  2248   01025A  A0D8               	btfss	status,0,c
  2249   01025C  07AA               	decf	(dtoa@w+1)& (0+255),f,b
  2250   01025E                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2253   01025E  51AB               	movf	dtoa@s& (0+255),w,b
  2254   010260  A4D8               	btfss	status,2,c
  2255   010262  EF35  F081         	goto	u1931
  2256   010266  EF37  F081         	goto	u1930
  2257   01026A                     u1931:
  2258   01026A  EF3D  F081         	goto	l2965
  2259   01026E                     u1930:
  2260   01026E                     
  2261                           ; BSR set to: 0
  2262   01026E  0E00               	movlw	0
  2263   010270  6FA6               	movwf	(_dtoa$1684+1)& (0+255),b
  2264   010272  0E2B               	movlw	43
  2265   010274  6FA5               	movwf	_dtoa$1684& (0+255),b
  2266   010276  EF41  F081         	goto	l2967
  2267   01027A                     l2965:
  2268                           
  2269                           ; BSR set to: 0
  2270   01027A  0E00               	movlw	0
  2271   01027C  6FA6               	movwf	(_dtoa$1684+1)& (0+255),b
  2272   01027E  0E2D               	movlw	45
  2273   010280  6FA5               	movwf	_dtoa$1684& (0+255),b
  2274   010282                     l2967:
  2275                           
  2276                           ; BSR set to: 0
  2277   010282  C0A5  F0AB         	movff	_dtoa$1684,dtoa@s
  2278   010286                     l1227:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2282   010286  0E00               	movlw	0
  2283   010288  6FAD               	movwf	(dtoa@i+1)& (0+255),b
  2284   01028A  0E1F               	movlw	31
  2285   01028C  6FAC               	movwf	dtoa@i& (0+255),b
  2286   01028E                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2289   01028E  0E00               	movlw	0
  2290   010290  6FA4               	movwf	(_dbuf+31)& (0+255),b
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2293   010292  EF7C  F081         	goto	l2981
  2294   010296                     l2971:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2298   010296  07AC               	decf	dtoa@i& (0+255),f,b
  2299   010298  A0D8               	btfss	status,0,c
  2300   01029A  07AD               	decf	(dtoa@i+1)& (0+255),f,b
  2301   01029C                     
  2302                           ; BSR set to: 0
  2303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2304   01029C  0E85               	movlw	low _dbuf
  2305   01029E  25AC               	addwf	dtoa@i& (0+255),w,b
  2306   0102A0  6ED9               	movwf	fsr2l,c
  2307   0102A2  0E00               	movlw	high _dbuf
  2308   0102A4  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
  2309   0102A6  6EDA               	movwf	fsr2h,c
  2310   0102A8  C032  F015         	movff	dtoa@d,___awmod@dividend
  2311   0102AC  C033  F016         	movff	dtoa@d+1,___awmod@dividend+1
  2312   0102B0  0E00               	movlw	0
  2313   0102B2  6E18               	movwf	(___awmod@divisor+1)^0,c
  2314   0102B4  0E0A               	movlw	10
  2315   0102B6  6E17               	movwf	___awmod@divisor^0,c
  2316   0102B8  ECF1  F084         	call	___awmod	;wreg free
  2317   0102BC  C015  F01B         	movff	?___awmod,abs@a
  2318   0102C0  C016  F01C         	movff	?___awmod+1,abs@a+1
  2319   0102C4  EC04  F088         	call	_abs	;wreg free
  2320   0102C8  501B               	movf	?_abs^0,w,c
  2321   0102CA  0F30               	addlw	48
  2322   0102CC  6EDF               	movwf	indf2,c
  2323   0102CE                     
  2324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2325   0102CE  0100               	movlb	0	; () banked
  2326   0102D0  07A7               	decf	dtoa@p& (0+255),f,b
  2327   0102D2  A0D8               	btfss	status,0,c
  2328   0102D4  07A8               	decf	(dtoa@p+1)& (0+255),f,b
  2329   0102D6                     
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2332   0102D6  07A9               	decf	dtoa@w& (0+255),f,b
  2333   0102D8  A0D8               	btfss	status,0,c
  2334   0102DA  07AA               	decf	(dtoa@w+1)& (0+255),f,b
  2335   0102DC                     
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2338   0102DC  C032  F015         	movff	dtoa@d,___awdiv@dividend
  2339   0102E0  C033  F016         	movff	dtoa@d+1,___awdiv@dividend+1
  2340   0102E4  0E00               	movlw	0
  2341   0102E6  6E18               	movwf	(___awdiv@divisor+1)^0,c
  2342   0102E8  0E0A               	movlw	10
  2343   0102EA  6E17               	movwf	___awdiv@divisor^0,c
  2344   0102EC  EC74  F083         	call	___awdiv	;wreg free
  2345   0102F0  C015  F032         	movff	?___awdiv,dtoa@d
  2346   0102F4  C016  F033         	movff	?___awdiv+1,dtoa@d+1
  2347   0102F8                     l2981:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2350   0102F8  0100               	movlb	0	; () banked
  2351   0102FA  BFAD               	btfsc	(dtoa@i+1)& (0+255),7,b
  2352   0102FC  EF88  F081         	goto	u1941
  2353   010300  51AD               	movf	(dtoa@i+1)& (0+255),w,b
  2354   010302  E108               	bnz	u1940
  2355   010304  05AC               	decf	dtoa@i& (0+255),w,b
  2356   010306  A0D8               	btfss	status,0,c
  2357   010308  EF88  F081         	goto	u1941
  2358   01030C  EF8A  F081         	goto	u1940
  2359   010310                     u1941:
  2360   010310  EFB4  F081         	goto	l2991
  2361   010314                     u1940:
  2362   010314                     
  2363                           ; BSR set to: 0
  2364   010314  5032               	movf	dtoa@d^0,w,c
  2365   010316  1033               	iorwf	(dtoa@d+1)^0,w,c
  2366   010318  A4D8               	btfss	status,2,c
  2367   01031A  EF91  F081         	goto	u1951
  2368   01031E  EF93  F081         	goto	u1950
  2369   010322                     u1951:
  2370   010322  EF4B  F081         	goto	l2971
  2371   010326                     u1950:
  2372   010326                     
  2373                           ; BSR set to: 0
  2374   010326  BFA8               	btfsc	(dtoa@p+1)& (0+255),7,b
  2375   010328  EFA0  F081         	goto	u1960
  2376   01032C  51A8               	movf	(dtoa@p+1)& (0+255),w,b
  2377   01032E  E106               	bnz	u1961
  2378   010330  05A7               	decf	dtoa@p& (0+255),w,b
  2379   010332  B0D8               	btfsc	status,0,c
  2380   010334  EF9E  F081         	goto	u1961
  2381   010338  EFA0  F081         	goto	u1960
  2382   01033C                     u1961:
  2383   01033C  EF4B  F081         	goto	l2971
  2384   010340                     u1960:
  2385   010340                     
  2386                           ; BSR set to: 0
  2387   010340  BFAA               	btfsc	(dtoa@w+1)& (0+255),7,b
  2388   010342  EFAB  F081         	goto	u1971
  2389   010346  51AA               	movf	(dtoa@w+1)& (0+255),w,b
  2390   010348  E108               	bnz	u1970
  2391   01034A  05A9               	decf	dtoa@w& (0+255),w,b
  2392   01034C  A0D8               	btfss	status,0,c
  2393   01034E  EFAB  F081         	goto	u1971
  2394   010352  EFAD  F081         	goto	u1970
  2395   010356                     u1971:
  2396   010356  EFB4  F081         	goto	l2991
  2397   01035A                     u1970:
  2398   01035A                     
  2399                           ; BSR set to: 0
  2400   01035A  B23C               	btfsc	_flags^0,1,c
  2401   01035C  EFB2  F081         	goto	u1981
  2402   010360  EFB4  F081         	goto	u1980
  2403   010364                     u1981:
  2404   010364  EF4B  F081         	goto	l2971
  2405   010368                     u1980:
  2406   010368                     l2991:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2410   010368  51AB               	movf	dtoa@s& (0+255),w,b
  2411   01036A  B4D8               	btfsc	status,2,c
  2412   01036C  EFBA  F081         	goto	u1991
  2413   010370  EFBC  F081         	goto	u1990
  2414   010374                     u1991:
  2415   010374  EFC7  F081         	goto	l2997
  2416   010378                     u1990:
  2417   010378                     
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2420   010378  07AC               	decf	dtoa@i& (0+255),f,b
  2421   01037A  A0D8               	btfss	status,0,c
  2422   01037C  07AD               	decf	(dtoa@i+1)& (0+255),f,b
  2423   01037E                     
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2426   01037E  0E85               	movlw	low _dbuf
  2427   010380  25AC               	addwf	dtoa@i& (0+255),w,b
  2428   010382  6ED9               	movwf	fsr2l,c
  2429   010384  0E00               	movlw	high _dbuf
  2430   010386  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
  2431   010388  6EDA               	movwf	fsr2h,c
  2432   01038A  C0AB  FFDF         	movff	dtoa@s,indf2
  2433   01038E                     l2997:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2437   01038E  C030  F025         	movff	dtoa@fp,pad@fp
  2438   010392  C031  F026         	movff	dtoa@fp+1,pad@fp+1
  2439   010396  0E85               	movlw	low _dbuf
  2440   010398  25AC               	addwf	dtoa@i& (0+255),w,b
  2441   01039A  6E27               	movwf	pad@buf^0,c
  2442   01039C  0E00               	movlw	high _dbuf
  2443   01039E  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
  2444   0103A0  6E28               	movwf	(pad@buf+1)^0,c
  2445   0103A2  C0A9  F029         	movff	dtoa@w,pad@p
  2446   0103A6  C0AA  F02A         	movff	dtoa@w+1,pad@p+1
  2447   0103AA  EC49  F085         	call	_pad	;wreg free
  2448   0103AE  0012               	return		;funcret
  2449   0103B0                     __end_of_dtoa:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _pad *****************
  2453 ;; Defined at:
  2454 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  2457 ;;		 -> sprintf@f(12), 
  2458 ;;  buf             2   38[COMRAM] PTR unsigned char 
  2459 ;;		 -> dbuf(32), 
  2460 ;;  p               2   40[COMRAM] int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  w               2   45[COMRAM] int 
  2463 ;;  i               2   43[COMRAM] int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2473 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;Total ram usage:       11 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 7
  2480 ;; This function calls:
  2481 ;;		_fputc
  2482 ;;		_fputs
  2483 ;; This function is called by:
  2484 ;;		_dtoa
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text7
  2489   010A92                     __ptext7:
  2490                           	callstack 0
  2491   010A92                     _pad:
  2492                           	callstack 19
  2493   010A92                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2495   010A92  A03C               	btfss	_flags^0,0,c
  2496   010A94  EF4E  F085         	goto	u1821
  2497   010A98  EF50  F085         	goto	u1820
  2498   010A9C                     u1821:
  2499   010A9C  EF5A  F085         	goto	l2925
  2500   010AA0                     u1820:
  2501   010AA0                     
  2502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2503   010AA0  C027  F01E         	movff	pad@buf,fputs@s
  2504   010AA4  C028  F01F         	movff	pad@buf+1,fputs@s+1
  2505   010AA8  C025  F020         	movff	pad@fp,fputs@fp
  2506   010AAC  C026  F021         	movff	pad@fp+1,fputs@fp+1
  2507   010AB0  EC9F  F087         	call	_fputs	;wreg free
  2508   010AB4                     l2925:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2511   010AB4  BE2A               	btfsc	(pad@p+1)^0,7,c
  2512   010AB6  EF5F  F085         	goto	u1831
  2513   010ABA  EF61  F085         	goto	u1830
  2514   010ABE                     u1831:
  2515   010ABE  EF67  F085         	goto	l2929
  2516   010AC2                     u1830:
  2517   010AC2  C029  F02E         	movff	pad@p,pad@w
  2518   010AC6  C02A  F02F         	movff	pad@p+1,pad@w+1
  2519   010ACA  EF6B  F085         	goto	l1213
  2520   010ACE                     l2929:
  2521   010ACE  0E00               	movlw	0
  2522   010AD0  6E2F               	movwf	(pad@w+1)^0,c
  2523   010AD2  0E00               	movlw	0
  2524   010AD4  6E2E               	movwf	pad@w^0,c
  2525   010AD6                     l1213:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2528   010AD6  0E00               	movlw	0
  2529   010AD8  6E2D               	movwf	(pad@i+1)^0,c
  2530   010ADA  0E00               	movlw	0
  2531   010ADC  6E2C               	movwf	pad@i^0,c
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2534   010ADE  EF7D  F085         	goto	l2935
  2535   010AE2                     l2931:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2538   010AE2  0E00               	movlw	0
  2539   010AE4  6E16               	movwf	(fputc@c+1)^0,c
  2540   010AE6  0E20               	movlw	32
  2541   010AE8  6E15               	movwf	fputc@c^0,c
  2542   010AEA  C025  F017         	movff	pad@fp,fputc@fp
  2543   010AEE  C026  F018         	movff	pad@fp+1,fputc@fp+1
  2544   010AF2  EC0F  F083         	call	_fputc	;wreg free
  2545   010AF6                     
  2546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2547   010AF6  4A2C               	infsnz	pad@i^0,f,c
  2548   010AF8  2A2D               	incf	(pad@i+1)^0,f,c
  2549   010AFA                     l2935:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2552   010AFA  502E               	movf	pad@w^0,w,c
  2553   010AFC  5C2C               	subwf	pad@i^0,w,c
  2554   010AFE  502D               	movf	(pad@i+1)^0,w,c
  2555   010B00  0A80               	xorlw	128
  2556   010B02  6E2B               	movwf	??_pad^0,c
  2557   010B04  502F               	movf	(pad@w+1)^0,w,c
  2558   010B06  0A80               	xorlw	128
  2559   010B08  582B               	subwfb	??_pad^0,w,c
  2560   010B0A  A0D8               	btfss	status,0,c
  2561   010B0C  EF8A  F085         	goto	u1841
  2562   010B10  EF8C  F085         	goto	u1840
  2563   010B14                     u1841:
  2564   010B14  EF71  F085         	goto	l2931
  2565   010B18                     u1840:
  2566   010B18                     
  2567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2568   010B18  B03C               	btfsc	_flags^0,0,c
  2569   010B1A  EF91  F085         	goto	u1851
  2570   010B1E  EF93  F085         	goto	u1850
  2571   010B22                     u1851:
  2572   010B22  EF9D  F085         	goto	l1218
  2573   010B26                     u1850:
  2574   010B26                     
  2575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2576   010B26  C027  F01E         	movff	pad@buf,fputs@s
  2577   010B2A  C028  F01F         	movff	pad@buf+1,fputs@s+1
  2578   010B2E  C025  F020         	movff	pad@fp,fputs@fp
  2579   010B32  C026  F021         	movff	pad@fp+1,fputs@fp+1
  2580   010B36  EC9F  F087         	call	_fputs	;wreg free
  2581   010B3A                     l1218:
  2582   010B3A  0012               	return		;funcret
  2583   010B3C                     __end_of_pad:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _fputs *****************
  2587 ;; Defined at:
  2588 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  s               2   29[COMRAM] PTR const unsigned char 
  2591 ;;		 -> dbuf(32), 
  2592 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2593 ;;		 -> sprintf@f(12), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  i               2   34[COMRAM] int 
  2596 ;;  c               1   33[COMRAM] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2   29[COMRAM] int 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:        7 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 6
  2613 ;; This function calls:
  2614 ;;		_fputc
  2615 ;; This function is called by:
  2616 ;;		_pad
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text8
  2621   010F3E                     __ptext8:
  2622                           	callstack 0
  2623   010F3E                     _fputs:
  2624                           	callstack 19
  2625   010F3E  0E00               	movlw	0
  2626   010F40  6E24               	movwf	(fputs@i+1)^0,c
  2627   010F42  0E00               	movlw	0
  2628   010F44  6E23               	movwf	fputs@i^0,c
  2629   010F46  EFB0  F087         	goto	l2833
  2630   010F4A                     l2829:
  2631   010F4A  C022  F015         	movff	fputs@c,fputc@c
  2632   010F4E  6A16               	clrf	(fputc@c+1)^0,c
  2633   010F50  C020  F017         	movff	fputs@fp,fputc@fp
  2634   010F54  C021  F018         	movff	fputs@fp+1,fputc@fp+1
  2635   010F58  EC0F  F083         	call	_fputc	;wreg free
  2636   010F5C  4A23               	infsnz	fputs@i^0,f,c
  2637   010F5E  2A24               	incf	(fputs@i+1)^0,f,c
  2638   010F60                     l2833:
  2639   010F60  5023               	movf	fputs@i^0,w,c
  2640   010F62  241E               	addwf	fputs@s^0,w,c
  2641   010F64  6ED9               	movwf	fsr2l,c
  2642   010F66  5024               	movf	(fputs@i+1)^0,w,c
  2643   010F68  201F               	addwfc	(fputs@s+1)^0,w,c
  2644   010F6A  6EDA               	movwf	fsr2h,c
  2645   010F6C  50DF               	movf	indf2,w,c
  2646   010F6E  6E22               	movwf	fputs@c^0,c
  2647   010F70  5022               	movf	fputs@c^0,w,c
  2648   010F72  A4D8               	btfss	status,2,c
  2649   010F74  EFBE  F087         	goto	u1691
  2650   010F78  EFC0  F087         	goto	u1690
  2651   010F7C                     u1691:
  2652   010F7C  EFA5  F087         	goto	l2829
  2653   010F80                     u1690:
  2654   010F80  0012               	return		;funcret
  2655   010F82                     __end_of_fputs:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _fputc *****************
  2659 ;; Defined at:
  2660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  c               2   20[COMRAM] int 
  2663 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2664 ;;		 -> sprintf@f(12), 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2   20[COMRAM] int 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:        9 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 5
  2683 ;; This function calls:
  2684 ;;		_putch
  2685 ;; This function is called by:
  2686 ;;		_pad
  2687 ;;		_vfpfcnvrt
  2688 ;;		_fputs
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text9
  2693   01061E                     __ptext9:
  2694                           	callstack 0
  2695   01061E                     _fputc:
  2696                           	callstack 22
  2697   01061E  5017               	movf	fputc@fp^0,w,c
  2698   010620  1018               	iorwf	(fputc@fp+1)^0,w,c
  2699   010622  B4D8               	btfsc	status,2,c
  2700   010624  EF16  F083         	goto	u1651
  2701   010628  EF18  F083         	goto	u1650
  2702   01062C                     u1651:
  2703   01062C  EF21  F083         	goto	l2817
  2704   010630                     u1650:
  2705   010630  5017               	movf	fputc@fp^0,w,c
  2706   010632  1018               	iorwf	(fputc@fp+1)^0,w,c
  2707   010634  A4D8               	btfss	status,2,c
  2708   010636  EF1F  F083         	goto	u1661
  2709   01063A  EF21  F083         	goto	u1660
  2710   01063E                     u1661:
  2711   01063E  EF26  F083         	goto	l2819
  2712   010642                     u1660:
  2713   010642                     l2817:
  2714   010642  5015               	movf	fputc@c^0,w,c
  2715   010644  EC8B  F089         	call	_putch
  2716   010648  EF73  F083         	goto	l1288
  2717   01064C                     l2819:
  2718   01064C  EE20 F00A          	lfsr	2,10
  2719   010650  5017               	movf	fputc@fp^0,w,c
  2720   010652  26D9               	addwf	fsr2l,f,c
  2721   010654  5018               	movf	(fputc@fp+1)^0,w,c
  2722   010656  22DA               	addwfc	fsr2h,f,c
  2723   010658  50DE               	movf	postinc2,w,c
  2724   01065A  10DE               	iorwf	postinc2,w,c
  2725   01065C  B4D8               	btfsc	status,2,c
  2726   01065E  EF33  F083         	goto	u1671
  2727   010662  EF35  F083         	goto	u1670
  2728   010666                     u1671:
  2729   010666  EF50  F083         	goto	l2823
  2730   01066A                     u1670:
  2731   01066A  EE20 F00A          	lfsr	2,10
  2732   01066E  5017               	movf	fputc@fp^0,w,c
  2733   010670  26D9               	addwf	fsr2l,f,c
  2734   010672  5018               	movf	(fputc@fp+1)^0,w,c
  2735   010674  22DA               	addwfc	fsr2h,f,c
  2736   010676  EE10 F003          	lfsr	1,3
  2737   01067A  5017               	movf	fputc@fp^0,w,c
  2738   01067C  26E1               	addwf	fsr1l,f,c
  2739   01067E  5018               	movf	(fputc@fp+1)^0,w,c
  2740   010680  22E2               	addwfc	fsr1h,f,c
  2741   010682  50DE               	movf	postinc2,w,c
  2742   010684  5CE6               	subwf	postinc1,w,c
  2743   010686  50E6               	movf	postinc1,w,c
  2744   010688  0A80               	xorlw	128
  2745   01068A  6E1D               	movwf	(??_fputc+4)^0,c
  2746   01068C  50DE               	movf	postinc2,w,c
  2747   01068E  0A80               	xorlw	128
  2748   010690  581D               	subwfb	(??_fputc+4)^0,w,c
  2749   010692  B0D8               	btfsc	status,0,c
  2750   010694  EF4E  F083         	goto	u1681
  2751   010698  EF50  F083         	goto	u1680
  2752   01069C                     u1681:
  2753   01069C  EF73  F083         	goto	l1288
  2754   0106A0                     u1680:
  2755   0106A0                     l2823:
  2756   0106A0  EE20 F003          	lfsr	2,3
  2757   0106A4  5017               	movf	fputc@fp^0,w,c
  2758   0106A6  26D9               	addwf	fsr2l,f,c
  2759   0106A8  5018               	movf	(fputc@fp+1)^0,w,c
  2760   0106AA  22DA               	addwfc	fsr2h,f,c
  2761   0106AC  CFDE F019          	movff	postinc2,??_fputc
  2762   0106B0  CFDD F01A          	movff	postdec2,??_fputc+1
  2763   0106B4  C017  FFD9         	movff	fputc@fp,fsr2l
  2764   0106B8  C018  FFDA         	movff	fputc@fp+1,fsr2h
  2765   0106BC  CFDE F01B          	movff	postinc2,??_fputc+2
  2766   0106C0  CFDD F01C          	movff	postdec2,??_fputc+3
  2767   0106C4  5019               	movf	??_fputc^0,w,c
  2768   0106C6  241B               	addwf	(??_fputc+2)^0,w,c
  2769   0106C8  6ED9               	movwf	fsr2l,c
  2770   0106CA  501A               	movf	(??_fputc+1)^0,w,c
  2771   0106CC  201C               	addwfc	(??_fputc+3)^0,w,c
  2772   0106CE  6EDA               	movwf	fsr2h,c
  2773   0106D0  C015  FFDF         	movff	fputc@c,indf2
  2774   0106D4  EE20 F003          	lfsr	2,3
  2775   0106D8  5017               	movf	fputc@fp^0,w,c
  2776   0106DA  26D9               	addwf	fsr2l,f,c
  2777   0106DC  5018               	movf	(fputc@fp+1)^0,w,c
  2778   0106DE  22DA               	addwfc	fsr2h,f,c
  2779   0106E0  2ADE               	incf	postinc2,f,c
  2780   0106E2  0E00               	movlw	0
  2781   0106E4  22DD               	addwfc	postdec2,f,c
  2782   0106E6                     l1288:
  2783   0106E6  0012               	return		;funcret
  2784   0106E8                     __end_of_fputc:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _putch *****************
  2788 ;; Defined at:
  2789 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  c               1    wreg     unsigned char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  c               1    0[COMRAM] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 4
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_fputc
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text10
  2818   011316                     __ptext10:
  2819                           	callstack 0
  2820   011316                     _putch:
  2821                           	callstack 22
  2822   011316  0012               	return		;funcret
  2823   011318                     __end_of_putch:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _abs *****************
  2827 ;; Defined at:
  2828 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  a               2   26[COMRAM] int 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  2   26[COMRAM] int 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;Total ram usage:        4 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 4
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_dtoa
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text11
  2857   011008                     __ptext11:
  2858                           	callstack 0
  2859   011008                     _abs:
  2860                           	callstack 22
  2861   011008  BE1C               	btfsc	(abs@a+1)^0,7,c
  2862   01100A  EF11  F088         	goto	u1860
  2863   01100E  501C               	movf	(abs@a+1)^0,w,c
  2864   011010  E106               	bnz	u1861
  2865   011012  041B               	decf	abs@a^0,w,c
  2866   011014  B0D8               	btfsc	status,0,c
  2867   011016  EF0F  F088         	goto	u1861
  2868   01101A  EF11  F088         	goto	u1860
  2869   01101E                     u1861:
  2870   01101E  EF1F  F088         	goto	l1273
  2871   011022                     u1860:
  2872   011022  C01B  F01D         	movff	abs@a,??_abs
  2873   011026  C01C  F01E         	movff	abs@a+1,??_abs+1
  2874   01102A  1E1D               	comf	??_abs^0,f,c
  2875   01102C  1E1E               	comf	(??_abs+1)^0,f,c
  2876   01102E  4A1D               	infsnz	??_abs^0,f,c
  2877   011030  2A1E               	incf	(??_abs+1)^0,f,c
  2878   011032  C01D  F01B         	movff	??_abs,?_abs
  2879   011036  C01E  F01C         	movff	??_abs+1,?_abs+1
  2880   01103A  EF23  F088         	goto	l1276
  2881   01103E                     l1273:
  2882   01103E  C01B  F01B         	movff	abs@a,?_abs
  2883   011042  C01C  F01C         	movff	abs@a+1,?_abs+1
  2884   011046                     l1276:
  2885   011046  0012               	return		;funcret
  2886   011048                     __end_of_abs:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function ___awmod *****************
  2890 ;; Defined at:
  2891 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  dividend        2   20[COMRAM] int 
  2894 ;;  divisor         2   22[COMRAM] int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  sign            1   25[COMRAM] unsigned char 
  2897 ;;  counter         1   24[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2   20[COMRAM] int 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        6 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 4
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_dtoa
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text12
  2922   0109E2                     __ptext12:
  2923                           	callstack 0
  2924   0109E2                     ___awmod:
  2925                           	callstack 22
  2926   0109E2  0E00               	movlw	0
  2927   0109E4  6E1A               	movwf	___awmod@sign^0,c
  2928   0109E6  BE16               	btfsc	(___awmod@dividend+1)^0,7,c
  2929   0109E8  EFFA  F084         	goto	u1760
  2930   0109EC  EFF8  F084         	goto	u1761
  2931   0109F0                     u1761:
  2932   0109F0  EF00  F085         	goto	l2893
  2933   0109F4                     u1760:
  2934   0109F4  6C15               	negf	___awmod@dividend^0,c
  2935   0109F6  1E16               	comf	(___awmod@dividend+1)^0,f,c
  2936   0109F8  B0D8               	btfsc	status,0,c
  2937   0109FA  2A16               	incf	(___awmod@dividend+1)^0,f,c
  2938   0109FC  0E01               	movlw	1
  2939   0109FE  6E1A               	movwf	___awmod@sign^0,c
  2940   010A00                     l2893:
  2941   010A00  BE18               	btfsc	(___awmod@divisor+1)^0,7,c
  2942   010A02  EF07  F085         	goto	u1770
  2943   010A06  EF05  F085         	goto	u1771
  2944   010A0A                     u1771:
  2945   010A0A  EF0B  F085         	goto	l2897
  2946   010A0E                     u1770:
  2947   010A0E  6C17               	negf	___awmod@divisor^0,c
  2948   010A10  1E18               	comf	(___awmod@divisor+1)^0,f,c
  2949   010A12  B0D8               	btfsc	status,0,c
  2950   010A14  2A18               	incf	(___awmod@divisor+1)^0,f,c
  2951   010A16                     l2897:
  2952   010A16  5017               	movf	___awmod@divisor^0,w,c
  2953   010A18  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  2954   010A1A  B4D8               	btfsc	status,2,c
  2955   010A1C  EF12  F085         	goto	u1781
  2956   010A20  EF14  F085         	goto	u1780
  2957   010A24                     u1781:
  2958   010A24  EF38  F085         	goto	l2913
  2959   010A28                     u1780:
  2960   010A28  0E01               	movlw	1
  2961   010A2A  6E19               	movwf	___awmod@counter^0,c
  2962   010A2C  EF1C  F085         	goto	l2903
  2963   010A30                     l2901:
  2964   010A30  90D8               	bcf	status,0,c
  2965   010A32  3617               	rlcf	___awmod@divisor^0,f,c
  2966   010A34  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  2967   010A36  2A19               	incf	___awmod@counter^0,f,c
  2968   010A38                     l2903:
  2969   010A38  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  2970   010A3A  EF21  F085         	goto	u1791
  2971   010A3E  EF23  F085         	goto	u1790
  2972   010A42                     u1791:
  2973   010A42  EF18  F085         	goto	l2901
  2974   010A46                     u1790:
  2975   010A46                     l2905:
  2976   010A46  5017               	movf	___awmod@divisor^0,w,c
  2977   010A48  5C15               	subwf	___awmod@dividend^0,w,c
  2978   010A4A  5018               	movf	(___awmod@divisor+1)^0,w,c
  2979   010A4C  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  2980   010A4E  A0D8               	btfss	status,0,c
  2981   010A50  EF2C  F085         	goto	u1801
  2982   010A54  EF2E  F085         	goto	u1800
  2983   010A58                     u1801:
  2984   010A58  EF32  F085         	goto	l2909
  2985   010A5C                     u1800:
  2986   010A5C  5017               	movf	___awmod@divisor^0,w,c
  2987   010A5E  5E15               	subwf	___awmod@dividend^0,f,c
  2988   010A60  5018               	movf	(___awmod@divisor+1)^0,w,c
  2989   010A62  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  2990   010A64                     l2909:
  2991   010A64  90D8               	bcf	status,0,c
  2992   010A66  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  2993   010A68  3217               	rrcf	___awmod@divisor^0,f,c
  2994   010A6A  2E19               	decfsz	___awmod@counter^0,f,c
  2995   010A6C  EF23  F085         	goto	l2905
  2996   010A70                     l2913:
  2997   010A70  501A               	movf	___awmod@sign^0,w,c
  2998   010A72  B4D8               	btfsc	status,2,c
  2999   010A74  EF3E  F085         	goto	u1811
  3000   010A78  EF40  F085         	goto	u1810
  3001   010A7C                     u1811:
  3002   010A7C  EF44  F085         	goto	l2917
  3003   010A80                     u1810:
  3004   010A80  6C15               	negf	___awmod@dividend^0,c
  3005   010A82  1E16               	comf	(___awmod@dividend+1)^0,f,c
  3006   010A84  B0D8               	btfsc	status,0,c
  3007   010A86  2A16               	incf	(___awmod@dividend+1)^0,f,c
  3008   010A88                     l2917:
  3009   010A88  C015  F015         	movff	___awmod@dividend,?___awmod
  3010   010A8C  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  3011   010A90  0012               	return		;funcret
  3012   010A92                     __end_of___awmod:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function ___awdiv *****************
  3016 ;; Defined at:
  3017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  dividend        2   20[COMRAM] int 
  3020 ;;  divisor         2   22[COMRAM] int 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  quotient        2   26[COMRAM] int 
  3023 ;;  sign            1   25[COMRAM] unsigned char 
  3024 ;;  counter         1   24[COMRAM] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2   20[COMRAM] int 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 4
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_dtoa
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text13
  3049   0106E8                     __ptext13:
  3050                           	callstack 0
  3051   0106E8                     ___awdiv:
  3052                           	callstack 22
  3053   0106E8  0E00               	movlw	0
  3054   0106EA  6E1A               	movwf	___awdiv@sign^0,c
  3055   0106EC  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
  3056   0106EE  EF7D  F083         	goto	u1700
  3057   0106F2  EF7B  F083         	goto	u1701
  3058   0106F6                     u1701:
  3059   0106F6  EF83  F083         	goto	l2849
  3060   0106FA                     u1700:
  3061   0106FA  6C17               	negf	___awdiv@divisor^0,c
  3062   0106FC  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  3063   0106FE  B0D8               	btfsc	status,0,c
  3064   010700  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  3065   010702  0E01               	movlw	1
  3066   010704  6E1A               	movwf	___awdiv@sign^0,c
  3067   010706                     l2849:
  3068   010706  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
  3069   010708  EF8A  F083         	goto	u1710
  3070   01070C  EF88  F083         	goto	u1711
  3071   010710                     u1711:
  3072   010710  EF90  F083         	goto	l2855
  3073   010714                     u1710:
  3074   010714  6C15               	negf	___awdiv@dividend^0,c
  3075   010716  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  3076   010718  B0D8               	btfsc	status,0,c
  3077   01071A  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  3078   01071C  0E01               	movlw	1
  3079   01071E  1A1A               	xorwf	___awdiv@sign^0,f,c
  3080   010720                     l2855:
  3081   010720  0E00               	movlw	0
  3082   010722  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  3083   010724  0E00               	movlw	0
  3084   010726  6E1B               	movwf	___awdiv@quotient^0,c
  3085   010728  5017               	movf	___awdiv@divisor^0,w,c
  3086   01072A  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  3087   01072C  B4D8               	btfsc	status,2,c
  3088   01072E  EF9B  F083         	goto	u1721
  3089   010732  EF9D  F083         	goto	u1720
  3090   010736                     u1721:
  3091   010736  EFC5  F083         	goto	l2877
  3092   01073A                     u1720:
  3093   01073A  0E01               	movlw	1
  3094   01073C  6E19               	movwf	___awdiv@counter^0,c
  3095   01073E  EFA5  F083         	goto	l2863
  3096   010742                     l2861:
  3097   010742  90D8               	bcf	status,0,c
  3098   010744  3617               	rlcf	___awdiv@divisor^0,f,c
  3099   010746  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  3100   010748  2A19               	incf	___awdiv@counter^0,f,c
  3101   01074A                     l2863:
  3102   01074A  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  3103   01074C  EFAA  F083         	goto	u1731
  3104   010750  EFAC  F083         	goto	u1730
  3105   010754                     u1731:
  3106   010754  EFA1  F083         	goto	l2861
  3107   010758                     u1730:
  3108   010758                     l2865:
  3109   010758  90D8               	bcf	status,0,c
  3110   01075A  361B               	rlcf	___awdiv@quotient^0,f,c
  3111   01075C  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  3112   01075E  5017               	movf	___awdiv@divisor^0,w,c
  3113   010760  5C15               	subwf	___awdiv@dividend^0,w,c
  3114   010762  5018               	movf	(___awdiv@divisor+1)^0,w,c
  3115   010764  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  3116   010766  A0D8               	btfss	status,0,c
  3117   010768  EFB8  F083         	goto	u1741
  3118   01076C  EFBA  F083         	goto	u1740
  3119   010770                     u1741:
  3120   010770  EFBF  F083         	goto	l2873
  3121   010774                     u1740:
  3122   010774  5017               	movf	___awdiv@divisor^0,w,c
  3123   010776  5E15               	subwf	___awdiv@dividend^0,f,c
  3124   010778  5018               	movf	(___awdiv@divisor+1)^0,w,c
  3125   01077A  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  3126   01077C  801B               	bsf	___awdiv@quotient^0,0,c
  3127   01077E                     l2873:
  3128   01077E  90D8               	bcf	status,0,c
  3129   010780  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  3130   010782  3217               	rrcf	___awdiv@divisor^0,f,c
  3131   010784  2E19               	decfsz	___awdiv@counter^0,f,c
  3132   010786  EFAC  F083         	goto	l2865
  3133   01078A                     l2877:
  3134   01078A  501A               	movf	___awdiv@sign^0,w,c
  3135   01078C  B4D8               	btfsc	status,2,c
  3136   01078E  EFCB  F083         	goto	u1751
  3137   010792  EFCD  F083         	goto	u1750
  3138   010796                     u1751:
  3139   010796  EFD1  F083         	goto	l2881
  3140   01079A                     u1750:
  3141   01079A  6C1B               	negf	___awdiv@quotient^0,c
  3142   01079C  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  3143   01079E  B0D8               	btfsc	status,0,c
  3144   0107A0  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  3145   0107A2                     l2881:
  3146   0107A2  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  3147   0107A6  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  3148   0107AA  0012               	return		;funcret
  3149   0107AC                     __end_of___awdiv:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _measure_voltage *****************
  3153 ;; Defined at:
  3154 ;;		line 37 in file "measure.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  i               2   52[COMRAM] int 
  3159 ;;  result          4   48[COMRAM] unsigned long 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2   45[COMRAM] unsigned short 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:        9 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 5
  3176 ;; This function calls:
  3177 ;;		_ADC_GetConversion
  3178 ;;		___lldiv
  3179 ;;		___lmul
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text14
  3186   01092E                     __ptext14:
  3187                           	callstack 0
  3188   01092E                     _measure_voltage:
  3189                           	callstack 25
  3190   01092E                     
  3191                           ;measure.c: 41:         uint32_t result = 0;
  3192   01092E  0E00               	movlw	0
  3193   010930  6E31               	movwf	measure_voltage@result^0,c
  3194   010932  0E00               	movlw	0
  3195   010934  6E32               	movwf	(measure_voltage@result+1)^0,c
  3196   010936  0E00               	movlw	0
  3197   010938  6E33               	movwf	(measure_voltage@result+2)^0,c
  3198   01093A  0E00               	movlw	0
  3199   01093C  6E34               	movwf	(measure_voltage@result+3)^0,c
  3200                           
  3201                           ;measure.c: 43:         for(int i = 0;i < 8;i++)
  3202   01093E  0E00               	movlw	0
  3203   010940  6E36               	movwf	(measure_voltage@i+1)^0,c
  3204   010942  0E00               	movlw	0
  3205   010944  6E35               	movwf	measure_voltage@i^0,c
  3206   010946                     l3159:
  3207                           
  3208                           ;measure.c: 44:         {;measure.c: 45:             result += ADC_GetConversion(VOLTAGE
      +                          );
  3209   010946  0E05               	movlw	5
  3210   010948  EC64  F088         	call	_ADC_GetConversion
  3211   01094C  5015               	movf	?_ADC_GetConversion^0,w,c
  3212   01094E  2631               	addwf	measure_voltage@result^0,f,c
  3213   010950  5016               	movf	(?_ADC_GetConversion+1)^0,w,c
  3214   010952  2232               	addwfc	(measure_voltage@result+1)^0,f,c
  3215   010954  0E00               	movlw	0
  3216   010956  2233               	addwfc	(measure_voltage@result+2)^0,f,c
  3217   010958  0E00               	movlw	0
  3218   01095A  2234               	addwfc	(measure_voltage@result+3)^0,f,c
  3219   01095C                     
  3220                           ;measure.c: 46:         }
  3221   01095C  4A35               	infsnz	measure_voltage@i^0,f,c
  3222   01095E  2A36               	incf	(measure_voltage@i+1)^0,f,c
  3223   010960  BE36               	btfsc	(measure_voltage@i+1)^0,7,c
  3224   010962  EFBC  F084         	goto	u2171
  3225   010966  5036               	movf	(measure_voltage@i+1)^0,w,c
  3226   010968  E109               	bnz	u2170
  3227   01096A  0E08               	movlw	8
  3228   01096C  5C35               	subwf	measure_voltage@i^0,w,c
  3229   01096E  A0D8               	btfss	status,0,c
  3230   010970  EFBC  F084         	goto	u2171
  3231   010974  EFBE  F084         	goto	u2170
  3232   010978                     u2171:
  3233   010978  EFA3  F084         	goto	l3159
  3234   01097C                     u2170:
  3235   01097C                     
  3236                           ;measure.c: 47:         result/= 8;
  3237   01097C  0E03               	movlw	3
  3238   01097E  6E30               	movwf	??_measure_voltage^0,c
  3239   010980                     u2185:
  3240   010980  90D8               	bcf	status,0,c
  3241   010982  3234               	rrcf	(measure_voltage@result+3)^0,f,c
  3242   010984  3233               	rrcf	(measure_voltage@result+2)^0,f,c
  3243   010986  3232               	rrcf	(measure_voltage@result+1)^0,f,c
  3244   010988  3231               	rrcf	measure_voltage@result^0,f,c
  3245   01098A  2E30               	decfsz	??_measure_voltage^0,f,c
  3246   01098C  EFC0  F084         	goto	u2185
  3247   010990                     
  3248                           ;measure.c: 49:         return (result*3300)/(1024 - 1);
  3249   010990  C031  F015         	movff	measure_voltage@result,___lmul@multiplier
  3250   010994  C032  F016         	movff	measure_voltage@result+1,___lmul@multiplier+1
  3251   010998  C033  F017         	movff	measure_voltage@result+2,___lmul@multiplier+2
  3252   01099C  C034  F018         	movff	measure_voltage@result+3,___lmul@multiplier+3
  3253   0109A0  0EE4               	movlw	228
  3254   0109A2  6E19               	movwf	___lmul@multiplicand^0,c
  3255   0109A4  0E0C               	movlw	12
  3256   0109A6  6E1A               	movwf	(___lmul@multiplicand+1)^0,c
  3257   0109A8  0E00               	movlw	0
  3258   0109AA  6E1B               	movwf	(___lmul@multiplicand+2)^0,c
  3259   0109AC  0E00               	movlw	0
  3260   0109AE  6E1C               	movwf	(___lmul@multiplicand+3)^0,c
  3261   0109B0  EC73  F086         	call	___lmul	;wreg free
  3262   0109B4  C015  F021         	movff	?___lmul,___lldiv@dividend
  3263   0109B8  C016  F022         	movff	?___lmul+1,___lldiv@dividend+1
  3264   0109BC  C017  F023         	movff	?___lmul+2,___lldiv@dividend+2
  3265   0109C0  C018  F024         	movff	?___lmul+3,___lldiv@dividend+3
  3266   0109C4  0EFF               	movlw	255
  3267   0109C6  6E25               	movwf	___lldiv@divisor^0,c
  3268   0109C8  0E03               	movlw	3
  3269   0109CA  6E26               	movwf	(___lldiv@divisor+1)^0,c
  3270   0109CC  0E00               	movlw	0
  3271   0109CE  6E27               	movwf	(___lldiv@divisor+2)^0,c
  3272   0109D0  0E00               	movlw	0
  3273   0109D2  6E28               	movwf	(___lldiv@divisor+3)^0,c
  3274   0109D4  EC9E  F085         	call	___lldiv	;wreg free
  3275   0109D8  C021  F02E         	movff	?___lldiv,?_measure_voltage
  3276   0109DC  C022  F02F         	movff	?___lldiv+1,?_measure_voltage+1
  3277   0109E0  0012               	return		;funcret
  3278   0109E2                     __end_of_measure_voltage:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _measure_current *****************
  3282 ;; Defined at:
  3283 ;;		line 52 in file "measure.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  offset          2   45[COMRAM] unsigned short 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  i               2    0[BANK0 ] int 
  3288 ;;  result          4    2[BANK0 ] unsigned long 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  2   45[COMRAM] unsigned short 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Totals:         6       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;Total ram usage:       12 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 5
  3305 ;; This function calls:
  3306 ;;		_ADC_GetConversion
  3307 ;;		___lldiv
  3308 ;;		___lmul
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text15
  3315   0103B0                     __ptext15:
  3316                           	callstack 0
  3317   0103B0                     _measure_current:
  3318                           	callstack 25
  3319   0103B0                     
  3320                           ;measure.c: 52: uint16_t measure_current(uint16_t offset);measure.c: 53: {;measure.c: 55
      +                          :     uint32_t result = 0;
  3321   0103B0  0E00               	movlw	0
  3322   0103B2  0100               	movlb	0	; () banked
  3323   0103B4  6FA7               	movwf	measure_current@result& (0+255),b
  3324   0103B6  0E00               	movlw	0
  3325   0103B8  6FA8               	movwf	(measure_current@result+1)& (0+255),b
  3326   0103BA  0E00               	movlw	0
  3327   0103BC  6FA9               	movwf	(measure_current@result+2)& (0+255),b
  3328   0103BE  0E00               	movlw	0
  3329   0103C0  6FAA               	movwf	(measure_current@result+3)& (0+255),b
  3330                           
  3331                           ;measure.c: 57:             for(int i = 0;i < 8;i++)
  3332   0103C2  0E00               	movlw	0
  3333   0103C4  6FA6               	movwf	(measure_current@i+1)& (0+255),b
  3334   0103C6  0E00               	movlw	0
  3335   0103C8  6FA5               	movwf	measure_current@i& (0+255),b
  3336   0103CA                     l3129:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;measure.c: 58:         {;measure.c: 59:             result += ADC_GetConversion(CURRENT
      +                          );
  3340   0103CA  0E06               	movlw	6
  3341   0103CC  EC64  F088         	call	_ADC_GetConversion
  3342   0103D0  5015               	movf	?_ADC_GetConversion^0,w,c
  3343   0103D2  0100               	movlb	0	; () banked
  3344   0103D4  27A7               	addwf	measure_current@result& (0+255),f,b
  3345   0103D6  5016               	movf	(?_ADC_GetConversion+1)^0,w,c
  3346   0103D8  23A8               	addwfc	(measure_current@result+1)& (0+255),f,b
  3347   0103DA  0E00               	movlw	0
  3348   0103DC  23A9               	addwfc	(measure_current@result+2)& (0+255),f,b
  3349   0103DE  0E00               	movlw	0
  3350   0103E0  23AA               	addwfc	(measure_current@result+3)& (0+255),f,b
  3351   0103E2                     
  3352                           ; BSR set to: 0
  3353                           ;measure.c: 60:         }
  3354   0103E2  4BA5               	infsnz	measure_current@i& (0+255),f,b
  3355   0103E4  2BA6               	incf	(measure_current@i+1)& (0+255),f,b
  3356   0103E6                     
  3357                           ; BSR set to: 0
  3358   0103E6  BFA6               	btfsc	(measure_current@i+1)& (0+255),7,b
  3359   0103E8  EFFF  F081         	goto	u2141
  3360   0103EC  51A6               	movf	(measure_current@i+1)& (0+255),w,b
  3361   0103EE  E109               	bnz	u2140
  3362   0103F0  0E08               	movlw	8
  3363   0103F2  5DA5               	subwf	measure_current@i& (0+255),w,b
  3364   0103F4  A0D8               	btfss	status,0,c
  3365   0103F6  EFFF  F081         	goto	u2141
  3366   0103FA  EF01  F082         	goto	u2140
  3367   0103FE                     u2141:
  3368   0103FE  EFE5  F081         	goto	l3129
  3369   010402                     u2140:
  3370   010402                     
  3371                           ; BSR set to: 0
  3372                           ;measure.c: 61:         result/= 8;
  3373   010402  0E03               	movlw	3
  3374   010404  6E30               	movwf	??_measure_current^0,c
  3375   010406                     u2155:
  3376   010406  90D8               	bcf	status,0,c
  3377   010408  33AA               	rrcf	(measure_current@result+3)& (0+255),f,b
  3378   01040A  33A9               	rrcf	(measure_current@result+2)& (0+255),f,b
  3379   01040C  33A8               	rrcf	(measure_current@result+1)& (0+255),f,b
  3380   01040E  33A7               	rrcf	measure_current@result& (0+255),f,b
  3381   010410  2E30               	decfsz	??_measure_current^0,f,c
  3382   010412  EF03  F082         	goto	u2155
  3383   010416                     
  3384                           ; BSR set to: 0
  3385                           ;measure.c: 63:         result = (result*3300)/(1024 - 1);
  3386   010416  C0A7  F015         	movff	measure_current@result,___lmul@multiplier
  3387   01041A  C0A8  F016         	movff	measure_current@result+1,___lmul@multiplier+1
  3388   01041E  C0A9  F017         	movff	measure_current@result+2,___lmul@multiplier+2
  3389   010422  C0AA  F018         	movff	measure_current@result+3,___lmul@multiplier+3
  3390   010426  0EE4               	movlw	228
  3391   010428  6E19               	movwf	___lmul@multiplicand^0,c
  3392   01042A  0E0C               	movlw	12
  3393   01042C  6E1A               	movwf	(___lmul@multiplicand+1)^0,c
  3394   01042E  0E00               	movlw	0
  3395   010430  6E1B               	movwf	(___lmul@multiplicand+2)^0,c
  3396   010432  0E00               	movlw	0
  3397   010434  6E1C               	movwf	(___lmul@multiplicand+3)^0,c
  3398   010436  EC73  F086         	call	___lmul	;wreg free
  3399   01043A  C015  F021         	movff	?___lmul,___lldiv@dividend
  3400   01043E  C016  F022         	movff	?___lmul+1,___lldiv@dividend+1
  3401   010442  C017  F023         	movff	?___lmul+2,___lldiv@dividend+2
  3402   010446  C018  F024         	movff	?___lmul+3,___lldiv@dividend+3
  3403   01044A  0EFF               	movlw	255
  3404   01044C  6E25               	movwf	___lldiv@divisor^0,c
  3405   01044E  0E03               	movlw	3
  3406   010450  6E26               	movwf	(___lldiv@divisor+1)^0,c
  3407   010452  0E00               	movlw	0
  3408   010454  6E27               	movwf	(___lldiv@divisor+2)^0,c
  3409   010456  0E00               	movlw	0
  3410   010458  6E28               	movwf	(___lldiv@divisor+3)^0,c
  3411   01045A  EC9E  F085         	call	___lldiv	;wreg free
  3412   01045E  C021  F0A7         	movff	?___lldiv,measure_current@result
  3413   010462  C022  F0A8         	movff	?___lldiv+1,measure_current@result+1
  3414   010466  C023  F0A9         	movff	?___lldiv+2,measure_current@result+2
  3415   01046A  C024  F0AA         	movff	?___lldiv+3,measure_current@result+3
  3416   01046E                     
  3417                           ;measure.c: 65:         result *= 1000;
  3418   01046E  C0A7  F015         	movff	measure_current@result,___lmul@multiplier
  3419   010472  C0A8  F016         	movff	measure_current@result+1,___lmul@multiplier+1
  3420   010476  C0A9  F017         	movff	measure_current@result+2,___lmul@multiplier+2
  3421   01047A  C0AA  F018         	movff	measure_current@result+3,___lmul@multiplier+3
  3422   01047E  0EE8               	movlw	232
  3423   010480  6E19               	movwf	___lmul@multiplicand^0,c
  3424   010482  0E03               	movlw	3
  3425   010484  6E1A               	movwf	(___lmul@multiplicand+1)^0,c
  3426   010486  0E00               	movlw	0
  3427   010488  6E1B               	movwf	(___lmul@multiplicand+2)^0,c
  3428   01048A  0E00               	movlw	0
  3429   01048C  6E1C               	movwf	(___lmul@multiplicand+3)^0,c
  3430   01048E  EC73  F086         	call	___lmul	;wreg free
  3431   010492  C015  F0A7         	movff	?___lmul,measure_current@result
  3432   010496  C016  F0A8         	movff	?___lmul+1,measure_current@result+1
  3433   01049A  C017  F0A9         	movff	?___lmul+2,measure_current@result+2
  3434   01049E  C018  F0AA         	movff	?___lmul+3,measure_current@result+3
  3435   0104A2                     
  3436                           ;measure.c: 67:         result /= 66;
  3437   0104A2  C0A7  F021         	movff	measure_current@result,___lldiv@dividend
  3438   0104A6  C0A8  F022         	movff	measure_current@result+1,___lldiv@dividend+1
  3439   0104AA  C0A9  F023         	movff	measure_current@result+2,___lldiv@dividend+2
  3440   0104AE  C0AA  F024         	movff	measure_current@result+3,___lldiv@dividend+3
  3441   0104B2  0E42               	movlw	66
  3442   0104B4  6E25               	movwf	___lldiv@divisor^0,c
  3443   0104B6  0E00               	movlw	0
  3444   0104B8  6E26               	movwf	(___lldiv@divisor+1)^0,c
  3445   0104BA  0E00               	movlw	0
  3446   0104BC  6E27               	movwf	(___lldiv@divisor+2)^0,c
  3447   0104BE  0E00               	movlw	0
  3448   0104C0  6E28               	movwf	(___lldiv@divisor+3)^0,c
  3449   0104C2  EC9E  F085         	call	___lldiv	;wreg free
  3450   0104C6  C021  F0A7         	movff	?___lldiv,measure_current@result
  3451   0104CA  C022  F0A8         	movff	?___lldiv+1,measure_current@result+1
  3452   0104CE  C023  F0A9         	movff	?___lldiv+2,measure_current@result+2
  3453   0104D2  C024  F0AA         	movff	?___lldiv+3,measure_current@result+3
  3454   0104D6                     
  3455                           ;measure.c: 69:         result /= 3;
  3456   0104D6  C0A7  F021         	movff	measure_current@result,___lldiv@dividend
  3457   0104DA  C0A8  F022         	movff	measure_current@result+1,___lldiv@dividend+1
  3458   0104DE  C0A9  F023         	movff	measure_current@result+2,___lldiv@dividend+2
  3459   0104E2  C0AA  F024         	movff	measure_current@result+3,___lldiv@dividend+3
  3460   0104E6  0E03               	movlw	3
  3461   0104E8  6E25               	movwf	___lldiv@divisor^0,c
  3462   0104EA  0E00               	movlw	0
  3463   0104EC  6E26               	movwf	(___lldiv@divisor+1)^0,c
  3464   0104EE  0E00               	movlw	0
  3465   0104F0  6E27               	movwf	(___lldiv@divisor+2)^0,c
  3466   0104F2  0E00               	movlw	0
  3467   0104F4  6E28               	movwf	(___lldiv@divisor+3)^0,c
  3468   0104F6  EC9E  F085         	call	___lldiv	;wreg free
  3469   0104FA  C021  F0A7         	movff	?___lldiv,measure_current@result
  3470   0104FE  C022  F0A8         	movff	?___lldiv+1,measure_current@result+1
  3471   010502  C023  F0A9         	movff	?___lldiv+2,measure_current@result+2
  3472   010506  C024  F0AA         	movff	?___lldiv+3,measure_current@result+3
  3473                           
  3474                           ;measure.c: 71:         if(result > offset)
  3475   01050A  502E               	movf	measure_current@offset^0,w,c
  3476   01050C  6E30               	movwf	??_measure_current^0,c
  3477   01050E  502F               	movf	(measure_current@offset+1)^0,w,c
  3478   010510  6E31               	movwf	(??_measure_current+1)^0,c
  3479   010512  6A32               	clrf	(??_measure_current+2)^0,c
  3480   010514  6A33               	clrf	(??_measure_current+3)^0,c
  3481   010516  0100               	movlb	0	; () banked
  3482   010518  51A7               	movf	measure_current@result& (0+255),w,b
  3483   01051A  5C30               	subwf	??_measure_current^0,w,c
  3484   01051C  51A8               	movf	(measure_current@result+1)& (0+255),w,b
  3485   01051E  5831               	subwfb	(??_measure_current+1)^0,w,c
  3486   010520  51A9               	movf	(measure_current@result+2)& (0+255),w,b
  3487   010522  5832               	subwfb	(??_measure_current+2)^0,w,c
  3488   010524  51AA               	movf	(measure_current@result+3)& (0+255),w,b
  3489   010526  5833               	subwfb	(??_measure_current+3)^0,w,c
  3490   010528  B0D8               	btfsc	status,0,c
  3491   01052A  EF99  F082         	goto	u2161
  3492   01052E  EF9B  F082         	goto	u2160
  3493   010532                     u2161:
  3494   010532  EFA3  F082         	goto	l3149
  3495   010536                     u2160:
  3496   010536                     
  3497                           ; BSR set to: 0
  3498                           ;measure.c: 72:         {;measure.c: 73:             return result-offset;
  3499   010536  502E               	movf	measure_current@offset^0,w,c
  3500   010538  5DA7               	subwf	measure_current@result& (0+255),w,b
  3501   01053A  6E2E               	movwf	?_measure_current^0,c
  3502   01053C  502F               	movf	(measure_current@offset+1)^0,w,c
  3503   01053E  59A8               	subwfb	(measure_current@result+1)& (0+255),w,b
  3504   010540  6E2F               	movwf	(?_measure_current+1)^0,c
  3505   010542  EFA7  F082         	goto	l433
  3506   010546                     l3149:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;measure.c: 76:         return 0;
  3510   010546  0E00               	movlw	0
  3511   010548  6E2F               	movwf	(?_measure_current+1)^0,c
  3512   01054A  0E00               	movlw	0
  3513   01054C  6E2E               	movwf	?_measure_current^0,c
  3514   01054E                     l433:
  3515                           
  3516                           ; BSR set to: 0
  3517   01054E  0012               	return		;funcret
  3518   010550                     __end_of_measure_current:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function ___lmul *****************
  3522 ;; Defined at:
  3523 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  multiplier      4   20[COMRAM] unsigned long 
  3526 ;;  multiplicand    4   24[COMRAM] unsigned long 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  product         4   28[COMRAM] unsigned long 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  4   20[COMRAM] unsigned long 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:       12 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 4
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_measure_voltage
  3549 ;;		_measure_current
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text16
  3554   010CE6                     __ptext16:
  3555                           	callstack 0
  3556   010CE6                     ___lmul:
  3557                           	callstack 25
  3558   010CE6  0E00               	movlw	0
  3559   010CE8  6E1D               	movwf	___lmul@product^0,c
  3560   010CEA  0E00               	movlw	0
  3561   010CEC  6E1E               	movwf	(___lmul@product+1)^0,c
  3562   010CEE  0E00               	movlw	0
  3563   010CF0  6E1F               	movwf	(___lmul@product+2)^0,c
  3564   010CF2  0E00               	movlw	0
  3565   010CF4  6E20               	movwf	(___lmul@product+3)^0,c
  3566   010CF6                     l3083:
  3567   010CF6  A015               	btfss	___lmul@multiplier^0,0,c
  3568   010CF8  EF80  F086         	goto	u2081
  3569   010CFC  EF82  F086         	goto	u2080
  3570   010D00                     u2081:
  3571   010D00  EF8A  F086         	goto	l3087
  3572   010D04                     u2080:
  3573   010D04  5019               	movf	___lmul@multiplicand^0,w,c
  3574   010D06  261D               	addwf	___lmul@product^0,f,c
  3575   010D08  501A               	movf	(___lmul@multiplicand+1)^0,w,c
  3576   010D0A  221E               	addwfc	(___lmul@product+1)^0,f,c
  3577   010D0C  501B               	movf	(___lmul@multiplicand+2)^0,w,c
  3578   010D0E  221F               	addwfc	(___lmul@product+2)^0,f,c
  3579   010D10  501C               	movf	(___lmul@multiplicand+3)^0,w,c
  3580   010D12  2220               	addwfc	(___lmul@product+3)^0,f,c
  3581   010D14                     l3087:
  3582   010D14  90D8               	bcf	status,0,c
  3583   010D16  3619               	rlcf	___lmul@multiplicand^0,f,c
  3584   010D18  361A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3585   010D1A  361B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3586   010D1C  361C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3587   010D1E  90D8               	bcf	status,0,c
  3588   010D20  3218               	rrcf	(___lmul@multiplier+3)^0,f,c
  3589   010D22  3217               	rrcf	(___lmul@multiplier+2)^0,f,c
  3590   010D24  3216               	rrcf	(___lmul@multiplier+1)^0,f,c
  3591   010D26  3215               	rrcf	___lmul@multiplier^0,f,c
  3592   010D28  5015               	movf	___lmul@multiplier^0,w,c
  3593   010D2A  1016               	iorwf	(___lmul@multiplier+1)^0,w,c
  3594   010D2C  1017               	iorwf	(___lmul@multiplier+2)^0,w,c
  3595   010D2E  1018               	iorwf	(___lmul@multiplier+3)^0,w,c
  3596   010D30  A4D8               	btfss	status,2,c
  3597   010D32  EF9D  F086         	goto	u2091
  3598   010D36  EF9F  F086         	goto	u2090
  3599   010D3A                     u2091:
  3600   010D3A  EF7B  F086         	goto	l3083
  3601   010D3E                     u2090:
  3602   010D3E  C01D  F015         	movff	___lmul@product,?___lmul
  3603   010D42  C01E  F016         	movff	___lmul@product+1,?___lmul+1
  3604   010D46  C01F  F017         	movff	___lmul@product+2,?___lmul+2
  3605   010D4A  C020  F018         	movff	___lmul@product+3,?___lmul+3
  3606   010D4E  0012               	return		;funcret
  3607   010D50                     __end_of___lmul:
  3608                           	callstack 0
  3609                           
  3610 ;; *************** function ___lldiv *****************
  3611 ;; Defined at:
  3612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  dividend        4   32[COMRAM] unsigned long 
  3615 ;;  divisor         4   36[COMRAM] unsigned long 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  quotient        4   40[COMRAM] unsigned long 
  3618 ;;  counter         1   44[COMRAM] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  4   32[COMRAM] unsigned long 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;Total ram usage:       13 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 4
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_measure_voltage
  3639 ;;		_measure_current
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text17
  3644   010B3C                     __ptext17:
  3645                           	callstack 0
  3646   010B3C                     ___lldiv:
  3647                           	callstack 25
  3648   010B3C  0E00               	movlw	0
  3649   010B3E  6E29               	movwf	___lldiv@quotient^0,c
  3650   010B40  0E00               	movlw	0
  3651   010B42  6E2A               	movwf	(___lldiv@quotient+1)^0,c
  3652   010B44  0E00               	movlw	0
  3653   010B46  6E2B               	movwf	(___lldiv@quotient+2)^0,c
  3654   010B48  0E00               	movlw	0
  3655   010B4A  6E2C               	movwf	(___lldiv@quotient+3)^0,c
  3656   010B4C  5025               	movf	___lldiv@divisor^0,w,c
  3657   010B4E  1026               	iorwf	(___lldiv@divisor+1)^0,w,c
  3658   010B50  1027               	iorwf	(___lldiv@divisor+2)^0,w,c
  3659   010B52  1028               	iorwf	(___lldiv@divisor+3)^0,w,c
  3660   010B54  B4D8               	btfsc	status,2,c
  3661   010B56  EFAF  F085         	goto	u2101
  3662   010B5A  EFB1  F085         	goto	u2100
  3663   010B5E                     u2101:
  3664   010B5E  EFE7  F085         	goto	l539
  3665   010B62                     u2100:
  3666   010B62  0E01               	movlw	1
  3667   010B64  6E2D               	movwf	___lldiv@counter^0,c
  3668   010B66  EFBB  F085         	goto	l3099
  3669   010B6A                     l3097:
  3670   010B6A  90D8               	bcf	status,0,c
  3671   010B6C  3625               	rlcf	___lldiv@divisor^0,f,c
  3672   010B6E  3626               	rlcf	(___lldiv@divisor+1)^0,f,c
  3673   010B70  3627               	rlcf	(___lldiv@divisor+2)^0,f,c
  3674   010B72  3628               	rlcf	(___lldiv@divisor+3)^0,f,c
  3675   010B74  2A2D               	incf	___lldiv@counter^0,f,c
  3676   010B76                     l3099:
  3677   010B76  AE28               	btfss	(___lldiv@divisor+3)^0,7,c
  3678   010B78  EFC0  F085         	goto	u2111
  3679   010B7C  EFC2  F085         	goto	u2110
  3680   010B80                     u2111:
  3681   010B80  EFB5  F085         	goto	l3097
  3682   010B84                     u2110:
  3683   010B84                     l3101:
  3684   010B84  90D8               	bcf	status,0,c
  3685   010B86  3629               	rlcf	___lldiv@quotient^0,f,c
  3686   010B88  362A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3687   010B8A  362B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3688   010B8C  362C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3689   010B8E  5025               	movf	___lldiv@divisor^0,w,c
  3690   010B90  5C21               	subwf	___lldiv@dividend^0,w,c
  3691   010B92  5026               	movf	(___lldiv@divisor+1)^0,w,c
  3692   010B94  5822               	subwfb	(___lldiv@dividend+1)^0,w,c
  3693   010B96  5027               	movf	(___lldiv@divisor+2)^0,w,c
  3694   010B98  5823               	subwfb	(___lldiv@dividend+2)^0,w,c
  3695   010B9A  5028               	movf	(___lldiv@divisor+3)^0,w,c
  3696   010B9C  5824               	subwfb	(___lldiv@dividend+3)^0,w,c
  3697   010B9E  A0D8               	btfss	status,0,c
  3698   010BA0  EFD4  F085         	goto	u2121
  3699   010BA4  EFD6  F085         	goto	u2120
  3700   010BA8                     u2121:
  3701   010BA8  EFDF  F085         	goto	l3109
  3702   010BAC                     u2120:
  3703   010BAC  5025               	movf	___lldiv@divisor^0,w,c
  3704   010BAE  5E21               	subwf	___lldiv@dividend^0,f,c
  3705   010BB0  5026               	movf	(___lldiv@divisor+1)^0,w,c
  3706   010BB2  5A22               	subwfb	(___lldiv@dividend+1)^0,f,c
  3707   010BB4  5027               	movf	(___lldiv@divisor+2)^0,w,c
  3708   010BB6  5A23               	subwfb	(___lldiv@dividend+2)^0,f,c
  3709   010BB8  5028               	movf	(___lldiv@divisor+3)^0,w,c
  3710   010BBA  5A24               	subwfb	(___lldiv@dividend+3)^0,f,c
  3711   010BBC  8029               	bsf	___lldiv@quotient^0,0,c
  3712   010BBE                     l3109:
  3713   010BBE  90D8               	bcf	status,0,c
  3714   010BC0  3228               	rrcf	(___lldiv@divisor+3)^0,f,c
  3715   010BC2  3227               	rrcf	(___lldiv@divisor+2)^0,f,c
  3716   010BC4  3226               	rrcf	(___lldiv@divisor+1)^0,f,c
  3717   010BC6  3225               	rrcf	___lldiv@divisor^0,f,c
  3718   010BC8  2E2D               	decfsz	___lldiv@counter^0,f,c
  3719   010BCA  EFC2  F085         	goto	l3101
  3720   010BCE                     l539:
  3721   010BCE  C029  F021         	movff	___lldiv@quotient,?___lldiv
  3722   010BD2  C02A  F022         	movff	___lldiv@quotient+1,?___lldiv+1
  3723   010BD6  C02B  F023         	movff	___lldiv@quotient+2,?___lldiv+2
  3724   010BDA  C02C  F024         	movff	___lldiv@quotient+3,?___lldiv+3
  3725   010BDE  0012               	return		;funcret
  3726   010BE0                     __end_of___lldiv:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _ADC_GetConversion *****************
  3730 ;; Defined at:
  3731 ;;		line 109 in file "mcc_generated_files/adc.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  channel         1    wreg     enum E4918
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  channel         1   24[COMRAM] enum E4918
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  2   20[COMRAM] unsigned short 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;Total ram usage:        5 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 4
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_measure_voltage
  3756 ;;		_measure_current
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text18
  3761   0110C8                     __ptext18:
  3762                           	callstack 0
  3763   0110C8                     _ADC_GetConversion:
  3764                           	callstack 25
  3765                           
  3766                           ;incstack = 0
  3767                           ;ADC_GetConversion@channel stored from wreg
  3768   0110C8  6E19               	movwf	ADC_GetConversion@channel^0,c
  3769   0110CA                     
  3770                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  3771   0110CA  C019  F017         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3772   0110CE  4617               	rlncf	??_ADC_GetConversion^0,f,c
  3773   0110D0  4617               	rlncf	??_ADC_GetConversion^0,f,c
  3774   0110D2  50C2               	movf	194,w,c	;volatile
  3775   0110D4  1817               	xorwf	??_ADC_GetConversion^0,w,c
  3776   0110D6  0BC3               	andlw	-61
  3777   0110D8  1817               	xorwf	??_ADC_GetConversion^0,w,c
  3778   0110DA  6EC2               	movwf	194,c	;volatile
  3779   0110DC                     
  3780                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  3781   0110DC  80C2               	bsf	194,0,c	;volatile
  3782   0110DE                     
  3783                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  3784   0110DE  82C2               	bsf	194,1,c	;volatile
  3785   0110E0                     l60:
  3786                           
  3787                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  3788   0110E0  B2C2               	btfsc	194,1,c	;volatile
  3789   0110E2  EF75  F088         	goto	u2071
  3790   0110E6  EF77  F088         	goto	u2070
  3791   0110EA                     u2071:
  3792   0110EA  EF70  F088         	goto	l60
  3793   0110EE                     u2070:
  3794   0110EE                     
  3795                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3796   0110EE  50C4               	movf	196,w,c	;volatile
  3797   0110F0  6E18               	movwf	(??_ADC_GetConversion+1)^0,c
  3798   0110F2  6A17               	clrf	??_ADC_GetConversion^0,c
  3799   0110F4  50C3               	movf	195,w,c	;volatile
  3800   0110F6  2417               	addwf	??_ADC_GetConversion^0,w,c
  3801   0110F8  6E15               	movwf	?_ADC_GetConversion^0,c
  3802   0110FA  0E00               	movlw	0
  3803   0110FC  2018               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  3804   0110FE  6E16               	movwf	(?_ADC_GetConversion+1)^0,c
  3805   011100  0012               	return		;funcret
  3806   011102                     __end_of_ADC_GetConversion:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _SYSTEM_Initialize *****************
  3810 ;; Defined at:
  3811 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 6
  3832 ;; This function calls:
  3833 ;;		_ADC_Initialize
  3834 ;;		_EPWM1_Initialize
  3835 ;;		_EUSART1_Initialize
  3836 ;;		_INTERRUPT_Initialize
  3837 ;;		_OSCILLATOR_Initialize
  3838 ;;		_PIN_MANAGER_Initialize
  3839 ;;		_TMR0_Initialize
  3840 ;;		_TMR2_Initialize
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text19
  3847   011216                     __ptext19:
  3848                           	callstack 0
  3849   011216                     _SYSTEM_Initialize:
  3850                           	callstack 24
  3851   011216                     
  3852                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3853   011216  EC89  F089         	call	_INTERRUPT_Initialize	;wreg free
  3854   01121A                     
  3855                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3856   01121A  EC24  F088         	call	_PIN_MANAGER_Initialize	;wreg free
  3857   01121E                     
  3858                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3859   01121E  EC7E  F089         	call	_OSCILLATOR_Initialize	;wreg free
  3860   011222                     
  3861                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3862   011222  EC33  F089         	call	_ADC_Initialize	;wreg free
  3863   011226                     
  3864                           ;mcc_generated_files/mcc.c: 57:     EPWM1_Initialize();
  3865   011226  EC28  F089         	call	_EPWM1_Initialize	;wreg free
  3866   01122A                     
  3867                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3868   01122A  EC46  F089         	call	_TMR2_Initialize	;wreg free
  3869   01122E                     
  3870                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  3871   01122E  ECF8  F088         	call	_TMR0_Initialize	;wreg free
  3872   011232                     
  3873                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  3874   011232  ECF0  F085         	call	_EUSART1_Initialize	;wreg free
  3875   011236  0012               	return		;funcret
  3876   011238                     __end_of_SYSTEM_Initialize:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _TMR2_Initialize *****************
  3880 ;; Defined at:
  3881 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 4
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_SYSTEM_Initialize
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text20
  3910   01128C                     __ptext20:
  3911                           	callstack 0
  3912   01128C                     _TMR2_Initialize:
  3913                           	callstack 25
  3914   01128C                     
  3915                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  3916   01128C  68CB               	setf	203,c	;volatile
  3917   01128E                     
  3918                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3919   01128E  0E00               	movlw	0
  3920   011290  6ECC               	movwf	204,c	;volatile
  3921   011292                     
  3922                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3923   011292  929E               	bcf	158,1,c	;volatile
  3924                           
  3925                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  3926   011294  0E04               	movlw	4
  3927   011296  6ECA               	movwf	202,c	;volatile
  3928   011298  0012               	return		;funcret
  3929   01129A                     __end_of_TMR2_Initialize:
  3930                           	callstack 0
  3931                           
  3932 ;; *************** function _TMR0_Initialize *****************
  3933 ;; Defined at:
  3934 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		_TMR0_SetInterruptHandler
  3957 ;; This function is called by:
  3958 ;;		_SYSTEM_Initialize
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text21
  3963   0111F0                     __ptext21:
  3964                           	callstack 0
  3965   0111F0                     _TMR0_Initialize:
  3966                           	callstack 24
  3967   0111F0                     
  3968                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x00;
  3969   0111F0  0E00               	movlw	0
  3970   0111F2  6ED7               	movwf	215,c	;volatile
  3971                           
  3972                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0x51;
  3973   0111F4  0E51               	movlw	81
  3974   0111F6  6ED6               	movwf	214,c	;volatile
  3975                           
  3976                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = 81;
  3977   0111F8  0E51               	movlw	81
  3978   0111FA  6E40               	movwf	_timer0ReloadVal^0,c	;volatile
  3979   0111FC                     
  3980                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  3981   0111FC  94F2               	bcf	242,2,c	;volatile
  3982   0111FE                     
  3983                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  3984   0111FE  8AF2               	bsf	242,5,c	;volatile
  3985   011200                     
  3986                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3987   011200  0E18               	movlw	low _TMR0_DefaultInterruptHandler
  3988   011202  6E15               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3989   011204  0E13               	movlw	high _TMR0_DefaultInterruptHandler
  3990   011206  6E16               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3991   011208  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  3992   01120A  6E17               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
  3993   01120C  EC4D  F089         	call	_TMR0_SetInterruptHandler	;wreg free
  3994   011210                     
  3995                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0xF0;
  3996   011210  0EF0               	movlw	240
  3997   011212  6ED5               	movwf	213,c	;volatile
  3998   011214  0012               	return		;funcret
  3999   011216                     __end_of_TMR0_Initialize:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _TMR0_SetInterruptHandler *****************
  4003 ;; Defined at:
  4004 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  4007 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;Total ram usage:        3 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 4
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_TMR0_Initialize
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text22
  4034   01129A                     __ptext22:
  4035                           	callstack 0
  4036   01129A                     _TMR0_SetInterruptHandler:
  4037                           	callstack 24
  4038   01129A                     
  4039                           ;mcc_generated_files/tmr0.c: 148:     TMR0_InterruptHandler = InterruptHandler;
  4040   01129A  C015  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4041   01129E  C016  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4042   0112A2  C017  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  4043   0112A6  0012               	return		;funcret
  4044   0112A8                     __end_of_TMR0_SetInterruptHandler:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function _PIN_MANAGER_Initialize *****************
  4048 ;; Defined at:
  4049 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;Total ram usage:        0 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 4
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_SYSTEM_Initialize
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text23
  4078   011048                     __ptext23:
  4079                           	callstack 0
  4080   011048                     _PIN_MANAGER_Initialize:
  4081                           	callstack 25
  4082   011048                     
  4083                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  4084   011048  0E00               	movlw	0
  4085   01104A  6E8D               	movwf	141,c	;volatile
  4086                           
  4087                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  4088   01104C  0E00               	movlw	0
  4089   01104E  6E91               	movwf	145,c	;volatile
  4090                           
  4091                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  4092   011050  0E00               	movlw	0
  4093   011052  6E8C               	movwf	140,c	;volatile
  4094                           
  4095                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  4096   011054  0E00               	movlw	0
  4097   011056  6E89               	movwf	137,c	;volatile
  4098                           
  4099                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  4100   011058  0E00               	movlw	0
  4101   01105A  6E8E               	movwf	142,c	;volatile
  4102                           
  4103                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  4104   01105C  0E00               	movlw	0
  4105   01105E  6E8A               	movwf	138,c	;volatile
  4106                           
  4107                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  4108   011060  0E00               	movlw	0
  4109   011062  6E8F               	movwf	143,c	;volatile
  4110                           
  4111                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4112   011064  0E00               	movlw	0
  4113   011066  6E8B               	movwf	139,c	;volatile
  4114                           
  4115                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  4116   011068  0E00               	movlw	0
  4117   01106A  6E90               	movwf	144,c	;volatile
  4118   01106C                     
  4119                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  4120   01106C  6896               	setf	150,c	;volatile
  4121   01106E                     
  4122                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  4123   01106E  6897               	setf	151,c	;volatile
  4124                           
  4125                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  4126   011070  0E3F               	movlw	63
  4127   011072  6E92               	movwf	146,c	;volatile
  4128   011074                     
  4129                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  4130   011074  6898               	setf	152,c	;volatile
  4131   011076                     
  4132                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  4133   011076  6893               	setf	147,c	;volatile
  4134   011078                     
  4135                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  4136   011078  6899               	setf	153,c	;volatile
  4137                           
  4138                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBB;
  4139   01107A  0EBB               	movlw	187
  4140   01107C  6E94               	movwf	148,c	;volatile
  4141   01107E                     
  4142                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  4143   01107E  6895               	setf	149,c	;volatile
  4144   011080                     
  4145                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  4146   011080  689A               	setf	154,c	;volatile
  4147                           
  4148                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  4149   011082  0EF0               	movlw	-16
  4150   011084  16C1               	andwf	193,f,c	;volatile
  4151   011086  0012               	return		;funcret
  4152   011088                     __end_of_PIN_MANAGER_Initialize:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _OSCILLATOR_Initialize *****************
  4156 ;; Defined at:
  4157 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 4
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_SYSTEM_Initialize
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text24
  4186   0112FC                     __ptext24:
  4187                           	callstack 0
  4188   0112FC                     _OSCILLATOR_Initialize:
  4189                           	callstack 25
  4190   0112FC                     
  4191                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x02;
  4192   0112FC  0E02               	movlw	2
  4193   0112FE  6ED3               	movwf	211,c	;volatile
  4194                           
  4195                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4196   011300  0E00               	movlw	0
  4197   011302  6E9B               	movwf	155,c	;volatile
  4198   011304  0012               	return		;funcret
  4199   011306                     __end_of_OSCILLATOR_Initialize:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _INTERRUPT_Initialize *****************
  4203 ;; Defined at:
  4204 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		None
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 4
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_SYSTEM_Initialize
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text25
  4233   011312                     __ptext25:
  4234                           	callstack 0
  4235   011312                     _INTERRUPT_Initialize:
  4236                           	callstack 25
  4237   011312                     
  4238                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4239   011312  9ED0               	bcf	208,7,c	;volatile
  4240   011314  0012               	return		;funcret
  4241   011316                     __end_of_INTERRUPT_Initialize:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _EUSART1_Initialize *****************
  4245 ;; Defined at:
  4246 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 5
  4267 ;; This function calls:
  4268 ;;		_EUSART1_SetErrorHandler
  4269 ;;		_EUSART1_SetFramingErrorHandler
  4270 ;;		_EUSART1_SetOverrunErrorHandler
  4271 ;;		_EUSART1_SetRxInterruptHandler
  4272 ;;		_EUSART1_SetTxInterruptHandler
  4273 ;; This function is called by:
  4274 ;;		_SYSTEM_Initialize
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text26
  4279   010BE0                     __ptext26:
  4280                           	callstack 0
  4281   010BE0                     _EUSART1_Initialize:
  4282                           	callstack 24
  4283   010BE0                     
  4284                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4285   010BE0  9A9D               	bcf	157,5,c	;volatile
  4286   010BE2                     
  4287                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4288   010BE2  0E6E               	movlw	low _EUSART1_Receive_ISR
  4289   010BE4  6E15               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  4290   010BE6  0E08               	movlw	high _EUSART1_Receive_ISR
  4291   010BE8  6E16               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  4292   010BEA  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  4293   010BEC  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)^0,c
  4294   010BEE  EC5B  F089         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4295   010BF2                     
  4296                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4297   010BF2  989D               	bcf	157,4,c	;volatile
  4298                           
  4299                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4300   010BF4  0E88               	movlw	low _EUSART1_Transmit_ISR
  4301   010BF6  6E15               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  4302   010BF8  0E10               	movlw	high _EUSART1_Transmit_ISR
  4303   010BFA  6E16               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  4304   010BFC  0E01               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  4305   010BFE  6E17               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)^0,c
  4306   010C00  EC54  F089         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4307   010C04                     
  4308                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4309   010C04  0E08               	movlw	8
  4310   010C06  6E7E               	movwf	126,c	;volatile
  4311   010C08                     
  4312                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  4313   010C08  0E90               	movlw	144
  4314   010C0A  6EAB               	movwf	171,c	;volatile
  4315   010C0C                     
  4316                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  4317   010C0C  0E24               	movlw	36
  4318   010C0E  6EAC               	movwf	172,c	;volatile
  4319   010C10                     
  4320                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  4321   010C10  0E8A               	movlw	138
  4322   010C12  6EAF               	movwf	175,c	;volatile
  4323   010C14                     
  4324                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  4325   010C14  0E02               	movlw	2
  4326   010C16  6E7F               	movwf	127,c	;volatile
  4327   010C18                     
  4328                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4329   010C18  0E1A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4330   010C1A  6E15               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4331   010C1C  0E13               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4332   010C1E  6E16               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4333   010C20  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  4334   010C22  6E17               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  4335   010C24  EC69  F089         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4336   010C28                     
  4337                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4338   010C28  0E06               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4339   010C2A  6E15               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4340   010C2C  0E13               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4341   010C2E  6E16               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4342   010C30  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  4343   010C32  6E17               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4344   010C34  EC62  F089         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4345   010C38                     
  4346                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4347   010C38  0E0C               	movlw	low _EUSART1_DefaultErrorHandler
  4348   010C3A  6E15               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4349   010C3C  0E13               	movlw	high _EUSART1_DefaultErrorHandler
  4350   010C3E  6E16               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4351   010C40  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  4352   010C42  6E17               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)^0,c
  4353   010C44  EC70  F089         	call	_EUSART1_SetErrorHandler	;wreg free
  4354                           
  4355                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4356   010C48  0E00               	movlw	0
  4357   010C4A  6E41               	movwf	_eusart1RxLastError^0,c	;volatile
  4358                           
  4359                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4360   010C4C  0E00               	movlw	0
  4361   010C4E  6E47               	movwf	_eusart1TxHead^0,c	;volatile
  4362                           
  4363                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4364   010C50  0E00               	movlw	0
  4365   010C52  6E46               	movwf	_eusart1TxTail^0,c	;volatile
  4366                           
  4367                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4368   010C54  0E08               	movlw	8
  4369   010C56  6E45               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4370                           
  4371                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4372   010C58  0E00               	movlw	0
  4373   010C5A  6E44               	movwf	_eusart1RxHead^0,c	;volatile
  4374                           
  4375                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4376   010C5C  0E00               	movlw	0
  4377   010C5E  6E43               	movwf	_eusart1RxTail^0,c	;volatile
  4378                           
  4379                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4380   010C60  0E00               	movlw	0
  4381   010C62  6E42               	movwf	_eusart1RxCount^0,c	;volatile
  4382   010C64                     
  4383                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4384   010C64  8A9D               	bsf	157,5,c	;volatile
  4385   010C66  0012               	return		;funcret
  4386   010C68                     __end_of_EUSART1_Initialize:
  4387                           	callstack 0
  4388                           
  4389 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4390 ;; Defined at:
  4391 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
  4394 ;;		 -> EUSART1_Transmit_ISR(1), 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4406 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;Total ram usage:        3 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 4
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_EUSART1_Initialize
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text27
  4421   0112A8                     __ptext27:
  4422                           	callstack 0
  4423   0112A8                     _EUSART1_SetTxInterruptHandler:
  4424                           	callstack 24
  4425   0112A8                     
  4426                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4427   0112A8  C015  F0F6         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4428   0112AC  C016  F0F7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4429   0112B0  C017  F0F8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  4430   0112B4  0012               	return		;funcret
  4431   0112B6                     __end_of_EUSART1_SetTxInterruptHandler:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4435 ;; Defined at:
  4436 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
  4439 ;;		 -> EUSART1_Receive_ISR(1), 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4451 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;Total ram usage:        3 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 4
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_EUSART1_Initialize
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text28
  4466   0112B6                     __ptext28:
  4467                           	callstack 0
  4468   0112B6                     _EUSART1_SetRxInterruptHandler:
  4469                           	callstack 24
  4470   0112B6                     
  4471                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4472   0112B6  C015  F0F3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4473   0112BA  C016  F0F4         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4474   0112BE  C017  F0F5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  4475   0112C2  0012               	return		;funcret
  4476   0112C4                     __end_of_EUSART1_SetRxInterruptHandler:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4480 ;; Defined at:
  4481 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
  4484 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4496 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;Total ram usage:        3 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; Hardware stack levels required when called: 4
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_EUSART1_Initialize
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text29
  4511   0112C4                     __ptext29:
  4512                           	callstack 0
  4513   0112C4                     _EUSART1_SetOverrunErrorHandler:
  4514                           	callstack 24
  4515   0112C4                     
  4516                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  4517   0112C4  C015  F0ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4518   0112C8  C016  F0EE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4519   0112CC  C017  F0EF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  4520   0112D0  0012               	return		;funcret
  4521   0112D2                     __end_of_EUSART1_SetOverrunErrorHandler:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4525 ;; Defined at:
  4526 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
  4529 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:        3 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 4
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_EUSART1_Initialize
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text30
  4556   0112D2                     __ptext30:
  4557                           	callstack 0
  4558   0112D2                     _EUSART1_SetFramingErrorHandler:
  4559                           	callstack 24
  4560   0112D2                     
  4561                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  4562   0112D2  C015  F0F0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4563   0112D6  C016  F0F1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4564   0112DA  C017  F0F2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  4565   0112DE  0012               	return		;funcret
  4566   0112E0                     __end_of_EUSART1_SetFramingErrorHandler:
  4567                           	callstack 0
  4568                           
  4569 ;; *************** function _EUSART1_SetErrorHandler *****************
  4570 ;; Defined at:
  4571 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
  4574 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4586 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;Total ram usage:        3 bytes
  4591 ;; Hardware stack levels used: 1
  4592 ;; Hardware stack levels required when called: 4
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_EUSART1_Initialize
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text31
  4601   0112E0                     __ptext31:
  4602                           	callstack 0
  4603   0112E0                     _EUSART1_SetErrorHandler:
  4604                           	callstack 24
  4605   0112E0                     
  4606                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  4607   0112E0  C015  F0EA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4608   0112E4  C016  F0EB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4609   0112E8  C017  F0EC         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  4610   0112EC  0012               	return		;funcret
  4611   0112EE                     __end_of_EUSART1_SetErrorHandler:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _EPWM1_Initialize *****************
  4615 ;; Defined at:
  4616 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 4
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_SYSTEM_Initialize
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text32
  4645   011250                     __ptext32:
  4646                           	callstack 0
  4647   011250                     _EPWM1_Initialize:
  4648                           	callstack 25
  4649   011250                     
  4650                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4651   011250  0E3C               	movlw	60
  4652   011252  6EBD               	movwf	189,c	;volatile
  4653                           
  4654                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4655   011254  0E00               	movlw	0
  4656   011256  6EB6               	movwf	182,c	;volatile
  4657                           
  4658                           ;mcc_generated_files/epwm1.c: 75:  ECCP1DEL = 0x80;
  4659   011258  0E80               	movlw	128
  4660   01125A  6E79               	movwf	121,c	;volatile
  4661                           
  4662                           ;mcc_generated_files/epwm1.c: 78:  CCPR1H = 0x00;
  4663   01125C  0E00               	movlw	0
  4664   01125E  6EBF               	movwf	191,c	;volatile
  4665                           
  4666                           ;mcc_generated_files/epwm1.c: 81:  CCPR1L = 0x7F;
  4667   011260  0E7F               	movlw	127
  4668   011262  6EBE               	movwf	190,c	;volatile
  4669   011264  0012               	return		;funcret
  4670   011266                     __end_of_EPWM1_Initialize:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _ADC_Initialize *****************
  4674 ;; Defined at:
  4675 ;;		line 61 in file "mcc_generated_files/adc.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 4
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_SYSTEM_Initialize
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text33
  4704   011266                     __ptext33:
  4705                           	callstack 0
  4706   011266                     _ADC_Initialize:
  4707                           	callstack 25
  4708   011266                     
  4709                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  4710   011266  0E00               	movlw	0
  4711   011268  6EC1               	movwf	193,c	;volatile
  4712                           
  4713                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0x92;
  4714   01126A  0E92               	movlw	146
  4715   01126C  6EC0               	movwf	192,c	;volatile
  4716                           
  4717                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  4718   01126E  0E00               	movlw	0
  4719   011270  6EC3               	movwf	195,c	;volatile
  4720                           
  4721                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  4722   011272  0E00               	movlw	0
  4723   011274  6EC4               	movwf	196,c	;volatile
  4724                           
  4725                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  4726   011276  0E01               	movlw	1
  4727   011278  6EC2               	movwf	194,c	;volatile
  4728   01127A  0012               	return		;funcret
  4729   01127C                     __end_of_ADC_Initialize:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _Lcd_Init *****************
  4733 ;; Defined at:
  4734 ;;		line 17 in file "lcd/lcd.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      char 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;Total ram usage:        2 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 5
  4755 ;; This function calls:
  4756 ;;		_LCD_2x16_WriteCmd
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text34
  4763   010F82                     __ptext34:
  4764                           	callstack 0
  4765   010F82                     _Lcd_Init:
  4766                           	callstack 25
  4767   010F82                     
  4768                           ;lcd/lcd.c: 21:         TRISDbits.TRISD3 = 0;
  4769   010F82  9695               	bcf	149,3,c	;volatile
  4770                           
  4771                           ;lcd/lcd.c: 22:         LATDbits.LATD3 = 0;
  4772   010F84  968C               	bcf	140,3,c	;volatile
  4773                           
  4774                           ;lcd/lcd.c: 23:         TRISDbits.TRISD2 = 0;
  4775   010F86  9495               	bcf	149,2,c	;volatile
  4776                           
  4777                           ;lcd/lcd.c: 24:         LATDbits.LATD2 = 0;
  4778   010F88  948C               	bcf	140,2,c	;volatile
  4779   010F8A                     
  4780                           ;lcd/lcd.c: 25:         TRISJ = TRISJ & 0x0F;
  4781   010F8A  509A               	movf	154,w,c	;volatile
  4782   010F8C  0B0F               	andlw	15
  4783   010F8E  6E9A               	movwf	154,c	;volatile
  4784   010F90                     
  4785                           ;lcd/lcd.c: 27:         _delay((unsigned long)((200)*(25000000L/4000.0)));
  4786   010F90  0E07               	movlw	7
  4787   010F92  6E18               	movwf	(??_Lcd_Init+1)^0,c
  4788   010F94  0E58               	movlw	88
  4789   010F96  6E17               	movwf	??_Lcd_Init^0,c
  4790   010F98  0E5A               	movlw	90
  4791   010F9A                     u2197:
  4792   010F9A  2EE8               	decfsz	wreg,f,c
  4793   010F9C  D7FE               	bra	u2197
  4794   010F9E  2E17               	decfsz	??_Lcd_Init^0,f,c
  4795   010FA0  D7FC               	bra	u2197
  4796   010FA2  2E18               	decfsz	(??_Lcd_Init+1)^0,f,c
  4797   010FA4  D7FA               	bra	u2197
  4798   010FA6                     
  4799                           ;lcd/lcd.c: 28:         LCD_2x16_WriteCmd(0x02);
  4800   010FA6  0E02               	movlw	2
  4801   010FA8  ECA8  F086         	call	_LCD_2x16_WriteCmd
  4802   010FAC                     
  4803                           ;lcd/lcd.c: 30:         LCD_2x16_WriteCmd(0x28);
  4804   010FAC  0E28               	movlw	40
  4805   010FAE  ECA8  F086         	call	_LCD_2x16_WriteCmd
  4806   010FB2                     
  4807                           ;lcd/lcd.c: 33:         LCD_2x16_WriteCmd(0x01);
  4808   010FB2  0E01               	movlw	1
  4809   010FB4  ECA8  F086         	call	_LCD_2x16_WriteCmd
  4810   010FB8                     
  4811                           ;lcd/lcd.c: 34:         LCD_2x16_WriteCmd(0x0C);
  4812   010FB8  0E0C               	movlw	12
  4813   010FBA  ECA8  F086         	call	_LCD_2x16_WriteCmd
  4814   010FBE                     
  4815                           ;lcd/lcd.c: 37:         LCD_2x16_WriteCmd(0x06);
  4816   010FBE  0E06               	movlw	6
  4817   010FC0  ECA8  F086         	call	_LCD_2x16_WriteCmd
  4818   010FC4  0012               	return		;funcret
  4819   010FC6                     __end_of_Lcd_Init:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _LCD_2x16_WriteMsg *****************
  4823 ;; Defined at:
  4824 ;;		line 74 in file "lcd/lcd.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  msg             2   22[COMRAM] PTR unsigned char 
  4827 ;;		 -> main@tempString(20), 
  4828 ;;  line            1   24[COMRAM] unsigned char 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      void 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4840 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;Total ram usage:        3 bytes
  4845 ;; Hardware stack levels used: 1
  4846 ;; Hardware stack levels required when called: 5
  4847 ;; This function calls:
  4848 ;;		_LCD_2x16_WriteCmd
  4849 ;;		_LCD_2x16_WriteData
  4850 ;; This function is called by:
  4851 ;;		_main
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text35
  4856   011102                     __ptext35:
  4857                           	callstack 0
  4858   011102                     _LCD_2x16_WriteMsg:
  4859                           	callstack 25
  4860   011102                     
  4861                           ;lcd/lcd.c: 74: void LCD_2x16_WriteMsg(unsigned char * msg, uint8_t line);lcd/lcd.c: 75:
      +                           {;lcd/lcd.c: 76:     LCD_2x16_WriteCmd(0x80 | (line << 6));
  4862   011102  4019               	rrncf	LCD_2x16_WriteMsg@line^0,w,c
  4863   011104  42E8               	rrncf	wreg,f,c
  4864   011106  0BC0               	andlw	192
  4865   011108  0980               	iorlw	128
  4866   01110A  ECA8  F086         	call	_LCD_2x16_WriteCmd
  4867   01110E                     l2699:
  4868                           
  4869                           ;lcd/lcd.c: 78:     {;lcd/lcd.c: 79:         LCD_2x16_WriteData(*msg);
  4870   01110E  C017  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  4871   011112  C018  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  4872   011116  50DF               	movf	indf2,w,c
  4873   011118  EC53  F087         	call	_LCD_2x16_WriteData
  4874   01111C                     
  4875                           ;lcd/lcd.c: 80:         msg++;
  4876   01111C  4A17               	infsnz	LCD_2x16_WriteMsg@msg^0,f,c
  4877   01111E  2A18               	incf	(LCD_2x16_WriteMsg@msg+1)^0,f,c
  4878   011120                     
  4879                           ;lcd/lcd.c: 81:     }while(*msg != 0);
  4880   011120  C017  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  4881   011124  C018  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  4882   011128  50DF               	movf	indf2,w,c
  4883   01112A  A4D8               	btfss	status,2,c
  4884   01112C  EF9A  F088         	goto	u1531
  4885   011130  EF9C  F088         	goto	u1530
  4886   011134                     u1531:
  4887   011134  EF87  F088         	goto	l2699
  4888   011138                     u1530:
  4889   011138  0012               	return		;funcret
  4890   01113A                     __end_of_LCD_2x16_WriteMsg:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _LCD_2x16_WriteData *****************
  4894 ;; Defined at:
  4895 ;;		line 58 in file "lcd/lcd.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  command         1    wreg     unsigned char 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  command         1   21[COMRAM] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:        2 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 4
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_LCD_2x16_WriteMsg
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text36
  4924   010EA6                     __ptext36:
  4925                           	callstack 0
  4926   010EA6                     _LCD_2x16_WriteData:
  4927                           	callstack 25
  4928                           
  4929                           ;incstack = 0
  4930                           ;LCD_2x16_WriteData@command stored from wreg
  4931   010EA6  6E16               	movwf	LCD_2x16_WriteData@command^0,c
  4932   010EA8                     
  4933                           ;lcd/lcd.c: 58: void LCD_2x16_WriteData(uint8_t command);lcd/lcd.c: 59: {;lcd/lcd.c: 60:
      +                               LATDbits.LATD3 = 1;
  4934   010EA8  868C               	bsf	140,3,c	;volatile
  4935   010EAA                     
  4936                           ;lcd/lcd.c: 61:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  4937   010EAA  CF91 F015          	movff	3985,??_LCD_2x16_WriteData	;volatile
  4938   010EAE  0E0F               	movlw	15
  4939   010EB0  1615               	andwf	??_LCD_2x16_WriteData^0,f,c
  4940   010EB2  5016               	movf	LCD_2x16_WriteData@command^0,w,c
  4941   010EB4  0BF0               	andlw	240
  4942   010EB6  1015               	iorwf	??_LCD_2x16_WriteData^0,w,c
  4943   010EB8  6E91               	movwf	145,c	;volatile
  4944   010EBA                     
  4945                           ;lcd/lcd.c: 62:     LATDbits.LATD2 = 1;
  4946   010EBA  848C               	bsf	140,2,c	;volatile
  4947   010EBC                     
  4948                           ;lcd/lcd.c: 63:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  4949   010EBC  D000               	nop2		;2 cycle nop
  4950   010EBE  D000               	nop2		;2 cycle nop
  4951   010EC0  D000               	nop2		;2 cycle nop
  4952   010EC2                     
  4953                           ;lcd/lcd.c: 64:     LATDbits.LATD2 = 0;
  4954   010EC2  948C               	bcf	140,2,c	;volatile
  4955   010EC4                     
  4956                           ;lcd/lcd.c: 65:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  4957   010EC4  D000               	nop2		;2 cycle nop
  4958   010EC6  D000               	nop2		;2 cycle nop
  4959   010EC8  D000               	nop2		;2 cycle nop
  4960                           
  4961                           ;lcd/lcd.c: 66:     command = command << 4;
  4962   010ECA  3816               	swapf	LCD_2x16_WriteData@command^0,w,c
  4963   010ECC  0BF0               	andlw	240
  4964   010ECE  6E16               	movwf	LCD_2x16_WriteData@command^0,c
  4965                           
  4966                           ;lcd/lcd.c: 67:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  4967   010ED0  CF91 F015          	movff	3985,??_LCD_2x16_WriteData	;volatile
  4968   010ED4  0E0F               	movlw	15
  4969   010ED6  1615               	andwf	??_LCD_2x16_WriteData^0,f,c
  4970   010ED8  5016               	movf	LCD_2x16_WriteData@command^0,w,c
  4971   010EDA  0BF0               	andlw	240
  4972   010EDC  1015               	iorwf	??_LCD_2x16_WriteData^0,w,c
  4973   010EDE  6E91               	movwf	145,c	;volatile
  4974   010EE0                     
  4975                           ;lcd/lcd.c: 68:     LATDbits.LATD2 = 1;
  4976   010EE0  848C               	bsf	140,2,c	;volatile
  4977   010EE2                     
  4978                           ;lcd/lcd.c: 69:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  4979   010EE2  D000               	nop2		;2 cycle nop
  4980   010EE4  D000               	nop2		;2 cycle nop
  4981   010EE6  D000               	nop2		;2 cycle nop
  4982   010EE8                     
  4983                           ;lcd/lcd.c: 70:     LATDbits.LATD2 = 0;
  4984   010EE8  948C               	bcf	140,2,c	;volatile
  4985   010EEA                     
  4986                           ;lcd/lcd.c: 71:     _delay((unsigned long)((100)*(25000000L/4000000.0)));
  4987   010EEA  0ED0               	movlw	208
  4988   010EEC                     u2207:
  4989   010EEC  2EE8               	decfsz	wreg,f,c
  4990   010EEE  D7FE               	bra	u2207
  4991   010EF0  F000               	nop	
  4992   010EF2  0012               	return		;funcret
  4993   010EF4                     __end_of_LCD_2x16_WriteData:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _LCD_2x16_WriteCmd *****************
  4997 ;; Defined at:
  4998 ;;		line 43 in file "lcd/lcd.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  command         1    wreg     unsigned char 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  command         1   21[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        2 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 4
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_Lcd_Init
  5023 ;;		_LCD_2x16_WriteMsg
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text37
  5028   010D50                     __ptext37:
  5029                           	callstack 0
  5030   010D50                     _LCD_2x16_WriteCmd:
  5031                           	callstack 25
  5032                           
  5033                           ;incstack = 0
  5034                           ;LCD_2x16_WriteCmd@command stored from wreg
  5035   010D50  6E16               	movwf	LCD_2x16_WriteCmd@command^0,c
  5036   010D52                     
  5037                           ;lcd/lcd.c: 43: void LCD_2x16_WriteCmd(uint8_t command);lcd/lcd.c: 44: {;lcd/lcd.c: 45: 
      +                              LATDbits.LATD3 = 0;
  5038   010D52  968C               	bcf	140,3,c	;volatile
  5039   010D54                     
  5040                           ;lcd/lcd.c: 46:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5041   010D54  CF91 F015          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5042   010D58  0E0F               	movlw	15
  5043   010D5A  1615               	andwf	??_LCD_2x16_WriteCmd^0,f,c
  5044   010D5C  5016               	movf	LCD_2x16_WriteCmd@command^0,w,c
  5045   010D5E  0BF0               	andlw	240
  5046   010D60  1015               	iorwf	??_LCD_2x16_WriteCmd^0,w,c
  5047   010D62  6E91               	movwf	145,c	;volatile
  5048   010D64                     
  5049                           ;lcd/lcd.c: 47:     LATDbits.LATD2 = 1;
  5050   010D64  848C               	bsf	140,2,c	;volatile
  5051   010D66                     
  5052                           ;lcd/lcd.c: 48:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5053   010D66  0E14               	movlw	20
  5054   010D68                     u2217:
  5055   010D68  2EE8               	decfsz	wreg,f,c
  5056   010D6A  D7FE               	bra	u2217
  5057   010D6C  D000               	nop2	
  5058   010D6E                     
  5059                           ;lcd/lcd.c: 49:     LATDbits.LATD2 = 0;
  5060   010D6E  948C               	bcf	140,2,c	;volatile
  5061   010D70                     
  5062                           ;lcd/lcd.c: 50:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5063   010D70  D000               	nop2		;2 cycle nop
  5064   010D72  D000               	nop2		;2 cycle nop
  5065   010D74  D000               	nop2		;2 cycle nop
  5066   010D76                     
  5067                           ;lcd/lcd.c: 51:     command = command << 4;
  5068   010D76  3816               	swapf	LCD_2x16_WriteCmd@command^0,w,c
  5069   010D78  0BF0               	andlw	240
  5070   010D7A  6E16               	movwf	LCD_2x16_WriteCmd@command^0,c
  5071   010D7C                     
  5072                           ;lcd/lcd.c: 52:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5073   010D7C  CF91 F015          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5074   010D80  0E0F               	movlw	15
  5075   010D82  1615               	andwf	??_LCD_2x16_WriteCmd^0,f,c
  5076   010D84  5016               	movf	LCD_2x16_WriteCmd@command^0,w,c
  5077   010D86  0BF0               	andlw	240
  5078   010D88  1015               	iorwf	??_LCD_2x16_WriteCmd^0,w,c
  5079   010D8A  6E91               	movwf	145,c	;volatile
  5080   010D8C                     
  5081                           ;lcd/lcd.c: 53:     LATDbits.LATD2 = 1;
  5082   010D8C  848C               	bsf	140,2,c	;volatile
  5083   010D8E                     
  5084                           ;lcd/lcd.c: 54:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5085   010D8E  0E14               	movlw	20
  5086   010D90                     u2227:
  5087   010D90  2EE8               	decfsz	wreg,f,c
  5088   010D92  D7FE               	bra	u2227
  5089   010D94  D000               	nop2	
  5090   010D96                     
  5091                           ;lcd/lcd.c: 55:     LATDbits.LATD2 = 0;
  5092   010D96  948C               	bcf	140,2,c	;volatile
  5093   010D98                     
  5094                           ;lcd/lcd.c: 56:     _delay((unsigned long)((3)*(25000000L/4000.0)));
  5095   010D98  0E19               	movlw	25
  5096   010D9A  6E15               	movwf	??_LCD_2x16_WriteCmd^0,c
  5097   010D9C  0E58               	movlw	88
  5098   010D9E                     u2237:
  5099   010D9E  2EE8               	decfsz	wreg,f,c
  5100   010DA0  D7FE               	bra	u2237
  5101   010DA2  2E15               	decfsz	??_LCD_2x16_WriteCmd^0,f,c
  5102   010DA4  D7FC               	bra	u2237
  5103   010DA6  D000               	nop2	
  5104   010DA8  0012               	return		;funcret
  5105   010DAA                     __end_of_LCD_2x16_WriteCmd:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _EPWM1_LoadDutyValue *****************
  5109 ;; Defined at:
  5110 ;;		line 85 in file "mcc_generated_files/epwm1.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  dutyValue       2   20[COMRAM] unsigned short 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;Total ram usage:        4 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 4
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text38
  5139   011170                     __ptext38:
  5140                           	callstack 0
  5141   011170                     _EPWM1_LoadDutyValue:
  5142                           	callstack 26
  5143   011170                     
  5144                           ;mcc_generated_files/epwm1.c: 85: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 86: {;mcc_generated_files/epwm1.c: 88:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5145   011170  C015  F017         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5146   011174  C016  F018         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5147   011178  90D8               	bcf	status,0,c
  5148   01117A  3218               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5149   01117C  3217               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5150   01117E  90D8               	bcf	status,0,c
  5151   011180  3218               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5152   011182  3217               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5153   011184  5017               	movf	??_EPWM1_LoadDutyValue^0,w,c
  5154   011186  6EBE               	movwf	190,c	;volatile
  5155                           
  5156                           ;mcc_generated_files/epwm1.c: 91:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5157   011188  C015  F017         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5158   01118C  0E03               	movlw	3
  5159   01118E  1617               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5160   011190  3A17               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  5161   011192  0EF0               	movlw	240
  5162   011194  1617               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5163   011196  50BD               	movf	189,w,c	;volatile
  5164   011198  0BCF               	andlw	207
  5165   01119A  1017               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  5166   01119C  6EBD               	movwf	189,c	;volatile
  5167   01119E  0012               	return		;funcret
  5168   0111A0                     __end_of_EPWM1_LoadDutyValue:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _INTERRUPT_InterruptManager *****************
  5172 ;; Defined at:
  5173 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        8 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 3
  5194 ;; This function calls:
  5195 ;;		NULL
  5196 ;;		_EUSART1_Receive_ISR
  5197 ;;		_EUSART1_Transmit_ISR
  5198 ;;		_TMR0_ISR
  5199 ;;		_modbus_char_recvd
  5200 ;;		_modbus_timer
  5201 ;; This function is called by:
  5202 ;;		Interrupt level 2
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	intcode
  5207   000008                     __pintcode:
  5208                           	callstack 0
  5209   000008                     _INTERRUPT_InterruptManager:
  5210                           	callstack 19
  5211                           
  5212                           ;incstack = 0
  5213   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5214   00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  5215   00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5216   000012  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5217   000016  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5218   00001A  CFF6 F011          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
  5219   00001E  CFF7 F012          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
  5220   000022  CFF8 F013          	movff	tblptru,??_INTERRUPT_InterruptManager+6
  5221   000026  CFF5 F014          	movff	tablat,??_INTERRUPT_InterruptManager+7
  5222   00002A                     
  5223                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5224   00002A  AAF2               	btfss	242,5,c	;volatile
  5225   00002C  EF1A  F000         	goto	i2u156_41
  5226   000030  EF1C  F000         	goto	i2u156_40
  5227   000034                     i2u156_41:
  5228   000034  EF2A  F000         	goto	i2l378
  5229   000038                     i2u156_40:
  5230   000038  A4F2               	btfss	242,2,c	;volatile
  5231   00003A  EF21  F000         	goto	i2u157_41
  5232   00003E  EF23  F000         	goto	i2u157_40
  5233   000042                     i2u157_41:
  5234   000042  EF2A  F000         	goto	i2l378
  5235   000046                     i2u157_40:
  5236   000046                     
  5237                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         TMR0_ISR();
  5238   000046  EC9D  F088         	call	_TMR0_ISR	;wreg free
  5239   00004A                     
  5240                           ;mcc_generated_files/interrupt_manager.c: 65:         TMR0ON = 0;
  5241   00004A  9ED5               	bcf	4053,7,c	;volatile
  5242   00004C                     
  5243                           ;mcc_generated_files/interrupt_manager.c: 66:         modbus_timer();
  5244   00004C  EC77  F089         	call	_modbus_timer	;wreg free
  5245                           
  5246                           ;mcc_generated_files/interrupt_manager.c: 67:     }
  5247   000050  EF72  F000         	goto	i2l386
  5248   000054                     i2l378:
  5249   000054  ACF2               	btfss	242,6,c	;volatile
  5250   000056  EF2F  F000         	goto	i2u158_41
  5251   00005A  EF31  F000         	goto	i2u158_40
  5252   00005E                     i2u158_41:
  5253   00005E  EF72  F000         	goto	i2l386
  5254   000062                     i2u158_40:
  5255   000062                     
  5256                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5257   000062  A89D               	btfss	157,4,c	;volatile
  5258   000064  EF36  F000         	goto	i2u159_41
  5259   000068  EF38  F000         	goto	i2u159_40
  5260   00006C                     i2u159_41:
  5261   00006C  EF4F  F000         	goto	i2l381
  5262   000070                     i2u159_40:
  5263   000070  A89E               	btfss	158,4,c	;volatile
  5264   000072  EF3D  F000         	goto	i2u160_41
  5265   000076  EF3F  F000         	goto	i2u160_40
  5266   00007A                     i2u160_41:
  5267   00007A  EF4F  F000         	goto	i2l381
  5268   00007E                     i2u160_40:
  5269   00007E                     
  5270                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             EUSART1_TxDefaultInterruptHandler();
  5271   00007E  D802               	call	i2u161_48
  5272   000080  EF4D  F000         	goto	i2u161_49
  5273   000084                     i2u161_48:
  5274   000084  0005               	push	
  5275   000086  6EFA               	movwf	pclath,c
  5276   000088  0100               	movlb	0	; () banked
  5277   00008A  51F6               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  5278   00008C  6EFD               	movwf	tosl,c
  5279   00008E  51F7               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  5280   000090  6EFE               	movwf	tosh,c
  5281   000092  51F8               	movf	(_EUSART1_TxDefaultInterruptHandler+2)& (0+255),w,b
  5282   000094  6EFF               	movwf	tosu,c
  5283   000096  50FA               	movf	pclath,w,c
  5284   000098  0012               	return		;indir
  5285   00009A                     i2u161_49:
  5286                           
  5287                           ;mcc_generated_files/interrupt_manager.c: 73:         }
  5288   00009A  EF72  F000         	goto	i2l386
  5289   00009E                     i2l381:
  5290   00009E  AA9D               	btfss	157,5,c	;volatile
  5291   0000A0  EF54  F000         	goto	i2u162_41
  5292   0000A4  EF56  F000         	goto	i2u162_40
  5293   0000A8                     i2u162_41:
  5294   0000A8  EF72  F000         	goto	i2l385
  5295   0000AC                     i2u162_40:
  5296   0000AC  AA9E               	btfss	158,5,c	;volatile
  5297   0000AE  EF5B  F000         	goto	i2u163_41
  5298   0000B2  EF5D  F000         	goto	i2u163_40
  5299   0000B6                     i2u163_41:
  5300   0000B6  EF72  F000         	goto	i2l385
  5301   0000BA                     i2u163_40:
  5302   0000BA                     
  5303                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART1_RxDefaultInterruptHandler();
  5304   0000BA  D802               	call	i2u164_48
  5305   0000BC  EF6B  F000         	goto	i2u164_49
  5306   0000C0                     i2u164_48:
  5307   0000C0  0005               	push	
  5308   0000C2  6EFA               	movwf	pclath,c
  5309   0000C4  0100               	movlb	0	; () banked
  5310   0000C6  51F3               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5311   0000C8  6EFD               	movwf	tosl,c
  5312   0000CA  51F4               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5313   0000CC  6EFE               	movwf	tosh,c
  5314   0000CE  51F5               	movf	(_EUSART1_RxDefaultInterruptHandler+2)& (0+255),w,b
  5315   0000D0  6EFF               	movwf	tosu,c
  5316   0000D2  50FA               	movf	pclath,w,c
  5317   0000D4  0012               	return		;indir
  5318   0000D6                     i2u164_49:
  5319   0000D6                     
  5320                           ;mcc_generated_files/interrupt_manager.c: 77:             modbus_char_recvd(RCREG1);
  5321   0000D6  50AE               	movf	174,w,c	;volatile
  5322   0000D8  EC1C  F089         	call	_modbus_char_recvd
  5323   0000DC                     
  5324                           ;mcc_generated_files/interrupt_manager.c: 78:             TMR0_ISR();
  5325   0000DC  EC9D  F088         	call	_TMR0_ISR	;wreg free
  5326                           
  5327                           ;mcc_generated_files/interrupt_manager.c: 79:         }
  5328   0000E0  EF72  F000         	goto	i2l386
  5329   0000E4                     i2l385:
  5330   0000E4                     i2l386:
  5331   0000E4  C014  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
  5332   0000E8  C013  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
  5333   0000EC  C012  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
  5334   0000F0  C011  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
  5335   0000F4  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5336   0000F8  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5337   0000FC  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5338   000100  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5339   000104  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5340   000106  0011               	retfie		f
  5341   000108                     __end_of_INTERRUPT_InterruptManager:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _modbus_timer *****************
  5345 ;; Defined at:
  5346 ;;		line 33 in file "modbus.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; Hardware stack levels required when called: 2
  5367 ;; This function calls:
  5368 ;;		_modbus_analyse_and_answer
  5369 ;;		_modbus_send
  5370 ;; This function is called by:
  5371 ;;		_INTERRUPT_InterruptManager
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text40
  5376   0112EE                     __ptext40:
  5377                           	callstack 0
  5378   0112EE                     _modbus_timer:
  5379                           	callstack 19
  5380   0112EE                     
  5381                           ;modbus.c: 36:     modbus_send(modbus_analyse_and_answer());
  5382   0112EE  ECE3  F087         	call	_modbus_analyse_and_answer	;wreg free
  5383   0112F2  EC3E  F089         	call	_modbus_send
  5384   0112F6                     
  5385                           ;modbus.c: 37:     index = 0;
  5386   0112F6  0E00               	movlw	0
  5387   0112F8  6E3E               	movwf	_index^0,c
  5388   0112FA  0012               	return		;funcret
  5389   0112FC                     __end_of_modbus_timer:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _modbus_send *****************
  5393 ;; Defined at:
  5394 ;;		line 64 in file "modbus.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  length          1    wreg     unsigned char 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  length          1    1[COMRAM] unsigned char 
  5399 ;;  temp16          2    0        unsigned short 
  5400 ;;  i               1    0        unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;Total ram usage:        1 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 1
  5417 ;; This function calls:
  5418 ;;		_EUSART1_Write
  5419 ;; This function is called by:
  5420 ;;		_modbus_timer
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text41
  5425   01127C                     __ptext41:
  5426                           	callstack 0
  5427   01127C                     _modbus_send:
  5428                           	callstack 19
  5429                           
  5430                           ;incstack = 0
  5431                           ;modbus_send@length stored from wreg
  5432   01127C  6E02               	movwf	modbus_send@length^0,c
  5433   01127E                     
  5434                           ;modbus.c: 64: void modbus_send(uint8_t length);modbus.c: 65: {;modbus.c: 66:  uint16_t 
      +                          temp16;;modbus.c: 67:  uint8_t i;;modbus.c: 70:  length += 2;
  5435   01127E  0E02               	movlw	2
  5436   011280  2602               	addwf	modbus_send@length^0,f,c
  5437   011282                     
  5438                           ;modbus.c: 73:   EUSART1_Write(tx_buf[0]);
  5439   011282  0102               	movlb	2	; () banked
  5440   011284  5100               	movf	_tx_buf& (0+255),w,b
  5441   011286  EC00  F087         	call	_EUSART1_Write
  5442   01128A  0012               	return		;funcret
  5443   01128C                     __end_of_modbus_send:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function _EUSART1_Write *****************
  5447 ;; Defined at:
  5448 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  txData          1    wreg     unsigned char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  txData          1    0[COMRAM] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;Total ram usage:        1 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_modbus_send
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text42
  5476   010E00                     __ptext42:
  5477                           	callstack 0
  5478   010E00                     _EUSART1_Write:
  5479                           	callstack 19
  5480                           
  5481                           ;incstack = 0
  5482                           ;EUSART1_Write@txData stored from wreg
  5483   010E00  6E01               	movwf	EUSART1_Write@txData^0,c
  5484   010E02                     i2l2277:
  5485                           
  5486                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5487   010E02  5045               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5488   010E04  B4D8               	btfsc	status,2,c
  5489   010E06  EF07  F087         	goto	i2u121_41
  5490   010E0A  EF09  F087         	goto	i2u121_40
  5491   010E0E                     i2u121_41:
  5492   010E0E  EF01  F087         	goto	i2l2277
  5493   010E12                     i2u121_40:
  5494   010E12                     
  5495                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5496   010E12  B89D               	btfsc	157,4,c	;volatile
  5497   010E14  EF0E  F087         	goto	i2u122_41
  5498   010E18  EF10  F087         	goto	i2u122_40
  5499   010E1C                     i2u122_41:
  5500   010E1C  EF14  F087         	goto	i2l258
  5501   010E20                     i2u122_40:
  5502   010E20                     
  5503                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5504   010E20  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5505                           
  5506                           ;mcc_generated_files/eusart1.c: 182:     }
  5507   010E24  EF29  F087         	goto	i2l2291
  5508   010E28                     i2l258:
  5509                           
  5510                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5511   010E28  989D               	bcf	157,4,c	;volatile
  5512   010E2A                     
  5513                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5514   010E2A  0E70               	movlw	low _eusart1TxBuffer
  5515   010E2C  2447               	addwf	_eusart1TxHead^0,w,c	;volatile
  5516   010E2E  6ED9               	movwf	fsr2l,c
  5517   010E30  6ADA               	clrf	fsr2h,c
  5518   010E32  0E00               	movlw	high _eusart1TxBuffer
  5519   010E34  22DA               	addwfc	fsr2h,f,c
  5520   010E36  C001  FFDF         	movff	EUSART1_Write@txData,indf2
  5521   010E3A  2A47               	incf	_eusart1TxHead^0,f,c	;volatile
  5522   010E3C                     
  5523                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5524   010E3C  0E07               	movlw	7
  5525   010E3E  6447               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5526   010E40  EF24  F087         	goto	i2u123_41
  5527   010E44  EF26  F087         	goto	i2u123_40
  5528   010E48                     i2u123_41:
  5529   010E48  EF28  F087         	goto	i2l2289
  5530   010E4C                     i2u123_40:
  5531   010E4C                     
  5532                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5533   010E4C  0E00               	movlw	0
  5534   010E4E  6E47               	movwf	_eusart1TxHead^0,c	;volatile
  5535   010E50                     i2l2289:
  5536                           
  5537                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5538   010E50  0645               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5539   010E52                     i2l2291:
  5540                           
  5541                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5542   010E52  889D               	bsf	157,4,c	;volatile
  5543   010E54  0012               	return		;funcret
  5544   010E56                     __end_of_EUSART1_Write:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function _modbus_analyse_and_answer *****************
  5548 ;; Defined at:
  5549 ;;		line 40 in file "modbus.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  crc             2   10[COMRAM] unsigned short 
  5554 ;;  crcAtt          2    0        unsigned short 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      unsigned char 
  5557 ;; Registers used:
  5558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;Total ram usage:        3 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 1
  5571 ;; This function calls:
  5572 ;;		_CRC16
  5573 ;; This function is called by:
  5574 ;;		_modbus_timer
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text43
  5579   010FC6                     __ptext43:
  5580                           	callstack 0
  5581   010FC6                     _modbus_analyse_and_answer:
  5582                           	callstack 19
  5583   010FC6                     
  5584                           ;modbus.c: 44:     uint16_t crc = rx_buf[index];
  5585   010FC6  0E00               	movlw	low _rx_buf
  5586   010FC8  243E               	addwf	_index^0,w,c
  5587   010FCA  6ED9               	movwf	fsr2l,c
  5588   010FCC  6ADA               	clrf	fsr2h,c
  5589   010FCE  0E01               	movlw	high _rx_buf
  5590   010FD0  22DA               	addwfc	fsr2h,f,c
  5591   010FD2  50DF               	movf	indf2,w,c
  5592   010FD4  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5593   010FD6  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5594   010FD8  6E0B               	movwf	modbus_analyse_and_answer@crc^0,c
  5595   010FDA  6A0C               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  5596                           
  5597                           ;modbus.c: 46:     crc += rx_buf[index-1];
  5598   010FDC  0EFF               	movlw	low (_rx_buf+65535)
  5599   010FDE  243E               	addwf	_index^0,w,c
  5600   010FE0  6ED9               	movwf	fsr2l,c
  5601   010FE2  6ADA               	clrf	fsr2h,c
  5602   010FE4  0E00               	movlw	high (_rx_buf+65535)
  5603   010FE6  22DA               	addwfc	fsr2h,f,c
  5604   010FE8  50DF               	movf	indf2,w,c
  5605   010FEA  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5606   010FEC  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5607   010FEE  260B               	addwf	modbus_analyse_and_answer@crc^0,f,c
  5608   010FF0  0E00               	movlw	0
  5609   010FF2  220C               	addwfc	(modbus_analyse_and_answer@crc+1)^0,f,c
  5610   010FF4  0E00               	movlw	low _rx_buf
  5611   010FF6  6E01               	movwf	CRC16@msg^0,c
  5612   010FF8  0E01               	movlw	high _rx_buf
  5613   010FFA  6E02               	movwf	(CRC16@msg+1)^0,c
  5614   010FFC  C03E  F003         	movff	_index,CRC16@length
  5615   011000  6A04               	clrf	(CRC16@length+1)^0,c
  5616   011002  EC34  F086         	call	_CRC16	;wreg free
  5617   011006  0012               	return		;funcret
  5618   011008                     __end_of_modbus_analyse_and_answer:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _CRC16 *****************
  5622 ;; Defined at:
  5623 ;;		line 48 in file "crc.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  msg             2    0[COMRAM] PTR const unsigned char 
  5626 ;;		 -> rx_buf(256), 
  5627 ;;  length          2    2[COMRAM] unsigned short 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  uchCRCLo        1    8[COMRAM] unsigned char 
  5630 ;;  uchCRCHi        1    7[COMRAM] unsigned char 
  5631 ;;  uIndex          1    6[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  2    0[COMRAM] unsigned short 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;Total ram usage:        9 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_modbus_analyse_and_answer
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text44
  5655   010C68                     __ptext44:
  5656                           	callstack 0
  5657   010C68                     _CRC16:
  5658                           	callstack 19
  5659   010C68                     
  5660                           ;crc.c: 48: uint16_t CRC16(const uint8_t *msg, uint16_t length);crc.c: 49: {;crc.c: 50: 
      +                           uint8_t uchCRCHi = 0xFF;
  5661   010C68  6808               	setf	CRC16@uchCRCHi^0,c
  5662                           
  5663                           ;crc.c: 51:  uint8_t uchCRCLo = 0xFF;
  5664   010C6A  6809               	setf	CRC16@uchCRCLo^0,c
  5665                           
  5666                           ;crc.c: 52:  uint8_t uIndex;;crc.c: 54:  while (length--) {
  5667   010C6C  EF5A  F086         	goto	i2l2315
  5668   010C70                     i2l2307:
  5669                           
  5670                           ;crc.c: 55:   uIndex = uchCRCLo ^ *msg++;
  5671   010C70  C001  FFD9         	movff	CRC16@msg,fsr2l
  5672   010C74  C002  FFDA         	movff	CRC16@msg+1,fsr2h
  5673   010C78  50DF               	movf	indf2,w,c
  5674   010C7A  1809               	xorwf	CRC16@uchCRCLo^0,w,c
  5675   010C7C  6E07               	movwf	CRC16@uIndex^0,c
  5676   010C7E  4A01               	infsnz	CRC16@msg^0,f,c
  5677   010C80  2A02               	incf	(CRC16@msg+1)^0,f,c
  5678   010C82                     
  5679                           ;crc.c: 56:   uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex];
  5680   010C82  0EE5               	movlw	low _auchCRCHi
  5681   010C84  2407               	addwf	CRC16@uIndex^0,w,c
  5682   010C86  6EF6               	movwf	tblptrl,c
  5683   010C88  6AF7               	clrf	tblptrh,c
  5684   010C8A  0EFE               	movlw	high _auchCRCHi
  5685   010C8C  22F7               	addwfc	tblptrh,f,c
  5686   010C8E                     	if	1	;There are 3 active tblptr bytes
  5687   010C8E  6AF8               	clrf	tblptru,c
  5688   010C90  0E00               	movlw	low (__mediumconst shr (0+16))
  5689   010C92  22F8               	addwfc	tblptru,f,c
  5690   010C94                     	endif
  5691   010C94  0008               	tblrd		*
  5692   010C96  50F5               	movf	tablat,w,c
  5693   010C98  1808               	xorwf	CRC16@uchCRCHi^0,w,c
  5694   010C9A  6E09               	movwf	CRC16@uchCRCLo^0,c
  5695   010C9C                     
  5696                           ;crc.c: 57:   uchCRCHi = auchCRCLo[uIndex];
  5697   010C9C  0EE5               	movlw	low _auchCRCLo
  5698   010C9E  2407               	addwf	CRC16@uIndex^0,w,c
  5699   010CA0  6EF6               	movwf	tblptrl,c
  5700   010CA2  6AF7               	clrf	tblptrh,c
  5701   010CA4  0EFD               	movlw	high _auchCRCLo
  5702   010CA6  22F7               	addwfc	tblptrh,f,c
  5703   010CA8                     	if	1	;There are 3 active tblptr bytes
  5704   010CA8  6AF8               	clrf	tblptru,c
  5705   010CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5706   010CAC  22F8               	addwfc	tblptru,f,c
  5707   010CAE                     	endif
  5708   010CAE  0008               	tblrd		*
  5709   010CB0  CFF5 F008          	movff	tablat,CRC16@uchCRCHi
  5710   010CB4                     i2l2315:
  5711                           
  5712                           ;crc.c: 54:  while (length--) {
  5713   010CB4  0603               	decf	CRC16@length^0,f,c
  5714   010CB6  A0D8               	btfss	status,0,c
  5715   010CB8  0604               	decf	(CRC16@length+1)^0,f,c
  5716   010CBA  2803               	incf	CRC16@length^0,w,c
  5717   010CBC  E106               	bnz	i2u125_41
  5718   010CBE  2804               	incf	(CRC16@length+1)^0,w,c
  5719   010CC0  A4D8               	btfss	status,2,c
  5720   010CC2  EF65  F086         	goto	i2u125_41
  5721   010CC6  EF67  F086         	goto	i2u125_40
  5722   010CCA                     i2u125_41:
  5723   010CCA  EF38  F086         	goto	i2l2307
  5724   010CCE                     i2u125_40:
  5725   010CCE                     
  5726                           ;crc.c: 59:  return (uchCRCHi << 8 | uchCRCLo);
  5727   010CCE  5009               	movf	CRC16@uchCRCLo^0,w,c
  5728   010CD0  C008  F005         	movff	CRC16@uchCRCHi,??_CRC16
  5729   010CD4  6A06               	clrf	(??_CRC16+1)^0,c
  5730   010CD6  C005  F006         	movff	??_CRC16,??_CRC16+1
  5731   010CDA  6A05               	clrf	??_CRC16^0,c
  5732   010CDC  1005               	iorwf	??_CRC16^0,w,c
  5733   010CDE  6E01               	movwf	?_CRC16^0,c
  5734   010CE0  5006               	movf	(??_CRC16+1)^0,w,c
  5735   010CE2  6E02               	movwf	(?_CRC16+1)^0,c
  5736   010CE4  0012               	return		;funcret
  5737   010CE6                     __end_of_CRC16:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _modbus_char_recvd *****************
  5741 ;; Defined at:
  5742 ;;		line 56 in file "modbus.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  c               1    wreg     unsigned char 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  c               1    0[COMRAM] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;Total ram usage:        1 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_INTERRUPT_InterruptManager
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text45
  5770   011238                     __ptext45:
  5771                           	callstack 0
  5772   011238                     _modbus_char_recvd:
  5773                           	callstack 21
  5774                           
  5775                           ;incstack = 0
  5776                           ;modbus_char_recvd@c stored from wreg
  5777   011238  6E01               	movwf	modbus_char_recvd@c^0,c
  5778   01123A                     
  5779                           ;modbus.c: 56: void modbus_char_recvd(uint8_t c);modbus.c: 57: {;modbus.c: 59:     TMR0O
      +                          N = 1;
  5780   01123A  8ED5               	bsf	4053,7,c	;volatile
  5781   01123C                     
  5782                           ;modbus.c: 60:     rx_buf[index] = c;
  5783   01123C  0E00               	movlw	low _rx_buf
  5784   01123E  243E               	addwf	_index^0,w,c
  5785   011240  6ED9               	movwf	fsr2l,c
  5786   011242  6ADA               	clrf	fsr2h,c
  5787   011244  0E01               	movlw	high _rx_buf
  5788   011246  22DA               	addwfc	fsr2h,f,c
  5789   011248  C001  FFDF         	movff	modbus_char_recvd@c,indf2
  5790   01124C                     
  5791                           ;modbus.c: 61:     index ++;
  5792   01124C  2A3E               	incf	_index^0,f,c
  5793   01124E  0012               	return		;funcret
  5794   011250                     __end_of_modbus_char_recvd:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _TMR0_ISR *****************
  5798 ;; Defined at:
  5799 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;Total ram usage:        0 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; Hardware stack levels required when called: 1
  5820 ;; This function calls:
  5821 ;;		NULL
  5822 ;;		_TMR0_DefaultInterruptHandler
  5823 ;; This function is called by:
  5824 ;;		_INTERRUPT_InterruptManager
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text46
  5829   01113A                     __ptext46:
  5830                           	callstack 0
  5831   01113A                     _TMR0_ISR:
  5832                           	callstack 20
  5833   01113A                     
  5834                           ;mcc_generated_files/tmr0.c: 133:     INTCONbits.TMR0IF = 0;
  5835   01113A  94F2               	bcf	242,2,c	;volatile
  5836                           
  5837                           ;mcc_generated_files/tmr0.c: 136:     TMR0L = timer0ReloadVal;
  5838   01113C  C040  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5839   011140                     
  5840                           ;mcc_generated_files/tmr0.c: 138:     if(TMR0_InterruptHandler)
  5841   011140  5048               	movf	_TMR0_InterruptHandler^0,w,c
  5842   011142  1049               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5843   011144  104A               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  5844   011146  B4D8               	btfsc	status,2,c
  5845   011148  EFA8  F088         	goto	i2u146_41
  5846   01114C  EFAA  F088         	goto	i2u146_40
  5847   011150                     i2u146_41:
  5848   011150  EFB7  F088         	goto	i2l342
  5849   011154                     i2u146_40:
  5850   011154                     
  5851                           ;mcc_generated_files/tmr0.c: 139:     {;mcc_generated_files/tmr0.c: 140:         TMR0_In
      +                          terruptHandler();
  5852   011154  D802               	call	i2u147_48
  5853   011156  EFB7  F088         	goto	i2u147_49
  5854   01115A                     i2u147_48:
  5855   01115A  0005               	push	
  5856   01115C  6EFA               	movwf	pclath,c
  5857   01115E  5048               	movf	_TMR0_InterruptHandler^0,w,c
  5858   011160  6EFD               	movwf	tosl,c
  5859   011162  5049               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5860   011164  6EFE               	movwf	tosh,c
  5861   011166  504A               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  5862   011168  6EFF               	movwf	tosu,c
  5863   01116A  50FA               	movf	pclath,w,c
  5864   01116C  0012               	return		;indir
  5865   01116E                     i2u147_49:
  5866   01116E                     i2l342:
  5867   01116E  0012               	return		;funcret
  5868   011170                     __end_of_TMR0_ISR:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5872 ;; Defined at:
  5873 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;		None
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		None
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:        0 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_TMR0_Initialize
  5897 ;;		_TMR0_ISR
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text47
  5902   011318                     __ptext47:
  5903                           	callstack 0
  5904   011318                     _TMR0_DefaultInterruptHandler:
  5905                           	callstack 20
  5906   011318  0012               	return		;funcret
  5907   01131A                     __end_of_TMR0_DefaultInterruptHandler:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function _EUSART1_Transmit_ISR *****************
  5911 ;; Defined at:
  5912 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_EUSART1_Initialize
  5936 ;;		_INTERRUPT_InterruptManager
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text48
  5941   011088                     __ptext48:
  5942                           	callstack 0
  5943   011088                     _EUSART1_Transmit_ISR:
  5944                           	callstack 21
  5945   011088                     
  5946                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  5947   011088  0E08               	movlw	8
  5948   01108A  6045               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  5949   01108C  EF4A  F088         	goto	i2u138_41
  5950   011090  EF4C  F088         	goto	i2u138_40
  5951   011094                     i2u138_41:
  5952   011094  EF62  F088         	goto	i2l264
  5953   011098                     i2u138_40:
  5954   011098                     
  5955                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  5956   011098  0E70               	movlw	low _eusart1TxBuffer
  5957   01109A  2446               	addwf	_eusart1TxTail^0,w,c	;volatile
  5958   01109C  6ED9               	movwf	fsr2l,c
  5959   01109E  6ADA               	clrf	fsr2h,c
  5960   0110A0  0E00               	movlw	high _eusart1TxBuffer
  5961   0110A2  22DA               	addwfc	fsr2h,f,c
  5962   0110A4  50DF               	movf	indf2,w,c
  5963   0110A6  6EAD               	movwf	173,c	;volatile
  5964   0110A8  2A46               	incf	_eusart1TxTail^0,f,c	;volatile
  5965   0110AA                     
  5966                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  5967   0110AA  0E07               	movlw	7
  5968   0110AC  6446               	cpfsgt	_eusart1TxTail^0,c	;volatile
  5969   0110AE  EF5B  F088         	goto	i2u139_41
  5970   0110B2  EF5D  F088         	goto	i2u139_40
  5971   0110B6                     i2u139_41:
  5972   0110B6  EF5F  F088         	goto	i2l2581
  5973   0110BA                     i2u139_40:
  5974   0110BA                     
  5975                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  5976   0110BA  0E00               	movlw	0
  5977   0110BC  6E46               	movwf	_eusart1TxTail^0,c	;volatile
  5978   0110BE                     i2l2581:
  5979                           
  5980                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  5981   0110BE  2A45               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5982                           
  5983                           ;mcc_generated_files/eusart1.c: 209:     }
  5984   0110C0  EF63  F088         	goto	i2l267
  5985   0110C4                     i2l264:
  5986                           
  5987                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE1bits.TX1IE = 0;
  5988   0110C4  989D               	bcf	157,4,c	;volatile
  5989   0110C6                     i2l267:
  5990   0110C6  0012               	return		;funcret
  5991   0110C8                     __end_of_EUSART1_Transmit_ISR:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function _EUSART1_Receive_ISR *****************
  5995 ;; Defined at:
  5996 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 2
  6017 ;; This function calls:
  6018 ;;		NULL
  6019 ;;		_EUSART1_DefaultErrorHandler
  6020 ;;		_EUSART1_DefaultFramingErrorHandler
  6021 ;;		_EUSART1_DefaultOverrunErrorHandler
  6022 ;;		_EUSART1_RxDataHandler
  6023 ;; This function is called by:
  6024 ;;		_EUSART1_Initialize
  6025 ;;		_INTERRUPT_InterruptManager
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text49
  6030   01086E                     __ptext49:
  6031                           	callstack 0
  6032   01086E                     _EUSART1_Receive_ISR:
  6033                           	callstack 19
  6034   01086E                     
  6035                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6036   01086E  0E60               	movlw	low _eusart1RxStatusBuffer
  6037   010870  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6038   010872  6ED9               	movwf	fsr2l,c
  6039   010874  6ADA               	clrf	fsr2h,c
  6040   010876  0E00               	movlw	high _eusart1RxStatusBuffer
  6041   010878  22DA               	addwfc	fsr2h,f,c
  6042   01087A  6ADF               	clrf	indf2,c
  6043   01087C                     
  6044                           ;mcc_generated_files/eusart1.c: 221:     if(RCSTA1bits.FERR){
  6045   01087C  A4AB               	btfss	171,2,c	;volatile
  6046   01087E  EF43  F084         	goto	i2u140_41
  6047   010882  EF45  F084         	goto	i2u140_40
  6048   010886                     i2u140_41:
  6049   010886  EF5A  F084         	goto	i2l2591
  6050   01088A                     i2u140_40:
  6051   01088A                     
  6052                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6053   01088A  0E60               	movlw	low _eusart1RxStatusBuffer
  6054   01088C  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6055   01088E  6ED9               	movwf	fsr2l,c
  6056   010890  6ADA               	clrf	fsr2h,c
  6057   010892  0E00               	movlw	high _eusart1RxStatusBuffer
  6058   010894  22DA               	addwfc	fsr2h,f,c
  6059   010896  0100               	movlb	0	; () banked
  6060   010898  82DF               	bsf	indf2,1,c
  6061   01089A                     
  6062                           ; BSR set to: 0
  6063                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6064   01089A  D802               	call	i2u141_48
  6065   01089C  EF5A  F084         	goto	i2u141_49
  6066   0108A0                     i2u141_48:
  6067   0108A0  0005               	push	
  6068   0108A2  6EFA               	movwf	pclath,c
  6069   0108A4  51F0               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6070   0108A6  6EFD               	movwf	tosl,c
  6071   0108A8  51F1               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6072   0108AA  6EFE               	movwf	tosh,c
  6073   0108AC  51F2               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  6074   0108AE  6EFF               	movwf	tosu,c
  6075   0108B0  50FA               	movf	pclath,w,c
  6076   0108B2  0012               	return		;indir
  6077   0108B4                     i2u141_49:
  6078   0108B4                     i2l2591:
  6079                           
  6080                           ;mcc_generated_files/eusart1.c: 226:     if(RCSTA1bits.OERR){
  6081   0108B4  A2AB               	btfss	171,1,c	;volatile
  6082   0108B6  EF5F  F084         	goto	i2u142_41
  6083   0108BA  EF61  F084         	goto	i2u142_40
  6084   0108BE                     i2u142_41:
  6085   0108BE  EF76  F084         	goto	i2l2597
  6086   0108C2                     i2u142_40:
  6087   0108C2                     
  6088                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6089   0108C2  0E60               	movlw	low _eusart1RxStatusBuffer
  6090   0108C4  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6091   0108C6  6ED9               	movwf	fsr2l,c
  6092   0108C8  6ADA               	clrf	fsr2h,c
  6093   0108CA  0E00               	movlw	high _eusart1RxStatusBuffer
  6094   0108CC  22DA               	addwfc	fsr2h,f,c
  6095   0108CE  0100               	movlb	0	; () banked
  6096   0108D0  84DF               	bsf	indf2,2,c
  6097   0108D2                     
  6098                           ; BSR set to: 0
  6099                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6100   0108D2  D802               	call	i2u143_48
  6101   0108D4  EF76  F084         	goto	i2u143_49
  6102   0108D8                     i2u143_48:
  6103   0108D8  0005               	push	
  6104   0108DA  6EFA               	movwf	pclath,c
  6105   0108DC  51ED               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6106   0108DE  6EFD               	movwf	tosl,c
  6107   0108E0  51EE               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6108   0108E2  6EFE               	movwf	tosh,c
  6109   0108E4  51EF               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  6110   0108E6  6EFF               	movwf	tosu,c
  6111   0108E8  50FA               	movf	pclath,w,c
  6112   0108EA  0012               	return		;indir
  6113   0108EC                     i2u143_49:
  6114   0108EC                     i2l2597:
  6115                           
  6116                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6117   0108EC  0E60               	movlw	low _eusart1RxStatusBuffer
  6118   0108EE  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6119   0108F0  6ED9               	movwf	fsr2l,c
  6120   0108F2  6ADA               	clrf	fsr2h,c
  6121   0108F4  0E00               	movlw	high _eusart1RxStatusBuffer
  6122   0108F6  22DA               	addwfc	fsr2h,f,c
  6123   0108F8  50DF               	movf	indf2,w,c
  6124   0108FA  B4D8               	btfsc	status,2,c
  6125   0108FC  EF82  F084         	goto	i2u144_41
  6126   010900  EF84  F084         	goto	i2u144_40
  6127   010904                     i2u144_41:
  6128   010904  EF94  F084         	goto	i2l2601
  6129   010908                     i2u144_40:
  6130   010908                     
  6131                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6132   010908  D802               	call	i2u145_48
  6133   01090A  EF92  F084         	goto	i2u145_49
  6134   01090E                     i2u145_48:
  6135   01090E  0005               	push	
  6136   010910  6EFA               	movwf	pclath,c
  6137   010912  0100               	movlb	0	; () banked
  6138   010914  51EA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6139   010916  6EFD               	movwf	tosl,c
  6140   010918  51EB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6141   01091A  6EFE               	movwf	tosh,c
  6142   01091C  51EC               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  6143   01091E  6EFF               	movwf	tosu,c
  6144   010920  50FA               	movf	pclath,w,c
  6145   010922  0012               	return		;indir
  6146   010924                     i2u145_49:
  6147                           
  6148                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6149   010924  EF96  F084         	goto	i2l274
  6150   010928                     i2l2601:
  6151                           
  6152                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6153   010928  ECD0  F088         	call	_EUSART1_RxDataHandler	;wreg free
  6154   01092C                     i2l274:
  6155   01092C  0012               	return		;funcret
  6156   01092E                     __end_of_EUSART1_Receive_ISR:
  6157                           	callstack 0
  6158                           
  6159 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6160 ;; Defined at:
  6161 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;		None
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		None
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;Total ram usage:        0 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_EUSART1_Initialize
  6185 ;;		_EUSART1_Receive_ISR
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text50
  6190   011306                     __ptext50:
  6191                           	callstack 0
  6192   011306                     _EUSART1_DefaultOverrunErrorHandler:
  6193                           	callstack 20
  6194   011306                     
  6195                           ;mcc_generated_files/eusart1.c: 255:     RCSTA1bits.CREN = 0;
  6196   011306  98AB               	bcf	171,4,c	;volatile
  6197                           
  6198                           ;mcc_generated_files/eusart1.c: 256:     RCSTA1bits.CREN = 1;
  6199   011308  88AB               	bsf	171,4,c	;volatile
  6200   01130A  0012               	return		;funcret
  6201   01130C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6205 ;; Defined at:
  6206 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		None
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_EUSART1_Initialize
  6230 ;;		_EUSART1_Receive_ISR
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text51
  6235   01131A                     __ptext51:
  6236                           	callstack 0
  6237   01131A                     _EUSART1_DefaultFramingErrorHandler:
  6238                           	callstack 20
  6239   01131A  0012               	return		;funcret
  6240   01131C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6244 ;; Defined at:
  6245 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;Total ram usage:        0 bytes
  6264 ;; Hardware stack levels used: 1
  6265 ;; Hardware stack levels required when called: 1
  6266 ;; This function calls:
  6267 ;;		_EUSART1_RxDataHandler
  6268 ;; This function is called by:
  6269 ;;		_EUSART1_Initialize
  6270 ;;		_EUSART1_Receive_ISR
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text52
  6275   01130C                     __ptext52:
  6276                           	callstack 0
  6277   01130C                     _EUSART1_DefaultErrorHandler:
  6278                           	callstack 19
  6279   01130C                     
  6280                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  6281   01130C  ECD0  F088         	call	_EUSART1_RxDataHandler	;wreg free
  6282   011310  0012               	return		;funcret
  6283   011312                     __end_of_EUSART1_DefaultErrorHandler:
  6284                           	callstack 0
  6285                           
  6286 ;; *************** function _EUSART1_RxDataHandler *****************
  6287 ;; Defined at:
  6288 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_EUSART1_Receive_ISR
  6312 ;;		_EUSART1_DefaultErrorHandler
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text53
  6317   0111A0                     __ptext53:
  6318                           	callstack 0
  6319   0111A0                     _EUSART1_RxDataHandler:
  6320                           	callstack 20
  6321   0111A0                     
  6322                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6323   0111A0  0E68               	movlw	low _eusart1RxBuffer
  6324   0111A2  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6325   0111A4  6ED9               	movwf	fsr2l,c
  6326   0111A6  6ADA               	clrf	fsr2h,c
  6327   0111A8  0E00               	movlw	high _eusart1RxBuffer
  6328   0111AA  22DA               	addwfc	fsr2h,f,c
  6329   0111AC  CFAE FFDF          	movff	4014,indf2	;volatile
  6330   0111B0  2A44               	incf	_eusart1RxHead^0,f,c	;volatile
  6331   0111B2                     
  6332                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6333   0111B2  0E07               	movlw	7
  6334   0111B4  6444               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6335   0111B6  EFDF  F088         	goto	i2u124_41
  6336   0111BA  EFE1  F088         	goto	i2u124_40
  6337   0111BE                     i2u124_41:
  6338   0111BE  EFE3  F088         	goto	i2l2301
  6339   0111C2                     i2u124_40:
  6340   0111C2                     
  6341                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  6342   0111C2  0E00               	movlw	0
  6343   0111C4  6E44               	movwf	_eusart1RxHead^0,c	;volatile
  6344   0111C6                     i2l2301:
  6345                           
  6346                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  6347   0111C6  2A42               	incf	_eusart1RxCount^0,f,c	;volatile
  6348   0111C8  0012               	return		;funcret
  6349   0111CA                     __end_of_EUSART1_RxDataHandler:
  6350                           	callstack 0
  6351                           
  6352                           	psect	text54
  6353   000000                     __ptext54:
  6354                           	callstack 0
  6355   000000                     
  6356                           	psect	rparam
  6357   000000                     
  6358                           	psect	temp
  6359   00004B                     btemp:
  6360                           	callstack 0
  6361   00004B                     	ds	1
  6362   000000                     int$flags	set	btemp
  6363   000000                     wtemp8	set	btemp+1
  6364   000000                     ttemp5	set	btemp+1
  6365   000000                     ttemp6	set	btemp+4
  6366   000000                     ttemp7	set	btemp+8
  6367                           
  6368                           	psect	config
  6369                           
  6370                           ;Config register CONFIG1L @ 0x1FFF8
  6371                           ;	Watchdog Timer Enable bit
  6372                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  6373                           ;	Stack Overflow/Underflow Reset Enable bit
  6374                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  6375                           ;	Extended Instruction Set Enable bit
  6376                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6377                           ;	Background Debugger Enable bit
  6378                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  6379   01FFF8                     	org	131064
  6380   01FFF8  A0                 	db	160
  6381                           
  6382                           ;Config register CONFIG1H @ 0x1FFF9
  6383                           ;	Code Protection bit
  6384                           ;	CP0 = OFF, Program memory is not code-protected
  6385   01FFF9                     	org	131065
  6386   01FFF9  F4                 	db	244
  6387                           
  6388                           ;Config register CONFIG2L @ 0x1FFFA
  6389                           ;	Oscillator Selection bits
  6390                           ;	FOSC = HS, HS oscillator
  6391                           ;	Default/Reset System Clock Select bit
  6392                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  6393                           ;	Fail-Safe Clock Monitor Enable
  6394                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6395                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  6396                           ;	IESO = ON, Two-Speed Start-up enabled
  6397   01FFFA                     	org	131066
  6398   01FFFA  C4                 	db	196
  6399                           
  6400                           ;Config register CONFIG2H @ 0x1FFFB
  6401                           ;	Watchdog Timer Postscaler Select bits
  6402                           ;	WDTPS = 32768, 1:32768
  6403   01FFFB                     	org	131067
  6404   01FFFB  FF                 	db	255
  6405                           
  6406                           ;Config register CONFIG3L @ 0x1FFFC
  6407                           ;	External Address Bus Shift Enable bit
  6408                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  6409                           ;	External Memory Bus
  6410                           ;	MODE = MM, Microcontroller mode, external bus disabled
  6411                           ;	Data Bus Width Select bit
  6412                           ;	BW = 16, 16-Bit Data Width mode
  6413                           ;	External Bus Wait Enable bit
  6414                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  6415   01FFFC                     	org	131068
  6416   01FFFC  F8                 	db	248
  6417                           
  6418                           ;Config register CONFIG3H @ 0x1FFFD
  6419                           ;	ECCP2 MUX bit
  6420                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  6421                           ;	ECCP MUX bit
  6422                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  6423                           ;	Ethernet LED Enable bit
  6424                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  6425   01FFFD                     	org	131069
  6426   01FFFD  F7                 	db	247
  6427                           tosu	equ	0xFFF
  6428                           tosh	equ	0xFFE
  6429                           tosl	equ	0xFFD
  6430                           stkptr	equ	0xFFC
  6431                           pclatu	equ	0xFFB
  6432                           pclath	equ	0xFFA
  6433                           pcl	equ	0xFF9
  6434                           tblptru	equ	0xFF8
  6435                           tblptrh	equ	0xFF7
  6436                           tblptrl	equ	0xFF6
  6437                           tablat	equ	0xFF5
  6438                           prodh	equ	0xFF4
  6439                           prodl	equ	0xFF3
  6440                           indf0	equ	0xFEF
  6441                           postinc0	equ	0xFEE
  6442                           postdec0	equ	0xFED
  6443                           preinc0	equ	0xFEC
  6444                           plusw0	equ	0xFEB
  6445                           fsr0h	equ	0xFEA
  6446                           fsr0l	equ	0xFE9
  6447                           wreg	equ	0xFE8
  6448                           indf1	equ	0xFE7
  6449                           postinc1	equ	0xFE6
  6450                           postdec1	equ	0xFE5
  6451                           preinc1	equ	0xFE4
  6452                           plusw1	equ	0xFE3
  6453                           fsr1h	equ	0xFE2
  6454                           fsr1l	equ	0xFE1
  6455                           bsr	equ	0xFE0
  6456                           indf2	equ	0xFDF
  6457                           postinc2	equ	0xFDE
  6458                           postdec2	equ	0xFDD
  6459                           preinc2	equ	0xFDC
  6460                           plusw2	equ	0xFDB
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    512
    Data        0
    BSS         597
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      74
    BANK0           160     69     153
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1662$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1603$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1603$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_2x16_WriteMsg@msg	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK0[20]), 

    CRC16@msg	PTR const unsigned char  size(2) Largest target is 256
		 -> rx_buf(BANK1[256]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _measure_voltage->___lldiv
    _measure_current->___lldiv
    ___lldiv->___lmul
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _Lcd_Init->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteData

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _modbus_timer->_modbus_analyse_and_answer
    _modbus_send->_EUSART1_Write
    _modbus_analyse_and_answer->_CRC16

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   14520
                                             49 BANK0     20    20      0
                _EPWM1_LoadDutyValue
                  _LCD_2x16_WriteMsg
                           _Lcd_Init
                  _SYSTEM_Initialize
                    _measure_current
                    _measure_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    8781
                                             29 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8109
                                             53 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    7621
                                             51 COMRAM     2     2      0
                                              9 BANK0     14     8      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     852
                                             26 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    5041
                                             47 COMRAM     4     0      4
                                              0 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             36 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                             29 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                             20 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _measure_voltage                                      9     7      2    1916
                                             45 COMRAM     9     7      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _measure_current                                     12    10      2    2325
                                             45 COMRAM     6     4      2
                                              0 BANK0      6     6      0
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             32 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      67
                                             22 COMRAM     2     2      0
                  _LCD_2x16_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_2x16_WriteMsg                                    3     0      3     505
                                             22 COMRAM     3     0      3
                  _LCD_2x16_WriteCmd
                 _LCD_2x16_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteData                                   2     2      0      67
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteCmd                                    2     2      0      67
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     196
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           8     8      0     448
                                             12 COMRAM     8     8      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                  _modbus_char_recvd
                       _modbus_timer
 ---------------------------------------------------------------------------------
 (10) _modbus_timer                                        0     0      0     426
          _modbus_analyse_and_answer
                        _modbus_send
 ---------------------------------------------------------------------------------
 (11) _modbus_send                                         4     4      0      45
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _modbus_analyse_and_answer                           5     5      0     381
                                              9 COMRAM     3     3      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (12) _CRC16                                               9     5      4     334
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _modbus_char_recvd                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _LCD_2x16_WriteMsg
     _LCD_2x16_WriteCmd
     _LCD_2x16_WriteData
   _Lcd_Init
     _LCD_2x16_WriteCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _measure_current
     _ADC_GetConversion
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _measure_voltage
     _ADC_GetConversion
     ___lldiv
     ___lmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _modbus_char_recvd *
   _modbus_timer *
     _modbus_analyse_and_answer
       _CRC16
     _modbus_send
       _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      52        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      99       5       95.6%
BITBIGSFR           80      0       0      51        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      50        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4A       1       78.7%
BITBIGSFR_1hhl      1A      0       0      38        0.0%
BITBIGSFR_1llll     19      0       0      49        0.0%
BITBIGSFR_1hhh       D      0       0      37        0.0%
BITBIGSFR_1lhll      C      0       0      45        0.0%
BITBIGSFR_1llll      9      0       0      47        0.0%
BITBIGSFR_1lhll      6      0       0      44        0.0%
BITBIGSFR_1lhll      6      0       0      43        0.0%
BITBIGSFR_1lhhh      5      0       0      42        0.0%
BITBIGSFR_1llll      4      0       0      48        0.0%
BITBIGSFR_1lhhh      3      0       0      41        0.0%
BITBIGSFR_1lhhh      2      0       0      40        0.0%
BITBIGSFR_1lhll      1      0       0      46        0.0%
BITBIGSFR_1hl        1      0       0      39        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E3      32        0.0%
DATA                 0      0     2E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Feb 28 16:19:18 2023

                      _eusart1TxBufferRemaining 0045                                              l23 1236  
                                            l26 1304                                              l60 10E0  
                                            l45 127A                                              l63 1100  
                                  ___awdiv@sign 001A                             ___wmul@multiplicand 0017  
                               _timer0ReloadVal 0040                                             l123 1264  
                                           l107 1086                                             l126 119E  
                                           l302 12C2                                             l233 0C66  
                                           l323 1214                                             l139 1298  
                                           l501 0DA8                                             l504 0EF2  
                                           l512 11EE                                             l345 12A6  
                                           l433 054E                                             l290 12DE  
                                           l523 0D3E                                             l427 09E0  
                                           l524 0D4E                                             l509 1138  
                                           l293 12D0                                             l373 1314  
                                           l296 12EC                                             l546 0BDE  
                                           l299 12B4                                             l539 0BCE  
                                           l743 07AA                                             l498 0FC4  
                                           l756 0A90                                             _PR2 0FCB  
                                           _abs 1008                                             _pad 0A92  
                               _input_registers 0078                                    ___awmod@sign 001A  
                               _TMR2_Initialize 128C                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                       __end_of_measure_current 0550                                            ?_abs 001B  
                                          l1213 0AD6                                            l1216 0B18  
                                          l1240 03AE                                            l1224 0238  
                                          l3001 0550                                            l1218 0B3A  
                                          l1226 0240                                            l1227 0286  
                                          l3011 05E8                                            l3003 0558  
                                          l1244 0614                                            l3101 0B84  
                                          l3005 0580                                            l3021 0046  
                                          l3013 0000                                            l1190 0EA4  
                                          l2303 129A                                            l3111 0BC8  
                                          l3103 0B8E                                            l3007 05BA  
                                          l1263 01DE                                            l3031 0074  
                                          l3023 0054                                            l3015 0028  
                                          l1248 061C                                            l2401 1250  
                                          l3105 0BAC                                            l1273 103E  
                                          l3009 05DA                                            l3041 00F2  
                                          l3025 0056                                            l3033 00AC  
                                          l3017 0036                                            l3113 0DAA  
                                          l3201 0828                                            l2411 11FC  
                                          l2403 128C                                            l3107 0BBC  
                                          l3131 03E2                                            l3123 03B0  
                                          l3043 0102                                            l3035 00BE  
                                          l3027 0068                                            l3019 0042  
                                          l3115 0DB6                                            l3203 0838  
                                          l1276 1046                                            l2501 0EC4  
                                          l2421 0BE2                                            l2413 11FE  
                                          l2405 128E                                            l3109 0BBE  
                                          l3141 04A2                                            l3133 03E6  
                                          l3053 01A0                                            l3045 0122  
                                          l3037 00DA                                            l1269 0DFE  
                                          l3117 0DD4                                            l3205 0856  
                                          l2503 0EE0                                            l2271 12C4  
                                          l2431 0C10                                            l2423 0BF2  
                                          l2415 1200                                            l2407 1292  
                                          l3071 10CA                                            l3143 04D6  
                                          l3135 0402                                            l3047 0142  
                                          l3039 00E8                                            l3119 0DF4  
                                          l1288 06E6                                            l1296 0F80  
                                          l2505 0EE2                                            l2273 12E0  
                                          l2265 12B6                                            l2441 0C64  
                                          l2433 0C14                                            l2425 0C04  
                                          l2417 1210                                            l2409 11F0  
                                          l3073 10DC                                            l3081 0CE6  
                                          l3145 0536                                            l3137 0416  
                                          l3129 03CA                                            l3161 095C  
                                          l3153 092E                                            l3049 0188  
                                          l3057 01B2                                            l2507 0EE8  
                                          l2267 12A8                                            l2435 0C18  
                                          l2427 0C08                                            l2419 0BE0  
                                          l3075 10DE                                            l3091 0B3C  
                                          l3083 0CF6                                            l3139 046E  
                                          l3163 0960                                            l1299 1316  
                                          l3171 0E56                                            l2509 0EEA  
                                          l2701 111C                                            l2621 0F8A  
                                          l2269 12D2                                            l2437 0C28  
                                          l2429 0C0C                                            l2381 1048  
                                          l3077 10EE                                            l3093 0B4C  
                                          l3085 0D04                                            l3149 0546  
                                          l3165 097C                                            l3173 0E68  
                                          l2471 0D64                                            l2703 1120  
                                          l2631 0FB8                                            l2623 0F90  
                                          l2439 0C38                                            l2391 1078  
                                          l2383 106C                                            l3095 0B62  
                                          l3087 0D14                                            l3167 0990  
                                          l3159 0946                                            l3247 009E  
                                          l3175 0E70                                            l3191 07CA  
                                          l3183 07AC                                            l2481 0D7C  
                                          l2473 0D66                                            l2633 0FBE  
                                          l2625 0FA6                                            l2393 107E  
                                          l2385 106E                                            l2561 1226  
                                          l2553 1216                                            l3097 0B6A  
                                          l3089 0D1E                                            l3177 0E78  
                                          l3193 07DE                                            l3185 07B0  
                                          l2483 0D8C                                            l2475 0D6E  
                                          l2467 0D52                                            l2491 0EA8  
                                          l2627 0FAC                                            l2619 0F82  
                                          l2379 1312                                            l2395 1080  
                                          l2387 1074                                            l2563 122A  
                                          l2555 121A                                            l3099 0B76  
                                          l3179 0E94                                            l3195 07EA  
                                          l3187 07BA                                            l2485 0D8E  
                                          l2477 0D70                                            l2469 0D54  
                                          l2493 0EAA                                            l2629 0FB2  
                                          l2397 12FC                                            l2389 1076  
                                          l2565 122E                                            l2557 121E  
                                          l2901 0A30                                            l2821 066A  
                                          l2813 061E                                            l3197 07FE  
                                          l3189 07C6                                            l2487 0D96  
                                          l2479 0D76                                            l2495 0EBA  
                                          l2399 1266                                            l2567 1232  
                                          l2559 1222                                            l2911 0A6A  
                                          l2903 0A38                                            l2823 06A0  
                                          l2815 0630                                            l2831 0F5C  
                                          l3199 080A                                            l2569 1170  
                                          l2489 0D98                                            l2497 0EBC  
                                          l2841 06E8                                            l2905 0A46  
                                          l2913 0A70                                            l2817 0642  
                                          l2833 0F60                                            l2921 0A92  
                                          l2499 0EC2                                            l2851 0714  
                                          l2843 06EC                                            l2915 0A80  
                                          l2907 0A5C                                            l2819 064C  
                                          l2827 0F3E                                            l2931 0AE2  
                                          l2923 0AA0                                            l2835 11CA  
                                          l2861 0742                                            l2853 071C  
                                          l2845 06FA                                            l2917 0A88  
                                          l2909 0A64                                            l2941 1022  
                                          l2829 0F4A                                            l2933 0AF6  
                                          l2925 0AB4                                            l2837 11E6  
                                          ?_pad 0025                                            l2871 077C  
                                          l2863 074A                                            l2855 0720  
                                          l2847 0702                                            l2935 0AFA  
                                          l2927 0AC2                                            l2951 021C  
                                          l2943 01E0                                            l2697 1102  
                                          l2881 07A2                                            l2873 077E  
                                          l2865 0758                                            l2857 0728  
                                          l2849 0706                                            l2937 0B26  
                                          l2929 0ACE                                            l2961 025E  
                                          l2953 021E                                            l2945 01F6  
                                          l2699 110E                                            l2875 0784  
                                          l2867 075E                                            l2859 073A  
                                          l2891 09FC                                            l2939 1008  
                                          l2971 0296                                            l2963 026E  
                                          l2955 022C                                            l2947 0206  
                                          l2869 0774                                            l2877 078A  
                                          l2893 0A00                                            l2885 09E2  
                                          l2973 029C                                            l2981 02F8  
                                          l2965 027A                                            l2957 0248  
                                          l2949 020E                                            l2879 079A  
                                          l2895 0A0E                                            l2887 09E6  
                                          l2983 0314                                            l2991 0368  
                                          l2975 02CE                                            l2967 0282  
                                          l2959 0258                                            l2897 0A16  
                                          l2889 09F4                                            l2993 0378  
                                          l2985 0326                                            l2977 02D6  
                                          l2969 028E                                            l2899 0A28  
                                          l2995 037E                                            l2987 0340  
                                          l2979 02DC                                            l2997 038E  
                                          l2989 035A                                            STR_1 FFF2  
                                          STR_2 FFE5                                            u2000 0580  
                                          u2001 057C                                            u2010 0614  
                                          u2011 0610                                            u2100 0B62  
                                          u2020 0028                                            u2101 0B5E  
                                          u2021 0024                                            u2110 0B84  
                                          u2030 00BE                                            u2111 0B80  
                                          u2031 00BA                                            u2120 0BAC  
                                          u2040 00E8                                            u2121 0BA8  
                                          u2041 00E4                                            u2050 0122  
                                          u2130 0DF4                                            u2051 011E  
                                          u2131 0DF0                                            u2140 0402  
                                          u2060 0142                                            u2141 03FE  
                                          u2061 013E                                            _LATA 0F89  
                                          u2070 10EE                                            _LATB 0F8A  
                                          u2207 0EEC                                            u2071 10EA  
                                          _LATC 0F8B                                            u2080 0D04  
                                          u2160 0536                                            _LATD 0F8C  
                                          u2217 0D68                                            u2081 0D00  
                                          u2161 0532                                            _LATE 0F8D  
                                          u1530 1138                                            u2090 0D3E  
                                          u2170 097C                                            _LATF 0F8E  
                                          u2227 0D90                                            u1531 1134  
                                          u2091 0D3A                                            u2155 0406  
                                          u2171 0978                                            _LATG 0F8F  
                                          u1700 06FA                                            _LATH 0F90  
                                          u2237 0D9E                                            u1701 06F6  
                                          u1710 0714                                            _LATJ 0F91  
                                          u1711 0710                                            u1720 073A  
                                          u1800 0A5C                                            u2185 0980  
                                          u1721 0736                                            u1801 0A58  
                                          u1730 0758                                            u1810 0A80  
                                          u1650 0630                                            u1731 0754  
                                          u1811 0A7C                                            u1651 062C  
                                          u1740 0774                                            u1660 0642  
                                          u1820 0AA0                                            u1900 021C  
                                          u2197 0F9A                                            u1741 0770  
                                          u1661 063E                                            u1821 0A9C  
                                          u1901 0218                                            u1750 079A  
                                          u1670 066A                                            u1830 0AC2  
                                          u1910 022C                                            u1751 0796  
                                          u1671 0666                                            u1831 0ABE  
                                          u1911 0228                                            u1760 09F4  
                                          u1680 06A0                                            u1840 0B18  
                                          u1920 0258                                            u1761 09F0  
                                          u1681 069C                                            u1841 0B14  
                                          u1921 0254                                            u1770 0A0E  
                                          u1690 0F80                                            u1850 0B26  
                                          u1930 026E                                            u1771 0A0A  
                                          u1691 0F7C                                            u1851 0B22  
                                          u1931 026A                                            u1780 0A28  
                                          u1860 1022                                            u1940 0314  
                                          u1781 0A24                                            u1861 101E  
                                          u1941 0310                                            u1790 0A46  
                                          u1950 0326                                            u1870 01F0  
                                          u1791 0A42                                            u1951 0322  
                                          u1871 01EA                                            u1960 0340  
                                          u1880 01F2                                            u1961 033C  
                                          u1970 035A                                            u1890 0206  
                                          u1971 0356                                            u1891 0202  
                                          u1980 0368                                            u1981 0364  
                                          u1990 0378                                            u1991 0374  
                                          _TMR2 0FCC                                   _EUSART1_Write 0E00  
                                          abs@a 001B                         __end_of_measure_voltage 09E2  
                                          _dbuf 0085                                            _main 07AC  
                                          _dtoa 01E0                                            _prec 003A  
                                          pad@i 002C                                            pad@p 0029  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          pad@w 002E                                            fsr2l 0FD9  
                                          btemp 004B                                            prodh 0FF4  
                                          prodl 0FF3                                            start 0108  
                         ??_EPWM1_LoadDutyValue 0017                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 0000                                           ??_abs 001D  
                                         ??_pad 002B                         __end_of_TMR0_Initialize 1216  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 1306  
                         _eusart1RxStatusBuffer 0060                                           ?_main 0001  
                                         ?_dtoa 0030                                 __end_of___awdiv 07AC  
                                         _CRC16 0C68                                 __end_of___awmod 0A92  
                               __end_of___lldiv 0BE0                                           _T0CON 0FD5  
                               ___awdiv@divisor 0017                                           _T2CON 0FCA  
                                         i2l261 0E54                                           i2l342 116E  
                                         i2l264 10C4                                           i2l281 131A  
                                         i2l257 0E12                                           i2l274 092C  
                                         i2l258 0E28                                           i2l267 10C6  
                                         i2l443 0CE4                                           i2l284 130A  
                                         i2l348 1318                                           i2l381 009E  
                                         i2l278 11C8                                           i2l470 12FA  
                                         i2l287 1310                                           i2l480 128A  
                                         i2l385 00E4                                           i2l474 1006  
                                         i2l386 00E4                                           i2l378 0054  
                                         i2l477 124E                                 ___awdiv@counter 0019  
                                  vfpfcnvrt@fmt 00B0                                           _TMR0H 0FD7  
                                         _TMR0L 0FD6                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _TRISF 0F97                                           _TRISG 0F98  
                                         _TRISH 0F99                                           _TRISJ 0F9A  
                           ___lmul@multiplicand 0019                       ?_TMR0_SetInterruptHandler 0015  
                          _EUSART1_Transmit_ISR 1088                                __end_of_TMR0_ISR 1170  
                                         _flags 003C                                           _index 003E  
                           read_prec_or_width@c 0021                             read_prec_or_width@n 0022  
                                         _fputc 061E                                           _fputs 0F3E  
                                         pad@fp 0025                                           _width 0038  
                                         _putch 1316                                           dtoa@d 0032  
                                         dtoa@i 00AC                                           dtoa@p 00A7  
                                         dtoa@s 00AB                                           dtoa@w 00A9  
                                ?_EUSART1_Write 0001                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 004C                                           ttemp6 004F  
                                         ttemp7 0053                                           status 0FD8  
                                         wtemp8 004C                                 __end_of_sprintf 0EA6  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 131C  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 131A                                __end_of_Lcd_Init 0FC6  
                               __initialization 0EF4                                    ?_modbus_send 0001  
                    __end_of_EUSART1_Initialize 0C68                                    __end_of_main 086E  
                                  __end_of_dtoa 03B0                         __end_of_TMR2_Initialize 129A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0038  
                                        ??_dtoa 0034                                          ?_CRC16 0001  
                                 __activetblptr 0003                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_read_prec_or_width 061E                                ?_measure_current 002E  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0015  
                                        ?_fputs 001E                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                          _CCPR1H 0FBF  
                                        _CCPR1L 0FBE                                ___awdiv@dividend 0015  
                                        ?_putch 0001                                          i2l2301 11C6  
                                        i2l2311 0C82                                          i2l2313 0C9C  
                                        i2l2305 0C68                                          i2l2307 0C70  
                                        i2l2315 0CB4                                          i2l2317 0CCE  
                                        i2l2309 0C7E                                          i2l2601 0928  
                                        i2l2281 0E2A                                          i2l2603 113A  
                                        i2l2283 0E3A                                          i2l2291 0E52  
                                        i2l2275 0E02                                          i2l2611 12F6  
                                        i2l2293 11A0                                          i2l2453 1306  
                                        i2l2605 1140                                          i2l2613 123A  
                                        i2l2285 0E3C                                          i2l2277 0E02  
                                        i2l2295 11B0                                          i2l2455 130C  
                                        i2l2607 1154                                          i2l2615 123C  
                                        i2l2287 0E4C                                          i2l2279 0E20  
                                        i2l2463 127E                                          i2l2297 11B2  
                                        i2l2617 124C                                          i2l2457 0FC6  
                                        i2l2289 0E50                                          i2l2465 1282  
                                        i2l2609 12EE                                          i2l2299 11C2  
                                        i2l2571 1088                                          i2l2459 0FF4  
                                        i2l2731 004A                                          i2l2581 10BE  
                                        i2l2573 1098                                          i2l2741 00AC  
                                        i2l2733 004C                                          i2l2725 002A  
                                        i2l2591 08B4                                          i2l2583 086E  
                                        i2l2575 10A8                                          i2l2743 00BA  
                                        i2l2735 0062                                          i2l2727 0038  
                                        i2l2593 08C2                                          i2l2585 087C  
                                        i2l2577 10AA                                          i2l2745 00D6  
                                        i2l2737 0070                                          i2l2729 0046  
                                        i2l2595 08D2                                          i2l2587 088A  
                                        i2l2579 10BA                                          i2l2747 00DC  
                                        i2l2739 007E                                          i2l2597 08EC  
                                        i2l2589 089A                                          i2l2599 0908  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                   vfpfcnvrt@done 00B8  
                                        _SPBRG1 0FAF                                          _TMR0ON 7EAF  
                              ?_measure_voltage 002E                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                                    vfprintf@cfmt 0036  
                                        ___lmul 0CE6                                          ___wmul 11CA  
                                     ??___awdiv 0019                                       ??___awmod 0019  
                                     ??___lldiv 0029                        ?_EUSART1_SetErrorHandler 0015  
                                        _recPtr 003D                                ?_TMR0_Initialize 0001  
                          read_prec_or_width@ap 001D                                          _offset 0083  
                                        clear_0 0EFC                                          clear_1 0F10  
                                        clear_2 0F22                                          clear_3 0F2E  
                    ?_modbus_analyse_and_answer 0001                                ___awdiv@quotient 001B  
                               ___awmod@divisor 0017                                          isa$std 0001  
                               ___awmod@counter 0019                                          pad@buf 0027  
                                        _rx_buf 0100                ??_EUSART1_SetOverrunErrorHandler 0018  
               ?_EUSART1_SetOverrunErrorHandler 0015                                          _tx_buf 0200  
                                        dtoa@fp 0030                                          fputc@c 0015  
                                        fputs@c 0022                                          fputs@i 0023  
                                        fputs@s 001E                                    __mediumconst FDE4  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                        ADC_GetConversion@channel 0019  
                                        putch@c 0001                                __end_of_vfprintf 0E00  
                               ??_EUSART1_Write 0001        TMR0_SetInterruptHandler@InterruptHandler 0015  
                                     ??_sprintf 0038                                 _eusart1RxBuffer 0068  
                               _eusart1TxBuffer 0070                               _SYSTEM_Initialize 1216  
                                    __accesstop 0060                         __end_of__initialization 0F34  
                            ?_SYSTEM_Initialize 0001                                   __end_of_CRC16 0CE6  
                                 ___rparam_used 0001                   __end_of_EUSART1_RxDataHandler 11CA  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                                 ?_modbus_timer 0001                             ??_SYSTEM_Initialize 0018  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0015  
                                 __end_of_fputc 06E8                                   __end_of_fputs 0F82  
                                 __end_of_putch 1318                                ?_TMR2_Initialize 0001  
                                       ??_CRC16 0005                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 092E                               _LCD_2x16_WriteCmd 0D50  
                                     ?_Lcd_Init 0001                               _LCD_2x16_WriteMsg 1102  
                                       ??_fputc 0019                       __end_of_SYSTEM_Initialize 1238  
                                       ??_fputs 0022                                         ??_putch 0015  
                                 _eusart1RxHead 0044                              ?_LCD_2x16_WriteCmd 0001  
                                 _eusart1TxHead 0047                              ?_LCD_2x16_WriteMsg 0017  
                    __end_of_LCD_2x16_WriteData 0EF4                                   _eusart1RxTail 0043  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart1TxTail 0046  
             _EUSART1_TxDefaultInterruptHandler 00F6                 ??_EUSART1_SetRxInterruptHandler 0018  
                                    __pnvCOMRAM 0048                             ??_LCD_2x16_WriteCmd 0015  
                           ??_LCD_2x16_WriteMsg 001A                 __end_of_EUSART1_SetErrorHandler 12EE  
                                ??_modbus_timer 000D                __end_of_TMR0_SetInterruptHandler 12A8  
                                       ?___lmul 0015                                         ?___wmul 0015  
                                    ??_TMR0_ISR 0001                                         _CCP1CON 0FBD  
                                       _ECCP1AS 0FB6                                  ___lmul@product 001D  
        __end_of_EUSART1_SetFramingErrorHandler 12E0                  _EUSART1_SetFramingErrorHandler 12D2  
                     __end_of_LCD_2x16_WriteCmd 0DAA                       __end_of_LCD_2x16_WriteMsg 113A  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0F7F                                      ??_Lcd_Init 0017  
                             __end_of_auchCRCHi FFE5                               __end_of_auchCRCLo FEE5  
                   __end_of_EPWM1_LoadDutyValue 11A0                            _ADC_InterruptHandler 0080  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___awdiv 06E8                                         ___awmod 09E2  
                                       ___lldiv 0B3C                                       ?_vfprintf 00BC  
                                       __pcinit 0EF4                                         __ramtop 1000  
                          LCD_2x16_WriteMsg@msg 0017                                         __ptext0 07AC  
                                       __ptext1 0E56                                         __ptext2 0DAA  
                                       __ptext3 0000                                         __ptext4 0550  
                                       __ptext5 11CA                                         __ptext6 01E0  
                                       __ptext7 0A92                                         __ptext8 0F3E  
                                       __ptext9 061E                                       _T0CONbits 0FD5  
                         _OSCILLATOR_Initialize 12FC                                       _T2CONbits 0FCA  
                         read_prec_or_width@fmt 001B                                ___awmod@dividend 0015  
                            _EUSART1_Initialize 0BE0                        ??_PIN_MANAGER_Initialize 0015  
                 ??_EUSART1_DefaultErrorHandler 0001                                  main@tempString 00D6  
                      LCD_2x16_WriteCmd@command 0016                                         _sprintf 0E56  
                                 _modbusAddress 003F                            end_of_initialization 0F34  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0017  
                   _EUSART1_OverrunErrorHandler 00ED                                         fputs@fp 0020  
                            _read_prec_or_width 0550                                 ___lldiv@divisor 0025  
         __end_of_EUSART1_SetRxInterruptHandler 12C4                   _EUSART1_SetRxInterruptHandler 12B6  
                               ___lldiv@counter 002D                               __end_of_vfpfcnvrt 01E0  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 001B                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 00B4                                      ??_vfprintf 0036  
                          ??_EUSART1_Initialize 0018                     ??_modbus_analyse_and_answer 000A  
                      _TMR0_SetInterruptHandler 129A                       LCD_2x16_WriteData@command 0016  
                                     _TRISDbits 0F95                         fp__EUSART1_Transmit_ISR 0000  
                          ??_read_prec_or_width 001F                            __end_of_modbus_timer 12FC  
                           EUSART1_Write@txData 0001                    modbus_analyse_and_answer@crc 000B  
                  __end_of_INTERRUPT_Initialize 1316                               _modbus_char_recvd 1238  
                                __end_of___lmul 0D50                                     vfpfcnvrt@ap 00B2  
                                   vfpfcnvrt@cp 00BA                                     vfpfcnvrt@fp 00AE  
                                __end_of___wmul 11F0                                  _ADC_Initialize 1266  
                            ?_modbus_char_recvd 0001                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 0EF4                             ??_modbus_char_recvd 0001  
                                   __end_of_abs 1048                                     __end_of_pad 0B3C  
 EUSART1_SetRxInterruptHandler@interruptHandler 0015   EUSART1_SetTxInterruptHandler@interruptHandler 0015  
                  EPWM1_LoadDutyValue@dutyValue 0015                           __end_of_EUSART1_Write 0E56  
                     _modbus_analyse_and_answer 0FC6                          fp__EUSART1_Receive_ISR 0000  
                                      CRC16@msg 0001                                     vfprintf@fmt 00BE  
                     __end_of_modbus_char_recvd 1250                              _LCD_2x16_WriteData 0EA6  
                                      ??___lmul 001D                                        ??___wmul 0019  
                         _EUSART1_RxDataHandler 11A0                  ?_EUSART1_SetRxInterruptHandler 0015  
                        __end_of_ADC_Initialize 127C                             ?_LCD_2x16_WriteData 0001  
                                _eusart1RxCount 0042                                     __pbssCOMRAM 0038  
             _EUSART1_RxDefaultInterruptHandler 00F3                                   __pcstackBANK0 00A5  
                             modbus_send@length 0002                 ??_EUSART1_SetTxInterruptHandler 0018  
              ??_EUSART1_SetFramingErrorHandler 0018                 ?_EUSART1_SetFramingErrorHandler 0015  
                          ??_LCD_2x16_WriteData 0015                           _TMR0_InterruptHandler 0048  
                                     __pnvBANK0 00EA                                       _auchCRCHi FEE5  
                                     _auchCRCLo FDE5                          _PIN_MANAGER_Initialize 1048  
                                     _dtoa$1684 00A5                                   ??_modbus_send 0002  
                                     __pintcode 0008                                   __pmediumconst FDE4  
                                      ?___awdiv 0015                                        ?___awmod 0015  
                                      ?___lldiv 0021                               ??_measure_current 0030  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 000D  
                             ??_measure_voltage 0030                                        _ECCP1DEL 0F79  
                                      _BAUDCON1 0F7E           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 130C            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1306  
                          _EUSART1_ErrorHandler 00EA                         _EUSART1_SetErrorHandler 12E0  
                                      ?_sprintf 00C2                            _INTERRUPT_Initialize 1312  
                             ??_TMR0_Initialize 0018                                  ___wmul@product 0019  
       EUSART1_SetErrorHandler@interruptHandler 0015                                        _LATDbits 0F8C  
                                   CRC16@uIndex 0007                                     CRC16@length 0003  
                                      _PIE1bits 0F9D                                        i2u121_40 0E12  
                                      i2u121_41 0E0E                                        i2u122_40 0E20  
                                      i2u122_41 0E1C                                        i2u123_40 0E4C  
                                      i2u123_41 0E48                                        i2u124_40 11C2  
                                      i2u140_40 088A                                        i2u124_41 11BE  
                                      i2u140_41 0886                                        i2u125_40 0CCE  
                                      i2u125_41 0CCA                                        i2u142_40 08C2  
                                      i2u141_48 08A0                               _holding_registers 007C  
                                      i2u142_41 08BE                                        i2u141_49 08B4  
                                      i2u144_40 0908                                        i2u143_48 08D8  
                                      i2u160_40 007E                                        i2u144_41 0904  
                                      i2u143_49 08EC                                        i2u160_41 007A  
                                      i2u145_48 090E                                        i2u138_40 1098  
                                      i2u146_40 1154                                        i2u162_40 00AC  
                                      i2u161_48 0084                                        i2u145_49 0924  
                                      i2u138_41 1094                                        i2u146_41 1150  
                                      i2u162_41 00A8                                        i2u161_49 009A  
                                      i2u139_40 10BA                                        i2u163_40 00BA  
                                      i2u139_41 10B6                                        i2u163_41 00B6  
                                      i2u147_48 115A                                        i2u156_40 0038  
                                      i2u147_49 116E                                        i2u156_41 0034  
                                      i2u164_48 00C0                                        i2u157_40 0046  
                    ??_TMR0_SetInterruptHandler 0018                                        i2u164_49 00D6  
                                      i2u157_41 0042                                        i2u158_40 0062  
                                      i2u158_41 005E                                        i2u159_40 0070  
                                      i2u159_41 006C                                        _PIR1bits 0F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 0FD0  
                                      _TMR0_ISR 113A                                    _modbus_timer 12EE  
                                     _vfpfcnvrt 0000                             __end_of_modbus_send 128C  
                                    _ADCON0bits 0FC2                                      _ADCON1bits 0FC1  
                             ___wmul@multiplier 0015                           measure_voltage@result 0031  
                              _EPWM1_Initialize 1250                                        _Lcd_Init 0F82  
                             ___lmul@multiplier 0015                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0015           __end_of_EUSART1_SetTxInterruptHandler 12B6  
                 _EUSART1_SetTxInterruptHandler 12A8                                        __Hrparam 0000  
                                    vfprintf@ap 00C0                                        __Lrparam 0000  
                                    vfprintf@fp 00BC                               _ADC_GetConversion 10C8  
                       ??_OSCILLATOR_Initialize 0015                              ?_ADC_GetConversion 0015  
                                    ?_vfpfcnvrt 00AE                              modbus_char_recvd@c 0001  
                     ??_EUSART1_SetErrorHandler 0018             __end_of_EUSART1_DefaultErrorHandler 1312  
                   _EUSART1_DefaultErrorHandler 130C                             ??_ADC_GetConversion 0017  
                                    sprintf@fmt 00C4                           LCD_2x16_WriteMsg@line 0019  
                                      __ptext10 1316                                        __ptext11 1008  
                                      __ptext20 128C                                        __ptext12 09E2  
                                      __ptext21 11F0                                        __ptext13 06E8  
                                      __ptext30 12D2                                        __ptext22 129A  
                                      __ptext14 092E                                        __ptext31 12E0  
                                      __ptext23 1048                                        __ptext15 03B0  
                                      __ptext40 12EE                                        __ptext32 1250  
                                      __ptext24 12FC                                        __ptext16 0CE6  
                                      __ptext41 127C                                        __ptext33 1266  
                                      __ptext25 1312                                        __ptext17 0B3C  
                                      __ptext50 1306                                        __ptext42 0E00  
                                      __ptext34 0F82                                        __ptext26 0BE0  
                                      __ptext18 10C8                                        __ptext51 131A  
                                      __ptext43 0FC6                                        __ptext35 1102  
                                      __ptext27 12A8                                        __ptext19 1216  
                                      __ptext52 130C                                        __ptext44 0C68  
                                      __ptext36 0EA6                                        __ptext28 12B6  
                                      __ptext53 11A0                                        __ptext45 1238  
                                      __ptext37 0D50                                        __ptext29 12C4  
                                      __ptext54 0000                                        __ptext46 113A  
                                      __ptext38 1170                                        __ptext47 1318  
                                      __ptext48 1088                                        __ptext49 086E  
                              measure_current@i 00A5                           measure_current@offset 002E  
                         measure_current@result 00A7            __end_of_TMR0_DefaultInterruptHandler 131A  
                  _TMR0_DefaultInterruptHandler 1318                       __end_of_ADC_GetConversion 1102  
EUSART1_SetOverrunErrorHandler@interruptHandler 0015                                        isa$xinst 0000  
                                   _modbus_send 127C                                        int$flags 004B  
             __end_of_modbus_analyse_and_answer 1008                                        _vfprintf 0DAA  
            __end_of_INTERRUPT_InterruptManager 0108                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 00F0                             _EUSART1_Receive_ISR 086E  
                                    _INTCONbits 0FF2                                   CRC16@uchCRCHi 0008  
                                 CRC16@uchCRCLo 0009                                measure_voltage@i 0035  
                        ??_INTERRUPT_Initialize 0015                                        intlevel2 0000  
                                     sprintf@ap 00C8                            ?_EUSART1_Receive_ISR 0001  
                              ___lldiv@dividend 0021                                 _measure_current 03B0  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 12D2  
                _EUSART1_SetOverrunErrorHandler 12C4                                      _RCSTA1bits 0FAB  
                  __end_of_EUSART1_Transmit_ISR 10C8                                ??_ADC_Initialize 0015  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                               _measure_voltage 092E  EUSART1_SetFramingErrorHandler@interruptHandler 0015  
                ?_EUSART1_SetTxInterruptHandler 0015                                     ??_vfpfcnvrt 0034  
                            _eusart1RxLastError 0041                                        sprintf@f 00CA  
                                      sprintf@s 00C2                                ___lldiv@quotient 0029  
                               _TMR0_Initialize 11F0                             _EPWM1_LoadDutyValue 1170  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1088  
                       ??_EUSART1_RxDataHandler 0001                        __end_of_EPWM1_Initialize 1266  
                          ?_EPWM1_LoadDutyValue 0015  
