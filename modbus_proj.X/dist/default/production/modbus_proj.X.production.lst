

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Mar 10 14:10:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Version 2.40
    78                           ; Generated 17/11/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F97J60 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	mediumconst
   114   00FDE4                     __pmediumconst:
   115                           	callstack 0
   116   00FDE4  00                 	db	0
   117   00FDE5                     _auchCRCLo:
   118                           	callstack 0
   119   00FDE5  00                 	db	0
   120   00FDE6  C0                 	db	192
   121   00FDE7  C1                 	db	193
   122   00FDE8  01                 	db	1
   123   00FDE9  C3                 	db	195
   124   00FDEA  03                 	db	3
   125   00FDEB  02                 	db	2
   126   00FDEC  C2                 	db	194
   127   00FDED  C6                 	db	198
   128   00FDEE  06                 	db	6
   129   00FDEF  07                 	db	7
   130   00FDF0  C7                 	db	199
   131   00FDF1  05                 	db	5
   132   00FDF2  C5                 	db	197
   133   00FDF3  C4                 	db	196
   134   00FDF4  04                 	db	4
   135   00FDF5  CC                 	db	204
   136   00FDF6  0C                 	db	12
   137   00FDF7  0D                 	db	13
   138   00FDF8  CD                 	db	205
   139   00FDF9  0F                 	db	15
   140   00FDFA  CF                 	db	207
   141   00FDFB  CE                 	db	206
   142   00FDFC  0E                 	db	14
   143   00FDFD  0A                 	db	10
   144   00FDFE  CA                 	db	202
   145   00FDFF  CB                 	db	203
   146   00FE00  0B                 	db	11
   147   00FE01  C9                 	db	201
   148   00FE02  09                 	db	9
   149   00FE03  08                 	db	8
   150   00FE04  C8                 	db	200
   151   00FE05  D8                 	db	216
   152   00FE06  18                 	db	24
   153   00FE07  19                 	db	25
   154   00FE08  D9                 	db	217
   155   00FE09  1B                 	db	27
   156   00FE0A  DB                 	db	219
   157   00FE0B  DA                 	db	218
   158   00FE0C  1A                 	db	26
   159   00FE0D  1E                 	db	30
   160   00FE0E  DE                 	db	222
   161   00FE0F  DF                 	db	223
   162   00FE10  1F                 	db	31
   163   00FE11  DD                 	db	221
   164   00FE12  1D                 	db	29
   165   00FE13  1C                 	db	28
   166   00FE14  DC                 	db	220
   167   00FE15  14                 	db	20
   168   00FE16  D4                 	db	212
   169   00FE17  D5                 	db	213
   170   00FE18  15                 	db	21
   171   00FE19  D7                 	db	215
   172   00FE1A  17                 	db	23
   173   00FE1B  16                 	db	22
   174   00FE1C  D6                 	db	214
   175   00FE1D  D2                 	db	210
   176   00FE1E  12                 	db	18
   177   00FE1F  13                 	db	19
   178   00FE20  D3                 	db	211
   179   00FE21  11                 	db	17
   180   00FE22  D1                 	db	209
   181   00FE23  D0                 	db	208
   182   00FE24  10                 	db	16
   183   00FE25  F0                 	db	240
   184   00FE26  30                 	db	48
   185   00FE27  31                 	db	49
   186   00FE28  F1                 	db	241
   187   00FE29  33                 	db	51
   188   00FE2A  F3                 	db	243
   189   00FE2B  F2                 	db	242
   190   00FE2C  32                 	db	50
   191   00FE2D  36                 	db	54
   192   00FE2E  F6                 	db	246
   193   00FE2F  F7                 	db	247
   194   00FE30  37                 	db	55
   195   00FE31  F5                 	db	245
   196   00FE32  35                 	db	53
   197   00FE33  34                 	db	52
   198   00FE34  F4                 	db	244
   199   00FE35  3C                 	db	60
   200   00FE36  FC                 	db	252
   201   00FE37  FD                 	db	253
   202   00FE38  3D                 	db	61
   203   00FE39  FF                 	db	255
   204   00FE3A  3F                 	db	63
   205   00FE3B  3E                 	db	62
   206   00FE3C  FE                 	db	254
   207   00FE3D  FA                 	db	250
   208   00FE3E  3A                 	db	58
   209   00FE3F  3B                 	db	59
   210   00FE40  FB                 	db	251
   211   00FE41  39                 	db	57
   212   00FE42  F9                 	db	249
   213   00FE43  F8                 	db	248
   214   00FE44  38                 	db	56
   215   00FE45  28                 	db	40
   216   00FE46  E8                 	db	232
   217   00FE47  E9                 	db	233
   218   00FE48  29                 	db	41
   219   00FE49  EB                 	db	235
   220   00FE4A  2B                 	db	43
   221   00FE4B  2A                 	db	42
   222   00FE4C  EA                 	db	234
   223   00FE4D  EE                 	db	238
   224   00FE4E  2E                 	db	46
   225   00FE4F  2F                 	db	47
   226   00FE50  EF                 	db	239
   227   00FE51  2D                 	db	45
   228   00FE52  ED                 	db	237
   229   00FE53  EC                 	db	236
   230   00FE54  2C                 	db	44
   231   00FE55  E4                 	db	228
   232   00FE56  24                 	db	36
   233   00FE57  25                 	db	37
   234   00FE58  E5                 	db	229
   235   00FE59  27                 	db	39
   236   00FE5A  E7                 	db	231
   237   00FE5B  E6                 	db	230
   238   00FE5C  26                 	db	38
   239   00FE5D  22                 	db	34
   240   00FE5E  E2                 	db	226
   241   00FE5F  E3                 	db	227
   242   00FE60  23                 	db	35
   243   00FE61  E1                 	db	225
   244   00FE62  21                 	db	33
   245   00FE63  20                 	db	32
   246   00FE64  E0                 	db	224
   247   00FE65  A0                 	db	160
   248   00FE66  60                 	db	96
   249   00FE67  61                 	db	97
   250   00FE68  A1                 	db	161
   251   00FE69  63                 	db	99
   252   00FE6A  A3                 	db	163
   253   00FE6B  A2                 	db	162
   254   00FE6C  62                 	db	98
   255   00FE6D  66                 	db	102
   256   00FE6E  A6                 	db	166
   257   00FE6F  A7                 	db	167
   258   00FE70  67                 	db	103
   259   00FE71  A5                 	db	165
   260   00FE72  65                 	db	101
   261   00FE73  64                 	db	100
   262   00FE74  A4                 	db	164
   263   00FE75  6C                 	db	108
   264   00FE76  AC                 	db	172
   265   00FE77  AD                 	db	173
   266   00FE78  6D                 	db	109
   267   00FE79  AF                 	db	175
   268   00FE7A  6F                 	db	111
   269   00FE7B  6E                 	db	110
   270   00FE7C  AE                 	db	174
   271   00FE7D  AA                 	db	170
   272   00FE7E  6A                 	db	106
   273   00FE7F  6B                 	db	107
   274   00FE80  AB                 	db	171
   275   00FE81  69                 	db	105
   276   00FE82  A9                 	db	169
   277   00FE83  A8                 	db	168
   278   00FE84  68                 	db	104
   279   00FE85  78                 	db	120
   280   00FE86  B8                 	db	184
   281   00FE87  B9                 	db	185
   282   00FE88  79                 	db	121
   283   00FE89  BB                 	db	187
   284   00FE8A  7B                 	db	123
   285   00FE8B  7A                 	db	122
   286   00FE8C  BA                 	db	186
   287   00FE8D  BE                 	db	190
   288   00FE8E  7E                 	db	126
   289   00FE8F  7F                 	db	127
   290   00FE90  BF                 	db	191
   291   00FE91  7D                 	db	125
   292   00FE92  BD                 	db	189
   293   00FE93  BC                 	db	188
   294   00FE94  7C                 	db	124
   295   00FE95  B4                 	db	180
   296   00FE96  74                 	db	116
   297   00FE97  75                 	db	117
   298   00FE98  B5                 	db	181
   299   00FE99  77                 	db	119
   300   00FE9A  B7                 	db	183
   301   00FE9B  B6                 	db	182
   302   00FE9C  76                 	db	118
   303   00FE9D  72                 	db	114
   304   00FE9E  B2                 	db	178
   305   00FE9F  B3                 	db	179
   306   00FEA0  73                 	db	115
   307   00FEA1  B1                 	db	177
   308   00FEA2  71                 	db	113
   309   00FEA3  70                 	db	112
   310   00FEA4  B0                 	db	176
   311   00FEA5  50                 	db	80
   312   00FEA6  90                 	db	144
   313   00FEA7  91                 	db	145
   314   00FEA8  51                 	db	81
   315   00FEA9  93                 	db	147
   316   00FEAA  53                 	db	83
   317   00FEAB  52                 	db	82
   318   00FEAC  92                 	db	146
   319   00FEAD  96                 	db	150
   320   00FEAE  56                 	db	86
   321   00FEAF  57                 	db	87
   322   00FEB0  97                 	db	151
   323   00FEB1  55                 	db	85
   324   00FEB2  95                 	db	149
   325   00FEB3  94                 	db	148
   326   00FEB4  54                 	db	84
   327   00FEB5  9C                 	db	156
   328   00FEB6  5C                 	db	92
   329   00FEB7  5D                 	db	93
   330   00FEB8  9D                 	db	157
   331   00FEB9  5F                 	db	95
   332   00FEBA  9F                 	db	159
   333   00FEBB  9E                 	db	158
   334   00FEBC  5E                 	db	94
   335   00FEBD  5A                 	db	90
   336   00FEBE  9A                 	db	154
   337   00FEBF  9B                 	db	155
   338   00FEC0  5B                 	db	91
   339   00FEC1  99                 	db	153
   340   00FEC2  59                 	db	89
   341   00FEC3  58                 	db	88
   342   00FEC4  98                 	db	152
   343   00FEC5  88                 	db	136
   344   00FEC6  48                 	db	72
   345   00FEC7  49                 	db	73
   346   00FEC8  89                 	db	137
   347   00FEC9  4B                 	db	75
   348   00FECA  8B                 	db	139
   349   00FECB  8A                 	db	138
   350   00FECC  4A                 	db	74
   351   00FECD  4E                 	db	78
   352   00FECE  8E                 	db	142
   353   00FECF  8F                 	db	143
   354   00FED0  4F                 	db	79
   355   00FED1  8D                 	db	141
   356   00FED2  4D                 	db	77
   357   00FED3  4C                 	db	76
   358   00FED4  8C                 	db	140
   359   00FED5  44                 	db	68
   360   00FED6  84                 	db	132
   361   00FED7  85                 	db	133
   362   00FED8  45                 	db	69
   363   00FED9  87                 	db	135
   364   00FEDA  47                 	db	71
   365   00FEDB  46                 	db	70
   366   00FEDC  86                 	db	134
   367   00FEDD  82                 	db	130
   368   00FEDE  42                 	db	66
   369   00FEDF  43                 	db	67
   370   00FEE0  83                 	db	131
   371   00FEE1  41                 	db	65
   372   00FEE2  81                 	db	129
   373   00FEE3  80                 	db	128
   374   00FEE4  40                 	db	64
   375   00FEE5                     __end_of_auchCRCLo:
   376                           	callstack 0
   377   00FEE5                     _auchCRCHi:
   378                           	callstack 0
   379   00FEE5  00                 	db	0
   380   00FEE6  C1                 	db	193
   381   00FEE7  81                 	db	129
   382   00FEE8  40                 	db	64
   383   00FEE9  01                 	db	1
   384   00FEEA  C0                 	db	192
   385   00FEEB  80                 	db	128
   386   00FEEC  41                 	db	65
   387   00FEED  01                 	db	1
   388   00FEEE  C0                 	db	192
   389   00FEEF  80                 	db	128
   390   00FEF0  41                 	db	65
   391   00FEF1  00                 	db	0
   392   00FEF2  C1                 	db	193
   393   00FEF3  81                 	db	129
   394   00FEF4  40                 	db	64
   395   00FEF5  01                 	db	1
   396   00FEF6  C0                 	db	192
   397   00FEF7  80                 	db	128
   398   00FEF8  41                 	db	65
   399   00FEF9  00                 	db	0
   400   00FEFA  C1                 	db	193
   401   00FEFB  81                 	db	129
   402   00FEFC  40                 	db	64
   403   00FEFD  00                 	db	0
   404   00FEFE  C1                 	db	193
   405   00FEFF  81                 	db	129
   406   00FF00  40                 	db	64
   407   00FF01  01                 	db	1
   408   00FF02  C0                 	db	192
   409   00FF03  80                 	db	128
   410   00FF04  41                 	db	65
   411   00FF05  01                 	db	1
   412   00FF06  C0                 	db	192
   413   00FF07  80                 	db	128
   414   00FF08  41                 	db	65
   415   00FF09  00                 	db	0
   416   00FF0A  C1                 	db	193
   417   00FF0B  81                 	db	129
   418   00FF0C  40                 	db	64
   419   00FF0D  00                 	db	0
   420   00FF0E  C1                 	db	193
   421   00FF0F  81                 	db	129
   422   00FF10  40                 	db	64
   423   00FF11  01                 	db	1
   424   00FF12  C0                 	db	192
   425   00FF13  80                 	db	128
   426   00FF14  41                 	db	65
   427   00FF15  00                 	db	0
   428   00FF16  C1                 	db	193
   429   00FF17  81                 	db	129
   430   00FF18  40                 	db	64
   431   00FF19  01                 	db	1
   432   00FF1A  C0                 	db	192
   433   00FF1B  80                 	db	128
   434   00FF1C  41                 	db	65
   435   00FF1D  01                 	db	1
   436   00FF1E  C0                 	db	192
   437   00FF1F  80                 	db	128
   438   00FF20  41                 	db	65
   439   00FF21  00                 	db	0
   440   00FF22  C1                 	db	193
   441   00FF23  81                 	db	129
   442   00FF24  40                 	db	64
   443   00FF25  01                 	db	1
   444   00FF26  C0                 	db	192
   445   00FF27  80                 	db	128
   446   00FF28  41                 	db	65
   447   00FF29  00                 	db	0
   448   00FF2A  C1                 	db	193
   449   00FF2B  81                 	db	129
   450   00FF2C  40                 	db	64
   451   00FF2D  00                 	db	0
   452   00FF2E  C1                 	db	193
   453   00FF2F  81                 	db	129
   454   00FF30  40                 	db	64
   455   00FF31  01                 	db	1
   456   00FF32  C0                 	db	192
   457   00FF33  80                 	db	128
   458   00FF34  41                 	db	65
   459   00FF35  00                 	db	0
   460   00FF36  C1                 	db	193
   461   00FF37  81                 	db	129
   462   00FF38  40                 	db	64
   463   00FF39  01                 	db	1
   464   00FF3A  C0                 	db	192
   465   00FF3B  80                 	db	128
   466   00FF3C  41                 	db	65
   467   00FF3D  01                 	db	1
   468   00FF3E  C0                 	db	192
   469   00FF3F  80                 	db	128
   470   00FF40  41                 	db	65
   471   00FF41  00                 	db	0
   472   00FF42  C1                 	db	193
   473   00FF43  81                 	db	129
   474   00FF44  40                 	db	64
   475   00FF45  00                 	db	0
   476   00FF46  C1                 	db	193
   477   00FF47  81                 	db	129
   478   00FF48  40                 	db	64
   479   00FF49  01                 	db	1
   480   00FF4A  C0                 	db	192
   481   00FF4B  80                 	db	128
   482   00FF4C  41                 	db	65
   483   00FF4D  01                 	db	1
   484   00FF4E  C0                 	db	192
   485   00FF4F  80                 	db	128
   486   00FF50  41                 	db	65
   487   00FF51  00                 	db	0
   488   00FF52  C1                 	db	193
   489   00FF53  81                 	db	129
   490   00FF54  40                 	db	64
   491   00FF55  01                 	db	1
   492   00FF56  C0                 	db	192
   493   00FF57  80                 	db	128
   494   00FF58  41                 	db	65
   495   00FF59  00                 	db	0
   496   00FF5A  C1                 	db	193
   497   00FF5B  81                 	db	129
   498   00FF5C  40                 	db	64
   499   00FF5D  00                 	db	0
   500   00FF5E  C1                 	db	193
   501   00FF5F  81                 	db	129
   502   00FF60  40                 	db	64
   503   00FF61  01                 	db	1
   504   00FF62  C0                 	db	192
   505   00FF63  80                 	db	128
   506   00FF64  41                 	db	65
   507   00FF65  01                 	db	1
   508   00FF66  C0                 	db	192
   509   00FF67  80                 	db	128
   510   00FF68  41                 	db	65
   511   00FF69  00                 	db	0
   512   00FF6A  C1                 	db	193
   513   00FF6B  81                 	db	129
   514   00FF6C  40                 	db	64
   515   00FF6D  00                 	db	0
   516   00FF6E  C1                 	db	193
   517   00FF6F  81                 	db	129
   518   00FF70  40                 	db	64
   519   00FF71  01                 	db	1
   520   00FF72  C0                 	db	192
   521   00FF73  80                 	db	128
   522   00FF74  41                 	db	65
   523   00FF75  00                 	db	0
   524   00FF76  C1                 	db	193
   525   00FF77  81                 	db	129
   526   00FF78  40                 	db	64
   527   00FF79  01                 	db	1
   528   00FF7A  C0                 	db	192
   529   00FF7B  80                 	db	128
   530   00FF7C  41                 	db	65
   531   00FF7D  01                 	db	1
   532   00FF7E  C0                 	db	192
   533   00FF7F  80                 	db	128
   534   00FF80  41                 	db	65
   535   00FF81  00                 	db	0
   536   00FF82  C1                 	db	193
   537   00FF83  81                 	db	129
   538   00FF84  40                 	db	64
   539   00FF85  00                 	db	0
   540   00FF86  C1                 	db	193
   541   00FF87  81                 	db	129
   542   00FF88  40                 	db	64
   543   00FF89  01                 	db	1
   544   00FF8A  C0                 	db	192
   545   00FF8B  80                 	db	128
   546   00FF8C  41                 	db	65
   547   00FF8D  01                 	db	1
   548   00FF8E  C0                 	db	192
   549   00FF8F  80                 	db	128
   550   00FF90  41                 	db	65
   551   00FF91  00                 	db	0
   552   00FF92  C1                 	db	193
   553   00FF93  81                 	db	129
   554   00FF94  40                 	db	64
   555   00FF95  01                 	db	1
   556   00FF96  C0                 	db	192
   557   00FF97  80                 	db	128
   558   00FF98  41                 	db	65
   559   00FF99  00                 	db	0
   560   00FF9A  C1                 	db	193
   561   00FF9B  81                 	db	129
   562   00FF9C  40                 	db	64
   563   00FF9D  00                 	db	0
   564   00FF9E  C1                 	db	193
   565   00FF9F  81                 	db	129
   566   00FFA0  40                 	db	64
   567   00FFA1  01                 	db	1
   568   00FFA2  C0                 	db	192
   569   00FFA3  80                 	db	128
   570   00FFA4  41                 	db	65
   571   00FFA5  00                 	db	0
   572   00FFA6  C1                 	db	193
   573   00FFA7  81                 	db	129
   574   00FFA8  40                 	db	64
   575   00FFA9  01                 	db	1
   576   00FFAA  C0                 	db	192
   577   00FFAB  80                 	db	128
   578   00FFAC  41                 	db	65
   579   00FFAD  01                 	db	1
   580   00FFAE  C0                 	db	192
   581   00FFAF  80                 	db	128
   582   00FFB0  41                 	db	65
   583   00FFB1  00                 	db	0
   584   00FFB2  C1                 	db	193
   585   00FFB3  81                 	db	129
   586   00FFB4  40                 	db	64
   587   00FFB5  01                 	db	1
   588   00FFB6  C0                 	db	192
   589   00FFB7  80                 	db	128
   590   00FFB8  41                 	db	65
   591   00FFB9  00                 	db	0
   592   00FFBA  C1                 	db	193
   593   00FFBB  81                 	db	129
   594   00FFBC  40                 	db	64
   595   00FFBD  00                 	db	0
   596   00FFBE  C1                 	db	193
   597   00FFBF  81                 	db	129
   598   00FFC0  40                 	db	64
   599   00FFC1  01                 	db	1
   600   00FFC2  C0                 	db	192
   601   00FFC3  80                 	db	128
   602   00FFC4  41                 	db	65
   603   00FFC5  01                 	db	1
   604   00FFC6  C0                 	db	192
   605   00FFC7  80                 	db	128
   606   00FFC8  41                 	db	65
   607   00FFC9  00                 	db	0
   608   00FFCA  C1                 	db	193
   609   00FFCB  81                 	db	129
   610   00FFCC  40                 	db	64
   611   00FFCD  00                 	db	0
   612   00FFCE  C1                 	db	193
   613   00FFCF  81                 	db	129
   614   00FFD0  40                 	db	64
   615   00FFD1  01                 	db	1
   616   00FFD2  C0                 	db	192
   617   00FFD3  80                 	db	128
   618   00FFD4  41                 	db	65
   619   00FFD5  00                 	db	0
   620   00FFD6  C1                 	db	193
   621   00FFD7  81                 	db	129
   622   00FFD8  40                 	db	64
   623   00FFD9  01                 	db	1
   624   00FFDA  C0                 	db	192
   625   00FFDB  80                 	db	128
   626   00FFDC  41                 	db	65
   627   00FFDD  01                 	db	1
   628   00FFDE  C0                 	db	192
   629   00FFDF  80                 	db	128
   630   00FFE0  41                 	db	65
   631   00FFE1  00                 	db	0
   632   00FFE2  C1                 	db	193
   633   00FFE3  81                 	db	129
   634   00FFE4  40                 	db	64
   635   00FFE5                     __end_of_auchCRCHi:
   636                           	callstack 0
   637   000000                     _TMR0L	set	4054
   638   000000                     _TMR0H	set	4055
   639   000000                     _RCREG1	set	4014
   640   000000                     _TXREG1	set	4013
   641   000000                     _SPBRG1	set	4015
   642   000000                     _TXSTA1	set	4012
   643   000000                     _CCPR1L	set	4030
   644   000000                     _CCPR1H	set	4031
   645   000000                     _TRISC	set	3988
   646   000000                     _TRISH	set	3993
   647   000000                     _TRISB	set	3987
   648   000000                     _TRISG	set	3992
   649   000000                     _TRISA	set	3986
   650   000000                     _TRISF	set	3991
   651   000000                     _TRISE	set	3990
   652   000000                     _LATH	set	3984
   653   000000                     _LATC	set	3979
   654   000000                     _LATG	set	3983
   655   000000                     _LATB	set	3978
   656   000000                     _LATF	set	3982
   657   000000                     _LATE	set	3981
   658   000000                     _ADCON0	set	4034
   659   000000                     _ADRESL	set	4035
   660   000000                     _LATJ	set	3985
   661   000000                     _TRISJ	set	3994
   662   00FFE5                     STR_2:
   663   00FFE5  49                 	db	73	;'I'
   664   00FFE6  20                 	db	32
   665   00FFE7  3D                 	db	61	;'='
   666   00FFE8  20                 	db	32
   667   00FFE9  25                 	db	37
   668   00FFEA  30                 	db	48	;'0'
   669   00FFEB  33                 	db	51	;'3'
   670   00FFEC  64                 	db	100	;'d'
   671   00FFED  5B                 	db	91	;'['
   672   00FFEE  75                 	db	117	;'u'
   673   00FFEF  41                 	db	65	;'A'
   674   00FFF0  5D                 	db	93	;']'
   675   00FFF1  00                 	db	0
   676   00FFF2                     STR_1:
   677   00FFF2  55                 	db	85	;'U'
   678   00FFF3  20                 	db	32
   679   00FFF4  3D                 	db	61	;'='
   680   00FFF5  20                 	db	32
   681   00FFF6  25                 	db	37
   682   00FFF7  30                 	db	48	;'0'
   683   00FFF8  33                 	db	51	;'3'
   684   00FFF9  64                 	db	100	;'d'
   685   00FFFA  5B                 	db	91	;'['
   686   00FFFB  6D                 	db	109	;'m'
   687   00FFFC  56                 	db	86	;'V'
   688   00FFFD  5D                 	db	93	;']'
   689   00FFFE  00                 	db	0
   690   00FFFF  00                 	db	0	; dummy byte at the end
   691   000000                     
   692                           	psect	nvCOMRAM
   693   000044                     __pnvCOMRAM:
   694                           	callstack 0
   695   000044                     _TMR0_InterruptHandler:
   696                           	callstack 0
   697   000044                     	ds	3
   698   000047                     _EUSART1_TxDefaultInterruptHandler:
   699                           	callstack 0
   700   000047                     	ds	3
   701                           
   702                           	psect	nvBANK0
   703   0000EC                     __pnvBANK0:
   704                           	callstack 0
   705   0000EC                     _EUSART1_ErrorHandler:
   706                           	callstack 0
   707   0000EC                     	ds	3
   708   0000EF                     _EUSART1_OverrunErrorHandler:
   709                           	callstack 0
   710   0000EF                     	ds	3
   711   0000F2                     _EUSART1_FramingErrorHandler:
   712                           	callstack 0
   713   0000F2                     	ds	3
   714   0000F5                     _EUSART1_RxDefaultInterruptHandler:
   715                           	callstack 0
   716   0000F5                     	ds	3
   717   000000                     _T0CON	set	4053
   718   000000                     _RCSTA1bits	set	4011
   719   000000                     _TXSTA1bits	set	4012
   720   000000                     _T2CONbits	set	4042
   721   000000                     _ADCON1bits	set	4033
   722   000000                     _TRISD	set	3989
   723   000000                     _LATD	set	3980
   724   000000                     _ADCON0bits	set	4034
   725   000000                     _TMR0ON	set	32431
   726   000000                     _ECCP1DEL	set	3961
   727   000000                     _LATA	set	3977
   728   000000                     _LATDbits	set	3980
   729   000000                     _TRISDbits	set	3989
   730   000000                     _PIE1bits	set	3997
   731   000000                     _PIR1bits	set	3998
   732   000000                     _ECCP1AS	set	4022
   733   000000                     _CCP1CON	set	4029
   734   000000                     _ADCON2	set	4032
   735   000000                     _ADCON1	set	4033
   736   000000                     _OSCTUNE	set	3995
   737   000000                     _OSCCON	set	4051
   738   000000                     _T0CONbits	set	4053
   739   000000                     _T2CON	set	4042
   740   000000                     _PR2	set	4043
   741   000000                     _ADRESH	set	4036
   742   000000                     _BAUDCON1	set	3966
   743   000000                     _RCONbits	set	4048
   744   000000                     _TMR2	set	4044
   745   000000                     _RCSTA1	set	4011
   746   000000                     _SPBRGH1	set	3967
   747   000000                     _INTCONbits	set	4082
   748                           
   749                           ; #config settings
   750                           
   751                           	psect	cinit
   752   011168                     __pcinit:
   753                           	callstack 0
   754   011168                     start_initialization:
   755                           	callstack 0
   756   011168                     __initialization:
   757                           	callstack 0
   758                           
   759                           ; Clear objects allocated to BANK2 (256 bytes)
   760   011168  EE02  F000         	lfsr	0,__pbssBANK2
   761   01116C  EE11 F000          	lfsr	1,256
   762   011170                     clear_0:
   763   011170  6AEE               	clrf	postinc0,c
   764   011172  50E5               	movf	postdec1,w,c
   765   011174  50E1               	movf	fsr1l,w,c
   766   011176  E1FC               	bnz	clear_0
   767   011178  50E2               	movf	fsr1h,w,c
   768   01117A  E1FA               	bnz	clear_0
   769                           
   770                           ; Clear objects allocated to BANK1 (256 bytes)
   771   01117C  EE01  F000         	lfsr	0,__pbssBANK1
   772   011180  EE11 F000          	lfsr	1,256
   773   011184                     clear_1:
   774   011184  6AEE               	clrf	postinc0,c
   775   011186  50E5               	movf	postdec1,w,c
   776   011188  50E1               	movf	fsr1l,w,c
   777   01118A  E1FC               	bnz	clear_1
   778   01118C  50E2               	movf	fsr1h,w,c
   779   01118E  E1FA               	bnz	clear_1
   780                           
   781                           ; Clear objects allocated to BANK0 (55 bytes)
   782   011190  EE00  F0B5         	lfsr	0,__pbssBANK0
   783   011194  0E37               	movlw	55
   784   011196                     clear_2:
   785   011196  6AEE               	clrf	postinc0,c
   786   011198  06E8               	decf	wreg,f,c
   787   01119A  E1FD               	bnz	clear_2
   788                           
   789                           ; Clear objects allocated to COMRAM (31 bytes)
   790   01119C  EE00  F025         	lfsr	0,__pbssCOMRAM
   791   0111A0  0E1F               	movlw	31
   792   0111A2                     clear_3:
   793   0111A2  6AEE               	clrf	postinc0,c
   794   0111A4  06E8               	decf	wreg,f,c
   795   0111A6  E1FD               	bnz	clear_3
   796   0111A8                     end_of_initialization:
   797                           	callstack 0
   798   0111A8                     __end_of__initialization:
   799                           	callstack 0
   800   0111A8  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   801   0111AA  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   802   0111AC  0100               	movlb	0
   803   0111AE  EF94  F084         	goto	_main	;jump to C main() function
   804                           
   805                           	psect	bssCOMRAM
   806   000025                     __pbssCOMRAM:
   807                           	callstack 0
   808   000025                     _eusart1RxStatusBuffer:
   809                           	callstack 0
   810   000025                     	ds	8
   811   00002D                     _eusart1TxBuffer:
   812                           	callstack 0
   813   00002D                     	ds	8
   814   000035                     _ADC_InterruptHandler:
   815                           	callstack 0
   816   000035                     	ds	3
   817   000038                     _timer0ReloadVal:
   818                           	callstack 0
   819   000038                     	ds	2
   820   00003A                     _recPtr:
   821                           	callstack 0
   822   00003A                     	ds	1
   823   00003B                     _index:
   824                           	callstack 0
   825   00003B                     	ds	1
   826   00003C                     _modbusAddress:
   827                           	callstack 0
   828   00003C                     	ds	1
   829   00003D                     _eusart1RxLastError:
   830                           	callstack 0
   831   00003D                     	ds	1
   832   00003E                     _eusart1RxCount:
   833                           	callstack 0
   834   00003E                     	ds	1
   835   00003F                     _eusart1RxTail:
   836                           	callstack 0
   837   00003F                     	ds	1
   838   000040                     _eusart1RxHead:
   839                           	callstack 0
   840   000040                     	ds	1
   841   000041                     _eusart1TxBufferRemaining:
   842                           	callstack 0
   843   000041                     	ds	1
   844   000042                     _eusart1TxTail:
   845                           	callstack 0
   846   000042                     	ds	1
   847   000043                     _eusart1TxHead:
   848                           	callstack 0
   849   000043                     	ds	1
   850                           
   851                           	psect	bssBANK0
   852   0000B5                     __pbssBANK0:
   853                           	callstack 0
   854   0000B5                     _eusart1RxBuffer:
   855                           	callstack 0
   856   0000B5                     	ds	8
   857   0000BD                     _input_registers:
   858                           	callstack 0
   859   0000BD                     	ds	4
   860   0000C1                     _holding_registers:
   861                           	callstack 0
   862   0000C1                     	ds	4
   863   0000C5                     _width:
   864                           	callstack 0
   865   0000C5                     	ds	2
   866   0000C7                     _prec:
   867                           	callstack 0
   868   0000C7                     	ds	2
   869   0000C9                     _offset:
   870                           	callstack 0
   871   0000C9                     	ds	2
   872   0000CB                     _flags:
   873                           	callstack 0
   874   0000CB                     	ds	1
   875   0000CC                     _dbuf:
   876                           	callstack 0
   877   0000CC                     	ds	32
   878                           
   879                           	psect	bssBANK1
   880   000100                     __pbssBANK1:
   881                           	callstack 0
   882   000100                     _rx_buf:
   883                           	callstack 0
   884   000100                     	ds	256
   885                           
   886                           	psect	bssBANK2
   887   000200                     __pbssBANK2:
   888                           	callstack 0
   889   000200                     _tx_buf:
   890                           	callstack 0
   891   000200                     	ds	256
   892                           
   893                           	psect	cstackBANK3
   894   000300                     __pcstackBANK3:
   895                           	callstack 0
   896   000300                     main@tempString:
   897                           	callstack 0
   898                           
   899                           ; 20 bytes @ 0x0
   900   000300                     	ds	20
   901                           
   902                           	psect	cstackBANK0
   903   000060                     __pcstackBANK0:
   904                           	callstack 0
   905   000060                     ??_LCD_2x16_WriteCmd:
   906   000060                     ??_LCD_2x16_WriteData:
   907   000060                     ?_ADC_GetConversion:
   908                           	callstack 0
   909   000060                     ?___wmul:
   910                           	callstack 0
   911   000060                     ?___awdiv:
   912                           	callstack 0
   913   000060                     ?___awmod:
   914                           	callstack 0
   915   000060                     ?___lmul:
   916                           	callstack 0
   917   000060                     EPWM1_LoadDutyValue@dutyValue:
   918                           	callstack 0
   919   000060                     ___wmul@multiplier:
   920                           	callstack 0
   921   000060                     ___awdiv@dividend:
   922                           	callstack 0
   923   000060                     ___awmod@dividend:
   924                           	callstack 0
   925   000060                     fputc@c:
   926                           	callstack 0
   927   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   928                           	callstack 0
   929   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   930                           	callstack 0
   931   000060                     EUSART1_SetErrorHandler@interruptHandler:
   932                           	callstack 0
   933   000060                     EUSART1_SetTxInterruptHandler@interruptHandler:
   934                           	callstack 0
   935   000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   936                           	callstack 0
   937   000060                     TMR0_SetInterruptHandler@InterruptHandler:
   938                           	callstack 0
   939   000060                     ___lmul@multiplier:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x0
   943   000060                     	ds	1
   944   000061                     LCD_2x16_WriteCmd@command:
   945                           	callstack 0
   946   000061                     LCD_2x16_WriteData@command:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1
   950   000061                     	ds	1
   951   000062                     ??_Lcd_Init:
   952   000062                     ??_ADC_GetConversion:
   953   000062                     ??_EPWM1_LoadDutyValue:
   954   000062                     LCD_2x16_WriteMsg@msg:
   955                           	callstack 0
   956   000062                     ___wmul@multiplicand:
   957                           	callstack 0
   958   000062                     ___awdiv@divisor:
   959                           	callstack 0
   960   000062                     ___awmod@divisor:
   961                           	callstack 0
   962   000062                     fputc@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x2
   966   000062                     	ds	1
   967   000063                     ??_TMR0_Initialize:
   968   000063                     
   969                           ; 1 bytes @ 0x3
   970   000063                     	ds	1
   971   000064                     ??_fputc:
   972   000064                     LCD_2x16_WriteMsg@line:
   973                           	callstack 0
   974   000064                     ADC_GetConversion@channel:
   975                           	callstack 0
   976   000064                     ___awdiv@counter:
   977                           	callstack 0
   978   000064                     ___awmod@counter:
   979                           	callstack 0
   980   000064                     ___wmul@product:
   981                           	callstack 0
   982   000064                     ___lmul@multiplicand:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x4
   986   000064                     	ds	1
   987   000065                     ___awdiv@sign:
   988                           	callstack 0
   989   000065                     ___awmod@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x5
   993   000065                     	ds	1
   994   000066                     ?_abs:
   995                           	callstack 0
   996   000066                     ?_read_prec_or_width:
   997                           	callstack 0
   998   000066                     ___awdiv@quotient:
   999                           	callstack 0
  1000   000066                     read_prec_or_width@fmt:
  1001                           	callstack 0
  1002   000066                     abs@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x6
  1006   000066                     	ds	2
  1007   000068                     ??_abs:
  1008   000068                     read_prec_or_width@ap:
  1009                           	callstack 0
  1010   000068                     ___lmul@product:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x8
  1014   000068                     	ds	1
  1015   000069                     fputs@s:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x9
  1019   000069                     	ds	1
  1020   00006A                     ??_read_prec_or_width:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023   00006A                     	ds	1
  1024   00006B                     fputs@fp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xB
  1028   00006B                     	ds	1
  1029   00006C                     ?___lldiv:
  1030                           	callstack 0
  1031   00006C                     read_prec_or_width@c:
  1032                           	callstack 0
  1033   00006C                     ___lldiv@dividend:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0xC
  1037   00006C                     	ds	1
  1038   00006D                     fputs@c:
  1039                           	callstack 0
  1040   00006D                     read_prec_or_width@n:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xD
  1044   00006D                     	ds	1
  1045   00006E                     fputs@i:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xE
  1049   00006E                     	ds	2
  1050   000070                     pad@fp:
  1051                           	callstack 0
  1052   000070                     ___lldiv@divisor:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x10
  1056   000070                     	ds	2
  1057   000072                     pad@buf:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x12
  1061   000072                     	ds	2
  1062   000074                     pad@p:
  1063                           	callstack 0
  1064   000074                     ___lldiv@quotient:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x14
  1068   000074                     	ds	2
  1069   000076                     ??_pad:
  1070                           
  1071                           ; 1 bytes @ 0x16
  1072   000076                     	ds	1
  1073   000077                     pad@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x17
  1077   000077                     	ds	1
  1078   000078                     ___lldiv@counter:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x18
  1082   000078                     	ds	1
  1083   000079                     ?_measure_voltage:
  1084                           	callstack 0
  1085   000079                     ?_measure_current:
  1086                           	callstack 0
  1087   000079                     measure_current@offset:
  1088                           	callstack 0
  1089   000079                     pad@w:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x19
  1093   000079                     	ds	2
  1094   00007B                     ??_measure_voltage:
  1095   00007B                     ??_measure_current:
  1096   00007B                     dtoa@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x1B
  1100   00007B                     	ds	1
  1101   00007C                     measure_voltage@result:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x1C
  1105   00007C                     	ds	1
  1106   00007D                     dtoa@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x1D
  1110   00007D                     	ds	2
  1111   00007F                     measure_current@i:
  1112                           	callstack 0
  1113   00007F                     _dtoa$1718:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x1F
  1117   00007F                     	ds	1
  1118   000080                     measure_voltage@i:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x20
  1122   000080                     	ds	1
  1123   000081                     dtoa@p:
  1124                           	callstack 0
  1125   000081                     measure_current@result:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x21
  1129   000081                     	ds	2
  1130   000083                     dtoa@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x23
  1134   000083                     	ds	2
  1135   000085                     dtoa@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x25
  1139   000085                     	ds	1
  1140   000086                     dtoa@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x26
  1144   000086                     	ds	2
  1145   000088                     vfpfcnvrt@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x28
  1149   000088                     	ds	2
  1150   00008A                     vfpfcnvrt@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154   00008A                     	ds	2
  1155   00008C                     vfpfcnvrt@ap:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2C
  1159   00008C                     	ds	2
  1160   00008E                     ??_vfpfcnvrt:
  1161                           
  1162                           ; 1 bytes @ 0x2E
  1163   00008E                     	ds	2
  1164   000090                     vfpfcnvrt@convarg:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x30
  1168   000090                     	ds	4
  1169   000094                     vfpfcnvrt@done:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x34
  1173   000094                     	ds	2
  1174   000096                     vfpfcnvrt@cp:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x36
  1178   000096                     	ds	2
  1179   000098                     ?_vfprintf:
  1180                           	callstack 0
  1181   000098                     vfprintf@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x38
  1185   000098                     	ds	2
  1186   00009A                     vfprintf@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x3A
  1190   00009A                     	ds	2
  1191   00009C                     vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3C
  1195   00009C                     	ds	2
  1196   00009E                     vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3E
  1200   00009E                     	ds	2
  1201   0000A0                     ?_sprintf:
  1202                           	callstack 0
  1203   0000A0                     sprintf@s:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x40
  1207   0000A0                     	ds	2
  1208   0000A2                     sprintf@fmt:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x42
  1212   0000A2                     	ds	4
  1213   0000A6                     sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x46
  1217   0000A6                     	ds	2
  1218   0000A8                     sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 12 bytes @ 0x48
  1222   0000A8                     	ds	12
  1223   0000B4                     ??_main:
  1224                           
  1225                           ; 1 bytes @ 0x54
  1226   0000B4                     	ds	1
  1227                           
  1228                           	psect	cstackCOMRAM
  1229   000001                     __pcstackCOMRAM:
  1230                           	callstack 0
  1231   000001                     ?_CRC16:
  1232                           	callstack 0
  1233   000001                     EUSART1_Write@txData:
  1234                           	callstack 0
  1235   000001                     modbus_char_recvd@c:
  1236                           	callstack 0
  1237   000001                     CRC16@msg:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241   000001                     	ds	1
  1242   000002                     ??_modbus_send:
  1243                           
  1244                           ; 1 bytes @ 0x1
  1245   000002                     	ds	1
  1246   000003                     CRC16@length:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2
  1250   000003                     	ds	2
  1251   000005                     ??_CRC16:
  1252   000005                     modbus_send@length:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x4
  1256   000005                     	ds	1
  1257   000006                     modbus_send@i_1196:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x5
  1261   000006                     	ds	1
  1262   000007                     CRC16@uIndex:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x6
  1266   000007                     	ds	1
  1267   000008                     CRC16@uchCRCHi:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x7
  1271   000008                     	ds	1
  1272   000009                     CRC16@uchCRCLo:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x8
  1276   000009                     	ds	1
  1277   00000A                     ??_modbus_analyse_and_answer:
  1278                           
  1279                           ; 1 bytes @ 0x9
  1280   00000A                     	ds	2
  1281   00000C                     modbus_analyse_and_answer@crcAtt:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0xB
  1285   00000C                     	ds	2
  1286   00000E                     modbus_analyse_and_answer@functionCode:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0xD
  1290   00000E                     	ds	1
  1291   00000F                     modbus_analyse_and_answer@pwmValue:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0xE
  1295   00000F                     	ds	2
  1296   000011                     modbus_analyse_and_answer@i:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x10
  1300   000011                     	ds	2
  1301   000013                     modbus_analyse_and_answer@i_1189:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x12
  1305   000013                     	ds	2
  1306   000015                     modbus_analyse_and_answer@startingAddress:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x14
  1310   000015                     	ds	2
  1311   000017                     modbus_analyse_and_answer@crc:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x16
  1315   000017                     	ds	2
  1316   000019                     modbus_analyse_and_answer@nbofRegister:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x18
  1320   000019                     	ds	2
  1321   00001B                     ??_INTERRUPT_InterruptManager:
  1322                           
  1323                           ; 1 bytes @ 0x1A
  1324   00001B                     	ds	10
  1325                           
  1326 ;;
  1327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1328 ;;
  1329 ;; *************** function _main *****************
  1330 ;; Defined at:
  1331 ;;		line 51 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  tempString     20    0[BANK3 ] unsigned char [20]
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         0       1       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:       21 bytes
  1350 ;; Hardware stack levels required when called: 12
  1351 ;; This function calls:
  1352 ;;		_EPWM1_LoadDutyValue
  1353 ;;		_LCD_2x16_WriteMsg
  1354 ;;		_Lcd_Init
  1355 ;;		_SYSTEM_Initialize
  1356 ;;		_measure_current
  1357 ;;		_measure_voltage
  1358 ;;		_sprintf
  1359 ;; This function is called by:
  1360 ;;		Startup code after reset
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text0
  1365   010928                     __ptext0:
  1366                           	callstack 0
  1367   010928                     _main:
  1368                           	callstack 19
  1369   010928                     
  1370                           ;main.c: 54:     SYSTEM_Initialize();
  1371   010928  EC61  F08A         	call	_SYSTEM_Initialize	;wreg free
  1372   01092C                     
  1373                           ;main.c: 61:     (INTCONbits.GIE = 1);
  1374   01092C  8EF2               	bsf	242,7,c	;volatile
  1375   01092E                     
  1376                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  1377   01092E  8CF2               	bsf	242,6,c	;volatile
  1378   010930                     
  1379                           ;main.c: 73:     holding_registers[1] = 0x80;
  1380   010930  0E00               	movlw	0
  1381   010932  0100               	movlb	0	; () banked
  1382   010934  6FC4               	movwf	(_holding_registers+3)& (0+255),b
  1383   010936  0E80               	movlw	128
  1384   010938  6FC3               	movwf	(_holding_registers+2)& (0+255),b
  1385   01093A                     
  1386                           ; BSR set to: 0
  1387                           ;main.c: 74:     EPWM1_LoadDutyValue(0);
  1388   01093A  0E00               	movlw	0
  1389   01093C  6F61               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1390   01093E  0E00               	movlw	0
  1391   010940  6F60               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1392   010942  EC1F  F08A         	call	_EPWM1_LoadDutyValue	;wreg free
  1393   010946                     
  1394                           ;main.c: 78:     char tempString[20];;main.c: 79:     Lcd_Init();
  1395   010946  EC22  F089         	call	_Lcd_Init	;wreg free
  1396   01094A                     
  1397                           ;main.c: 80:     _delay((unsigned long)((10)*(25000000/4000.0)));
  1398   01094A  0E52               	movlw	82
  1399   01094C  0100               	movlb	0	; () banked
  1400   01094E  6FB4               	movwf	??_main& (0+255),b
  1401   010950  0E29               	movlw	41
  1402   010952                     u2307:
  1403   010952  2EE8               	decfsz	wreg,f,c
  1404   010954  D7FE               	bra	u2307
  1405   010956  2FB4               	decfsz	??_main& (0+255),f,b
  1406   010958  D7FC               	bra	u2307
  1407   01095A  D000               	nop2	
  1408   01095C                     l3633:
  1409                           
  1410                           ;main.c: 82:     {;main.c: 83:          input_registers[0] = measure_voltage();
  1411   01095C  ECBC  F085         	call	_measure_voltage	;wreg free
  1412   010960  C079  F0BD         	movff	?_measure_voltage,_input_registers
  1413   010964  C07A  F0BE         	movff	?_measure_voltage+1,_input_registers+1
  1414   010968                     
  1415                           ;main.c: 84:          input_registers[1] = measure_current(offset);
  1416   010968  0E00               	movlw	0
  1417   01096A  0100               	movlb	0	; () banked
  1418   01096C  6F7A               	movwf	(measure_current@offset+1)& (0+255),b
  1419   01096E  0E00               	movlw	0
  1420   010970  6F79               	movwf	measure_current@offset& (0+255),b
  1421   010972  ECF1  F082         	call	_measure_current	;wreg free
  1422   010976  C079  F0BF         	movff	?_measure_current,_input_registers+2
  1423   01097A  C07A  F0C0         	movff	?_measure_current+1,_input_registers+3
  1424   01097E                     
  1425                           ;main.c: 85:          EPWM1_LoadDutyValue(holding_registers[0]);
  1426   01097E  C0C1  F060         	movff	_holding_registers,EPWM1_LoadDutyValue@dutyValue
  1427   010982  C0C2  F061         	movff	_holding_registers+1,EPWM1_LoadDutyValue@dutyValue+1
  1428   010986  EC1F  F08A         	call	_EPWM1_LoadDutyValue	;wreg free
  1429   01098A                     
  1430                           ;main.c: 87:          sprintf(tempString,"U = %03d[mV]",input_registers[0]);
  1431   01098A  0E00               	movlw	low main@tempString
  1432   01098C  0100               	movlb	0	; () banked
  1433   01098E  6FA0               	movwf	sprintf@s& (0+255),b
  1434   010990  0E03               	movlw	high main@tempString
  1435   010992  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1436   010994  0EF2               	movlw	low STR_1
  1437   010996  6FA2               	movwf	sprintf@fmt& (0+255),b
  1438   010998  0EFF               	movlw	high STR_1
  1439   01099A  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1440   01099C  C0BD  F0A4         	movff	_input_registers,?_sprintf+4
  1441   0109A0  C0BE  F0A5         	movff	_input_registers+1,?_sprintf+5
  1442   0109A4  EC8C  F088         	call	_sprintf	;wreg free
  1443   0109A8                     
  1444                           ;main.c: 88:          LCD_2x16_WriteMsg(tempString,0);
  1445   0109A8  0E00               	movlw	low main@tempString
  1446   0109AA  0100               	movlb	0	; () banked
  1447   0109AC  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1448   0109AE  0E03               	movlw	high main@tempString
  1449   0109B0  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1450   0109B2  0E00               	movlw	0
  1451   0109B4  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1452   0109B6  ECC7  F089         	call	_LCD_2x16_WriteMsg	;wreg free
  1453   0109BA                     
  1454                           ;main.c: 89:          sprintf(tempString,"I = %03d[uA]",input_registers[1]);
  1455   0109BA  0E00               	movlw	low main@tempString
  1456   0109BC  0100               	movlb	0	; () banked
  1457   0109BE  6FA0               	movwf	sprintf@s& (0+255),b
  1458   0109C0  0E03               	movlw	high main@tempString
  1459   0109C2  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1460   0109C4  0EE5               	movlw	low STR_2
  1461   0109C6  6FA2               	movwf	sprintf@fmt& (0+255),b
  1462   0109C8  0EFF               	movlw	high STR_2
  1463   0109CA  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1464   0109CC  C0BF  F0A4         	movff	_input_registers+2,?_sprintf+4
  1465   0109D0  C0C0  F0A5         	movff	_input_registers+3,?_sprintf+5
  1466   0109D4  EC8C  F088         	call	_sprintf	;wreg free
  1467   0109D8                     
  1468                           ;main.c: 90:          LCD_2x16_WriteMsg(tempString,1);
  1469   0109D8  0E00               	movlw	low main@tempString
  1470   0109DA  0100               	movlb	0	; () banked
  1471   0109DC  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1472   0109DE  0E03               	movlw	high main@tempString
  1473   0109E0  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1474   0109E2  0E01               	movlw	1
  1475   0109E4  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1476   0109E6  ECC7  F089         	call	_LCD_2x16_WriteMsg	;wreg free
  1477   0109EA  EFAE  F084         	goto	l3633
  1478   0109EE  EF8C  F000         	goto	start
  1479   0109F2                     __end_of_main:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _sprintf *****************
  1483 ;; Defined at:
  1484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1487 ;;		 -> main@tempString(20), 
  1488 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1489 ;;		 -> STR_2(13), STR_1(13), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  f              12   72[BANK0 ] struct _IO_FILE
  1492 ;;  ap              2   70[BANK0 ] PTR void [1]
  1493 ;;		 -> ?_sprintf(2), 
  1494 ;;  ret             2    0        int 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  2   64[BANK0 ] int 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:       20 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 11
  1511 ;; This function calls:
  1512 ;;		_vfprintf
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text1
  1519   011118                     __ptext1:
  1520                           	callstack 0
  1521   011118                     _sprintf:
  1522                           	callstack 19
  1523   011118  0EA4               	movlw	low (?_sprintf+4)
  1524   01111A  0100               	movlb	0	; () banked
  1525   01111C  6FA6               	movwf	sprintf@ap& (0+255),b
  1526   01111E  0E00               	movlw	high (?_sprintf+4)
  1527   011120  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1528   011122  C0A0  F0A8         	movff	sprintf@s,sprintf@f
  1529   011126  C0A1  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1530   01112A                     
  1531                           ; BSR set to: 0
  1532   01112A  0E00               	movlw	0
  1533   01112C  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1534   01112E  0E00               	movlw	0
  1535   011130  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1536   011132                     
  1537                           ; BSR set to: 0
  1538   011132  0E00               	movlw	0
  1539   011134  6FB3               	movwf	(sprintf@f+11)& (0+255),b
  1540   011136  0E00               	movlw	0
  1541   011138  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1542   01113A                     
  1543                           ; BSR set to: 0
  1544   01113A  0EA8               	movlw	low sprintf@f
  1545   01113C  6F98               	movwf	vfprintf@fp& (0+255),b
  1546   01113E  0E00               	movlw	high sprintf@f
  1547   011140  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1548   011142  C0A2  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1549   011146  C0A3  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1550   01114A  0EA6               	movlw	low sprintf@ap
  1551   01114C  6F9C               	movwf	vfprintf@ap& (0+255),b
  1552   01114E  0E00               	movlw	high sprintf@ap
  1553   011150  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1554   011152  EC0C  F088         	call	_vfprintf	;wreg free
  1555   011156  0100               	movlb	0	; () banked
  1556   011158  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1557   01115A  25A0               	addwf	sprintf@s& (0+255),w,b
  1558   01115C  6ED9               	movwf	fsr2l,c
  1559   01115E  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1560   011160  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1561   011162  6EDA               	movwf	fsr2h,c
  1562   011164  6ADF               	clrf	indf2,c
  1563   011166                     
  1564                           ; BSR set to: 0
  1565   011166  0012               	return		;funcret
  1566   011168                     __end_of_sprintf:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _vfprintf *****************
  1570 ;; Defined at:
  1571 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1574 ;;		 -> sprintf@f(12), 
  1575 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1576 ;;		 -> STR_2(13), STR_1(13), 
  1577 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1578 ;;		 -> sprintf@ap(2), 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1581 ;;		 -> STR_2(13), STR_1(13), 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2   56[BANK0 ] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:        8 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 10
  1598 ;; This function calls:
  1599 ;;		_vfpfcnvrt
  1600 ;; This function is called by:
  1601 ;;		_sprintf
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text2
  1606   011018                     __ptext2:
  1607                           	callstack 0
  1608   011018                     _vfprintf:
  1609                           	callstack 19
  1610   011018                     
  1611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1612   011018  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1613   01101C  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1616   011020  EF21  F088         	goto	l3509
  1617   011024                     l3507:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1620   011024  C098  F088         	movff	vfprintf@fp,vfpfcnvrt@fp
  1621   011028  C099  F089         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1622   01102C  0E9E               	movlw	low vfprintf@cfmt
  1623   01102E  0100               	movlb	0	; () banked
  1624   011030  6F8A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1625   011032  0E00               	movlw	high vfprintf@cfmt
  1626   011034  6F8B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1627   011036  C09C  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1628   01103A  C09D  F08D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1629   01103E  EC18  F081         	call	_vfpfcnvrt	;wreg free
  1630   011042                     l3509:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1633   011042  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1634   011046  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1635   01104A                     	if	0	;tblptru may be non-zero
  1636   01104A                     	endif
  1637   01104A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1638   01104A  0E00               	movlw	low (__mediumconst shr (0+16))
  1639   01104C  6EF8               	movwf	tblptru,c
  1640   01104E                     	endif
  1641   01104E  0008               	tblrd		*
  1642   011050  50F5               	movf	tablat,w,c
  1643   011052  0900               	iorlw	0
  1644   011054  A4D8               	btfss	status,2,c
  1645   011056  EF2F  F088         	goto	u2231
  1646   01105A  EF31  F088         	goto	u2230
  1647   01105E                     u2231:
  1648   01105E  EF12  F088         	goto	l3507
  1649   011062                     u2230:
  1650   011062                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1652   011062  0E00               	movlw	0
  1653   011064  0100               	movlb	0	; () banked
  1654   011066  6F99               	movwf	(?_vfprintf+1)& (0+255),b
  1655   011068  0E00               	movlw	0
  1656   01106A  6F98               	movwf	?_vfprintf& (0+255),b
  1657   01106C                     
  1658                           ; BSR set to: 0
  1659   01106C  0012               	return		;funcret
  1660   01106E                     __end_of_vfprintf:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _vfpfcnvrt *****************
  1664 ;; Defined at:
  1665 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  1668 ;;		 -> sprintf@f(12), 
  1669 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  1670 ;;		 -> vfprintf@cfmt(2), 
  1671 ;;  ap              2   44[BANK0 ] PTR PTR void 
  1672 ;;		 -> sprintf@ap(2), 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  convarg         4   48[BANK0 ] struct .
  1675 ;;  cp              2   54[BANK0 ] PTR unsigned char 
  1676 ;;		 -> STR_2(13), STR_1(13), 
  1677 ;;  done            2   52[BANK0 ] int 
  1678 ;;  i               2    0        int 
  1679 ;;  c               1    0        unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:       16 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 9
  1696 ;; This function calls:
  1697 ;;		_dtoa
  1698 ;;		_fputc
  1699 ;;		_read_prec_or_width
  1700 ;; This function is called by:
  1701 ;;		_vfprintf
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text3
  1706   010230                     __ptext3:
  1707                           	callstack 0
  1708   010230                     _vfpfcnvrt:
  1709                           	callstack 19
  1710   010230                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1712   010230  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1713   010234  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1714   010238  CFDE FFF6          	movff	postinc2,tblptrl
  1715   01023C  CFDD FFF7          	movff	postdec2,tblptrh
  1716   010240                     	if	0	;tblptru may be non-zero
  1717   010240                     	endif
  1718   010240                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1719   010240  0E00               	movlw	low (__mediumconst shr (0+16))
  1720   010242  6EF8               	movwf	tblptru,c
  1721   010244                     	endif
  1722   010244  0008               	tblrd		*
  1723   010246  50F5               	movf	tablat,w,c
  1724   010248  0A25               	xorlw	37
  1725   01024A  A4D8               	btfss	status,2,c
  1726   01024C  EF2A  F081         	goto	u2121
  1727   010250  EF2C  F081         	goto	u2120
  1728   010254                     u2121:
  1729   010254  EFF1  F081         	goto	l3341
  1730   010258                     u2120:
  1731   010258                     
  1732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1733   010258  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1734   01025C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1735   010260  2ADE               	incf	postinc2,f,c
  1736   010262  0E00               	movlw	0
  1737   010264  22DD               	addwfc	postdec2,f,c
  1738   010266                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1740   010266  0E00               	movlw	0
  1741   010268  0100               	movlb	0	; () banked
  1742   01026A  6FC6               	movwf	(_width+1)& (0+255),b
  1743   01026C  0E00               	movlw	0
  1744   01026E  6FC5               	movwf	_width& (0+255),b
  1745   010270  C0C5  F0CB         	movff	_width,_flags
  1746   010274                     
  1747                           ; BSR set to: 0
  1748                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1749   010274  69C7               	setf	_prec& (0+255),b
  1750   010276  69C8               	setf	(_prec+1)& (0+255),b
  1751   010278                     
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1754   010278  0E00               	movlw	0
  1755   01027A  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1756   01027C  0E00               	movlw	0
  1757   01027E  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1760   010280  EF6E  F081         	goto	l3317
  1761   010284                     l3307:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1765   010284  83CB               	bsf	_flags& (0+255),1,b
  1766   010286                     
  1767                           ; BSR set to: 0
  1768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1769   010286  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1770   01028A  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1771   01028E  2ADE               	incf	postinc2,f,c
  1772   010290  0E00               	movlw	0
  1773   010292  22DD               	addwfc	postdec2,f,c
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1776   010294  EF6E  F081         	goto	l3317
  1777   010298                     l3311:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1781   010298  0E00               	movlw	0
  1782   01029A  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1783   01029C  0E01               	movlw	1
  1784   01029E  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1787   0102A0  EF6E  F081         	goto	l3317
  1788   0102A4                     l3315:
  1789                           
  1790                           ; BSR set to: 0
  1791   0102A4  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1792   0102A8  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1793   0102AC  CFDE FFF6          	movff	postinc2,tblptrl
  1794   0102B0  CFDD FFF7          	movff	postdec2,tblptrh
  1795   0102B4                     	if	0	;tblptru may be non-zero
  1796   0102B4                     	endif
  1797   0102B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1798   0102B4  0E00               	movlw	low (__mediumconst shr (0+16))
  1799   0102B6  6EF8               	movwf	tblptru,c
  1800   0102B8                     	endif
  1801   0102B8  0008               	tblrd		*
  1802   0102BA  50F5               	movf	tablat,w,c
  1803   0102BC  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1804   0102BE  6B8F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ;	Chosen strategy is simple_byte
  1813   0102C0  518F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1814   0102C2  0A00               	xorlw	0	; case 0
  1815   0102C4  B4D8               	btfsc	status,2,c
  1816   0102C6  EF67  F081         	goto	l3697
  1817   0102CA  EF4C  F081         	goto	l3311
  1818   0102CE                     l3697:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ; Switch size 1, requested type "simple"
  1822                           ; Number of cases is 1, Range of values is 48 to 48
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte            4     3 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827   0102CE  518E               	movf	??_vfpfcnvrt& (0+255),w,b
  1828   0102D0  0A30               	xorlw	48	; case 48
  1829   0102D2  B4D8               	btfsc	status,2,c
  1830   0102D4  EF42  F081         	goto	l3307
  1831   0102D8  EF4C  F081         	goto	l3311
  1832   0102DC                     l3317:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1836   0102DC  5194               	movf	vfpfcnvrt@done& (0+255),w,b
  1837   0102DE  1195               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1838   0102E0  B4D8               	btfsc	status,2,c
  1839   0102E2  EF75  F081         	goto	u2131
  1840   0102E6  EF77  F081         	goto	u2130
  1841   0102EA                     u2131:
  1842   0102EA  EF52  F081         	goto	l3315
  1843   0102EE                     u2130:
  1844   0102EE                     
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1847   0102EE  C08A  F066         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1848   0102F2  C08B  F067         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1849   0102F6  C08C  F068         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1850   0102FA  C08D  F069         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1851   0102FE  ECC5  F083         	call	_read_prec_or_width	;wreg free
  1852   010302  C066  F0C5         	movff	?_read_prec_or_width,_width
  1853   010306  C067  F0C6         	movff	?_read_prec_or_width+1,_width+1
  1854   01030A                     
  1855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1856   01030A  0100               	movlb	0	; () banked
  1857   01030C  BFC6               	btfsc	(_width+1)& (0+255),7,b
  1858   01030E  EF8D  F081         	goto	u2140
  1859   010312  EF8B  F081         	goto	u2141
  1860   010316                     u2141:
  1861   010316  EF92  F081         	goto	l3325
  1862   01031A                     u2140:
  1863   01031A                     
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1866   01031A  81CB               	bsf	_flags& (0+255),0,b
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1869   01031C  6DC5               	negf	_width& (0+255),b
  1870   01031E  1FC6               	comf	(_width+1)& (0+255),f,b
  1871   010320  B0D8               	btfsc	status,0,c
  1872   010322  2BC6               	incf	(_width+1)& (0+255),f,b
  1873   010324                     l3325:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1877   010324  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1878   010328  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1879   01032C  CFDE F096          	movff	postinc2,vfpfcnvrt@cp
  1880   010330  CFDD F097          	movff	postdec2,vfpfcnvrt@cp+1
  1881   010334                     
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1884   010334  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1885   010338  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1886   01033C                     	if	0	;tblptru may be non-zero
  1887   01033C                     	endif
  1888   01033C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1889   01033C  0E00               	movlw	low (__mediumconst shr (0+16))
  1890   01033E  6EF8               	movwf	tblptru,c
  1891   010340                     	endif
  1892   010340  0008               	tblrd		*
  1893   010342  50F5               	movf	tablat,w,c
  1894   010344  0A64               	xorlw	100
  1895   010346  B4D8               	btfsc	status,2,c
  1896   010348  EFA8  F081         	goto	u2151
  1897   01034C  EFAA  F081         	goto	u2150
  1898   010350                     u2151:
  1899   010350  EFBA  F081         	goto	l3331
  1900   010354                     u2150:
  1901   010354                     
  1902                           ; BSR set to: 0
  1903   010354  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1904   010358  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1905   01035C                     	if	0	;tblptru may be non-zero
  1906   01035C                     	endif
  1907   01035C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1908   01035C  0E00               	movlw	low (__mediumconst shr (0+16))
  1909   01035E  6EF8               	movwf	tblptru,c
  1910   010360                     	endif
  1911   010360  0008               	tblrd		*
  1912   010362  50F5               	movf	tablat,w,c
  1913   010364  0A69               	xorlw	105
  1914   010366  A4D8               	btfss	status,2,c
  1915   010368  EFB8  F081         	goto	u2161
  1916   01036C  EFBA  F081         	goto	u2160
  1917   010370                     u2161:
  1918   010370  EFE8  F081         	goto	l3337
  1919   010374                     u2160:
  1920   010374                     l3331:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1924   010374  C08C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1925   010378  C08D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1926   01037C  CFDF F08E          	movff	indf2,??_vfpfcnvrt
  1927   010380  0E02               	movlw	2
  1928   010382  26DE               	addwf	postinc2,f,c
  1929   010384  CFDF F08F          	movff	indf2,??_vfpfcnvrt+1
  1930   010388  0E00               	movlw	0
  1931   01038A  22DD               	addwfc	postdec2,f,c
  1932   01038C  C08E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1933   010390  C08F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1934   010394  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  1935   010398  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1938   01039C  0E01               	movlw	1
  1939   01039E  2596               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1940   0103A0  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1941   0103A2  0E00               	movlw	0
  1942   0103A4  2197               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1943   0103A6  6F8F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1944   0103A8  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945   0103AC  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946   0103B0  C08E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1947   0103B4  C08F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1948   0103B8                     
  1949                           ; BSR set to: 0
  1950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1951   0103B8  C088  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  1952   0103BC  C089  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1953   0103C0  C090  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  1954   0103C4  C091  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1955   0103C8  EC09  F082         	call	_dtoa	;wreg free
  1956   0103CC  EF08  F082         	goto	l1283
  1957   0103D0                     l3337:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1960   0103D0  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1961   0103D4  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1962   0103D8  2ADE               	incf	postinc2,f,c
  1963   0103DA  0E00               	movlw	0
  1964   0103DC  22DD               	addwfc	postdec2,f,c
  1965   0103DE  EF08  F082         	goto	l1283
  1966   0103E2                     l3341:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1969   0103E2  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1970   0103E6  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1971   0103EA  CFDE FFF6          	movff	postinc2,tblptrl
  1972   0103EE  CFDD FFF7          	movff	postdec2,tblptrh
  1973   0103F2                     	if	0	;tblptru may be non-zero
  1974   0103F2                     	endif
  1975   0103F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1976   0103F2  0E00               	movlw	low (__mediumconst shr (0+16))
  1977   0103F4  6EF8               	movwf	tblptru,c
  1978   0103F6                     	endif
  1979   0103F6  0008               	tblrd		*
  1980   0103F8  50F5               	movf	tablat,w,c
  1981   0103FA  0100               	movlb	0	; () banked
  1982   0103FC  6F60               	movwf	fputc@c& (0+255),b
  1983   0103FE  6B61               	clrf	(fputc@c+1)& (0+255),b
  1984   010400  C088  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1985   010404  C089  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1986   010408  EC2E  F084         	call	_fputc	;wreg free
  1987   01040C  EFE8  F081         	goto	l3337
  1988   010410                     l1283:
  1989   010410  0012               	return		;funcret
  1990   010412                     __end_of_vfpfcnvrt:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _read_prec_or_width *****************
  1994 ;; Defined at:
  1995 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  fmt             2    6[BANK0 ] PTR PTR const unsigned c
  1998 ;;		 -> vfprintf@cfmt(2), 
  1999 ;;  ap              2    8[BANK0 ] PTR PTR void [1]
  2000 ;;		 -> sprintf@ap(2), 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  c               1   12[BANK0 ] unsigned char 
  2003 ;;  n               2   13[BANK0 ] int 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2    6[BANK0 ] int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2013 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;Total ram usage:        9 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 5
  2020 ;; This function calls:
  2021 ;;		___wmul
  2022 ;; This function is called by:
  2023 ;;		_vfpfcnvrt
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text4
  2028   01078A                     __ptext4:
  2029                           	callstack 0
  2030   01078A                     _read_prec_or_width:
  2031                           	callstack 22
  2032   01078A                     
  2033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2034   01078A  0E00               	movlw	0
  2035   01078C  0100               	movlb	0	; () banked
  2036   01078E  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2037   010790  0E00               	movlw	0
  2038   010792  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2039   010794                     
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2042   010794  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2043   010798  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2044   01079C  CFDE FFF6          	movff	postinc2,tblptrl
  2045   0107A0  CFDD FFF7          	movff	postdec2,tblptrh
  2046   0107A4                     	if	0	;tblptru may be non-zero
  2047   0107A4                     	endif
  2048   0107A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2049   0107A4  0E00               	movlw	low (__mediumconst shr (0+16))
  2050   0107A6  6EF8               	movwf	tblptru,c
  2051   0107A8                     	endif
  2052   0107A8  0008               	tblrd		*
  2053   0107AA  50F5               	movf	tablat,w,c
  2054   0107AC  0A2A               	xorlw	42
  2055   0107AE  A4D8               	btfss	status,2,c
  2056   0107B0  EFDC  F083         	goto	u2101
  2057   0107B4  EFDE  F083         	goto	u2100
  2058   0107B8                     u2101:
  2059   0107B8  EF13  F084         	goto	l3283
  2060   0107BC                     u2100:
  2061   0107BC                     
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2064   0107BC  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2065   0107C0  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2066   0107C4  2ADE               	incf	postinc2,f,c
  2067   0107C6  0E00               	movlw	0
  2068   0107C8  22DD               	addwfc	postdec2,f,c
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2071   0107CA  C068  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2072   0107CE  C069  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2073   0107D2  CFDF F06A          	movff	indf2,??_read_prec_or_width
  2074   0107D6  0E02               	movlw	2
  2075   0107D8  26DE               	addwf	postinc2,f,c
  2076   0107DA  CFDF F06B          	movff	indf2,??_read_prec_or_width+1
  2077   0107DE  0E00               	movlw	0
  2078   0107E0  22DD               	addwfc	postdec2,f,c
  2079   0107E2  C06A  FFD9         	movff	??_read_prec_or_width,fsr2l
  2080   0107E6  C06B  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2081   0107EA  CFDE F06D          	movff	postinc2,read_prec_or_width@n
  2082   0107EE  CFDD F06E          	movff	postdec2,read_prec_or_width@n+1
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2085   0107F2  EF29  F084         	goto	l1264
  2086   0107F6                     l3279:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2090   0107F6  C06D  F060         	movff	read_prec_or_width@n,___wmul@multiplier
  2091   0107FA  C06E  F061         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2092   0107FE  0E00               	movlw	0
  2093   010800  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2094   010802  0E0A               	movlw	10
  2095   010804  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2096   010806  EC4D  F08A         	call	___wmul	;wreg free
  2097   01080A  0100               	movlb	0	; () banked
  2098   01080C  516C               	movf	read_prec_or_width@c& (0+255),w,b
  2099   01080E  2560               	addwf	?___wmul& (0+255),w,b
  2100   010810  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2101   010812  0E00               	movlw	0
  2102   010814  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2103   010816  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2104   010818                     
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2107   010818  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2108   01081C  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2109   010820  2ADE               	incf	postinc2,f,c
  2110   010822  0E00               	movlw	0
  2111   010824  22DD               	addwfc	postdec2,f,c
  2112   010826                     l3283:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2116   010826  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2117   01082A  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2118   01082E  CFDE FFF6          	movff	postinc2,tblptrl
  2119   010832  CFDD FFF7          	movff	postdec2,tblptrh
  2120   010836                     	if	0	;tblptru may be non-zero
  2121   010836                     	endif
  2122   010836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2123   010836  0E00               	movlw	low (__mediumconst shr (0+16))
  2124   010838  6EF8               	movwf	tblptru,c
  2125   01083A                     	endif
  2126   01083A  0008               	tblrd		*
  2127   01083C  50F5               	movf	tablat,w,c
  2128   01083E  0FD0               	addlw	208
  2129   010840  6F6C               	movwf	read_prec_or_width@c& (0+255),b
  2130   010842  0E09               	movlw	9
  2131   010844  656C               	cpfsgt	read_prec_or_width@c& (0+255),b
  2132   010846  EF27  F084         	goto	u2111
  2133   01084A  EF29  F084         	goto	u2110
  2134   01084E                     u2111:
  2135   01084E  EFFB  F083         	goto	l3279
  2136   010852                     u2110:
  2137   010852                     l1264:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2141   010852  C06D  F066         	movff	read_prec_or_width@n,?_read_prec_or_width
  2142   010856  C06E  F067         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2143   01085A                     
  2144                           ; BSR set to: 0
  2145   01085A  0012               	return		;funcret
  2146   01085C                     __end_of_read_prec_or_width:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function ___wmul *****************
  2150 ;; Defined at:
  2151 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2154 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  product         2    4[BANK0 ] unsigned int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    0[BANK0 ] unsigned int 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, prodl, prodh
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 4
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_read_prec_or_width
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text5
  2181   01149A                     __ptext5:
  2182                           	callstack 0
  2183   01149A                     ___wmul:
  2184                           	callstack 22
  2185   01149A  0100               	movlb	0	; () banked
  2186   01149C  5160               	movf	___wmul@multiplier& (0+255),w,b
  2187   01149E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2188   0114A0  CFF3 F064          	movff	prodl,___wmul@product
  2189   0114A4  CFF4 F065          	movff	prodh,___wmul@product+1
  2190   0114A8  5160               	movf	___wmul@multiplier& (0+255),w,b
  2191   0114AA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2192   0114AC  50F3               	movf	243,w,c
  2193   0114AE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2194   0114B0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2195   0114B2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2196   0114B4  50F3               	movf	243,w,c
  2197   0114B6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2198   0114B8                     
  2199                           ; BSR set to: 0
  2200   0114B8  C064  F060         	movff	___wmul@product,?___wmul
  2201   0114BC  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2202   0114C0                     
  2203                           ; BSR set to: 0
  2204   0114C0  0012               	return		;funcret
  2205   0114C2                     __end_of___wmul:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _dtoa *****************
  2209 ;; Defined at:
  2210 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2213 ;;		 -> sprintf@f(12), 
  2214 ;;  d               2   29[BANK0 ] int 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  i               2   38[BANK0 ] int 
  2217 ;;  w               2   35[BANK0 ] int 
  2218 ;;  p               2   33[BANK0 ] int 
  2219 ;;  s               1   37[BANK0 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;Total ram usage:       13 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 8
  2236 ;; This function calls:
  2237 ;;		___awdiv
  2238 ;;		___awmod
  2239 ;;		_abs
  2240 ;;		_pad
  2241 ;; This function is called by:
  2242 ;;		_vfpfcnvrt
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text6
  2247   010412                     __ptext6:
  2248                           	callstack 0
  2249   010412                     _dtoa:
  2250                           	callstack 19
  2251   010412                     
  2252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2253   010412  0100               	movlb	0	; () banked
  2254   010414  BF7E               	btfsc	(dtoa@d+1)& (0+255),7,b
  2255   010416  EF0F  F082         	goto	u1971
  2256   01041A  EF12  F082         	goto	u1970
  2257   01041E                     u1971:
  2258   01041E  0E01               	movlw	1
  2259   010420  EF13  F082         	goto	u1980
  2260   010424                     u1970:
  2261   010424  0E00               	movlw	0
  2262   010426                     u1980:
  2263   010426  6F85               	movwf	dtoa@s& (0+255),b
  2264   010428                     
  2265                           ; BSR set to: 0
  2266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2267   010428  5185               	movf	dtoa@s& (0+255),w,b
  2268   01042A  B4D8               	btfsc	status,2,c
  2269   01042C  EF1A  F082         	goto	u1991
  2270   010430  EF1C  F082         	goto	u1990
  2271   010434                     u1991:
  2272   010434  EF20  F082         	goto	l3221
  2273   010438                     u1990:
  2274   010438                     
  2275                           ; BSR set to: 0
  2276                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2277   010438  6D7D               	negf	dtoa@d& (0+255),b
  2278   01043A  1F7E               	comf	(dtoa@d+1)& (0+255),f,b
  2279   01043C  B0D8               	btfsc	status,0,c
  2280   01043E  2B7E               	incf	(dtoa@d+1)& (0+255),f,b
  2281   010440                     l3221:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2285   010440  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2286   010442  EF25  F082         	goto	u2001
  2287   010446  EF27  F082         	goto	u2000
  2288   01044A                     u2001:
  2289   01044A  EF28  F082         	goto	l3225
  2290   01044E                     u2000:
  2291   01044E                     
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2294   01044E  93CB               	bcf	_flags& (0+255),1,b
  2295   010450                     l3225:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2299   010450  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2300   010452  EF2F  F082         	goto	u2010
  2301   010456  EF2D  F082         	goto	u2011
  2302   01045A                     u2011:
  2303   01045A  EF35  F082         	goto	l1244
  2304   01045E                     u2010:
  2305   01045E                     
  2306                           ; BSR set to: 0
  2307   01045E  0E00               	movlw	0
  2308   010460  6F82               	movwf	(dtoa@p+1)& (0+255),b
  2309   010462  0E01               	movlw	1
  2310   010464  6F81               	movwf	dtoa@p& (0+255),b
  2311   010466  EF39  F082         	goto	l1246
  2312   01046A                     l1244:
  2313                           
  2314                           ; BSR set to: 0
  2315   01046A  C0C7  F081         	movff	_prec,dtoa@p
  2316   01046E  C0C8  F082         	movff	_prec+1,dtoa@p+1
  2317   010472                     l1246:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2321   010472  C0C5  F083         	movff	_width,dtoa@w
  2322   010476  C0C6  F084         	movff	_width+1,dtoa@w+1
  2323   01047A                     
  2324                           ; BSR set to: 0
  2325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2326   01047A  5185               	movf	dtoa@s& (0+255),w,b
  2327   01047C  B4D8               	btfsc	status,2,c
  2328   01047E  EF43  F082         	goto	u2021
  2329   010482  EF45  F082         	goto	u2020
  2330   010486                     u2021:
  2331   010486  EF5C  F082         	goto	l1247
  2332   01048A                     u2020:
  2333   01048A                     
  2334                           ; BSR set to: 0
  2335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2336   01048A  0783               	decf	dtoa@w& (0+255),f,b
  2337   01048C  A0D8               	btfss	status,0,c
  2338   01048E  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2339   010490                     
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2342   010490  5185               	movf	dtoa@s& (0+255),w,b
  2343   010492  A4D8               	btfss	status,2,c
  2344   010494  EF4E  F082         	goto	u2031
  2345   010498  EF50  F082         	goto	u2030
  2346   01049C                     u2031:
  2347   01049C  EF56  F082         	goto	l3237
  2348   0104A0                     u2030:
  2349   0104A0                     
  2350                           ; BSR set to: 0
  2351   0104A0  0E00               	movlw	0
  2352   0104A2  6F80               	movwf	(_dtoa$1718+1)& (0+255),b
  2353   0104A4  0E2B               	movlw	43
  2354   0104A6  6F7F               	movwf	_dtoa$1718& (0+255),b
  2355   0104A8  EF5A  F082         	goto	l3239
  2356   0104AC                     l3237:
  2357                           
  2358                           ; BSR set to: 0
  2359   0104AC  0E00               	movlw	0
  2360   0104AE  6F80               	movwf	(_dtoa$1718+1)& (0+255),b
  2361   0104B0  0E2D               	movlw	45
  2362   0104B2  6F7F               	movwf	_dtoa$1718& (0+255),b
  2363   0104B4                     l3239:
  2364                           
  2365                           ; BSR set to: 0
  2366   0104B4  C07F  F085         	movff	_dtoa$1718,dtoa@s
  2367   0104B8                     l1247:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2371   0104B8  0E00               	movlw	0
  2372   0104BA  6F87               	movwf	(dtoa@i+1)& (0+255),b
  2373   0104BC  0E1F               	movlw	31
  2374   0104BE  6F86               	movwf	dtoa@i& (0+255),b
  2375   0104C0                     
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2378   0104C0  0E00               	movlw	0
  2379   0104C2  6FEB               	movwf	(_dbuf+31)& (0+255),b
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2382   0104C4  EF95  F082         	goto	l3253
  2383   0104C8                     l3243:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2387   0104C8  0786               	decf	dtoa@i& (0+255),f,b
  2388   0104CA  A0D8               	btfss	status,0,c
  2389   0104CC  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2390   0104CE                     
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2393   0104CE  0ECC               	movlw	low _dbuf
  2394   0104D0  2586               	addwf	dtoa@i& (0+255),w,b
  2395   0104D2  6ED9               	movwf	fsr2l,c
  2396   0104D4  0E00               	movlw	high _dbuf
  2397   0104D6  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2398   0104D8  6EDA               	movwf	fsr2h,c
  2399   0104DA  C07D  F060         	movff	dtoa@d,___awmod@dividend
  2400   0104DE  C07E  F061         	movff	dtoa@d+1,___awmod@dividend+1
  2401   0104E2  0E00               	movlw	0
  2402   0104E4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2403   0104E6  0E0A               	movlw	10
  2404   0104E8  6F62               	movwf	___awmod@divisor& (0+255),b
  2405   0104EA  EC19  F086         	call	___awmod	;wreg free
  2406   0104EE  C060  F066         	movff	?___awmod,abs@a
  2407   0104F2  C061  F067         	movff	?___awmod+1,abs@a+1
  2408   0104F6  EC46  F089         	call	_abs	;wreg free
  2409   0104FA  0100               	movlb	0	; () banked
  2410   0104FC  5166               	movf	?_abs& (0+255),w,b
  2411   0104FE  0F30               	addlw	48
  2412   010500  6EDF               	movwf	indf2,c
  2413   010502                     
  2414                           ; BSR set to: 0
  2415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2416   010502  0781               	decf	dtoa@p& (0+255),f,b
  2417   010504  A0D8               	btfss	status,0,c
  2418   010506  0782               	decf	(dtoa@p+1)& (0+255),f,b
  2419   010508                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2422   010508  0783               	decf	dtoa@w& (0+255),f,b
  2423   01050A  A0D8               	btfss	status,0,c
  2424   01050C  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2425   01050E                     
  2426                           ; BSR set to: 0
  2427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2428   01050E  C07D  F060         	movff	dtoa@d,___awdiv@dividend
  2429   010512  C07E  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  2430   010516  0E00               	movlw	0
  2431   010518  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2432   01051A  0E0A               	movlw	10
  2433   01051C  6F62               	movwf	___awdiv@divisor& (0+255),b
  2434   01051E  ECF9  F084         	call	___awdiv	;wreg free
  2435   010522  C060  F07D         	movff	?___awdiv,dtoa@d
  2436   010526  C061  F07E         	movff	?___awdiv+1,dtoa@d+1
  2437   01052A                     l3253:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2440   01052A  0100               	movlb	0	; () banked
  2441   01052C  BF87               	btfsc	(dtoa@i+1)& (0+255),7,b
  2442   01052E  EFA1  F082         	goto	u2041
  2443   010532  5187               	movf	(dtoa@i+1)& (0+255),w,b
  2444   010534  E108               	bnz	u2040
  2445   010536  0586               	decf	dtoa@i& (0+255),w,b
  2446   010538  A0D8               	btfss	status,0,c
  2447   01053A  EFA1  F082         	goto	u2041
  2448   01053E  EFA3  F082         	goto	u2040
  2449   010542                     u2041:
  2450   010542  EFCD  F082         	goto	l3263
  2451   010546                     u2040:
  2452   010546                     
  2453                           ; BSR set to: 0
  2454   010546  517D               	movf	dtoa@d& (0+255),w,b
  2455   010548  117E               	iorwf	(dtoa@d+1)& (0+255),w,b
  2456   01054A  A4D8               	btfss	status,2,c
  2457   01054C  EFAA  F082         	goto	u2051
  2458   010550  EFAC  F082         	goto	u2050
  2459   010554                     u2051:
  2460   010554  EF64  F082         	goto	l3243
  2461   010558                     u2050:
  2462   010558                     
  2463                           ; BSR set to: 0
  2464   010558  BF82               	btfsc	(dtoa@p+1)& (0+255),7,b
  2465   01055A  EFB9  F082         	goto	u2060
  2466   01055E  5182               	movf	(dtoa@p+1)& (0+255),w,b
  2467   010560  E106               	bnz	u2061
  2468   010562  0581               	decf	dtoa@p& (0+255),w,b
  2469   010564  B0D8               	btfsc	status,0,c
  2470   010566  EFB7  F082         	goto	u2061
  2471   01056A  EFB9  F082         	goto	u2060
  2472   01056E                     u2061:
  2473   01056E  EF64  F082         	goto	l3243
  2474   010572                     u2060:
  2475   010572                     
  2476                           ; BSR set to: 0
  2477   010572  BF84               	btfsc	(dtoa@w+1)& (0+255),7,b
  2478   010574  EFC4  F082         	goto	u2071
  2479   010578  5184               	movf	(dtoa@w+1)& (0+255),w,b
  2480   01057A  E108               	bnz	u2070
  2481   01057C  0583               	decf	dtoa@w& (0+255),w,b
  2482   01057E  A0D8               	btfss	status,0,c
  2483   010580  EFC4  F082         	goto	u2071
  2484   010584  EFC6  F082         	goto	u2070
  2485   010588                     u2071:
  2486   010588  EFCD  F082         	goto	l3263
  2487   01058C                     u2070:
  2488   01058C                     
  2489                           ; BSR set to: 0
  2490   01058C  B3CB               	btfsc	_flags& (0+255),1,b
  2491   01058E  EFCB  F082         	goto	u2081
  2492   010592  EFCD  F082         	goto	u2080
  2493   010596                     u2081:
  2494   010596  EF64  F082         	goto	l3243
  2495   01059A                     u2080:
  2496   01059A                     l3263:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2500   01059A  5185               	movf	dtoa@s& (0+255),w,b
  2501   01059C  B4D8               	btfsc	status,2,c
  2502   01059E  EFD3  F082         	goto	u2091
  2503   0105A2  EFD5  F082         	goto	u2090
  2504   0105A6                     u2091:
  2505   0105A6  EFE0  F082         	goto	l3269
  2506   0105AA                     u2090:
  2507   0105AA                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2510   0105AA  0786               	decf	dtoa@i& (0+255),f,b
  2511   0105AC  A0D8               	btfss	status,0,c
  2512   0105AE  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2513   0105B0                     
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2516   0105B0  0ECC               	movlw	low _dbuf
  2517   0105B2  2586               	addwf	dtoa@i& (0+255),w,b
  2518   0105B4  6ED9               	movwf	fsr2l,c
  2519   0105B6  0E00               	movlw	high _dbuf
  2520   0105B8  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2521   0105BA  6EDA               	movwf	fsr2h,c
  2522   0105BC  C085  FFDF         	movff	dtoa@s,indf2
  2523   0105C0                     l3269:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2527   0105C0  C07B  F070         	movff	dtoa@fp,pad@fp
  2528   0105C4  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  2529   0105C8  0ECC               	movlw	low _dbuf
  2530   0105CA  2586               	addwf	dtoa@i& (0+255),w,b
  2531   0105CC  6F72               	movwf	pad@buf& (0+255),b
  2532   0105CE  0E00               	movlw	high _dbuf
  2533   0105D0  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2534   0105D2  6F73               	movwf	(pad@buf+1)& (0+255),b
  2535   0105D4  C083  F074         	movff	dtoa@w,pad@p
  2536   0105D8  C084  F075         	movff	dtoa@w+1,pad@p+1
  2537   0105DC  EC72  F086         	call	_pad	;wreg free
  2538   0105E0  0012               	return		;funcret
  2539   0105E2                     __end_of_dtoa:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _pad *****************
  2543 ;; Defined at:
  2544 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2547 ;;		 -> sprintf@f(12), 
  2548 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2549 ;;		 -> dbuf(32), 
  2550 ;;  p               2   20[BANK0 ] int 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  w               2   25[BANK0 ] int 
  2553 ;;  i               2   23[BANK0 ] int 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:       11 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 7
  2570 ;; This function calls:
  2571 ;;		_fputc
  2572 ;;		_fputs
  2573 ;; This function is called by:
  2574 ;;		_dtoa
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text7
  2579   010CE4                     __ptext7:
  2580                           	callstack 0
  2581   010CE4                     _pad:
  2582                           	callstack 19
  2583   010CE4                     
  2584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2585   010CE4  0100               	movlb	0	; () banked
  2586   010CE6  A1CB               	btfss	_flags& (0+255),0,b
  2587   010CE8  EF78  F086         	goto	u1921
  2588   010CEC  EF7A  F086         	goto	u1920
  2589   010CF0                     u1921:
  2590   010CF0  EF84  F086         	goto	l3197
  2591   010CF4                     u1920:
  2592   010CF4                     
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2595   010CF4  C072  F069         	movff	pad@buf,fputs@s
  2596   010CF8  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2597   010CFC  C070  F06B         	movff	pad@fp,fputs@fp
  2598   010D00  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2599   010D04  ECFE  F088         	call	_fputs	;wreg free
  2600   010D08                     l3197:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2603   010D08  0100               	movlb	0	; () banked
  2604   010D0A  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2605   010D0C  EF8A  F086         	goto	u1931
  2606   010D10  EF8C  F086         	goto	u1930
  2607   010D14                     u1931:
  2608   010D14  EF92  F086         	goto	l3201
  2609   010D18                     u1930:
  2610   010D18                     
  2611                           ; BSR set to: 0
  2612   010D18  C074  F079         	movff	pad@p,pad@w
  2613   010D1C  C075  F07A         	movff	pad@p+1,pad@w+1
  2614   010D20  EF96  F086         	goto	l1233
  2615   010D24                     l3201:
  2616                           
  2617                           ; BSR set to: 0
  2618   010D24  0E00               	movlw	0
  2619   010D26  6F7A               	movwf	(pad@w+1)& (0+255),b
  2620   010D28  0E00               	movlw	0
  2621   010D2A  6F79               	movwf	pad@w& (0+255),b
  2622   010D2C                     l1233:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2626   010D2C  0E00               	movlw	0
  2627   010D2E  6F78               	movwf	(pad@i+1)& (0+255),b
  2628   010D30  0E00               	movlw	0
  2629   010D32  6F77               	movwf	pad@i& (0+255),b
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2632   010D34  EFA9  F086         	goto	l3207
  2633   010D38                     l3203:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2637   010D38  0E00               	movlw	0
  2638   010D3A  6F61               	movwf	(fputc@c+1)& (0+255),b
  2639   010D3C  0E20               	movlw	32
  2640   010D3E  6F60               	movwf	fputc@c& (0+255),b
  2641   010D40  C070  F062         	movff	pad@fp,fputc@fp
  2642   010D44  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2643   010D48  EC2E  F084         	call	_fputc	;wreg free
  2644   010D4C                     
  2645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2646   010D4C  0100               	movlb	0	; () banked
  2647   010D4E  4B77               	infsnz	pad@i& (0+255),f,b
  2648   010D50  2B78               	incf	(pad@i+1)& (0+255),f,b
  2649   010D52                     l3207:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2653   010D52  5179               	movf	pad@w& (0+255),w,b
  2654   010D54  5D77               	subwf	pad@i& (0+255),w,b
  2655   010D56  5178               	movf	(pad@i+1)& (0+255),w,b
  2656   010D58  0A80               	xorlw	128
  2657   010D5A  6F76               	movwf	??_pad& (0+255),b
  2658   010D5C  517A               	movf	(pad@w+1)& (0+255),w,b
  2659   010D5E  0A80               	xorlw	128
  2660   010D60  5976               	subwfb	??_pad& (0+255),w,b
  2661   010D62  A0D8               	btfss	status,0,c
  2662   010D64  EFB6  F086         	goto	u1941
  2663   010D68  EFB8  F086         	goto	u1940
  2664   010D6C                     u1941:
  2665   010D6C  EF9C  F086         	goto	l3203
  2666   010D70                     u1940:
  2667   010D70                     
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2670   010D70  B1CB               	btfsc	_flags& (0+255),0,b
  2671   010D72  EFBD  F086         	goto	u1951
  2672   010D76  EFBF  F086         	goto	u1950
  2673   010D7A                     u1951:
  2674   010D7A  EFC9  F086         	goto	l1238
  2675   010D7E                     u1950:
  2676   010D7E                     
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2679   010D7E  C072  F069         	movff	pad@buf,fputs@s
  2680   010D82  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2681   010D86  C070  F06B         	movff	pad@fp,fputs@fp
  2682   010D8A  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2683   010D8E  ECFE  F088         	call	_fputs	;wreg free
  2684   010D92                     l1238:
  2685   010D92  0012               	return		;funcret
  2686   010D94                     __end_of_pad:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _fputs *****************
  2690 ;; Defined at:
  2691 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2694 ;;		 -> dbuf(32), 
  2695 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2696 ;;		 -> sprintf@f(12), 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  i               2   14[BANK0 ] int 
  2699 ;;  c               1   13[BANK0 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2    9[BANK0 ] int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;Total ram usage:        7 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 6
  2716 ;; This function calls:
  2717 ;;		_fputc
  2718 ;; This function is called by:
  2719 ;;		_pad
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text8
  2724   0111FC                     __ptext8:
  2725                           	callstack 0
  2726   0111FC                     _fputs:
  2727                           	callstack 19
  2728   0111FC  0E00               	movlw	0
  2729   0111FE  0100               	movlb	0	; () banked
  2730   011200  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2731   011202  0E00               	movlw	0
  2732   011204  6F6E               	movwf	fputs@i& (0+255),b
  2733   011206  EF11  F089         	goto	l3105
  2734   01120A                     l3101:
  2735                           
  2736                           ; BSR set to: 0
  2737   01120A  C06D  F060         	movff	fputs@c,fputc@c
  2738   01120E  6B61               	clrf	(fputc@c+1)& (0+255),b
  2739   011210  C06B  F062         	movff	fputs@fp,fputc@fp
  2740   011214  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2741   011218  EC2E  F084         	call	_fputc	;wreg free
  2742   01121C  0100               	movlb	0	; () banked
  2743   01121E  4B6E               	infsnz	fputs@i& (0+255),f,b
  2744   011220  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2745   011222                     l3105:
  2746                           
  2747                           ; BSR set to: 0
  2748   011222  516E               	movf	fputs@i& (0+255),w,b
  2749   011224  2569               	addwf	fputs@s& (0+255),w,b
  2750   011226  6ED9               	movwf	fsr2l,c
  2751   011228  516F               	movf	(fputs@i+1)& (0+255),w,b
  2752   01122A  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2753   01122C  6EDA               	movwf	fsr2h,c
  2754   01122E  50DF               	movf	indf2,w,c
  2755   011230  6F6D               	movwf	fputs@c& (0+255),b
  2756   011232  516D               	movf	fputs@c& (0+255),w,b
  2757   011234  A4D8               	btfss	status,2,c
  2758   011236  EF1F  F089         	goto	u1791
  2759   01123A  EF21  F089         	goto	u1790
  2760   01123E                     u1791:
  2761   01123E  EF05  F089         	goto	l3101
  2762   011242                     u1790:
  2763   011242                     
  2764                           ; BSR set to: 0
  2765   011242  0012               	return		;funcret
  2766   011244                     __end_of_fputs:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _fputc *****************
  2770 ;; Defined at:
  2771 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  c               2    0[BANK0 ] int 
  2774 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2775 ;;		 -> sprintf@f(12), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    0[BANK0 ] int 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:        9 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 5
  2794 ;; This function calls:
  2795 ;;		_putch
  2796 ;; This function is called by:
  2797 ;;		_pad
  2798 ;;		_vfpfcnvrt
  2799 ;;		_fputs
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text9
  2804   01085C                     __ptext9:
  2805                           	callstack 0
  2806   01085C                     _fputc:
  2807                           	callstack 22
  2808   01085C  0100               	movlb	0	; () banked
  2809   01085E  5162               	movf	fputc@fp& (0+255),w,b
  2810   010860  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2811   010862  B4D8               	btfsc	status,2,c
  2812   010864  EF36  F084         	goto	u1751
  2813   010868  EF38  F084         	goto	u1750
  2814   01086C                     u1751:
  2815   01086C  EF41  F084         	goto	l3089
  2816   010870                     u1750:
  2817   010870                     
  2818                           ; BSR set to: 0
  2819   010870  5162               	movf	fputc@fp& (0+255),w,b
  2820   010872  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2821   010874  A4D8               	btfss	status,2,c
  2822   010876  EF3F  F084         	goto	u1761
  2823   01087A  EF41  F084         	goto	u1760
  2824   01087E                     u1761:
  2825   01087E  EF46  F084         	goto	l3091
  2826   010882                     u1760:
  2827   010882                     l3089:
  2828                           
  2829                           ; BSR set to: 0
  2830   010882  5160               	movf	fputc@c& (0+255),w,b
  2831   010884  ECDE  F08A         	call	_putch
  2832   010888  EF93  F084         	goto	l1308
  2833   01088C                     l3091:
  2834                           
  2835                           ; BSR set to: 0
  2836   01088C  EE20 F00A          	lfsr	2,10
  2837   010890  5162               	movf	fputc@fp& (0+255),w,b
  2838   010892  26D9               	addwf	fsr2l,f,c
  2839   010894  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2840   010896  22DA               	addwfc	fsr2h,f,c
  2841   010898  50DE               	movf	postinc2,w,c
  2842   01089A  10DE               	iorwf	postinc2,w,c
  2843   01089C  B4D8               	btfsc	status,2,c
  2844   01089E  EF53  F084         	goto	u1771
  2845   0108A2  EF55  F084         	goto	u1770
  2846   0108A6                     u1771:
  2847   0108A6  EF70  F084         	goto	l3095
  2848   0108AA                     u1770:
  2849   0108AA                     
  2850                           ; BSR set to: 0
  2851   0108AA  EE20 F00A          	lfsr	2,10
  2852   0108AE  5162               	movf	fputc@fp& (0+255),w,b
  2853   0108B0  26D9               	addwf	fsr2l,f,c
  2854   0108B2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2855   0108B4  22DA               	addwfc	fsr2h,f,c
  2856   0108B6  EE10 F003          	lfsr	1,3
  2857   0108BA  5162               	movf	fputc@fp& (0+255),w,b
  2858   0108BC  26E1               	addwf	fsr1l,f,c
  2859   0108BE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2860   0108C0  22E2               	addwfc	fsr1h,f,c
  2861   0108C2  50DE               	movf	postinc2,w,c
  2862   0108C4  5CE6               	subwf	postinc1,w,c
  2863   0108C6  50E6               	movf	postinc1,w,c
  2864   0108C8  0A80               	xorlw	128
  2865   0108CA  6F68               	movwf	(??_fputc+4)& (0+255),b
  2866   0108CC  50DE               	movf	postinc2,w,c
  2867   0108CE  0A80               	xorlw	128
  2868   0108D0  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2869   0108D2  B0D8               	btfsc	status,0,c
  2870   0108D4  EF6E  F084         	goto	u1781
  2871   0108D8  EF70  F084         	goto	u1780
  2872   0108DC                     u1781:
  2873   0108DC  EF93  F084         	goto	l1308
  2874   0108E0                     u1780:
  2875   0108E0                     l3095:
  2876                           
  2877                           ; BSR set to: 0
  2878   0108E0  EE20 F003          	lfsr	2,3
  2879   0108E4  5162               	movf	fputc@fp& (0+255),w,b
  2880   0108E6  26D9               	addwf	fsr2l,f,c
  2881   0108E8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2882   0108EA  22DA               	addwfc	fsr2h,f,c
  2883   0108EC  CFDE F064          	movff	postinc2,??_fputc
  2884   0108F0  CFDD F065          	movff	postdec2,??_fputc+1
  2885   0108F4  C062  FFD9         	movff	fputc@fp,fsr2l
  2886   0108F8  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2887   0108FC  CFDE F066          	movff	postinc2,??_fputc+2
  2888   010900  CFDD F067          	movff	postdec2,??_fputc+3
  2889   010904  5164               	movf	??_fputc& (0+255),w,b
  2890   010906  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2891   010908  6ED9               	movwf	fsr2l,c
  2892   01090A  5165               	movf	(??_fputc+1)& (0+255),w,b
  2893   01090C  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2894   01090E  6EDA               	movwf	fsr2h,c
  2895   010910  C060  FFDF         	movff	fputc@c,indf2
  2896   010914  EE20 F003          	lfsr	2,3
  2897   010918  5162               	movf	fputc@fp& (0+255),w,b
  2898   01091A  26D9               	addwf	fsr2l,f,c
  2899   01091C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2900   01091E  22DA               	addwfc	fsr2h,f,c
  2901   010920  2ADE               	incf	postinc2,f,c
  2902   010922  0E00               	movlw	0
  2903   010924  22DD               	addwfc	postdec2,f,c
  2904   010926                     l1308:
  2905   010926  0012               	return		;funcret
  2906   010928                     __end_of_fputc:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _putch *****************
  2910 ;; Defined at:
  2911 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  c               1    wreg     unsigned char 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  c               1    0[COMRAM] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 4
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_fputc
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text10
  2940   0115BC                     __ptext10:
  2941                           	callstack 0
  2942   0115BC                     _putch:
  2943                           	callstack 22
  2944   0115BC  0012               	return		;funcret
  2945   0115BE                     __end_of_putch:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _abs *****************
  2949 ;; Defined at:
  2950 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  a               2    6[BANK0 ] int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2    6[BANK0 ] int 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 4
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_dtoa
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text11
  2979   01128C                     __ptext11:
  2980                           	callstack 0
  2981   01128C                     _abs:
  2982                           	callstack 22
  2983   01128C  0100               	movlb	0	; () banked
  2984   01128E  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2985   011290  EF54  F089         	goto	u1960
  2986   011294  5167               	movf	(abs@a+1)& (0+255),w,b
  2987   011296  E106               	bnz	u1961
  2988   011298  0566               	decf	abs@a& (0+255),w,b
  2989   01129A  B0D8               	btfsc	status,0,c
  2990   01129C  EF52  F089         	goto	u1961
  2991   0112A0  EF54  F089         	goto	u1960
  2992   0112A4                     u1961:
  2993   0112A4  EF62  F089         	goto	l1293
  2994   0112A8                     u1960:
  2995   0112A8                     
  2996                           ; BSR set to: 0
  2997   0112A8  C066  F068         	movff	abs@a,??_abs
  2998   0112AC  C067  F069         	movff	abs@a+1,??_abs+1
  2999   0112B0  1F68               	comf	??_abs& (0+255),f,b
  3000   0112B2  1F69               	comf	(??_abs+1)& (0+255),f,b
  3001   0112B4  4B68               	infsnz	??_abs& (0+255),f,b
  3002   0112B6  2B69               	incf	(??_abs+1)& (0+255),f,b
  3003   0112B8  C068  F066         	movff	??_abs,?_abs
  3004   0112BC  C069  F067         	movff	??_abs+1,?_abs+1
  3005   0112C0  EF66  F089         	goto	l1296
  3006   0112C4                     l1293:
  3007                           
  3008                           ; BSR set to: 0
  3009   0112C4  C066  F066         	movff	abs@a,?_abs
  3010   0112C8  C067  F067         	movff	abs@a+1,?_abs+1
  3011   0112CC                     l1296:
  3012                           
  3013                           ; BSR set to: 0
  3014   0112CC  0012               	return		;funcret
  3015   0112CE                     __end_of_abs:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function ___awmod *****************
  3019 ;; Defined at:
  3020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  dividend        2    0[BANK0 ] int 
  3023 ;;  divisor         2    2[BANK0 ] int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  sign            1    5[BANK0 ] unsigned char 
  3026 ;;  counter         1    4[BANK0 ] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2    0[BANK0 ] int 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        6 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 4
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_dtoa
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text12
  3051   010C32                     __ptext12:
  3052                           	callstack 0
  3053   010C32                     ___awmod:
  3054                           	callstack 22
  3055   010C32  0E00               	movlw	0
  3056   010C34  0100               	movlb	0	; () banked
  3057   010C36  6F65               	movwf	___awmod@sign& (0+255),b
  3058   010C38                     
  3059                           ; BSR set to: 0
  3060   010C38  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3061   010C3A  EF23  F086         	goto	u1860
  3062   010C3E  EF21  F086         	goto	u1861
  3063   010C42                     u1861:
  3064   010C42  EF29  F086         	goto	l3165
  3065   010C46                     u1860:
  3066   010C46                     
  3067                           ; BSR set to: 0
  3068   010C46  6D60               	negf	___awmod@dividend& (0+255),b
  3069   010C48  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3070   010C4A  B0D8               	btfsc	status,0,c
  3071   010C4C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3072   010C4E                     
  3073                           ; BSR set to: 0
  3074   010C4E  0E01               	movlw	1
  3075   010C50  6F65               	movwf	___awmod@sign& (0+255),b
  3076   010C52                     l3165:
  3077                           
  3078                           ; BSR set to: 0
  3079   010C52  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3080   010C54  EF30  F086         	goto	u1870
  3081   010C58  EF2E  F086         	goto	u1871
  3082   010C5C                     u1871:
  3083   010C5C  EF34  F086         	goto	l3169
  3084   010C60                     u1870:
  3085   010C60                     
  3086                           ; BSR set to: 0
  3087   010C60  6D62               	negf	___awmod@divisor& (0+255),b
  3088   010C62  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3089   010C64  B0D8               	btfsc	status,0,c
  3090   010C66  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3091   010C68                     l3169:
  3092                           
  3093                           ; BSR set to: 0
  3094   010C68  5162               	movf	___awmod@divisor& (0+255),w,b
  3095   010C6A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3096   010C6C  B4D8               	btfsc	status,2,c
  3097   010C6E  EF3B  F086         	goto	u1881
  3098   010C72  EF3D  F086         	goto	u1880
  3099   010C76                     u1881:
  3100   010C76  EF61  F086         	goto	l3185
  3101   010C7A                     u1880:
  3102   010C7A                     
  3103                           ; BSR set to: 0
  3104   010C7A  0E01               	movlw	1
  3105   010C7C  6F64               	movwf	___awmod@counter& (0+255),b
  3106   010C7E  EF45  F086         	goto	l3175
  3107   010C82                     l3173:
  3108                           
  3109                           ; BSR set to: 0
  3110   010C82  90D8               	bcf	status,0,c
  3111   010C84  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3112   010C86  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3113   010C88  2B64               	incf	___awmod@counter& (0+255),f,b
  3114   010C8A                     l3175:
  3115                           
  3116                           ; BSR set to: 0
  3117   010C8A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3118   010C8C  EF4A  F086         	goto	u1891
  3119   010C90  EF4C  F086         	goto	u1890
  3120   010C94                     u1891:
  3121   010C94  EF41  F086         	goto	l3173
  3122   010C98                     u1890:
  3123   010C98                     l3177:
  3124                           
  3125                           ; BSR set to: 0
  3126   010C98  5162               	movf	___awmod@divisor& (0+255),w,b
  3127   010C9A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3128   010C9C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3129   010C9E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3130   010CA0  A0D8               	btfss	status,0,c
  3131   010CA2  EF55  F086         	goto	u1901
  3132   010CA6  EF57  F086         	goto	u1900
  3133   010CAA                     u1901:
  3134   010CAA  EF5B  F086         	goto	l3181
  3135   010CAE                     u1900:
  3136   010CAE                     
  3137                           ; BSR set to: 0
  3138   010CAE  5162               	movf	___awmod@divisor& (0+255),w,b
  3139   010CB0  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3140   010CB2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3141   010CB4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3142   010CB6                     l3181:
  3143                           
  3144                           ; BSR set to: 0
  3145   010CB6  90D8               	bcf	status,0,c
  3146   010CB8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3147   010CBA  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3148   010CBC                     
  3149                           ; BSR set to: 0
  3150   010CBC  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3151   010CBE  EF4C  F086         	goto	l3177
  3152   010CC2                     l3185:
  3153                           
  3154                           ; BSR set to: 0
  3155   010CC2  5165               	movf	___awmod@sign& (0+255),w,b
  3156   010CC4  B4D8               	btfsc	status,2,c
  3157   010CC6  EF67  F086         	goto	u1911
  3158   010CCA  EF69  F086         	goto	u1910
  3159   010CCE                     u1911:
  3160   010CCE  EF6D  F086         	goto	l3189
  3161   010CD2                     u1910:
  3162   010CD2                     
  3163                           ; BSR set to: 0
  3164   010CD2  6D60               	negf	___awmod@dividend& (0+255),b
  3165   010CD4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3166   010CD6  B0D8               	btfsc	status,0,c
  3167   010CD8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3168   010CDA                     l3189:
  3169                           
  3170                           ; BSR set to: 0
  3171   010CDA  C060  F060         	movff	___awmod@dividend,?___awmod
  3172   010CDE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3173   010CE2                     
  3174                           ; BSR set to: 0
  3175   010CE2  0012               	return		;funcret
  3176   010CE4                     __end_of___awmod:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function ___awdiv *****************
  3180 ;; Defined at:
  3181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  dividend        2    0[BANK0 ] int 
  3184 ;;  divisor         2    2[BANK0 ] int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  quotient        2    6[BANK0 ] int 
  3187 ;;  sign            1    5[BANK0 ] unsigned char 
  3188 ;;  counter         1    4[BANK0 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2    0[BANK0 ] int 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        8 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 4
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_dtoa
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text13
  3213   0109F2                     __ptext13:
  3214                           	callstack 0
  3215   0109F2                     ___awdiv:
  3216                           	callstack 22
  3217   0109F2  0E00               	movlw	0
  3218   0109F4  0100               	movlb	0	; () banked
  3219   0109F6  6F65               	movwf	___awdiv@sign& (0+255),b
  3220   0109F8                     
  3221                           ; BSR set to: 0
  3222   0109F8  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3223   0109FA  EF03  F085         	goto	u1800
  3224   0109FE  EF01  F085         	goto	u1801
  3225   010A02                     u1801:
  3226   010A02  EF09  F085         	goto	l3121
  3227   010A06                     u1800:
  3228   010A06                     
  3229                           ; BSR set to: 0
  3230   010A06  6D62               	negf	___awdiv@divisor& (0+255),b
  3231   010A08  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3232   010A0A  B0D8               	btfsc	status,0,c
  3233   010A0C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3234   010A0E                     
  3235                           ; BSR set to: 0
  3236   010A0E  0E01               	movlw	1
  3237   010A10  6F65               	movwf	___awdiv@sign& (0+255),b
  3238   010A12                     l3121:
  3239                           
  3240                           ; BSR set to: 0
  3241   010A12  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3242   010A14  EF10  F085         	goto	u1810
  3243   010A18  EF0E  F085         	goto	u1811
  3244   010A1C                     u1811:
  3245   010A1C  EF16  F085         	goto	l3127
  3246   010A20                     u1810:
  3247   010A20                     
  3248                           ; BSR set to: 0
  3249   010A20  6D60               	negf	___awdiv@dividend& (0+255),b
  3250   010A22  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3251   010A24  B0D8               	btfsc	status,0,c
  3252   010A26  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3253   010A28                     
  3254                           ; BSR set to: 0
  3255   010A28  0E01               	movlw	1
  3256   010A2A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3257   010A2C                     l3127:
  3258                           
  3259                           ; BSR set to: 0
  3260   010A2C  0E00               	movlw	0
  3261   010A2E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3262   010A30  0E00               	movlw	0
  3263   010A32  6F66               	movwf	___awdiv@quotient& (0+255),b
  3264   010A34                     
  3265                           ; BSR set to: 0
  3266   010A34  5162               	movf	___awdiv@divisor& (0+255),w,b
  3267   010A36  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3268   010A38  B4D8               	btfsc	status,2,c
  3269   010A3A  EF21  F085         	goto	u1821
  3270   010A3E  EF23  F085         	goto	u1820
  3271   010A42                     u1821:
  3272   010A42  EF4B  F085         	goto	l3149
  3273   010A46                     u1820:
  3274   010A46                     
  3275                           ; BSR set to: 0
  3276   010A46  0E01               	movlw	1
  3277   010A48  6F64               	movwf	___awdiv@counter& (0+255),b
  3278   010A4A  EF2B  F085         	goto	l3135
  3279   010A4E                     l3133:
  3280                           
  3281                           ; BSR set to: 0
  3282   010A4E  90D8               	bcf	status,0,c
  3283   010A50  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3284   010A52  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3285   010A54  2B64               	incf	___awdiv@counter& (0+255),f,b
  3286   010A56                     l3135:
  3287                           
  3288                           ; BSR set to: 0
  3289   010A56  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3290   010A58  EF30  F085         	goto	u1831
  3291   010A5C  EF32  F085         	goto	u1830
  3292   010A60                     u1831:
  3293   010A60  EF27  F085         	goto	l3133
  3294   010A64                     u1830:
  3295   010A64                     l3137:
  3296                           
  3297                           ; BSR set to: 0
  3298   010A64  90D8               	bcf	status,0,c
  3299   010A66  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3300   010A68  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3301   010A6A                     
  3302                           ; BSR set to: 0
  3303   010A6A  5162               	movf	___awdiv@divisor& (0+255),w,b
  3304   010A6C  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3305   010A6E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3306   010A70  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3307   010A72  A0D8               	btfss	status,0,c
  3308   010A74  EF3E  F085         	goto	u1841
  3309   010A78  EF40  F085         	goto	u1840
  3310   010A7C                     u1841:
  3311   010A7C  EF45  F085         	goto	l3145
  3312   010A80                     u1840:
  3313   010A80                     
  3314                           ; BSR set to: 0
  3315   010A80  5162               	movf	___awdiv@divisor& (0+255),w,b
  3316   010A82  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3317   010A84  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3318   010A86  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3319   010A88                     
  3320                           ; BSR set to: 0
  3321   010A88  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3322   010A8A                     l3145:
  3323                           
  3324                           ; BSR set to: 0
  3325   010A8A  90D8               	bcf	status,0,c
  3326   010A8C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3327   010A8E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3328   010A90                     
  3329                           ; BSR set to: 0
  3330   010A90  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3331   010A92  EF32  F085         	goto	l3137
  3332   010A96                     l3149:
  3333                           
  3334                           ; BSR set to: 0
  3335   010A96  5165               	movf	___awdiv@sign& (0+255),w,b
  3336   010A98  B4D8               	btfsc	status,2,c
  3337   010A9A  EF51  F085         	goto	u1851
  3338   010A9E  EF53  F085         	goto	u1850
  3339   010AA2                     u1851:
  3340   010AA2  EF57  F085         	goto	l3153
  3341   010AA6                     u1850:
  3342   010AA6                     
  3343                           ; BSR set to: 0
  3344   010AA6  6D66               	negf	___awdiv@quotient& (0+255),b
  3345   010AA8  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3346   010AAA  B0D8               	btfsc	status,0,c
  3347   010AAC  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3348   010AAE                     l3153:
  3349                           
  3350                           ; BSR set to: 0
  3351   010AAE  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3352   010AB2  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3353   010AB6                     
  3354                           ; BSR set to: 0
  3355   010AB6  0012               	return		;funcret
  3356   010AB8                     __end_of___awdiv:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _measure_voltage *****************
  3360 ;; Defined at:
  3361 ;;		line 37 in file "measure.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  i               2   32[BANK0 ] int 
  3366 ;;  result          4   28[BANK0 ] unsigned long 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2   25[BANK0 ] unsigned short 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;Total ram usage:        9 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 5
  3383 ;; This function calls:
  3384 ;;		_ADC_GetConversion
  3385 ;;		___lldiv
  3386 ;;		___lmul
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text14
  3393   010B78                     __ptext14:
  3394                           	callstack 0
  3395   010B78                     _measure_voltage:
  3396                           	callstack 25
  3397   010B78                     
  3398                           ;measure.c: 41:         uint32_t result = 0;
  3399   010B78  0E00               	movlw	0
  3400   010B7A  0100               	movlb	0	; () banked
  3401   010B7C  6F7C               	movwf	measure_voltage@result& (0+255),b
  3402   010B7E  0E00               	movlw	0
  3403   010B80  6F7D               	movwf	(measure_voltage@result+1)& (0+255),b
  3404   010B82  0E00               	movlw	0
  3405   010B84  6F7E               	movwf	(measure_voltage@result+2)& (0+255),b
  3406   010B86  0E00               	movlw	0
  3407   010B88  6F7F               	movwf	(measure_voltage@result+3)& (0+255),b
  3408                           
  3409                           ;measure.c: 43:         for(int i = 0;i < 8;i++)
  3410   010B8A  0E00               	movlw	0
  3411   010B8C  6F81               	movwf	(measure_voltage@i+1)& (0+255),b
  3412   010B8E  0E00               	movlw	0
  3413   010B90  6F80               	movwf	measure_voltage@i& (0+255),b
  3414   010B92                     l3565:
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;measure.c: 44:         {;measure.c: 45:             result += ADC_GetConversion(VOLTAGE
      +                          );
  3418   010B92  0E05               	movlw	5
  3419   010B94  EC67  F089         	call	_ADC_GetConversion
  3420   010B98  0100               	movlb	0	; () banked
  3421   010B9A  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3422   010B9C  277C               	addwf	measure_voltage@result& (0+255),f,b
  3423   010B9E  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3424   010BA0  237D               	addwfc	(measure_voltage@result+1)& (0+255),f,b
  3425   010BA2  0E00               	movlw	0
  3426   010BA4  237E               	addwfc	(measure_voltage@result+2)& (0+255),f,b
  3427   010BA6  0E00               	movlw	0
  3428   010BA8  237F               	addwfc	(measure_voltage@result+3)& (0+255),f,b
  3429   010BAA                     
  3430                           ; BSR set to: 0
  3431                           ;measure.c: 46:         }
  3432   010BAA  4B80               	infsnz	measure_voltage@i& (0+255),f,b
  3433   010BAC  2B81               	incf	(measure_voltage@i+1)& (0+255),f,b
  3434   010BAE                     
  3435                           ; BSR set to: 0
  3436   010BAE  BF81               	btfsc	(measure_voltage@i+1)& (0+255),7,b
  3437   010BB0  EFE3  F085         	goto	u2251
  3438   010BB4  5181               	movf	(measure_voltage@i+1)& (0+255),w,b
  3439   010BB6  E109               	bnz	u2250
  3440   010BB8  0E08               	movlw	8
  3441   010BBA  5D80               	subwf	measure_voltage@i& (0+255),w,b
  3442   010BBC  A0D8               	btfss	status,0,c
  3443   010BBE  EFE3  F085         	goto	u2251
  3444   010BC2  EFE5  F085         	goto	u2250
  3445   010BC6                     u2251:
  3446   010BC6  EFC9  F085         	goto	l3565
  3447   010BCA                     u2250:
  3448   010BCA                     
  3449                           ; BSR set to: 0
  3450                           ;measure.c: 47:         result/= 8;
  3451   010BCA  0E03               	movlw	3
  3452   010BCC  6F7B               	movwf	??_measure_voltage& (0+255),b
  3453   010BCE                     u2265:
  3454   010BCE  90D8               	bcf	status,0,c
  3455   010BD0  337F               	rrcf	(measure_voltage@result+3)& (0+255),f,b
  3456   010BD2  337E               	rrcf	(measure_voltage@result+2)& (0+255),f,b
  3457   010BD4  337D               	rrcf	(measure_voltage@result+1)& (0+255),f,b
  3458   010BD6  337C               	rrcf	measure_voltage@result& (0+255),f,b
  3459   010BD8  2F7B               	decfsz	??_measure_voltage& (0+255),f,b
  3460   010BDA  EFE7  F085         	goto	u2265
  3461   010BDE                     
  3462                           ; BSR set to: 0
  3463                           ;measure.c: 49:         return (result*3300)/(1024 - 1);
  3464   010BDE  C07C  F060         	movff	measure_voltage@result,___lmul@multiplier
  3465   010BE2  C07D  F061         	movff	measure_voltage@result+1,___lmul@multiplier+1
  3466   010BE6  C07E  F062         	movff	measure_voltage@result+2,___lmul@multiplier+2
  3467   010BEA  C07F  F063         	movff	measure_voltage@result+3,___lmul@multiplier+3
  3468   010BEE  0EE4               	movlw	228
  3469   010BF0  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3470   010BF2  0E0C               	movlw	12
  3471   010BF4  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3472   010BF6  0E00               	movlw	0
  3473   010BF8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3474   010BFA  0E00               	movlw	0
  3475   010BFC  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3476   010BFE  ECA5  F087         	call	___lmul	;wreg free
  3477   010C02  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3478   010C06  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3479   010C0A  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3480   010C0E  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3481   010C12  0EFF               	movlw	255
  3482   010C14  0100               	movlb	0	; () banked
  3483   010C16  6F70               	movwf	___lldiv@divisor& (0+255),b
  3484   010C18  0E03               	movlw	3
  3485   010C1A  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3486   010C1C  0E00               	movlw	0
  3487   010C1E  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3488   010C20  0E00               	movlw	0
  3489   010C22  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3490   010C24  ECCA  F086         	call	___lldiv	;wreg free
  3491   010C28  C06C  F079         	movff	?___lldiv,?_measure_voltage
  3492   010C2C  C06D  F07A         	movff	?___lldiv+1,?_measure_voltage+1
  3493   010C30  0012               	return		;funcret
  3494   010C32                     __end_of_measure_voltage:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _measure_current *****************
  3498 ;; Defined at:
  3499 ;;		line 52 in file "measure.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  offset          2   25[BANK0 ] unsigned short 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  i               2   31[BANK0 ] int 
  3504 ;;  result          4   33[BANK0 ] unsigned long 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2   25[BANK0 ] unsigned short 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;Total ram usage:       12 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 5
  3521 ;; This function calls:
  3522 ;;		_ADC_GetConversion
  3523 ;;		___lldiv
  3524 ;;		___lmul
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text15
  3531   0105E2                     __ptext15:
  3532                           	callstack 0
  3533   0105E2                     _measure_current:
  3534                           	callstack 25
  3535   0105E2                     
  3536                           ;measure.c: 52: uint16_t measure_current(uint16_t offset);measure.c: 53: {;measure.c: 55
      +                          :     uint32_t result = 0;
  3537   0105E2  0E00               	movlw	0
  3538   0105E4  0100               	movlb	0	; () banked
  3539   0105E6  6F81               	movwf	measure_current@result& (0+255),b
  3540   0105E8  0E00               	movlw	0
  3541   0105EA  6F82               	movwf	(measure_current@result+1)& (0+255),b
  3542   0105EC  0E00               	movlw	0
  3543   0105EE  6F83               	movwf	(measure_current@result+2)& (0+255),b
  3544   0105F0  0E00               	movlw	0
  3545   0105F2  6F84               	movwf	(measure_current@result+3)& (0+255),b
  3546                           
  3547                           ;measure.c: 57:             for(int i = 0;i < 8;i++)
  3548   0105F4  0E00               	movlw	0
  3549   0105F6  6F80               	movwf	(measure_current@i+1)& (0+255),b
  3550   0105F8  0E00               	movlw	0
  3551   0105FA  6F7F               	movwf	measure_current@i& (0+255),b
  3552   0105FC                     l3583:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;measure.c: 58:         {;measure.c: 59:             result += ADC_GetConversion(CURRENT
      +                          );
  3556   0105FC  0E06               	movlw	6
  3557   0105FE  EC67  F089         	call	_ADC_GetConversion
  3558   010602  0100               	movlb	0	; () banked
  3559   010604  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3560   010606  2781               	addwf	measure_current@result& (0+255),f,b
  3561   010608  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3562   01060A  2382               	addwfc	(measure_current@result+1)& (0+255),f,b
  3563   01060C  0E00               	movlw	0
  3564   01060E  2383               	addwfc	(measure_current@result+2)& (0+255),f,b
  3565   010610  0E00               	movlw	0
  3566   010612  2384               	addwfc	(measure_current@result+3)& (0+255),f,b
  3567   010614                     
  3568                           ; BSR set to: 0
  3569                           ;measure.c: 60:         }
  3570   010614  4B7F               	infsnz	measure_current@i& (0+255),f,b
  3571   010616  2B80               	incf	(measure_current@i+1)& (0+255),f,b
  3572   010618                     
  3573                           ; BSR set to: 0
  3574   010618  BF80               	btfsc	(measure_current@i+1)& (0+255),7,b
  3575   01061A  EF18  F083         	goto	u2271
  3576   01061E  5180               	movf	(measure_current@i+1)& (0+255),w,b
  3577   010620  E109               	bnz	u2270
  3578   010622  0E08               	movlw	8
  3579   010624  5D7F               	subwf	measure_current@i& (0+255),w,b
  3580   010626  A0D8               	btfss	status,0,c
  3581   010628  EF18  F083         	goto	u2271
  3582   01062C  EF1A  F083         	goto	u2270
  3583   010630                     u2271:
  3584   010630  EFFE  F082         	goto	l3583
  3585   010634                     u2270:
  3586   010634                     
  3587                           ; BSR set to: 0
  3588                           ;measure.c: 61:         result/= 8;
  3589   010634  0E03               	movlw	3
  3590   010636  6F7B               	movwf	??_measure_current& (0+255),b
  3591   010638                     u2285:
  3592   010638  90D8               	bcf	status,0,c
  3593   01063A  3384               	rrcf	(measure_current@result+3)& (0+255),f,b
  3594   01063C  3383               	rrcf	(measure_current@result+2)& (0+255),f,b
  3595   01063E  3382               	rrcf	(measure_current@result+1)& (0+255),f,b
  3596   010640  3381               	rrcf	measure_current@result& (0+255),f,b
  3597   010642  2F7B               	decfsz	??_measure_current& (0+255),f,b
  3598   010644  EF1C  F083         	goto	u2285
  3599   010648                     
  3600                           ; BSR set to: 0
  3601                           ;measure.c: 63:         result = (result*3300)/(1024 - 1);
  3602   010648  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3603   01064C  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3604   010650  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3605   010654  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3606   010658  0EE4               	movlw	228
  3607   01065A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3608   01065C  0E0C               	movlw	12
  3609   01065E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3610   010660  0E00               	movlw	0
  3611   010662  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3612   010664  0E00               	movlw	0
  3613   010666  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3614   010668  ECA5  F087         	call	___lmul	;wreg free
  3615   01066C  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3616   010670  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3617   010674  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3618   010678  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3619   01067C  0EFF               	movlw	255
  3620   01067E  0100               	movlb	0	; () banked
  3621   010680  6F70               	movwf	___lldiv@divisor& (0+255),b
  3622   010682  0E03               	movlw	3
  3623   010684  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3624   010686  0E00               	movlw	0
  3625   010688  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3626   01068A  0E00               	movlw	0
  3627   01068C  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3628   01068E  ECCA  F086         	call	___lldiv	;wreg free
  3629   010692  C06C  F081         	movff	?___lldiv,measure_current@result
  3630   010696  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3631   01069A  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3632   01069E  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3633   0106A2                     
  3634                           ;measure.c: 65:         result *= 1000;
  3635   0106A2  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3636   0106A6  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3637   0106AA  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3638   0106AE  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3639   0106B2  0EE8               	movlw	232
  3640   0106B4  0100               	movlb	0	; () banked
  3641   0106B6  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3642   0106B8  0E03               	movlw	3
  3643   0106BA  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3644   0106BC  0E00               	movlw	0
  3645   0106BE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3646   0106C0  0E00               	movlw	0
  3647   0106C2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3648   0106C4  ECA5  F087         	call	___lmul	;wreg free
  3649   0106C8  C060  F081         	movff	?___lmul,measure_current@result
  3650   0106CC  C061  F082         	movff	?___lmul+1,measure_current@result+1
  3651   0106D0  C062  F083         	movff	?___lmul+2,measure_current@result+2
  3652   0106D4  C063  F084         	movff	?___lmul+3,measure_current@result+3
  3653   0106D8                     
  3654                           ;measure.c: 67:         result /= 66;
  3655   0106D8  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3656   0106DC  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3657   0106E0  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3658   0106E4  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3659   0106E8  0E42               	movlw	66
  3660   0106EA  0100               	movlb	0	; () banked
  3661   0106EC  6F70               	movwf	___lldiv@divisor& (0+255),b
  3662   0106EE  0E00               	movlw	0
  3663   0106F0  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3664   0106F2  0E00               	movlw	0
  3665   0106F4  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3666   0106F6  0E00               	movlw	0
  3667   0106F8  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3668   0106FA  ECCA  F086         	call	___lldiv	;wreg free
  3669   0106FE  C06C  F081         	movff	?___lldiv,measure_current@result
  3670   010702  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3671   010706  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3672   01070A  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3673   01070E                     
  3674                           ;measure.c: 69:         result /= 3;
  3675   01070E  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3676   010712  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3677   010716  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3678   01071A  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3679   01071E  0E03               	movlw	3
  3680   010720  0100               	movlb	0	; () banked
  3681   010722  6F70               	movwf	___lldiv@divisor& (0+255),b
  3682   010724  0E00               	movlw	0
  3683   010726  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3684   010728  0E00               	movlw	0
  3685   01072A  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3686   01072C  0E00               	movlw	0
  3687   01072E  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3688   010730  ECCA  F086         	call	___lldiv	;wreg free
  3689   010734  C06C  F081         	movff	?___lldiv,measure_current@result
  3690   010738  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3691   01073C  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3692   010740  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3693                           
  3694                           ;measure.c: 71:         if(result > offset)
  3695   010744  0100               	movlb	0	; () banked
  3696   010746  5179               	movf	measure_current@offset& (0+255),w,b
  3697   010748  6F7B               	movwf	??_measure_current& (0+255),b
  3698   01074A  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3699   01074C  6F7C               	movwf	(??_measure_current+1)& (0+255),b
  3700   01074E  6B7D               	clrf	(??_measure_current+2)& (0+255),b
  3701   010750  6B7E               	clrf	(??_measure_current+3)& (0+255),b
  3702   010752  5181               	movf	measure_current@result& (0+255),w,b
  3703   010754  5D7B               	subwf	??_measure_current& (0+255),w,b
  3704   010756  5182               	movf	(measure_current@result+1)& (0+255),w,b
  3705   010758  597C               	subwfb	(??_measure_current+1)& (0+255),w,b
  3706   01075A  5183               	movf	(measure_current@result+2)& (0+255),w,b
  3707   01075C  597D               	subwfb	(??_measure_current+2)& (0+255),w,b
  3708   01075E  5184               	movf	(measure_current@result+3)& (0+255),w,b
  3709   010760  597E               	subwfb	(??_measure_current+3)& (0+255),w,b
  3710   010762  B0D8               	btfsc	status,0,c
  3711   010764  EFB6  F083         	goto	u2291
  3712   010768  EFB8  F083         	goto	u2290
  3713   01076C                     u2291:
  3714   01076C  EFC0  F083         	goto	l3603
  3715   010770                     u2290:
  3716   010770                     
  3717                           ; BSR set to: 0
  3718                           ;measure.c: 72:         {;measure.c: 73:             return result-offset;
  3719   010770  5179               	movf	measure_current@offset& (0+255),w,b
  3720   010772  5D81               	subwf	measure_current@result& (0+255),w,b
  3721   010774  6F79               	movwf	?_measure_current& (0+255),b
  3722   010776  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3723   010778  5982               	subwfb	(measure_current@result+1)& (0+255),w,b
  3724   01077A  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3725   01077C  EFC4  F083         	goto	l465
  3726   010780                     l3603:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;measure.c: 76:         return 0;
  3730   010780  0E00               	movlw	0
  3731   010782  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3732   010784  0E00               	movlw	0
  3733   010786  6F79               	movwf	?_measure_current& (0+255),b
  3734   010788                     l465:
  3735                           
  3736                           ; BSR set to: 0
  3737   010788  0012               	return		;funcret
  3738   01078A                     __end_of_measure_current:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function ___lmul *****************
  3742 ;; Defined at:
  3743 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3746 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  product         4    8[BANK0 ] unsigned long 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  4    0[BANK0 ] unsigned long 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:       12 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 4
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_measure_voltage
  3769 ;;		_measure_current
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text16
  3774   010F4A                     __ptext16:
  3775                           	callstack 0
  3776   010F4A                     ___lmul:
  3777                           	callstack 25
  3778   010F4A  0E00               	movlw	0
  3779   010F4C  0100               	movlb	0	; () banked
  3780   010F4E  6F68               	movwf	___lmul@product& (0+255),b
  3781   010F50  0E00               	movlw	0
  3782   010F52  6F69               	movwf	(___lmul@product+1)& (0+255),b
  3783   010F54  0E00               	movlw	0
  3784   010F56  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  3785   010F58  0E00               	movlw	0
  3786   010F5A  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  3787   010F5C                     l3475:
  3788                           
  3789                           ; BSR set to: 0
  3790   010F5C  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3791   010F5E  EFB3  F087         	goto	u2181
  3792   010F62  EFB5  F087         	goto	u2180
  3793   010F66                     u2181:
  3794   010F66  EFBD  F087         	goto	l3479
  3795   010F6A                     u2180:
  3796   010F6A                     
  3797                           ; BSR set to: 0
  3798   010F6A  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3799   010F6C  2768               	addwf	___lmul@product& (0+255),f,b
  3800   010F6E  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3801   010F70  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  3802   010F72  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3803   010F74  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  3804   010F76  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3805   010F78  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  3806   010F7A                     l3479:
  3807                           
  3808                           ; BSR set to: 0
  3809   010F7A  90D8               	bcf	status,0,c
  3810   010F7C  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3811   010F7E  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3812   010F80  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3813   010F82  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3814   010F84                     
  3815                           ; BSR set to: 0
  3816   010F84  90D8               	bcf	status,0,c
  3817   010F86  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3818   010F88  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3819   010F8A  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3820   010F8C  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3821   010F8E  5160               	movf	___lmul@multiplier& (0+255),w,b
  3822   010F90  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3823   010F92  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3824   010F94  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3825   010F96  A4D8               	btfss	status,2,c
  3826   010F98  EFD0  F087         	goto	u2191
  3827   010F9C  EFD2  F087         	goto	u2190
  3828   010FA0                     u2191:
  3829   010FA0  EFAE  F087         	goto	l3475
  3830   010FA4                     u2190:
  3831   010FA4                     
  3832                           ; BSR set to: 0
  3833   010FA4  C068  F060         	movff	___lmul@product,?___lmul
  3834   010FA8  C069  F061         	movff	___lmul@product+1,?___lmul+1
  3835   010FAC  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  3836   010FB0  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  3837   010FB4                     
  3838                           ; BSR set to: 0
  3839   010FB4  0012               	return		;funcret
  3840   010FB6                     __end_of___lmul:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function ___lldiv *****************
  3844 ;; Defined at:
  3845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  dividend        4   12[BANK0 ] unsigned long 
  3848 ;;  divisor         4   16[BANK0 ] unsigned long 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  quotient        4   20[BANK0 ] unsigned long 
  3851 ;;  counter         1   24[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  4   12[BANK0 ] unsigned long 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3861 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;Total ram usage:       13 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 4
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_measure_voltage
  3872 ;;		_measure_current
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text17
  3877   010D94                     __ptext17:
  3878                           	callstack 0
  3879   010D94                     ___lldiv:
  3880                           	callstack 25
  3881   010D94  0E00               	movlw	0
  3882   010D96  0100               	movlb	0	; () banked
  3883   010D98  6F74               	movwf	___lldiv@quotient& (0+255),b
  3884   010D9A  0E00               	movlw	0
  3885   010D9C  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
  3886   010D9E  0E00               	movlw	0
  3887   010DA0  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
  3888   010DA2  0E00               	movlw	0
  3889   010DA4  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
  3890   010DA6                     
  3891                           ; BSR set to: 0
  3892   010DA6  5170               	movf	___lldiv@divisor& (0+255),w,b
  3893   010DA8  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3894   010DAA  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3895   010DAC  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3896   010DAE  B4D8               	btfsc	status,2,c
  3897   010DB0  EFDC  F086         	goto	u2201
  3898   010DB4  EFDE  F086         	goto	u2200
  3899   010DB8                     u2201:
  3900   010DB8  EF14  F087         	goto	l559
  3901   010DBC                     u2200:
  3902   010DBC                     
  3903                           ; BSR set to: 0
  3904   010DBC  0E01               	movlw	1
  3905   010DBE  6F78               	movwf	___lldiv@counter& (0+255),b
  3906   010DC0  EFE8  F086         	goto	l3491
  3907   010DC4                     l3489:
  3908                           
  3909                           ; BSR set to: 0
  3910   010DC4  90D8               	bcf	status,0,c
  3911   010DC6  3770               	rlcf	___lldiv@divisor& (0+255),f,b
  3912   010DC8  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3913   010DCA  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3914   010DCC  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3915   010DCE  2B78               	incf	___lldiv@counter& (0+255),f,b
  3916   010DD0                     l3491:
  3917                           
  3918                           ; BSR set to: 0
  3919   010DD0  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3920   010DD2  EFED  F086         	goto	u2211
  3921   010DD6  EFEF  F086         	goto	u2210
  3922   010DDA                     u2211:
  3923   010DDA  EFE2  F086         	goto	l3489
  3924   010DDE                     u2210:
  3925   010DDE                     l3493:
  3926                           
  3927                           ; BSR set to: 0
  3928   010DDE  90D8               	bcf	status,0,c
  3929   010DE0  3774               	rlcf	___lldiv@quotient& (0+255),f,b
  3930   010DE2  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3931   010DE4  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3932   010DE6  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3933   010DE8                     
  3934                           ; BSR set to: 0
  3935   010DE8  5170               	movf	___lldiv@divisor& (0+255),w,b
  3936   010DEA  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
  3937   010DEC  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3938   010DEE  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3939   010DF0  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3940   010DF2  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3941   010DF4  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3942   010DF6  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3943   010DF8  A0D8               	btfss	status,0,c
  3944   010DFA  EF01  F087         	goto	u2221
  3945   010DFE  EF03  F087         	goto	u2220
  3946   010E02                     u2221:
  3947   010E02  EF0C  F087         	goto	l3501
  3948   010E06                     u2220:
  3949   010E06                     
  3950                           ; BSR set to: 0
  3951   010E06  5170               	movf	___lldiv@divisor& (0+255),w,b
  3952   010E08  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
  3953   010E0A  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3954   010E0C  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3955   010E0E  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3956   010E10  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3957   010E12  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3958   010E14  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3959   010E16                     
  3960                           ; BSR set to: 0
  3961   010E16  8174               	bsf	___lldiv@quotient& (0+255),0,b
  3962   010E18                     l3501:
  3963                           
  3964                           ; BSR set to: 0
  3965   010E18  90D8               	bcf	status,0,c
  3966   010E1A  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3967   010E1C  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3968   010E1E  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3969   010E20  3370               	rrcf	___lldiv@divisor& (0+255),f,b
  3970   010E22                     
  3971                           ; BSR set to: 0
  3972   010E22  2F78               	decfsz	___lldiv@counter& (0+255),f,b
  3973   010E24  EFEF  F086         	goto	l3493
  3974   010E28                     l559:
  3975                           
  3976                           ; BSR set to: 0
  3977   010E28  C074  F06C         	movff	___lldiv@quotient,?___lldiv
  3978   010E2C  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
  3979   010E30  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
  3980   010E34  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
  3981   010E38                     
  3982                           ; BSR set to: 0
  3983   010E38  0012               	return		;funcret
  3984   010E3A                     __end_of___lldiv:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _ADC_GetConversion *****************
  3988 ;; Defined at:
  3989 ;;		line 109 in file "mcc_generated_files/adc.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  channel         1    wreg     enum E4918
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  channel         1    4[BANK0 ] enum E4918
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2    0[BANK0 ] unsigned short 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:        5 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 4
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_measure_voltage
  4014 ;;		_measure_current
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text18
  4019   0112CE                     __ptext18:
  4020                           	callstack 0
  4021   0112CE                     _ADC_GetConversion:
  4022                           	callstack 25
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;incstack = 0
  4026                           ;ADC_GetConversion@channel stored from wreg
  4027   0112CE  0100               	movlb	0	; () banked
  4028   0112D0  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
  4029   0112D2                     
  4030                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  4031   0112D2  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4032   0112D6  0100               	movlb	0	; () banked
  4033   0112D8  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4034   0112DA  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4035   0112DC  50C2               	movf	194,w,c	;volatile
  4036   0112DE  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4037   0112E0  0BC3               	andlw	-61
  4038   0112E2  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4039   0112E4  6EC2               	movwf	194,c	;volatile
  4040   0112E6                     
  4041                           ; BSR set to: 0
  4042                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  4043   0112E6  80C2               	bsf	194,0,c	;volatile
  4044   0112E8                     
  4045                           ; BSR set to: 0
  4046                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4047   0112E8  82C2               	bsf	194,1,c	;volatile
  4048   0112EA                     l86:
  4049                           
  4050                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4051   0112EA  B2C2               	btfsc	194,1,c	;volatile
  4052   0112EC  EF7A  F089         	goto	u2171
  4053   0112F0  EF7C  F089         	goto	u2170
  4054   0112F4                     u2171:
  4055   0112F4  EF75  F089         	goto	l86
  4056   0112F8                     u2170:
  4057   0112F8                     
  4058                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4059   0112F8  50C4               	movf	196,w,c	;volatile
  4060   0112FA  0100               	movlb	0	; () banked
  4061   0112FC  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4062   0112FE  6B62               	clrf	??_ADC_GetConversion& (0+255),b
  4063   011300  50C3               	movf	195,w,c	;volatile
  4064   011302  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
  4065   011304  6F60               	movwf	?_ADC_GetConversion& (0+255),b
  4066   011306  0E00               	movlw	0
  4067   011308  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4068   01130A  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4069   01130C                     
  4070                           ; BSR set to: 0
  4071   01130C  0012               	return		;funcret
  4072   01130E                     __end_of_ADC_GetConversion:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _SYSTEM_Initialize *****************
  4076 ;; Defined at:
  4077 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 6
  4098 ;; This function calls:
  4099 ;;		_ADC_Initialize
  4100 ;;		_EPWM1_Initialize
  4101 ;;		_EUSART1_Initialize
  4102 ;;		_INTERRUPT_Initialize
  4103 ;;		_OSCILLATOR_Initialize
  4104 ;;		_PIN_MANAGER_Initialize
  4105 ;;		_TMR0_Initialize
  4106 ;;		_TMR2_Initialize
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text19
  4113   0114C2                     __ptext19:
  4114                           	callstack 0
  4115   0114C2                     _SYSTEM_Initialize:
  4116                           	callstack 24
  4117   0114C2                     
  4118                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4119   0114C2  ECDC  F08A         	call	_INTERRUPT_Initialize	;wreg free
  4120   0114C6                     
  4121                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4122   0114C6  EC87  F089         	call	_PIN_MANAGER_Initialize	;wreg free
  4123   0114CA                     
  4124                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4125   0114CA  ECCC  F08A         	call	_OSCILLATOR_Initialize	;wreg free
  4126   0114CE                     
  4127                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4128   0114CE  EC89  F08A         	call	_ADC_Initialize	;wreg free
  4129   0114D2                     
  4130                           ;mcc_generated_files/mcc.c: 57:     EPWM1_Initialize();
  4131   0114D2  EC7E  F08A         	call	_EPWM1_Initialize	;wreg free
  4132   0114D6                     
  4133                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4134   0114D6  EC94  F08A         	call	_TMR2_Initialize	;wreg free
  4135   0114DA                     
  4136                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  4137   0114DA  ECE5  F089         	call	_TMR0_Initialize	;wreg free
  4138   0114DE                     
  4139                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  4140   0114DE  EC1D  F087         	call	_EUSART1_Initialize	;wreg free
  4141   0114E2  0012               	return		;funcret
  4142   0114E4                     __end_of_SYSTEM_Initialize:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _TMR2_Initialize *****************
  4146 ;; Defined at:
  4147 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 4
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_SYSTEM_Initialize
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text20
  4176   011528                     __ptext20:
  4177                           	callstack 0
  4178   011528                     _TMR2_Initialize:
  4179                           	callstack 25
  4180   011528                     
  4181                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4182   011528  68CB               	setf	203,c	;volatile
  4183   01152A                     
  4184                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4185   01152A  0E00               	movlw	0
  4186   01152C  6ECC               	movwf	204,c	;volatile
  4187   01152E                     
  4188                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4189   01152E  929E               	bcf	158,1,c	;volatile
  4190                           
  4191                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4192   011530  0E04               	movlw	4
  4193   011532  6ECA               	movwf	202,c	;volatile
  4194   011534  0012               	return		;funcret
  4195   011536                     __end_of_TMR2_Initialize:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _TMR0_Initialize *****************
  4199 ;; Defined at:
  4200 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;Total ram usage:        2 bytes
  4219 ;; Hardware stack levels used: 1
  4220 ;; Hardware stack levels required when called: 5
  4221 ;; This function calls:
  4222 ;;		_TMR0_SetInterruptHandler
  4223 ;; This function is called by:
  4224 ;;		_SYSTEM_Initialize
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text21
  4229   0113CA                     __ptext21:
  4230                           	callstack 0
  4231   0113CA                     _TMR0_Initialize:
  4232                           	callstack 24
  4233   0113CA                     
  4234                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4235   0113CA  9CD5               	bcf	213,6,c	;volatile
  4236                           
  4237                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4238   0113CC  68D7               	setf	215,c	;volatile
  4239   0113CE                     
  4240                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
  4241   0113CE  0E9D               	movlw	157
  4242   0113D0  6ED6               	movwf	214,c	;volatile
  4243   0113D2                     
  4244                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4245   0113D2  50D6               	movf	214,w,c	;volatile
  4246   0113D4  CFD7 F063          	movff	4055,??_TMR0_Initialize	;volatile
  4247   0113D8  0100               	movlb	0	; () banked
  4248   0113DA  6B64               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  4249   0113DC  C063  F064         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4250   0113E0  6B63               	clrf	??_TMR0_Initialize& (0+255),b
  4251   0113E2  1163               	iorwf	??_TMR0_Initialize& (0+255),w,b
  4252   0113E4  6E38               	movwf	_timer0ReloadVal^0,c	;volatile
  4253   0113E6  5164               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  4254   0113E8  6E39               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4255   0113EA                     
  4256                           ; BSR set to: 0
  4257                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4258   0113EA  94F2               	bcf	242,2,c	;volatile
  4259   0113EC                     
  4260                           ; BSR set to: 0
  4261                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4262   0113EC  8AF2               	bsf	242,5,c	;volatile
  4263   0113EE                     
  4264                           ; BSR set to: 0
  4265                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4266   0113EE  0EBE               	movlw	low _TMR0_DefaultInterruptHandler
  4267   0113F0  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  4268   0113F2  0E15               	movlw	high _TMR0_DefaultInterruptHandler
  4269   0113F4  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4270   0113F6  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  4271   0113F8  6F62               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  4272   0113FA  EC9B  F08A         	call	_TMR0_SetInterruptHandler	;wreg free
  4273   0113FE                     
  4274                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x17;
  4275   0113FE  0E17               	movlw	23
  4276   011400  6ED5               	movwf	213,c	;volatile
  4277   011402  0012               	return		;funcret
  4278   011404                     __end_of_TMR0_Initialize:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _TMR0_SetInterruptHandler *****************
  4282 ;; Defined at:
  4283 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
  4286 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        3 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 4
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_TMR0_Initialize
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text22
  4313   011536                     __ptext22:
  4314                           	callstack 0
  4315   011536                     _TMR0_SetInterruptHandler:
  4316                           	callstack 24
  4317   011536                     
  4318                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4319   011536  C060  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4320   01153A  C061  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4321   01153E  C062  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  4322   011542  0012               	return		;funcret
  4323   011544                     __end_of_TMR0_SetInterruptHandler:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _PIN_MANAGER_Initialize *****************
  4327 ;; Defined at:
  4328 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 4
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_SYSTEM_Initialize
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text23
  4357   01130E                     __ptext23:
  4358                           	callstack 0
  4359   01130E                     _PIN_MANAGER_Initialize:
  4360                           	callstack 25
  4361   01130E                     
  4362                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  4363   01130E  0E00               	movlw	0
  4364   011310  6E8D               	movwf	141,c	;volatile
  4365                           
  4366                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  4367   011312  0E00               	movlw	0
  4368   011314  6E91               	movwf	145,c	;volatile
  4369                           
  4370                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  4371   011316  0E00               	movlw	0
  4372   011318  6E8C               	movwf	140,c	;volatile
  4373                           
  4374                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  4375   01131A  0E00               	movlw	0
  4376   01131C  6E89               	movwf	137,c	;volatile
  4377                           
  4378                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  4379   01131E  0E00               	movlw	0
  4380   011320  6E8E               	movwf	142,c	;volatile
  4381                           
  4382                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  4383   011322  0E00               	movlw	0
  4384   011324  6E8A               	movwf	138,c	;volatile
  4385                           
  4386                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  4387   011326  0E00               	movlw	0
  4388   011328  6E8F               	movwf	143,c	;volatile
  4389                           
  4390                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4391   01132A  0E00               	movlw	0
  4392   01132C  6E8B               	movwf	139,c	;volatile
  4393                           
  4394                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  4395   01132E  0E00               	movlw	0
  4396   011330  6E90               	movwf	144,c	;volatile
  4397   011332                     
  4398                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  4399   011332  6896               	setf	150,c	;volatile
  4400   011334                     
  4401                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  4402   011334  6897               	setf	151,c	;volatile
  4403                           
  4404                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  4405   011336  0E3F               	movlw	63
  4406   011338  6E92               	movwf	146,c	;volatile
  4407   01133A                     
  4408                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  4409   01133A  6898               	setf	152,c	;volatile
  4410   01133C                     
  4411                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  4412   01133C  6893               	setf	147,c	;volatile
  4413   01133E                     
  4414                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  4415   01133E  6899               	setf	153,c	;volatile
  4416                           
  4417                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBB;
  4418   011340  0EBB               	movlw	187
  4419   011342  6E94               	movwf	148,c	;volatile
  4420   011344                     
  4421                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  4422   011344  6895               	setf	149,c	;volatile
  4423   011346                     
  4424                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  4425   011346  689A               	setf	154,c	;volatile
  4426                           
  4427                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  4428   011348  0EF0               	movlw	-16
  4429   01134A  16C1               	andwf	193,f,c	;volatile
  4430   01134C  0012               	return		;funcret
  4431   01134E                     __end_of_PIN_MANAGER_Initialize:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _OSCILLATOR_Initialize *****************
  4435 ;; Defined at:
  4436 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 4
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_SYSTEM_Initialize
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text24
  4465   011598                     __ptext24:
  4466                           	callstack 0
  4467   011598                     _OSCILLATOR_Initialize:
  4468                           	callstack 25
  4469   011598                     
  4470                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x02;
  4471   011598  0E02               	movlw	2
  4472   01159A  6ED3               	movwf	211,c	;volatile
  4473                           
  4474                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4475   01159C  0E00               	movlw	0
  4476   01159E  6E9B               	movwf	155,c	;volatile
  4477   0115A0  0012               	return		;funcret
  4478   0115A2                     __end_of_OSCILLATOR_Initialize:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _INTERRUPT_Initialize *****************
  4482 ;; Defined at:
  4483 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		None
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 4
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_SYSTEM_Initialize
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text25
  4512   0115B8                     __ptext25:
  4513                           	callstack 0
  4514   0115B8                     _INTERRUPT_Initialize:
  4515                           	callstack 25
  4516   0115B8                     
  4517                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4518   0115B8  9ED0               	bcf	208,7,c	;volatile
  4519   0115BA  0012               	return		;funcret
  4520   0115BC                     __end_of_INTERRUPT_Initialize:
  4521                           	callstack 0
  4522                           
  4523 ;; *************** function _EUSART1_Initialize *****************
  4524 ;; Defined at:
  4525 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 5
  4546 ;; This function calls:
  4547 ;;		_EUSART1_SetErrorHandler
  4548 ;;		_EUSART1_SetFramingErrorHandler
  4549 ;;		_EUSART1_SetOverrunErrorHandler
  4550 ;;		_EUSART1_SetRxInterruptHandler
  4551 ;;		_EUSART1_SetTxInterruptHandler
  4552 ;; This function is called by:
  4553 ;;		_SYSTEM_Initialize
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text26
  4558   010E3A                     __ptext26:
  4559                           	callstack 0
  4560   010E3A                     _EUSART1_Initialize:
  4561                           	callstack 24
  4562   010E3A                     
  4563                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4564   010E3A  9A9D               	bcf	157,5,c	;volatile
  4565   010E3C                     
  4566                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4567   010E3C  0EB8               	movlw	low _EUSART1_Receive_ISR
  4568   010E3E  0100               	movlb	0	; () banked
  4569   010E40  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  4570   010E42  0E0A               	movlw	high _EUSART1_Receive_ISR
  4571   010E44  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  4572   010E46  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  4573   010E48  6F62               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  4574   010E4A  ECA9  F08A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4575   010E4E                     
  4576                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4577   010E4E  989D               	bcf	157,4,c	;volatile
  4578                           
  4579                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4580   010E50  0E4E               	movlw	low _EUSART1_Transmit_ISR
  4581   010E52  0100               	movlb	0	; () banked
  4582   010E54  6F60               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  4583   010E56  0E13               	movlw	high _EUSART1_Transmit_ISR
  4584   010E58  6F61               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  4585   010E5A  0E01               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  4586   010E5C  6F62               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
  4587   010E5E  ECA2  F08A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4588   010E62                     
  4589                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4590   010E62  0E08               	movlw	8
  4591   010E64  6E7E               	movwf	126,c	;volatile
  4592   010E66                     
  4593                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0xD0;
  4594   010E66  0ED0               	movlw	208
  4595   010E68  6EAB               	movwf	171,c	;volatile
  4596   010E6A                     
  4597                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x65;
  4598   010E6A  0E65               	movlw	101
  4599   010E6C  6EAC               	movwf	172,c	;volatile
  4600   010E6E                     
  4601                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  4602   010E6E  0E8A               	movlw	138
  4603   010E70  6EAF               	movwf	175,c	;volatile
  4604   010E72                     
  4605                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  4606   010E72  0E02               	movlw	2
  4607   010E74  6E7F               	movwf	127,c	;volatile
  4608   010E76                     
  4609                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4610   010E76  0EC0               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4611   010E78  0100               	movlb	0	; () banked
  4612   010E7A  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4613   010E7C  0E15               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4614   010E7E  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4615   010E80  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  4616   010E82  6F62               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
  4617   010E84  ECB7  F08A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4618   010E88                     
  4619                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4620   010E88  0EAC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4621   010E8A  0100               	movlb	0	; () banked
  4622   010E8C  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4623   010E8E  0E15               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4624   010E90  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4625   010E92  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  4626   010E94  6F62               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
  4627   010E96  ECB0  F08A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4628   010E9A                     
  4629                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4630   010E9A  0EB2               	movlw	low _EUSART1_DefaultErrorHandler
  4631   010E9C  0100               	movlb	0	; () banked
  4632   010E9E  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4633   010EA0  0E15               	movlw	high _EUSART1_DefaultErrorHandler
  4634   010EA2  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4635   010EA4  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  4636   010EA6  6F62               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)& (0+255),b
  4637   010EA8  ECBE  F08A         	call	_EUSART1_SetErrorHandler	;wreg free
  4638                           
  4639                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4640   010EAC  0E00               	movlw	0
  4641   010EAE  6E3D               	movwf	_eusart1RxLastError^0,c	;volatile
  4642                           
  4643                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4644   010EB0  0E00               	movlw	0
  4645   010EB2  6E43               	movwf	_eusart1TxHead^0,c	;volatile
  4646                           
  4647                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4648   010EB4  0E00               	movlw	0
  4649   010EB6  6E42               	movwf	_eusart1TxTail^0,c	;volatile
  4650                           
  4651                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4652   010EB8  0E08               	movlw	8
  4653   010EBA  6E41               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4654                           
  4655                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4656   010EBC  0E00               	movlw	0
  4657   010EBE  6E40               	movwf	_eusart1RxHead^0,c	;volatile
  4658                           
  4659                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4660   010EC0  0E00               	movlw	0
  4661   010EC2  6E3F               	movwf	_eusart1RxTail^0,c	;volatile
  4662                           
  4663                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4664   010EC4  0E00               	movlw	0
  4665   010EC6  6E3E               	movwf	_eusart1RxCount^0,c	;volatile
  4666   010EC8                     
  4667                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4668   010EC8  8A9D               	bsf	157,5,c	;volatile
  4669   010ECA  0012               	return		;funcret
  4670   010ECC                     __end_of_EUSART1_Initialize:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4674 ;; Defined at:
  4675 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4678 ;;		 -> EUSART1_Transmit_ISR(1), 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4690 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;Total ram usage:        3 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 4
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_EUSART1_Initialize
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text27
  4705   011544                     __ptext27:
  4706                           	callstack 0
  4707   011544                     _EUSART1_SetTxInterruptHandler:
  4708                           	callstack 24
  4709   011544                     
  4710                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4711   011544  C060  F047         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4712   011548  C061  F048         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4713   01154C  C062  F049         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  4714   011550  0012               	return		;funcret
  4715   011552                     __end_of_EUSART1_SetTxInterruptHandler:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4719 ;; Defined at:
  4720 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4723 ;;		 -> EUSART1_Receive_ISR(1), 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;Total ram usage:        3 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 4
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_EUSART1_Initialize
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text28
  4750   011552                     __ptext28:
  4751                           	callstack 0
  4752   011552                     _EUSART1_SetRxInterruptHandler:
  4753                           	callstack 24
  4754   011552                     
  4755                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4756   011552  C060  F0F5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4757   011556  C061  F0F6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4758   01155A  C062  F0F7         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  4759   01155E  0012               	return		;funcret
  4760   011560                     __end_of_EUSART1_SetRxInterruptHandler:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4764 ;; Defined at:
  4765 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4768 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4780 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;Total ram usage:        3 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 4
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_EUSART1_Initialize
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text29
  4795   011560                     __ptext29:
  4796                           	callstack 0
  4797   011560                     _EUSART1_SetOverrunErrorHandler:
  4798                           	callstack 24
  4799   011560                     
  4800                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  4801   011560  C060  F0EF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4802   011564  C061  F0F0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4803   011568  C062  F0F1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  4804   01156C  0012               	return		;funcret
  4805   01156E                     __end_of_EUSART1_SetOverrunErrorHandler:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4809 ;; Defined at:
  4810 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4813 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4825 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;Total ram usage:        3 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 4
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_EUSART1_Initialize
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text30
  4840   01156E                     __ptext30:
  4841                           	callstack 0
  4842   01156E                     _EUSART1_SetFramingErrorHandler:
  4843                           	callstack 24
  4844   01156E                     
  4845                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  4846   01156E  C060  F0F2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4847   011572  C061  F0F3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4848   011576  C062  F0F4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  4849   01157A  0012               	return		;funcret
  4850   01157C                     __end_of_EUSART1_SetFramingErrorHandler:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _EUSART1_SetErrorHandler *****************
  4854 ;; Defined at:
  4855 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4858 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        3 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 4
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_EUSART1_Initialize
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text31
  4885   01157C                     __ptext31:
  4886                           	callstack 0
  4887   01157C                     _EUSART1_SetErrorHandler:
  4888                           	callstack 24
  4889   01157C                     
  4890                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  4891   01157C  C060  F0EC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4892   011580  C061  F0ED         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4893   011584  C062  F0EE         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  4894   011588  0012               	return		;funcret
  4895   01158A                     __end_of_EUSART1_SetErrorHandler:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _EPWM1_Initialize *****************
  4899 ;; Defined at:
  4900 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 4
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_SYSTEM_Initialize
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text32
  4929   0114FC                     __ptext32:
  4930                           	callstack 0
  4931   0114FC                     _EPWM1_Initialize:
  4932                           	callstack 25
  4933   0114FC                     
  4934                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4935   0114FC  0E3C               	movlw	60
  4936   0114FE  6EBD               	movwf	189,c	;volatile
  4937                           
  4938                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4939   011500  0E00               	movlw	0
  4940   011502  6EB6               	movwf	182,c	;volatile
  4941                           
  4942                           ;mcc_generated_files/epwm1.c: 75:  ECCP1DEL = 0x80;
  4943   011504  0E80               	movlw	128
  4944   011506  6E79               	movwf	121,c	;volatile
  4945                           
  4946                           ;mcc_generated_files/epwm1.c: 78:  CCPR1H = 0x00;
  4947   011508  0E00               	movlw	0
  4948   01150A  6EBF               	movwf	191,c	;volatile
  4949                           
  4950                           ;mcc_generated_files/epwm1.c: 81:  CCPR1L = 0x7F;
  4951   01150C  0E7F               	movlw	127
  4952   01150E  6EBE               	movwf	190,c	;volatile
  4953   011510  0012               	return		;funcret
  4954   011512                     __end_of_EPWM1_Initialize:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function _ADC_Initialize *****************
  4958 ;; Defined at:
  4959 ;;		line 61 in file "mcc_generated_files/adc.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 4
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_SYSTEM_Initialize
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text33
  4988   011512                     __ptext33:
  4989                           	callstack 0
  4990   011512                     _ADC_Initialize:
  4991                           	callstack 25
  4992   011512                     
  4993                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  4994   011512  0E00               	movlw	0
  4995   011514  6EC1               	movwf	193,c	;volatile
  4996                           
  4997                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0x92;
  4998   011516  0E92               	movlw	146
  4999   011518  6EC0               	movwf	192,c	;volatile
  5000                           
  5001                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  5002   01151A  0E00               	movlw	0
  5003   01151C  6EC3               	movwf	195,c	;volatile
  5004                           
  5005                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  5006   01151E  0E00               	movlw	0
  5007   011520  6EC4               	movwf	196,c	;volatile
  5008                           
  5009                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  5010   011522  0E01               	movlw	1
  5011   011524  6EC2               	movwf	194,c	;volatile
  5012   011526  0012               	return		;funcret
  5013   011528                     __end_of_ADC_Initialize:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function _Lcd_Init *****************
  5017 ;; Defined at:
  5018 ;;		line 17 in file "lcd/lcd.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      char 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;Total ram usage:        2 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; Hardware stack levels required when called: 5
  5039 ;; This function calls:
  5040 ;;		_LCD_2x16_WriteCmd
  5041 ;; This function is called by:
  5042 ;;		_main
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text34
  5047   011244                     __ptext34:
  5048                           	callstack 0
  5049   011244                     _Lcd_Init:
  5050                           	callstack 25
  5051   011244                     
  5052                           ;lcd/lcd.c: 21:         TRISDbits.TRISD3 = 0;
  5053   011244  9695               	bcf	149,3,c	;volatile
  5054                           
  5055                           ;lcd/lcd.c: 22:         LATDbits.LATD3 = 0;
  5056   011246  968C               	bcf	140,3,c	;volatile
  5057                           
  5058                           ;lcd/lcd.c: 23:         TRISDbits.TRISD2 = 0;
  5059   011248  9495               	bcf	149,2,c	;volatile
  5060                           
  5061                           ;lcd/lcd.c: 24:         LATDbits.LATD2 = 0;
  5062   01124A  948C               	bcf	140,2,c	;volatile
  5063   01124C                     
  5064                           ;lcd/lcd.c: 25:         TRISJ = TRISJ & 0x0F;
  5065   01124C  509A               	movf	154,w,c	;volatile
  5066   01124E  0B0F               	andlw	15
  5067   011250  6E9A               	movwf	154,c	;volatile
  5068   011252                     
  5069                           ;lcd/lcd.c: 27:         _delay((unsigned long)((200)*(25000000L/4000.0)));
  5070   011252  0E07               	movlw	7
  5071   011254  0100               	movlb	0	; () banked
  5072   011256  6F63               	movwf	(??_Lcd_Init+1)& (0+255),b
  5073   011258  0E58               	movlw	88
  5074   01125A  6F62               	movwf	??_Lcd_Init& (0+255),b
  5075   01125C  0E59               	movlw	89
  5076   01125E                     u2317:
  5077   01125E  2EE8               	decfsz	wreg,f,c
  5078   011260  D7FE               	bra	u2317
  5079   011262  2F62               	decfsz	??_Lcd_Init& (0+255),f,b
  5080   011264  D7FC               	bra	u2317
  5081   011266  2F63               	decfsz	(??_Lcd_Init+1)& (0+255),f,b
  5082   011268  D7FA               	bra	u2317
  5083   01126A  D000               	nop2	
  5084   01126C                     
  5085                           ;lcd/lcd.c: 28:         LCD_2x16_WriteCmd(0x02);
  5086   01126C  0E02               	movlw	2
  5087   01126E  ECDB  F087         	call	_LCD_2x16_WriteCmd
  5088   011272                     
  5089                           ;lcd/lcd.c: 30:         LCD_2x16_WriteCmd(0x28);
  5090   011272  0E28               	movlw	40
  5091   011274  ECDB  F087         	call	_LCD_2x16_WriteCmd
  5092   011278                     
  5093                           ;lcd/lcd.c: 33:         LCD_2x16_WriteCmd(0x01);
  5094   011278  0E01               	movlw	1
  5095   01127A  ECDB  F087         	call	_LCD_2x16_WriteCmd
  5096   01127E                     
  5097                           ;lcd/lcd.c: 34:         LCD_2x16_WriteCmd(0x0C);
  5098   01127E  0E0C               	movlw	12
  5099   011280  ECDB  F087         	call	_LCD_2x16_WriteCmd
  5100   011284                     
  5101                           ;lcd/lcd.c: 37:         LCD_2x16_WriteCmd(0x06);
  5102   011284  0E06               	movlw	6
  5103   011286  ECDB  F087         	call	_LCD_2x16_WriteCmd
  5104   01128A  0012               	return		;funcret
  5105   01128C                     __end_of_Lcd_Init:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _LCD_2x16_WriteMsg *****************
  5109 ;; Defined at:
  5110 ;;		line 74 in file "lcd/lcd.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  msg             2    2[BANK0 ] PTR unsigned char 
  5113 ;;		 -> main@tempString(20), 
  5114 ;;  line            1    4[BANK0 ] unsigned char 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;Total ram usage:        3 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 5
  5133 ;; This function calls:
  5134 ;;		_LCD_2x16_WriteCmd
  5135 ;;		_LCD_2x16_WriteData
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text35
  5142   01138E                     __ptext35:
  5143                           	callstack 0
  5144   01138E                     _LCD_2x16_WriteMsg:
  5145                           	callstack 25
  5146   01138E                     
  5147                           ;lcd/lcd.c: 74: void LCD_2x16_WriteMsg(unsigned char * msg, uint8_t line);lcd/lcd.c: 75:
      +                           {;lcd/lcd.c: 76:     LCD_2x16_WriteCmd(0x80 | (line << 6));
  5148   01138E  0100               	movlb	0	; () banked
  5149   011390  4164               	rrncf	LCD_2x16_WriteMsg@line& (0+255),w,b
  5150   011392  42E8               	rrncf	wreg,f,c
  5151   011394  0BC0               	andlw	192
  5152   011396  0980               	iorlw	128
  5153   011398  ECDB  F087         	call	_LCD_2x16_WriteCmd
  5154   01139C                     l3535:
  5155                           
  5156                           ;lcd/lcd.c: 78:     {;lcd/lcd.c: 79:         LCD_2x16_WriteData(*msg);
  5157   01139C  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5158   0113A0  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5159   0113A4  50DF               	movf	indf2,w,c
  5160   0113A6  EC62  F088         	call	_LCD_2x16_WriteData
  5161   0113AA                     
  5162                           ;lcd/lcd.c: 80:         msg++;
  5163   0113AA  0100               	movlb	0	; () banked
  5164   0113AC  4B62               	infsnz	LCD_2x16_WriteMsg@msg& (0+255),f,b
  5165   0113AE  2B63               	incf	(LCD_2x16_WriteMsg@msg+1)& (0+255),f,b
  5166   0113B0                     
  5167                           ; BSR set to: 0
  5168                           ;lcd/lcd.c: 81:     }while(*msg != 0);
  5169   0113B0  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5170   0113B4  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5171   0113B8  50DF               	movf	indf2,w,c
  5172   0113BA  A4D8               	btfss	status,2,c
  5173   0113BC  EFE2  F089         	goto	u2241
  5174   0113C0  EFE4  F089         	goto	u2240
  5175   0113C4                     u2241:
  5176   0113C4  EFCE  F089         	goto	l3535
  5177   0113C8                     u2240:
  5178   0113C8                     
  5179                           ; BSR set to: 0
  5180   0113C8  0012               	return		;funcret
  5181   0113CA                     __end_of_LCD_2x16_WriteMsg:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function _LCD_2x16_WriteData *****************
  5185 ;; Defined at:
  5186 ;;		line 58 in file "lcd/lcd.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  command         1    wreg     unsigned char 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  command         1    1[BANK0 ] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;Total ram usage:        2 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 4
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_LCD_2x16_WriteMsg
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text36
  5215   0110C4                     __ptext36:
  5216                           	callstack 0
  5217   0110C4                     _LCD_2x16_WriteData:
  5218                           	callstack 25
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;incstack = 0
  5222                           ;LCD_2x16_WriteData@command stored from wreg
  5223   0110C4  0100               	movlb	0	; () banked
  5224   0110C6  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5225   0110C8                     
  5226                           ;lcd/lcd.c: 58: void LCD_2x16_WriteData(uint8_t command);lcd/lcd.c: 59: {;lcd/lcd.c: 60:
      +                               LATDbits.LATD3 = 1;
  5227   0110C8  868C               	bsf	140,3,c	;volatile
  5228   0110CA                     
  5229                           ;lcd/lcd.c: 61:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5230   0110CA  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5231   0110CE  0E0F               	movlw	15
  5232   0110D0  0100               	movlb	0	; () banked
  5233   0110D2  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5234   0110D4  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5235   0110D6  0BF0               	andlw	240
  5236   0110D8  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5237   0110DA  6E91               	movwf	145,c	;volatile
  5238   0110DC                     
  5239                           ; BSR set to: 0
  5240                           ;lcd/lcd.c: 62:     LATDbits.LATD2 = 1;
  5241   0110DC  848C               	bsf	140,2,c	;volatile
  5242   0110DE                     
  5243                           ; BSR set to: 0
  5244                           ;lcd/lcd.c: 63:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5245   0110DE  D000               	nop2		;2 cycle nop
  5246   0110E0  D000               	nop2		;2 cycle nop
  5247   0110E2  D000               	nop2		;2 cycle nop
  5248   0110E4                     
  5249                           ;lcd/lcd.c: 64:     LATDbits.LATD2 = 0;
  5250   0110E4  948C               	bcf	140,2,c	;volatile
  5251   0110E6                     
  5252                           ;lcd/lcd.c: 65:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5253   0110E6  D000               	nop2		;2 cycle nop
  5254   0110E8  D000               	nop2		;2 cycle nop
  5255   0110EA  D000               	nop2		;2 cycle nop
  5256                           
  5257                           ;lcd/lcd.c: 66:     command = command << 4;
  5258   0110EC  0100               	movlb	0	; () banked
  5259   0110EE  3961               	swapf	LCD_2x16_WriteData@command& (0+255),w,b
  5260   0110F0  0BF0               	andlw	240
  5261   0110F2  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5262                           
  5263                           ;lcd/lcd.c: 67:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5264   0110F4  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5265   0110F8  0E0F               	movlw	15
  5266   0110FA  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5267   0110FC  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5268   0110FE  0BF0               	andlw	240
  5269   011100  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5270   011102  6E91               	movwf	145,c	;volatile
  5271   011104                     
  5272                           ; BSR set to: 0
  5273                           ;lcd/lcd.c: 68:     LATDbits.LATD2 = 1;
  5274   011104  848C               	bsf	140,2,c	;volatile
  5275   011106                     
  5276                           ; BSR set to: 0
  5277                           ;lcd/lcd.c: 69:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5278   011106  D000               	nop2		;2 cycle nop
  5279   011108  D000               	nop2		;2 cycle nop
  5280   01110A  D000               	nop2		;2 cycle nop
  5281   01110C                     
  5282                           ;lcd/lcd.c: 70:     LATDbits.LATD2 = 0;
  5283   01110C  948C               	bcf	140,2,c	;volatile
  5284   01110E                     
  5285                           ;lcd/lcd.c: 71:     _delay((unsigned long)((100)*(25000000L/4000000.0)));
  5286   01110E  0ED0               	movlw	208
  5287   011110                     u2327:
  5288   011110  2EE8               	decfsz	wreg,f,c
  5289   011112  D7FE               	bra	u2327
  5290   011114  F000               	nop	
  5291   011116  0012               	return		;funcret
  5292   011118                     __end_of_LCD_2x16_WriteData:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function _LCD_2x16_WriteCmd *****************
  5296 ;; Defined at:
  5297 ;;		line 43 in file "lcd/lcd.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  command         1    wreg     unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  command         1    1[BANK0 ] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;Total ram usage:        2 bytes
  5316 ;; Hardware stack levels used: 1
  5317 ;; Hardware stack levels required when called: 4
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_Lcd_Init
  5322 ;;		_LCD_2x16_WriteMsg
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text37
  5327   010FB6                     __ptext37:
  5328                           	callstack 0
  5329   010FB6                     _LCD_2x16_WriteCmd:
  5330                           	callstack 25
  5331                           
  5332                           ;incstack = 0
  5333                           ;LCD_2x16_WriteCmd@command stored from wreg
  5334   010FB6  0100               	movlb	0	; () banked
  5335   010FB8  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5336   010FBA                     
  5337                           ;lcd/lcd.c: 43: void LCD_2x16_WriteCmd(uint8_t command);lcd/lcd.c: 44: {;lcd/lcd.c: 45: 
      +                              LATDbits.LATD3 = 0;
  5338   010FBA  968C               	bcf	140,3,c	;volatile
  5339   010FBC                     
  5340                           ;lcd/lcd.c: 46:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5341   010FBC  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5342   010FC0  0E0F               	movlw	15
  5343   010FC2  0100               	movlb	0	; () banked
  5344   010FC4  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5345   010FC6  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5346   010FC8  0BF0               	andlw	240
  5347   010FCA  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5348   010FCC  6E91               	movwf	145,c	;volatile
  5349   010FCE                     
  5350                           ; BSR set to: 0
  5351                           ;lcd/lcd.c: 47:     LATDbits.LATD2 = 1;
  5352   010FCE  848C               	bsf	140,2,c	;volatile
  5353   010FD0                     
  5354                           ; BSR set to: 0
  5355                           ;lcd/lcd.c: 48:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5356   010FD0  0E14               	movlw	20
  5357   010FD2                     u2337:
  5358   010FD2  2EE8               	decfsz	wreg,f,c
  5359   010FD4  D7FE               	bra	u2337
  5360   010FD6  D000               	nop2	
  5361   010FD8                     
  5362                           ;lcd/lcd.c: 49:     LATDbits.LATD2 = 0;
  5363   010FD8  948C               	bcf	140,2,c	;volatile
  5364   010FDA                     
  5365                           ;lcd/lcd.c: 50:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5366   010FDA  D000               	nop2		;2 cycle nop
  5367   010FDC  D000               	nop2		;2 cycle nop
  5368   010FDE  D000               	nop2		;2 cycle nop
  5369   010FE0                     
  5370                           ;lcd/lcd.c: 51:     command = command << 4;
  5371   010FE0  0100               	movlb	0	; () banked
  5372   010FE2  3961               	swapf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5373   010FE4  0BF0               	andlw	240
  5374   010FE6  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5375   010FE8                     
  5376                           ; BSR set to: 0
  5377                           ;lcd/lcd.c: 52:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5378   010FE8  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5379   010FEC  0E0F               	movlw	15
  5380   010FEE  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5381   010FF0  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5382   010FF2  0BF0               	andlw	240
  5383   010FF4  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5384   010FF6  6E91               	movwf	145,c	;volatile
  5385   010FF8                     
  5386                           ; BSR set to: 0
  5387                           ;lcd/lcd.c: 53:     LATDbits.LATD2 = 1;
  5388   010FF8  848C               	bsf	140,2,c	;volatile
  5389   010FFA                     
  5390                           ; BSR set to: 0
  5391                           ;lcd/lcd.c: 54:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5392   010FFA  0E14               	movlw	20
  5393   010FFC                     u2347:
  5394   010FFC  2EE8               	decfsz	wreg,f,c
  5395   010FFE  D7FE               	bra	u2347
  5396   011000  D000               	nop2	
  5397   011002                     
  5398                           ;lcd/lcd.c: 55:     LATDbits.LATD2 = 0;
  5399   011002  948C               	bcf	140,2,c	;volatile
  5400   011004                     
  5401                           ;lcd/lcd.c: 56:     _delay((unsigned long)((3)*(25000000L/4000.0)));
  5402   011004  0E19               	movlw	25
  5403   011006  0100               	movlb	0	; () banked
  5404   011008  6F60               	movwf	??_LCD_2x16_WriteCmd& (0+255),b
  5405   01100A  0E58               	movlw	88
  5406   01100C                     u2357:
  5407   01100C  2EE8               	decfsz	wreg,f,c
  5408   01100E  D7FE               	bra	u2357
  5409   011010  2F60               	decfsz	??_LCD_2x16_WriteCmd& (0+255),f,b
  5410   011012  D7FC               	bra	u2357
  5411   011014  F000               	nop	
  5412   011016  0012               	return		;funcret
  5413   011018                     __end_of_LCD_2x16_WriteCmd:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _EPWM1_LoadDutyValue *****************
  5417 ;; Defined at:
  5418 ;;		line 85 in file "mcc_generated_files/epwm1.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;Total ram usage:        4 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; Hardware stack levels required when called: 4
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_main
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text38
  5447   01143E                     __ptext38:
  5448                           	callstack 0
  5449   01143E                     _EPWM1_LoadDutyValue:
  5450                           	callstack 26
  5451   01143E                     
  5452                           ;mcc_generated_files/epwm1.c: 85: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 86: {;mcc_generated_files/epwm1.c: 88:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5453   01143E  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5454   011442  C061  F063         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5455   011446  0100               	movlb	0	; () banked
  5456   011448  90D8               	bcf	status,0,c
  5457   01144A  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5458   01144C  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5459   01144E  90D8               	bcf	status,0,c
  5460   011450  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5461   011452  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5462   011454  5162               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5463   011456  6EBE               	movwf	190,c	;volatile
  5464                           
  5465                           ;mcc_generated_files/epwm1.c: 91:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5466   011458  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5467   01145C  0E03               	movlw	3
  5468   01145E  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5469   011460  3B62               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5470   011462  0EF0               	movlw	240
  5471   011464  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5472   011466  50BD               	movf	189,w,c	;volatile
  5473   011468  0BCF               	andlw	207
  5474   01146A  1162               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5475   01146C  6EBD               	movwf	189,c	;volatile
  5476   01146E                     
  5477                           ; BSR set to: 0
  5478   01146E  0012               	return		;funcret
  5479   011470                     __end_of_EPWM1_LoadDutyValue:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function _INTERRUPT_InterruptManager *****************
  5483 ;; Defined at:
  5484 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;Total ram usage:       10 bytes
  5503 ;; Hardware stack levels used: 1
  5504 ;; Hardware stack levels required when called: 3
  5505 ;; This function calls:
  5506 ;;		NULL
  5507 ;;		_EUSART1_Receive_ISR
  5508 ;;		_EUSART1_Transmit_ISR
  5509 ;;		_TMR0_ISR
  5510 ;;		_TMR0_Reload
  5511 ;;		_modbus_char_recvd
  5512 ;;		_modbus_timer
  5513 ;; This function is called by:
  5514 ;;		Interrupt level 2
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	intcode
  5519   000008                     __pintcode:
  5520                           	callstack 0
  5521   000008                     _INTERRUPT_InterruptManager:
  5522                           	callstack 19
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;incstack = 0
  5526   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5527   00000A  CFFA F01B          	movff	pclath,??_INTERRUPT_InterruptManager
  5528   00000E  CFFB F01C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5529   000012  CFE1 F01D          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5530   000016  CFE2 F01E          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5531   00001A  CFD9 F01F          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5532   00001E  CFDA F020          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5533   000022  CFF6 F021          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
  5534   000026  CFF7 F022          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
  5535   00002A  CFF8 F023          	movff	tblptru,??_INTERRUPT_InterruptManager+8
  5536   00002E  CFF5 F024          	movff	tablat,??_INTERRUPT_InterruptManager+9
  5537   000032                     
  5538                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5539   000032  AAF2               	btfss	242,5,c	;volatile
  5540   000034  EF1E  F000         	goto	i2u166_41
  5541   000038  EF20  F000         	goto	i2u166_40
  5542   00003C                     i2u166_41:
  5543   00003C  EF2E  F000         	goto	i2l406
  5544   000040                     i2u166_40:
  5545   000040  A4F2               	btfss	242,2,c	;volatile
  5546   000042  EF25  F000         	goto	i2u167_41
  5547   000046  EF27  F000         	goto	i2u167_40
  5548   00004A                     i2u167_41:
  5549   00004A  EF2E  F000         	goto	i2l406
  5550   00004E                     i2u167_40:
  5551   00004E                     
  5552                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         TMR0_ISR();
  5553   00004E  EC02  F08A         	call	_TMR0_ISR	;wreg free
  5554   000052                     
  5555                           ;mcc_generated_files/interrupt_manager.c: 65:         TMR0ON = 0;
  5556   000052  9ED5               	bcf	4053,7,c	;volatile
  5557   000054                     
  5558                           ;mcc_generated_files/interrupt_manager.c: 66:         modbus_timer();
  5559   000054  ECC5  F08A         	call	_modbus_timer	;wreg free
  5560                           
  5561                           ;mcc_generated_files/interrupt_manager.c: 67:     }
  5562   000058  EF76  F000         	goto	i2l414
  5563   00005C                     i2l406:
  5564   00005C  ACF2               	btfss	242,6,c	;volatile
  5565   00005E  EF33  F000         	goto	i2u168_41
  5566   000062  EF35  F000         	goto	i2u168_40
  5567   000066                     i2u168_41:
  5568   000066  EF76  F000         	goto	i2l414
  5569   00006A                     i2u168_40:
  5570   00006A                     
  5571                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5572   00006A  A89D               	btfss	157,4,c	;volatile
  5573   00006C  EF3A  F000         	goto	i2u169_41
  5574   000070  EF3C  F000         	goto	i2u169_40
  5575   000074                     i2u169_41:
  5576   000074  EF52  F000         	goto	i2l409
  5577   000078                     i2u169_40:
  5578   000078  A89E               	btfss	158,4,c	;volatile
  5579   00007A  EF41  F000         	goto	i2u170_41
  5580   00007E  EF43  F000         	goto	i2u170_40
  5581   000082                     i2u170_41:
  5582   000082  EF52  F000         	goto	i2l409
  5583   000086                     i2u170_40:
  5584   000086                     
  5585                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             EUSART1_TxDefaultInterruptHandler();
  5586   000086  D802               	call	i2u171_48
  5587   000088  EF50  F000         	goto	i2u171_49
  5588   00008C                     i2u171_48:
  5589   00008C  0005               	push	
  5590   00008E  6EFA               	movwf	pclath,c
  5591   000090  5047               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  5592   000092  6EFD               	movwf	tosl,c
  5593   000094  5048               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  5594   000096  6EFE               	movwf	tosh,c
  5595   000098  5049               	movf	(_EUSART1_TxDefaultInterruptHandler+2)^0,w,c
  5596   00009A  6EFF               	movwf	tosu,c
  5597   00009C  50FA               	movf	pclath,w,c
  5598   00009E  0012               	return		;indir
  5599   0000A0                     i2u171_49:
  5600                           
  5601                           ;mcc_generated_files/interrupt_manager.c: 73:         }
  5602   0000A0  EF76  F000         	goto	i2l414
  5603   0000A4                     i2l409:
  5604   0000A4  AA9D               	btfss	157,5,c	;volatile
  5605   0000A6  EF57  F000         	goto	i2u172_41
  5606   0000AA  EF59  F000         	goto	i2u172_40
  5607   0000AE                     i2u172_41:
  5608   0000AE  EF76  F000         	goto	i2l413
  5609   0000B2                     i2u172_40:
  5610   0000B2  AA9E               	btfss	158,5,c	;volatile
  5611   0000B4  EF5E  F000         	goto	i2u173_41
  5612   0000B8  EF60  F000         	goto	i2u173_40
  5613   0000BC                     i2u173_41:
  5614   0000BC  EF76  F000         	goto	i2l413
  5615   0000C0                     i2u173_40:
  5616   0000C0                     
  5617                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART1_RxDefaultInterruptHandler();
  5618   0000C0  D802               	call	i2u174_48
  5619   0000C2  EF6E  F000         	goto	i2u174_49
  5620   0000C6                     i2u174_48:
  5621   0000C6  0005               	push	
  5622   0000C8  6EFA               	movwf	pclath,c
  5623   0000CA  0100               	movlb	0	; () banked
  5624   0000CC  51F5               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5625   0000CE  6EFD               	movwf	tosl,c
  5626   0000D0  51F6               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5627   0000D2  6EFE               	movwf	tosh,c
  5628   0000D4  51F7               	movf	(_EUSART1_RxDefaultInterruptHandler+2)& (0+255),w,b
  5629   0000D6  6EFF               	movwf	tosu,c
  5630   0000D8  50FA               	movf	pclath,w,c
  5631   0000DA  0012               	return		;indir
  5632   0000DC                     i2u174_49:
  5633   0000DC                     
  5634                           ;mcc_generated_files/interrupt_manager.c: 77:             modbus_char_recvd(RCREG1);
  5635   0000DC  50AE               	movf	174,w,c	;volatile
  5636   0000DE  EC72  F08A         	call	_modbus_char_recvd
  5637   0000E2                     
  5638                           ;mcc_generated_files/interrupt_manager.c: 78:             TMR0_Reload();
  5639   0000E2  ECD1  F08A         	call	_TMR0_Reload	;wreg free
  5640   0000E6                     
  5641                           ;mcc_generated_files/interrupt_manager.c: 79:             TMR0ON = 1;
  5642   0000E6  8ED5               	bsf	4053,7,c	;volatile
  5643                           
  5644                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  5645   0000E8  EF76  F000         	goto	i2l414
  5646   0000EC                     i2l413:
  5647   0000EC                     i2l414:
  5648   0000EC  C024  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
  5649   0000F0  C023  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
  5650   0000F4  C022  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
  5651   0000F8  C021  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
  5652   0000FC  C020  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5653   000100  C01F  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5654   000104  C01E  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5655   000108  C01D  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5656   00010C  C01C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5657   000110  C01B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5658   000114  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5659   000116  0011               	retfie		f
  5660   000118                     __end_of_INTERRUPT_InterruptManager:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _modbus_timer *****************
  5664 ;; Defined at:
  5665 ;;		line 33 in file "modbus.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;Total ram usage:        0 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; Hardware stack levels required when called: 2
  5686 ;; This function calls:
  5687 ;;		_modbus_analyse_and_answer
  5688 ;;		_modbus_send
  5689 ;; This function is called by:
  5690 ;;		_INTERRUPT_InterruptManager
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text40
  5695   01158A                     __ptext40:
  5696                           	callstack 0
  5697   01158A                     _modbus_timer:
  5698                           	callstack 19
  5699   01158A                     
  5700                           ;modbus.c: 36:     modbus_send(modbus_analyse_and_answer());
  5701   01158A  EC00  F080         	call	_modbus_analyse_and_answer	;wreg free
  5702   01158E  ECD9  F088         	call	_modbus_send
  5703   011592                     
  5704                           ;modbus.c: 37:     index = 0;
  5705   011592  0E00               	movlw	0
  5706   011594  6E3B               	movwf	_index^0,c
  5707   011596  0012               	return		;funcret
  5708   011598                     __end_of_modbus_timer:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _modbus_send *****************
  5712 ;; Defined at:
  5713 ;;		line 128 in file "modbus.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  length          1    wreg     unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  length          1    4[COMRAM] unsigned char 
  5718 ;;  i               2    5[COMRAM] int 
  5719 ;;  temp16          2    0        unsigned short 
  5720 ;;  i               1    0        unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;Total ram usage:        6 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 1
  5737 ;; This function calls:
  5738 ;;		_EUSART1_Write
  5739 ;; This function is called by:
  5740 ;;		_modbus_timer
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text41
  5745   0111B2                     __ptext41:
  5746                           	callstack 0
  5747   0111B2                     _modbus_send:
  5748                           	callstack 19
  5749                           
  5750                           ;incstack = 0
  5751                           ;modbus_send@length stored from wreg
  5752   0111B2  6E05               	movwf	modbus_send@length^0,c
  5753   0111B4                     
  5754                           ;modbus.c: 128: void modbus_send(uint8_t length);modbus.c: 129: {;modbus.c: 130:  uint16
      +                          _t temp16;;modbus.c: 131:  uint8_t i;;modbus.c: 137:     for(int i = 0; i < length; i++)
      +                          {
  5755   0111B4  0E00               	movlw	0
  5756   0111B6  6E07               	movwf	(modbus_send@i_1196+1)^0,c
  5757   0111B8  0E00               	movlw	0
  5758   0111BA  6E06               	movwf	modbus_send@i_1196^0,c
  5759   0111BC  EFEB  F088         	goto	i2l2757
  5760   0111C0                     i2l2753:
  5761                           
  5762                           ;modbus.c: 138:         EUSART1_Write(tx_buf[i]);
  5763   0111C0  0E00               	movlw	low _tx_buf
  5764   0111C2  2406               	addwf	modbus_send@i_1196^0,w,c
  5765   0111C4  6ED9               	movwf	fsr2l,c
  5766   0111C6  0E02               	movlw	high _tx_buf
  5767   0111C8  2007               	addwfc	(modbus_send@i_1196+1)^0,w,c
  5768   0111CA  6EDA               	movwf	fsr2h,c
  5769   0111CC  50DF               	movf	indf2,w,c
  5770   0111CE  EC37  F088         	call	_EUSART1_Write
  5771   0111D2                     
  5772                           ;modbus.c: 139:     }
  5773   0111D2  4A06               	infsnz	modbus_send@i_1196^0,f,c
  5774   0111D4  2A07               	incf	(modbus_send@i_1196+1)^0,f,c
  5775   0111D6                     i2l2757:
  5776   0111D6  5005               	movf	modbus_send@length^0,w,c
  5777   0111D8  6E02               	movwf	??_modbus_send^0,c
  5778   0111DA  6A03               	clrf	(??_modbus_send+1)^0,c
  5779   0111DC  5002               	movf	??_modbus_send^0,w,c
  5780   0111DE  5C06               	subwf	modbus_send@i_1196^0,w,c
  5781   0111E0  5007               	movf	(modbus_send@i_1196+1)^0,w,c
  5782   0111E2  0A80               	xorlw	128
  5783   0111E4  6E04               	movwf	(??_modbus_send+2)^0,c
  5784   0111E6  5003               	movf	(??_modbus_send+1)^0,w,c
  5785   0111E8  0A80               	xorlw	128
  5786   0111EA  5804               	subwfb	(??_modbus_send+2)^0,w,c
  5787   0111EC  A0D8               	btfss	status,0,c
  5788   0111EE  EFFB  F088         	goto	i2u141_41
  5789   0111F2  EFFD  F088         	goto	i2u141_40
  5790   0111F6                     i2u141_41:
  5791   0111F6  EFE0  F088         	goto	i2l2753
  5792   0111FA                     i2u141_40:
  5793   0111FA  0012               	return		;funcret
  5794   0111FC                     __end_of_modbus_send:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _EUSART1_Write *****************
  5798 ;; Defined at:
  5799 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  txData          1    wreg     unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  txData          1    0[COMRAM] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;Total ram usage:        1 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_modbus_send
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text42
  5827   01106E                     __ptext42:
  5828                           	callstack 0
  5829   01106E                     _EUSART1_Write:
  5830                           	callstack 19
  5831                           
  5832                           ;incstack = 0
  5833                           ;EUSART1_Write@txData stored from wreg
  5834   01106E  6E01               	movwf	EUSART1_Write@txData^0,c
  5835   011070                     i2l2441:
  5836                           
  5837                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5838   011070  5041               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5839   011072  B4D8               	btfsc	status,2,c
  5840   011074  EF3E  F088         	goto	i2u126_41
  5841   011078  EF40  F088         	goto	i2u126_40
  5842   01107C                     i2u126_41:
  5843   01107C  EF38  F088         	goto	i2l2441
  5844   011080                     i2u126_40:
  5845   011080                     
  5846                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5847   011080  B89D               	btfsc	157,4,c	;volatile
  5848   011082  EF45  F088         	goto	i2u127_41
  5849   011086  EF47  F088         	goto	i2u127_40
  5850   01108A                     i2u127_41:
  5851   01108A  EF4B  F088         	goto	i2l284
  5852   01108E                     i2u127_40:
  5853   01108E                     
  5854                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5855   01108E  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5856                           
  5857                           ;mcc_generated_files/eusart1.c: 182:     }
  5858   011092  EF60  F088         	goto	i2l2455
  5859   011096                     i2l284:
  5860                           
  5861                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5862   011096  989D               	bcf	157,4,c	;volatile
  5863   011098                     
  5864                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5865   011098  0E2D               	movlw	low _eusart1TxBuffer
  5866   01109A  2443               	addwf	_eusart1TxHead^0,w,c	;volatile
  5867   01109C  6ED9               	movwf	fsr2l,c
  5868   01109E  6ADA               	clrf	fsr2h,c
  5869   0110A0  0E00               	movlw	high _eusart1TxBuffer
  5870   0110A2  22DA               	addwfc	fsr2h,f,c
  5871   0110A4  C001  FFDF         	movff	EUSART1_Write@txData,indf2
  5872   0110A8  2A43               	incf	_eusart1TxHead^0,f,c	;volatile
  5873   0110AA                     
  5874                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5875   0110AA  0E07               	movlw	7
  5876   0110AC  6443               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5877   0110AE  EF5B  F088         	goto	i2u128_41
  5878   0110B2  EF5D  F088         	goto	i2u128_40
  5879   0110B6                     i2u128_41:
  5880   0110B6  EF5F  F088         	goto	i2l2453
  5881   0110BA                     i2u128_40:
  5882   0110BA                     
  5883                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5884   0110BA  0E00               	movlw	0
  5885   0110BC  6E43               	movwf	_eusart1TxHead^0,c	;volatile
  5886   0110BE                     i2l2453:
  5887                           
  5888                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5889   0110BE  0641               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5890   0110C0                     i2l2455:
  5891                           
  5892                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5893   0110C0  889D               	bsf	157,4,c	;volatile
  5894   0110C2  0012               	return		;funcret
  5895   0110C4                     __end_of_EUSART1_Write:
  5896                           	callstack 0
  5897                           
  5898 ;; *************** function _modbus_analyse_and_answer *****************
  5899 ;; Defined at:
  5900 ;;		line 40 in file "modbus.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  i               2   18[COMRAM] int 
  5905 ;;  i               2   16[COMRAM] int 
  5906 ;;  nbofRegister    2   24[COMRAM] unsigned short 
  5907 ;;  startingAddr    2   20[COMRAM] unsigned short 
  5908 ;;  pwmValue        2   14[COMRAM] unsigned short 
  5909 ;;  functionCode    1   13[COMRAM] unsigned char 
  5910 ;;  crc             2   22[COMRAM] unsigned short 
  5911 ;;  crcAtt          2   11[COMRAM] unsigned short 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      unsigned char 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;Total ram usage:       17 bytes
  5926 ;; Hardware stack levels used: 1
  5927 ;; Hardware stack levels required when called: 1
  5928 ;; This function calls:
  5929 ;;		_CRC16
  5930 ;; This function is called by:
  5931 ;;		_modbus_timer
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text43
  5936   010000                     __ptext43:
  5937                           	callstack 0
  5938   010000                     _modbus_analyse_and_answer:
  5939                           	callstack 19
  5940   010000                     
  5941                           ;modbus.c: 42:     if(holding_registers[1] == rx_buf[0])
  5942   010000  0101               	movlb	1	; () banked
  5943   010002  5100               	movf	_rx_buf& (0+255),w,b
  5944   010004  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5945   010006  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  5946   010008  0100               	movlb	0	; () banked
  5947   01000A  51C3               	movf	(_holding_registers+2)& (0+255),w,b
  5948   01000C  180A               	xorwf	??_modbus_analyse_and_answer^0,w,c
  5949   01000E  E107               	bnz	i2u137_41
  5950   010010  51C4               	movf	(_holding_registers+3)& (0+255),w,b
  5951   010012  180B               	xorwf	(??_modbus_analyse_and_answer+1)^0,w,c
  5952   010014  A4D8               	btfss	status,2,c
  5953   010016  EF0F  F080         	goto	i2u137_41
  5954   01001A  EF11  F080         	goto	i2u137_40
  5955   01001E                     i2u137_41:
  5956   01001E  EF17  F081         	goto	i2l512
  5957   010022                     i2u137_40:
  5958   010022                     
  5959                           ; BSR set to: 0
  5960                           ;modbus.c: 43:     {;modbus.c: 46:         uint16_t crc = rx_buf[index-1];
  5961   010022  0EFF               	movlw	low (_rx_buf+65535)
  5962   010024  243B               	addwf	_index^0,w,c
  5963   010026  6ED9               	movwf	fsr2l,c
  5964   010028  6ADA               	clrf	fsr2h,c
  5965   01002A  0E00               	movlw	high (_rx_buf+65535)
  5966   01002C  22DA               	addwfc	fsr2h,f,c
  5967   01002E  50DF               	movf	indf2,w,c
  5968   010030  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5969   010032  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5970   010034  6E17               	movwf	modbus_analyse_and_answer@crc^0,c
  5971   010036  6A18               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  5972   010038                     
  5973                           ; BSR set to: 0
  5974                           ;modbus.c: 48:         crc = crc << 8;
  5975   010038  5017               	movf	modbus_analyse_and_answer@crc^0,w,c
  5976   01003A  6E18               	movwf	(modbus_analyse_and_answer@crc+1)^0,c
  5977   01003C  6A17               	clrf	modbus_analyse_and_answer@crc^0,c
  5978   01003E                     
  5979                           ; BSR set to: 0
  5980                           ;modbus.c: 49:         crc += rx_buf[index-2];
  5981   01003E  0EFE               	movlw	low (_rx_buf+65534)
  5982   010040  243B               	addwf	_index^0,w,c
  5983   010042  6ED9               	movwf	fsr2l,c
  5984   010044  6ADA               	clrf	fsr2h,c
  5985   010046  0E00               	movlw	high (_rx_buf+65534)
  5986   010048  22DA               	addwfc	fsr2h,f,c
  5987   01004A  50DF               	movf	indf2,w,c
  5988   01004C  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5989   01004E  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5990   010050  2617               	addwf	modbus_analyse_and_answer@crc^0,f,c
  5991   010052  0E00               	movlw	0
  5992   010054  2218               	addwfc	(modbus_analyse_and_answer@crc+1)^0,f,c
  5993   010056                     
  5994                           ; BSR set to: 0
  5995                           ;modbus.c: 50:         uint16_t crcAtt = CRC16(rx_buf,index-2);
  5996   010056  0E00               	movlw	low _rx_buf
  5997   010058  6E01               	movwf	CRC16@msg^0,c
  5998   01005A  0E01               	movlw	high _rx_buf
  5999   01005C  6E02               	movwf	(CRC16@msg+1)^0,c
  6000   01005E  0EFE               	movlw	254
  6001   010060  243B               	addwf	_index^0,w,c
  6002   010062  6E03               	movwf	CRC16@length^0,c
  6003   010064  6A04               	clrf	(CRC16@length+1)^0,c
  6004   010066  0EFF               	movlw	255
  6005   010068  2204               	addwfc	(CRC16@length+1)^0,f,c
  6006   01006A  EC66  F087         	call	_CRC16	;wreg free
  6007   01006E  C001  F00C         	movff	?_CRC16,modbus_analyse_and_answer@crcAtt
  6008   010072  C002  F00D         	movff	?_CRC16+1,modbus_analyse_and_answer@crcAtt+1
  6009   010076                     
  6010                           ;modbus.c: 51:         if(crc == crcAtt){
  6011   010076  500C               	movf	modbus_analyse_and_answer@crcAtt^0,w,c
  6012   010078  1817               	xorwf	modbus_analyse_and_answer@crc^0,w,c
  6013   01007A  E107               	bnz	i2u138_41
  6014   01007C  500D               	movf	(modbus_analyse_and_answer@crcAtt+1)^0,w,c
  6015   01007E  1818               	xorwf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6016   010080  A4D8               	btfss	status,2,c
  6017   010082  EF45  F080         	goto	i2u138_41
  6018   010086  EF47  F080         	goto	i2u138_40
  6019   01008A                     i2u138_41:
  6020   01008A  EF17  F081         	goto	i2l512
  6021   01008E                     i2u138_40:
  6022   01008E                     
  6023                           ;modbus.c: 58:             uint8_t functionCode = rx_buf[1];
  6024   01008E  C101  F00E         	movff	_rx_buf+1,modbus_analyse_and_answer@functionCode
  6025   010092                     
  6026                           ;modbus.c: 60:             uint16_t nbofRegister = 0;
  6027   010092  0E00               	movlw	0
  6028   010094  6E1A               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6029   010096  0E00               	movlw	0
  6030   010098  6E19               	movwf	modbus_analyse_and_answer@nbofRegister^0,c
  6031                           
  6032                           ;modbus.c: 61:             uint16_t pwmValue = 0;
  6033   01009A  0E00               	movlw	0
  6034   01009C  6E10               	movwf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6035   01009E  0E00               	movlw	0
  6036   0100A0  6E0F               	movwf	modbus_analyse_and_answer@pwmValue^0,c
  6037                           
  6038                           ;modbus.c: 62:             tx_buf[0] = 0x80;
  6039   0100A2  0E80               	movlw	128
  6040   0100A4  0102               	movlb	2	; () banked
  6041   0100A6  6F00               	movwf	_tx_buf& (0+255),b
  6042                           
  6043                           ;modbus.c: 63:             switch (functionCode){
  6044   0100A8  EF02  F081         	goto	i2l2743
  6045   0100AC                     i2l508:
  6046                           
  6047                           ; BSR set to: 2
  6048                           ;modbus.c: 67:                     startingAddress = rx_buf[2];
  6049   0100AC  C102  F015         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6050   0100B0  6A16               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6051   0100B2                     
  6052                           ; BSR set to: 2
  6053                           ;modbus.c: 68:                     startingAddress = startingAddress << 8;
  6054   0100B2  5015               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6055   0100B4  6E16               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6056   0100B6  6A15               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6057   0100B8                     
  6058                           ; BSR set to: 2
  6059                           ;modbus.c: 69:                     startingAddress += rx_buf[3];
  6060   0100B8  0101               	movlb	1	; () banked
  6061   0100BA  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6062   0100BC  2615               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6063   0100BE  0E00               	movlw	0
  6064   0100C0  2216               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6065   0100C2                     
  6066                           ; BSR set to: 1
  6067                           ;modbus.c: 70:                     nbofRegister = rx_buf[4];
  6068   0100C2  C104  F019         	movff	_rx_buf+4,modbus_analyse_and_answer@nbofRegister
  6069   0100C6  6A1A               	clrf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6070   0100C8                     
  6071                           ; BSR set to: 1
  6072                           ;modbus.c: 71:                     nbofRegister <<= 8;
  6073   0100C8  5019               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6074   0100CA  6E1A               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6075   0100CC  6A19               	clrf	modbus_analyse_and_answer@nbofRegister^0,c
  6076                           
  6077                           ;modbus.c: 72:                     nbofRegister += rx_buf[5];
  6078   0100CE  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6079   0100D0  2619               	addwf	modbus_analyse_and_answer@nbofRegister^0,f,c
  6080   0100D2  0E00               	movlw	0
  6081   0100D4  221A               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,f,c
  6082   0100D6                     
  6083                           ; BSR set to: 1
  6084                           ;modbus.c: 74:                     tx_buf[1] = 0x04;
  6085   0100D6  0E04               	movlw	4
  6086   0100D8  0102               	movlb	2	; () banked
  6087   0100DA  6F01               	movwf	(_tx_buf+1)& (0+255),b
  6088   0100DC                     
  6089                           ; BSR set to: 2
  6090                           ;modbus.c: 75:                     tx_buf[2] = 2*nbofRegister;
  6091   0100DC  5019               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6092   0100DE  2419               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6093   0100E0  6F02               	movwf	(_tx_buf+2)& (0+255),b
  6094                           
  6095                           ;modbus.c: 77:                     for(int i = 0;i < nbofRegister;i++)
  6096   0100E2  0E00               	movlw	0
  6097   0100E4  6E12               	movwf	(modbus_analyse_and_answer@i+1)^0,c
  6098   0100E6  0E00               	movlw	0
  6099   0100E8  6E11               	movwf	modbus_analyse_and_answer@i^0,c
  6100   0100EA  EF90  F080         	goto	i2l2697
  6101   0100EE                     i2l2693:
  6102                           
  6103                           ;modbus.c: 78:                     {;modbus.c: 79:                         tx_buf[3+i] =
      +                           input_registers[startingAddress - 1 + i];
  6104   0100EE  5015               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6105   0100F0  2411               	addwf	modbus_analyse_and_answer@i^0,w,c
  6106   0100F2  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6107   0100F4  5016               	movf	(modbus_analyse_and_answer@startingAddress+1)^0,w,c
  6108   0100F6  2012               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6109   0100F8  6E0B               	movwf	(??_modbus_analyse_and_answer+1)^0,c
  6110   0100FA  90D8               	bcf	status,0,c
  6111   0100FC  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6112   0100FE  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6113   010100  0EBB               	movlw	low (_input_registers+65534)
  6114   010102  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6115   010104  6ED9               	movwf	fsr2l,c
  6116   010106  0E00               	movlw	high (_input_registers+65534)
  6117   010108  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6118   01010A  6EDA               	movwf	fsr2h,c
  6119   01010C  0E03               	movlw	low (_tx_buf+3)
  6120   01010E  2411               	addwf	modbus_analyse_and_answer@i^0,w,c
  6121   010110  6EE1               	movwf	fsr1l,c
  6122   010112  0E02               	movlw	high (_tx_buf+3)
  6123   010114  2012               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6124   010116  6EE2               	movwf	fsr1h,c
  6125   010118  CFDF FFE7          	movff	indf2,indf1
  6126   01011C                     
  6127                           ;modbus.c: 80:                     }
  6128   01011C  4A11               	infsnz	modbus_analyse_and_answer@i^0,f,c
  6129   01011E  2A12               	incf	(modbus_analyse_and_answer@i+1)^0,f,c
  6130   010120                     i2l2697:
  6131   010120  5019               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6132   010122  5C11               	subwf	modbus_analyse_and_answer@i^0,w,c
  6133   010124  501A               	movf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6134   010126  5812               	subwfb	(modbus_analyse_and_answer@i+1)^0,w,c
  6135   010128  A0D8               	btfss	status,0,c
  6136   01012A  EF99  F080         	goto	i2u139_41
  6137   01012E  EF9B  F080         	goto	i2u139_40
  6138   010132                     i2u139_41:
  6139   010132  EF77  F080         	goto	i2l2693
  6140   010136                     i2u139_40:
  6141   010136                     
  6142                           ;modbus.c: 82:                     crc = CRC16(tx_buf,nbofRegister+3);
  6143   010136  0E00               	movlw	low _tx_buf
  6144   010138  6E01               	movwf	CRC16@msg^0,c
  6145   01013A  0E02               	movlw	high _tx_buf
  6146   01013C  6E02               	movwf	(CRC16@msg+1)^0,c
  6147   01013E  0E03               	movlw	3
  6148   010140  2419               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6149   010142  6E03               	movwf	CRC16@length^0,c
  6150   010144  0E00               	movlw	0
  6151   010146  201A               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6152   010148  6E04               	movwf	(CRC16@length+1)^0,c
  6153   01014A  EC66  F087         	call	_CRC16	;wreg free
  6154   01014E  C001  F017         	movff	?_CRC16,modbus_analyse_and_answer@crc
  6155   010152  C002  F018         	movff	?_CRC16+1,modbus_analyse_and_answer@crc+1
  6156   010156                     
  6157                           ;modbus.c: 83:                     tx_buf[nbofRegister+3] = crc;
  6158   010156  0E03               	movlw	low (_tx_buf+3)
  6159   010158  2419               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6160   01015A  6ED9               	movwf	fsr2l,c
  6161   01015C  0E02               	movlw	high (_tx_buf+3)
  6162   01015E  201A               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6163   010160  6EDA               	movwf	fsr2h,c
  6164   010162  C017  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6165   010166                     
  6166                           ;modbus.c: 84:                     crc >>= 8;
  6167   010166  5018               	movf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6168   010168  6E17               	movwf	modbus_analyse_and_answer@crc^0,c
  6169   01016A  6A18               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  6170   01016C                     
  6171                           ;modbus.c: 85:                     tx_buf[nbofRegister+4] = crc;
  6172   01016C  0E04               	movlw	low (_tx_buf+4)
  6173   01016E  2419               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6174   010170  6ED9               	movwf	fsr2l,c
  6175   010172  0E02               	movlw	high (_tx_buf+4)
  6176   010174  201A               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6177   010176  6EDA               	movwf	fsr2h,c
  6178   010178  C017  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6179   01017C                     
  6180                           ;modbus.c: 86:                     return nbofRegister+5;
  6181   01017C  5019               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6182   01017E  0F05               	addlw	5
  6183   010180  EF17  F081         	goto	i2l512
  6184   010184                     i2l2709:
  6185                           
  6186                           ; BSR set to: 2
  6187   010184  EF17  F081         	goto	i2l512
  6188   010188                     i2l514:
  6189                           
  6190                           ; BSR set to: 2
  6191                           ;modbus.c: 90:                     startingAddress = rx_buf[2];
  6192   010188  C102  F015         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6193   01018C  6A16               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6194   01018E                     
  6195                           ; BSR set to: 2
  6196                           ;modbus.c: 91:                     startingAddress = startingAddress << 8;
  6197   01018E  5015               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6198   010190  6E16               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6199   010192  6A15               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6200   010194                     
  6201                           ; BSR set to: 2
  6202                           ;modbus.c: 92:                     startingAddress += rx_buf[3];
  6203   010194  0101               	movlb	1	; () banked
  6204   010196  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6205   010198  2615               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6206   01019A  0E00               	movlw	0
  6207   01019C  2216               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6208   01019E                     
  6209                           ; BSR set to: 1
  6210                           ;modbus.c: 93:                     pwmValue = rx_buf[4];
  6211   01019E  C104  F00F         	movff	_rx_buf+4,modbus_analyse_and_answer@pwmValue
  6212   0101A2  6A10               	clrf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6213   0101A4                     
  6214                           ; BSR set to: 1
  6215                           ;modbus.c: 94:                     pwmValue <<= 8;
  6216   0101A4  500F               	movf	modbus_analyse_and_answer@pwmValue^0,w,c
  6217   0101A6  6E10               	movwf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6218   0101A8  6A0F               	clrf	modbus_analyse_and_answer@pwmValue^0,c
  6219                           
  6220                           ;modbus.c: 95:                     pwmValue += rx_buf[5];
  6221   0101AA  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6222   0101AC  260F               	addwf	modbus_analyse_and_answer@pwmValue^0,f,c
  6223   0101AE  0E00               	movlw	0
  6224   0101B0  2210               	addwfc	(modbus_analyse_and_answer@pwmValue+1)^0,f,c
  6225   0101B2                     
  6226                           ; BSR set to: 1
  6227                           ;modbus.c: 96:                     holding_registers[0] = pwmValue;
  6228   0101B2  C00F  F0C1         	movff	modbus_analyse_and_answer@pwmValue,_holding_registers
  6229   0101B6  C010  F0C2         	movff	modbus_analyse_and_answer@pwmValue+1,_holding_registers+1
  6230   0101BA                     
  6231                           ; BSR set to: 1
  6232                           ;modbus.c: 98:                     for (int i = 0; i < 7; i++){
  6233   0101BA  0E00               	movlw	0
  6234   0101BC  6E14               	movwf	(modbus_analyse_and_answer@i_1189+1)^0,c
  6235   0101BE  0E00               	movlw	0
  6236   0101C0  6E13               	movwf	modbus_analyse_and_answer@i_1189^0,c
  6237   0101C2                     i2l2729:
  6238                           
  6239                           ;modbus.c: 99:                         tx_buf[i+1] = rx_buf[i+1];
  6240   0101C2  0E01               	movlw	low (_rx_buf+1)
  6241   0101C4  2413               	addwf	modbus_analyse_and_answer@i_1189^0,w,c
  6242   0101C6  6ED9               	movwf	fsr2l,c
  6243   0101C8  0E01               	movlw	high (_rx_buf+1)
  6244   0101CA  2014               	addwfc	(modbus_analyse_and_answer@i_1189+1)^0,w,c
  6245   0101CC  6EDA               	movwf	fsr2h,c
  6246   0101CE  0E01               	movlw	low (_tx_buf+1)
  6247   0101D0  2413               	addwf	modbus_analyse_and_answer@i_1189^0,w,c
  6248   0101D2  6EE1               	movwf	fsr1l,c
  6249   0101D4  0E02               	movlw	high (_tx_buf+1)
  6250   0101D6  2014               	addwfc	(modbus_analyse_and_answer@i_1189+1)^0,w,c
  6251   0101D8  6EE2               	movwf	fsr1h,c
  6252   0101DA  CFDF FFE7          	movff	indf2,indf1
  6253   0101DE                     
  6254                           ;modbus.c: 100:                     }
  6255   0101DE  4A13               	infsnz	modbus_analyse_and_answer@i_1189^0,f,c
  6256   0101E0  2A14               	incf	(modbus_analyse_and_answer@i_1189+1)^0,f,c
  6257   0101E2  BE14               	btfsc	(modbus_analyse_and_answer@i_1189+1)^0,7,c
  6258   0101E4  EFFD  F080         	goto	i2u140_41
  6259   0101E8  5014               	movf	(modbus_analyse_and_answer@i_1189+1)^0,w,c
  6260   0101EA  E109               	bnz	i2u140_40
  6261   0101EC  0E07               	movlw	7
  6262   0101EE  5C13               	subwf	modbus_analyse_and_answer@i_1189^0,w,c
  6263   0101F0  A0D8               	btfss	status,0,c
  6264   0101F2  EFFD  F080         	goto	i2u140_41
  6265   0101F6  EFFF  F080         	goto	i2u140_40
  6266   0101FA                     i2u140_41:
  6267   0101FA  EFE1  F080         	goto	i2l2729
  6268   0101FE                     i2u140_40:
  6269   0101FE                     
  6270                           ;modbus.c: 101:                     return 8;
  6271   0101FE  0E08               	movlw	8
  6272   010200  EF17  F081         	goto	i2l512
  6273   010204                     i2l2743:
  6274                           
  6275                           ; BSR set to: 2
  6276   010204  500E               	movf	modbus_analyse_and_answer@functionCode^0,w,c
  6277   010206  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6278   010208  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  6279                           
  6280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6281                           ; Switch size 1, requested type "simple"
  6282                           ; Number of cases is 1, Range of values is 0 to 0
  6283                           ; switch strategies available:
  6284                           ; Name         Instructions Cycles
  6285                           ; simple_byte            4     3 (average)
  6286                           ;	Chosen strategy is simple_byte
  6287   01020A  500B               	movf	(??_modbus_analyse_and_answer+1)^0,w,c
  6288   01020C  0A00               	xorlw	0	; case 0
  6289   01020E  B4D8               	btfsc	status,2,c
  6290   010210  EF0C  F081         	goto	i2l3699
  6291   010214  EFC2  F080         	goto	i2l2709
  6292   010218                     i2l3699:
  6293                           
  6294                           ; BSR set to: 2
  6295                           ; Switch size 1, requested type "simple"
  6296                           ; Number of cases is 2, Range of values is 4 to 6
  6297                           ; switch strategies available:
  6298                           ; Name         Instructions Cycles
  6299                           ; simple_byte            7     4 (average)
  6300                           ;	Chosen strategy is simple_byte
  6301   010218  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  6302   01021A  0A04               	xorlw	4	; case 4
  6303   01021C  B4D8               	btfsc	status,2,c
  6304   01021E  EF56  F080         	goto	i2l508
  6305   010222  0A02               	xorlw	2	; case 6
  6306   010224  B4D8               	btfsc	status,2,c
  6307   010226  EFC4  F080         	goto	i2l514
  6308   01022A  EFC2  F080         	goto	i2l2709
  6309   01022E                     i2l512:
  6310   01022E  0012               	return		;funcret
  6311   010230                     __end_of_modbus_analyse_and_answer:
  6312                           	callstack 0
  6313                           
  6314 ;; *************** function _CRC16 *****************
  6315 ;; Defined at:
  6316 ;;		line 48 in file "crc.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  msg             2    0[COMRAM] PTR const unsigned char 
  6319 ;;		 -> tx_buf(256), rx_buf(256), 
  6320 ;;  length          2    2[COMRAM] unsigned short 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  uchCRCLo        1    8[COMRAM] unsigned char 
  6323 ;;  uchCRCHi        1    7[COMRAM] unsigned char 
  6324 ;;  uIndex          1    6[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  2    0[COMRAM] unsigned short 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;Total ram usage:        9 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_modbus_analyse_and_answer
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text44
  6348   010ECC                     __ptext44:
  6349                           	callstack 0
  6350   010ECC                     _CRC16:
  6351                           	callstack 19
  6352   010ECC                     
  6353                           ;crc.c: 48: uint16_t CRC16(const uint8_t *msg, uint16_t length);crc.c: 49: {;crc.c: 50: 
      +                           uint8_t uchCRCHi = 0xFF;
  6354   010ECC  6808               	setf	CRC16@uchCRCHi^0,c
  6355                           
  6356                           ;crc.c: 51:  uint8_t uchCRCLo = 0xFF;
  6357   010ECE  6809               	setf	CRC16@uchCRCLo^0,c
  6358                           
  6359                           ;crc.c: 52:  uint8_t uIndex;;crc.c: 54:  while (length--) {
  6360   010ED0  EF8C  F087         	goto	i2l2479
  6361   010ED4                     i2l2471:
  6362                           
  6363                           ;crc.c: 55:   uIndex = uchCRCLo ^ *msg++;
  6364   010ED4  C001  FFD9         	movff	CRC16@msg,fsr2l
  6365   010ED8  C002  FFDA         	movff	CRC16@msg+1,fsr2h
  6366   010EDC  50DF               	movf	indf2,w,c
  6367   010EDE  1809               	xorwf	CRC16@uchCRCLo^0,w,c
  6368   010EE0  6E07               	movwf	CRC16@uIndex^0,c
  6369   010EE2  4A01               	infsnz	CRC16@msg^0,f,c
  6370   010EE4  2A02               	incf	(CRC16@msg+1)^0,f,c
  6371   010EE6                     
  6372                           ;crc.c: 56:   uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex];
  6373   010EE6  0EE5               	movlw	low _auchCRCHi
  6374   010EE8  2407               	addwf	CRC16@uIndex^0,w,c
  6375   010EEA  6EF6               	movwf	tblptrl,c
  6376   010EEC  6AF7               	clrf	tblptrh,c
  6377   010EEE  0EFE               	movlw	high _auchCRCHi
  6378   010EF0  22F7               	addwfc	tblptrh,f,c
  6379   010EF2                     	if	1	;There are 3 active tblptr bytes
  6380   010EF2  6AF8               	clrf	tblptru,c
  6381   010EF4  0E00               	movlw	low (__mediumconst shr (0+16))
  6382   010EF6  22F8               	addwfc	tblptru,f,c
  6383   010EF8                     	endif
  6384   010EF8  0008               	tblrd		*
  6385   010EFA  50F5               	movf	tablat,w,c
  6386   010EFC  1808               	xorwf	CRC16@uchCRCHi^0,w,c
  6387   010EFE  6E09               	movwf	CRC16@uchCRCLo^0,c
  6388   010F00                     
  6389                           ;crc.c: 57:   uchCRCHi = auchCRCLo[uIndex];
  6390   010F00  0EE5               	movlw	low _auchCRCLo
  6391   010F02  2407               	addwf	CRC16@uIndex^0,w,c
  6392   010F04  6EF6               	movwf	tblptrl,c
  6393   010F06  6AF7               	clrf	tblptrh,c
  6394   010F08  0EFD               	movlw	high _auchCRCLo
  6395   010F0A  22F7               	addwfc	tblptrh,f,c
  6396   010F0C                     	if	1	;There are 3 active tblptr bytes
  6397   010F0C  6AF8               	clrf	tblptru,c
  6398   010F0E  0E00               	movlw	low (__mediumconst shr (0+16))
  6399   010F10  22F8               	addwfc	tblptru,f,c
  6400   010F12                     	endif
  6401   010F12  0008               	tblrd		*
  6402   010F14  CFF5 F008          	movff	tablat,CRC16@uchCRCHi
  6403   010F18                     i2l2479:
  6404                           
  6405                           ;crc.c: 54:  while (length--) {
  6406   010F18  0603               	decf	CRC16@length^0,f,c
  6407   010F1A  A0D8               	btfss	status,0,c
  6408   010F1C  0604               	decf	(CRC16@length+1)^0,f,c
  6409   010F1E  2803               	incf	CRC16@length^0,w,c
  6410   010F20  E106               	bnz	i2u130_41
  6411   010F22  2804               	incf	(CRC16@length+1)^0,w,c
  6412   010F24  A4D8               	btfss	status,2,c
  6413   010F26  EF97  F087         	goto	i2u130_41
  6414   010F2A  EF99  F087         	goto	i2u130_40
  6415   010F2E                     i2u130_41:
  6416   010F2E  EF6A  F087         	goto	i2l2471
  6417   010F32                     i2u130_40:
  6418   010F32                     
  6419                           ;crc.c: 59:  return (uchCRCHi << 8 | uchCRCLo);
  6420   010F32  5009               	movf	CRC16@uchCRCLo^0,w,c
  6421   010F34  C008  F005         	movff	CRC16@uchCRCHi,??_CRC16
  6422   010F38  6A06               	clrf	(??_CRC16+1)^0,c
  6423   010F3A  C005  F006         	movff	??_CRC16,??_CRC16+1
  6424   010F3E  6A05               	clrf	??_CRC16^0,c
  6425   010F40  1005               	iorwf	??_CRC16^0,w,c
  6426   010F42  6E01               	movwf	?_CRC16^0,c
  6427   010F44  5006               	movf	(??_CRC16+1)^0,w,c
  6428   010F46  6E02               	movwf	(?_CRC16+1)^0,c
  6429   010F48  0012               	return		;funcret
  6430   010F4A                     __end_of_CRC16:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _modbus_char_recvd *****************
  6434 ;; Defined at:
  6435 ;;		line 120 in file "modbus.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  c               1    wreg     unsigned char 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  c               1    0[COMRAM] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        1 bytes
  6454 ;; Hardware stack levels used: 1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_INTERRUPT_InterruptManager
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text45
  6463   0114E4                     __ptext45:
  6464                           	callstack 0
  6465   0114E4                     _modbus_char_recvd:
  6466                           	callstack 21
  6467                           
  6468                           ;incstack = 0
  6469                           ;modbus_char_recvd@c stored from wreg
  6470   0114E4  6E01               	movwf	modbus_char_recvd@c^0,c
  6471   0114E6                     
  6472                           ;modbus.c: 120: void modbus_char_recvd(uint8_t c);modbus.c: 121: {;modbus.c: 123:     TM
      +                          R0ON = 1;
  6473   0114E6  8ED5               	bsf	4053,7,c	;volatile
  6474   0114E8                     
  6475                           ;modbus.c: 124:     rx_buf[index] = c;
  6476   0114E8  0E00               	movlw	low _rx_buf
  6477   0114EA  243B               	addwf	_index^0,w,c
  6478   0114EC  6ED9               	movwf	fsr2l,c
  6479   0114EE  6ADA               	clrf	fsr2h,c
  6480   0114F0  0E01               	movlw	high _rx_buf
  6481   0114F2  22DA               	addwfc	fsr2h,f,c
  6482   0114F4  C001  FFDF         	movff	modbus_char_recvd@c,indf2
  6483   0114F8                     
  6484                           ;modbus.c: 125:     index ++;
  6485   0114F8  2A3B               	incf	_index^0,f,c
  6486   0114FA  0012               	return		;funcret
  6487   0114FC                     __end_of_modbus_char_recvd:
  6488                           	callstack 0
  6489                           
  6490 ;; *************** function _TMR0_Reload *****************
  6491 ;; Defined at:
  6492 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;Total ram usage:        0 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_INTERRUPT_InterruptManager
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text46
  6520   0115A2                     __ptext46:
  6521                           	callstack 0
  6522   0115A2                     _TMR0_Reload:
  6523                           	callstack 21
  6524   0115A2                     
  6525                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  6526   0115A2  5039               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6527   0115A4  6ED7               	movwf	215,c	;volatile
  6528   0115A6                     
  6529                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  6530   0115A6  C038  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6531   0115AA  0012               	return		;funcret
  6532   0115AC                     __end_of_TMR0_Reload:
  6533                           	callstack 0
  6534                           
  6535 ;; *************** function _TMR0_ISR *****************
  6536 ;; Defined at:
  6537 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used: 1
  6557 ;; Hardware stack levels required when called: 1
  6558 ;; This function calls:
  6559 ;;		NULL
  6560 ;;		_TMR0_DefaultInterruptHandler
  6561 ;; This function is called by:
  6562 ;;		_INTERRUPT_InterruptManager
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text47
  6567   011404                     __ptext47:
  6568                           	callstack 0
  6569   011404                     _TMR0_ISR:
  6570                           	callstack 20
  6571   011404                     
  6572                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6573   011404  94F2               	bcf	242,2,c	;volatile
  6574   011406                     
  6575                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6576   011406  5039               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6577   011408  6ED7               	movwf	215,c	;volatile
  6578   01140A                     
  6579                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6580   01140A  C038  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6581   01140E                     
  6582                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  6583   01140E  5044               	movf	_TMR0_InterruptHandler^0,w,c
  6584   011410  1045               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  6585   011412  1046               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  6586   011414  B4D8               	btfsc	status,2,c
  6587   011416  EF0F  F08A         	goto	i2u157_41
  6588   01141A  EF11  F08A         	goto	i2u157_40
  6589   01141E                     i2u157_41:
  6590   01141E  EF1E  F08A         	goto	i2l368
  6591   011422                     i2u157_40:
  6592   011422                     
  6593                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  6594   011422  D802               	call	i2u158_48
  6595   011424  EF1E  F08A         	goto	i2u158_49
  6596   011428                     i2u158_48:
  6597   011428  0005               	push	
  6598   01142A  6EFA               	movwf	pclath,c
  6599   01142C  5044               	movf	_TMR0_InterruptHandler^0,w,c
  6600   01142E  6EFD               	movwf	tosl,c
  6601   011430  5045               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  6602   011432  6EFE               	movwf	tosh,c
  6603   011434  5046               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  6604   011436  6EFF               	movwf	tosu,c
  6605   011438  50FA               	movf	pclath,w,c
  6606   01143A  0012               	return		;indir
  6607   01143C                     i2u158_49:
  6608   01143C                     i2l368:
  6609   01143C  0012               	return		;funcret
  6610   01143E                     __end_of_TMR0_ISR:
  6611                           	callstack 0
  6612                           
  6613 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6614 ;; Defined at:
  6615 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		None
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;Total ram usage:        0 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_TMR0_Initialize
  6639 ;;		_TMR0_ISR
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text48
  6644   0115BE                     __ptext48:
  6645                           	callstack 0
  6646   0115BE                     _TMR0_DefaultInterruptHandler:
  6647                           	callstack 20
  6648   0115BE  0012               	return		;funcret
  6649   0115C0                     __end_of_TMR0_DefaultInterruptHandler:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function _EUSART1_Transmit_ISR *****************
  6653 ;; Defined at:
  6654 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_EUSART1_Initialize
  6678 ;;		_INTERRUPT_InterruptManager
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text49
  6683   01134E                     __ptext49:
  6684                           	callstack 0
  6685   01134E                     _EUSART1_Transmit_ISR:
  6686                           	callstack 21
  6687   01134E                     
  6688                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6689   01134E  0E08               	movlw	8
  6690   011350  6041               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  6691   011352  EFAD  F089         	goto	i2u149_41
  6692   011356  EFAF  F089         	goto	i2u149_40
  6693   01135A                     i2u149_41:
  6694   01135A  EFC5  F089         	goto	i2l290
  6695   01135E                     i2u149_40:
  6696   01135E                     
  6697                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6698   01135E  0E2D               	movlw	low _eusart1TxBuffer
  6699   011360  2442               	addwf	_eusart1TxTail^0,w,c	;volatile
  6700   011362  6ED9               	movwf	fsr2l,c
  6701   011364  6ADA               	clrf	fsr2h,c
  6702   011366  0E00               	movlw	high _eusart1TxBuffer
  6703   011368  22DA               	addwfc	fsr2h,f,c
  6704   01136A  50DF               	movf	indf2,w,c
  6705   01136C  6EAD               	movwf	173,c	;volatile
  6706   01136E  2A42               	incf	_eusart1TxTail^0,f,c	;volatile
  6707   011370                     
  6708                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6709   011370  0E07               	movlw	7
  6710   011372  6442               	cpfsgt	_eusart1TxTail^0,c	;volatile
  6711   011374  EFBE  F089         	goto	i2u150_41
  6712   011378  EFC0  F089         	goto	i2u150_40
  6713   01137C                     i2u150_41:
  6714   01137C  EFC2  F089         	goto	i2l2855
  6715   011380                     i2u150_40:
  6716   011380                     
  6717                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6718   011380  0E00               	movlw	0
  6719   011382  6E42               	movwf	_eusart1TxTail^0,c	;volatile
  6720   011384                     i2l2855:
  6721                           
  6722                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6723   011384  2A41               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  6724                           
  6725                           ;mcc_generated_files/eusart1.c: 209:     }
  6726   011386  EFC6  F089         	goto	i2l293
  6727   01138A                     i2l290:
  6728                           
  6729                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE1bits.TX1IE = 0;
  6730   01138A  989D               	bcf	157,4,c	;volatile
  6731   01138C                     i2l293:
  6732   01138C  0012               	return		;funcret
  6733   01138E                     __end_of_EUSART1_Transmit_ISR:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function _EUSART1_Receive_ISR *****************
  6737 ;; Defined at:
  6738 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;Total ram usage:        0 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; Hardware stack levels required when called: 2
  6759 ;; This function calls:
  6760 ;;		NULL
  6761 ;;		_EUSART1_DefaultErrorHandler
  6762 ;;		_EUSART1_DefaultFramingErrorHandler
  6763 ;;		_EUSART1_DefaultOverrunErrorHandler
  6764 ;;		_EUSART1_RxDataHandler
  6765 ;; This function is called by:
  6766 ;;		_EUSART1_Initialize
  6767 ;;		_INTERRUPT_InterruptManager
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text50
  6772   010AB8                     __ptext50:
  6773                           	callstack 0
  6774   010AB8                     _EUSART1_Receive_ISR:
  6775                           	callstack 19
  6776   010AB8                     
  6777                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6778   010AB8  0E25               	movlw	low _eusart1RxStatusBuffer
  6779   010ABA  2440               	addwf	_eusart1RxHead^0,w,c	;volatile
  6780   010ABC  6ED9               	movwf	fsr2l,c
  6781   010ABE  6ADA               	clrf	fsr2h,c
  6782   010AC0  0E00               	movlw	high _eusart1RxStatusBuffer
  6783   010AC2  22DA               	addwfc	fsr2h,f,c
  6784   010AC4  6ADF               	clrf	indf2,c
  6785   010AC6                     
  6786                           ;mcc_generated_files/eusart1.c: 221:     if(RCSTA1bits.FERR){
  6787   010AC6  A4AB               	btfss	171,2,c	;volatile
  6788   010AC8  EF68  F085         	goto	i2u151_41
  6789   010ACC  EF6A  F085         	goto	i2u151_40
  6790   010AD0                     i2u151_41:
  6791   010AD0  EF7F  F085         	goto	i2l2865
  6792   010AD4                     i2u151_40:
  6793   010AD4                     
  6794                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6795   010AD4  0E25               	movlw	low _eusart1RxStatusBuffer
  6796   010AD6  2440               	addwf	_eusart1RxHead^0,w,c	;volatile
  6797   010AD8  6ED9               	movwf	fsr2l,c
  6798   010ADA  6ADA               	clrf	fsr2h,c
  6799   010ADC  0E00               	movlw	high _eusart1RxStatusBuffer
  6800   010ADE  22DA               	addwfc	fsr2h,f,c
  6801   010AE0  82DF               	bsf	indf2,1,c
  6802   010AE2                     
  6803                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6804   010AE2  D802               	call	i2u152_48
  6805   010AE4  EF7F  F085         	goto	i2u152_49
  6806   010AE8                     i2u152_48:
  6807   010AE8  0005               	push	
  6808   010AEA  6EFA               	movwf	pclath,c
  6809   010AEC  0100               	movlb	0	; () banked
  6810   010AEE  51F2               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6811   010AF0  6EFD               	movwf	tosl,c
  6812   010AF2  51F3               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6813   010AF4  6EFE               	movwf	tosh,c
  6814   010AF6  51F4               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  6815   010AF8  6EFF               	movwf	tosu,c
  6816   010AFA  50FA               	movf	pclath,w,c
  6817   010AFC  0012               	return		;indir
  6818   010AFE                     i2u152_49:
  6819   010AFE                     i2l2865:
  6820                           
  6821                           ;mcc_generated_files/eusart1.c: 226:     if(RCSTA1bits.OERR){
  6822   010AFE  A2AB               	btfss	171,1,c	;volatile
  6823   010B00  EF84  F085         	goto	i2u153_41
  6824   010B04  EF86  F085         	goto	i2u153_40
  6825   010B08                     i2u153_41:
  6826   010B08  EF9B  F085         	goto	i2l2871
  6827   010B0C                     i2u153_40:
  6828   010B0C                     
  6829                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6830   010B0C  0E25               	movlw	low _eusart1RxStatusBuffer
  6831   010B0E  2440               	addwf	_eusart1RxHead^0,w,c	;volatile
  6832   010B10  6ED9               	movwf	fsr2l,c
  6833   010B12  6ADA               	clrf	fsr2h,c
  6834   010B14  0E00               	movlw	high _eusart1RxStatusBuffer
  6835   010B16  22DA               	addwfc	fsr2h,f,c
  6836   010B18  84DF               	bsf	indf2,2,c
  6837   010B1A                     
  6838                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6839   010B1A  D802               	call	i2u154_48
  6840   010B1C  EF9B  F085         	goto	i2u154_49
  6841   010B20                     i2u154_48:
  6842   010B20  0005               	push	
  6843   010B22  6EFA               	movwf	pclath,c
  6844   010B24  0100               	movlb	0	; () banked
  6845   010B26  51EF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6846   010B28  6EFD               	movwf	tosl,c
  6847   010B2A  51F0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6848   010B2C  6EFE               	movwf	tosh,c
  6849   010B2E  51F1               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  6850   010B30  6EFF               	movwf	tosu,c
  6851   010B32  50FA               	movf	pclath,w,c
  6852   010B34  0012               	return		;indir
  6853   010B36                     i2u154_49:
  6854   010B36                     i2l2871:
  6855                           
  6856                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6857   010B36  0E25               	movlw	low _eusart1RxStatusBuffer
  6858   010B38  2440               	addwf	_eusart1RxHead^0,w,c	;volatile
  6859   010B3A  6ED9               	movwf	fsr2l,c
  6860   010B3C  6ADA               	clrf	fsr2h,c
  6861   010B3E  0E00               	movlw	high _eusart1RxStatusBuffer
  6862   010B40  22DA               	addwfc	fsr2h,f,c
  6863   010B42  50DF               	movf	indf2,w,c
  6864   010B44  B4D8               	btfsc	status,2,c
  6865   010B46  EFA7  F085         	goto	i2u155_41
  6866   010B4A  EFA9  F085         	goto	i2u155_40
  6867   010B4E                     i2u155_41:
  6868   010B4E  EFB9  F085         	goto	i2l2875
  6869   010B52                     i2u155_40:
  6870   010B52                     
  6871                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6872   010B52  D802               	call	i2u156_48
  6873   010B54  EFB7  F085         	goto	i2u156_49
  6874   010B58                     i2u156_48:
  6875   010B58  0005               	push	
  6876   010B5A  6EFA               	movwf	pclath,c
  6877   010B5C  0100               	movlb	0	; () banked
  6878   010B5E  51EC               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6879   010B60  6EFD               	movwf	tosl,c
  6880   010B62  51ED               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6881   010B64  6EFE               	movwf	tosh,c
  6882   010B66  51EE               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  6883   010B68  6EFF               	movwf	tosu,c
  6884   010B6A  50FA               	movf	pclath,w,c
  6885   010B6C  0012               	return		;indir
  6886   010B6E                     i2u156_49:
  6887                           
  6888                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6889   010B6E  EFBB  F085         	goto	i2l300
  6890   010B72                     i2l2875:
  6891                           
  6892                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6893   010B72  EC38  F08A         	call	_EUSART1_RxDataHandler	;wreg free
  6894   010B76                     i2l300:
  6895   010B76  0012               	return		;funcret
  6896   010B78                     __end_of_EUSART1_Receive_ISR:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6900 ;; Defined at:
  6901 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		None
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;Total ram usage:        0 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_EUSART1_Initialize
  6925 ;;		_EUSART1_Receive_ISR
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           	psect	text51
  6930   0115AC                     __ptext51:
  6931                           	callstack 0
  6932   0115AC                     _EUSART1_DefaultOverrunErrorHandler:
  6933                           	callstack 20
  6934   0115AC                     
  6935                           ;mcc_generated_files/eusart1.c: 255:     RCSTA1bits.CREN = 0;
  6936   0115AC  98AB               	bcf	171,4,c	;volatile
  6937                           
  6938                           ;mcc_generated_files/eusart1.c: 256:     RCSTA1bits.CREN = 1;
  6939   0115AE  88AB               	bsf	171,4,c	;volatile
  6940   0115B0  0012               	return		;funcret
  6941   0115B2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6942                           	callstack 0
  6943                           
  6944 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6945 ;; Defined at:
  6946 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		None
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used: 1
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_EUSART1_Initialize
  6970 ;;		_EUSART1_Receive_ISR
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text52
  6975   0115C0                     __ptext52:
  6976                           	callstack 0
  6977   0115C0                     _EUSART1_DefaultFramingErrorHandler:
  6978                           	callstack 20
  6979   0115C0  0012               	return		;funcret
  6980   0115C2                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6981                           	callstack 0
  6982                           
  6983 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6984 ;; Defined at:
  6985 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;		None
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; Hardware stack levels required when called: 1
  7006 ;; This function calls:
  7007 ;;		_EUSART1_RxDataHandler
  7008 ;; This function is called by:
  7009 ;;		_EUSART1_Initialize
  7010 ;;		_EUSART1_Receive_ISR
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text53
  7015   0115B2                     __ptext53:
  7016                           	callstack 0
  7017   0115B2                     _EUSART1_DefaultErrorHandler:
  7018                           	callstack 19
  7019   0115B2                     
  7020                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7021   0115B2  EC38  F08A         	call	_EUSART1_RxDataHandler	;wreg free
  7022   0115B6  0012               	return		;funcret
  7023   0115B8                     __end_of_EUSART1_DefaultErrorHandler:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _EUSART1_RxDataHandler *****************
  7027 ;; Defined at:
  7028 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;		None
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;Total ram usage:        0 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_EUSART1_Receive_ISR
  7052 ;;		_EUSART1_DefaultErrorHandler
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text54
  7057   011470                     __ptext54:
  7058                           	callstack 0
  7059   011470                     _EUSART1_RxDataHandler:
  7060                           	callstack 20
  7061   011470                     
  7062                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7063   011470  0EB5               	movlw	low _eusart1RxBuffer
  7064   011472  2440               	addwf	_eusart1RxHead^0,w,c	;volatile
  7065   011474  6ED9               	movwf	fsr2l,c
  7066   011476  6ADA               	clrf	fsr2h,c
  7067   011478  0E00               	movlw	high _eusart1RxBuffer
  7068   01147A  22DA               	addwfc	fsr2h,f,c
  7069   01147C  CFAE FFDF          	movff	4014,indf2	;volatile
  7070   011480  2A40               	incf	_eusart1RxHead^0,f,c	;volatile
  7071   011482                     
  7072                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7073   011482  0E07               	movlw	7
  7074   011484  6440               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7075   011486  EF47  F08A         	goto	i2u129_41
  7076   01148A  EF49  F08A         	goto	i2u129_40
  7077   01148E                     i2u129_41:
  7078   01148E  EF4B  F08A         	goto	i2l2465
  7079   011492                     i2u129_40:
  7080   011492                     
  7081                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7082   011492  0E00               	movlw	0
  7083   011494  6E40               	movwf	_eusart1RxHead^0,c	;volatile
  7084   011496                     i2l2465:
  7085                           
  7086                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7087   011496  2A3E               	incf	_eusart1RxCount^0,f,c	;volatile
  7088   011498  0012               	return		;funcret
  7089   01149A                     __end_of_EUSART1_RxDataHandler:
  7090                           	callstack 0
  7091                           
  7092                           	psect	text55
  7093   000000                     __ptext55:
  7094                           	callstack 0
  7095   000000                     
  7096                           	psect	rparam
  7097   000000                     
  7098                           	psect	temp
  7099   00004A                     btemp:
  7100                           	callstack 0
  7101   00004A                     	ds	1
  7102   000000                     int$flags	set	btemp
  7103   000000                     wtemp8	set	btemp+1
  7104   000000                     ttemp5	set	btemp+1
  7105   000000                     ttemp6	set	btemp+4
  7106   000000                     ttemp7	set	btemp+8
  7107                           
  7108                           	psect	config
  7109                           
  7110                           ;Config register CONFIG1L @ 0x1FFF8
  7111                           ;	Watchdog Timer Enable bit
  7112                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  7113                           ;	Stack Overflow/Underflow Reset Enable bit
  7114                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  7115                           ;	Extended Instruction Set Enable bit
  7116                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7117                           ;	Background Debugger Enable bit
  7118                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  7119   01FFF8                     	org	131064
  7120   01FFF8  A0                 	db	160
  7121                           
  7122                           ;Config register CONFIG1H @ 0x1FFF9
  7123                           ;	Code Protection bit
  7124                           ;	CP0 = OFF, Program memory is not code-protected
  7125   01FFF9                     	org	131065
  7126   01FFF9  F4                 	db	244
  7127                           
  7128                           ;Config register CONFIG2L @ 0x1FFFA
  7129                           ;	Oscillator Selection bits
  7130                           ;	FOSC = HS, HS oscillator
  7131                           ;	Default/Reset System Clock Select bit
  7132                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  7133                           ;	Fail-Safe Clock Monitor Enable
  7134                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7135                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  7136                           ;	IESO = ON, Two-Speed Start-up enabled
  7137   01FFFA                     	org	131066
  7138   01FFFA  C4                 	db	196
  7139                           
  7140                           ;Config register CONFIG2H @ 0x1FFFB
  7141                           ;	Watchdog Timer Postscaler Select bits
  7142                           ;	WDTPS = 32768, 1:32768
  7143   01FFFB                     	org	131067
  7144   01FFFB  FF                 	db	255
  7145                           
  7146                           ;Config register CONFIG3L @ 0x1FFFC
  7147                           ;	External Address Bus Shift Enable bit
  7148                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  7149                           ;	External Memory Bus
  7150                           ;	MODE = MM, Microcontroller mode, external bus disabled
  7151                           ;	Data Bus Width Select bit
  7152                           ;	BW = 16, 16-Bit Data Width mode
  7153                           ;	External Bus Wait Enable bit
  7154                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  7155   01FFFC                     	org	131068
  7156   01FFFC  F8                 	db	248
  7157                           
  7158                           ;Config register CONFIG3H @ 0x1FFFD
  7159                           ;	ECCP2 MUX bit
  7160                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  7161                           ;	ECCP MUX bit
  7162                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  7163                           ;	Ethernet LED Enable bit
  7164                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  7165   01FFFD                     	org	131069
  7166   01FFFD  F7                 	db	247
  7167                           tosu	equ	0xFFF
  7168                           tosh	equ	0xFFE
  7169                           tosl	equ	0xFFD
  7170                           stkptr	equ	0xFFC
  7171                           pclatu	equ	0xFFB
  7172                           pclath	equ	0xFFA
  7173                           pcl	equ	0xFF9
  7174                           tblptru	equ	0xFF8
  7175                           tblptrh	equ	0xFF7
  7176                           tblptrl	equ	0xFF6
  7177                           tablat	equ	0xFF5
  7178                           prodh	equ	0xFF4
  7179                           prodl	equ	0xFF3
  7180                           indf0	equ	0xFEF
  7181                           postinc0	equ	0xFEE
  7182                           postdec0	equ	0xFED
  7183                           preinc0	equ	0xFEC
  7184                           plusw0	equ	0xFEB
  7185                           fsr0h	equ	0xFEA
  7186                           fsr0l	equ	0xFE9
  7187                           wreg	equ	0xFE8
  7188                           indf1	equ	0xFE7
  7189                           postinc1	equ	0xFE6
  7190                           postdec1	equ	0xFE5
  7191                           preinc1	equ	0xFE4
  7192                           plusw1	equ	0xFE3
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           bsr	equ	0xFE0
  7196                           indf2	equ	0xFDF
  7197                           postinc2	equ	0xFDE
  7198                           postdec2	equ	0xFDD
  7199                           preinc2	equ	0xFDC
  7200                           plusw2	equ	0xFDB
  7201                           fsr2h	equ	0xFDA
  7202                           fsr2l	equ	0xFD9
  7203                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    512
    Data        0
    BSS         598
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      73
    BANK0           160     85     152
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256     20      20
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1696$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1637$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1637$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    CRC16@msg	PTR const unsigned char  size(2) Largest target is 256
		 -> tx_buf(BANK2[256]), rx_buf(BANK1[256]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    LCD_2x16_WriteMsg@msg	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _modbus_timer->_modbus_analyse_and_answer
    _modbus_send->_EUSART1_Write
    _modbus_analyse_and_answer->_CRC16

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _measure_voltage->___lldiv
    _measure_current->___lldiv
    ___lldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _Lcd_Init->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   14786
                                             84 BANK0      1     1      0
                                              0 BANK3     20    20      0
                _EPWM1_LoadDutyValue
                  _LCD_2x16_WriteMsg
                           _Lcd_Init
                  _SYSTEM_Initialize
                    _measure_current
                    _measure_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    8781
                                             64 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8109
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    7621
                                             40 BANK0     16    10      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     852
                                              6 BANK0      9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    5041
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _measure_voltage                                      9     7      2    1916
                                             25 BANK0      9     7      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _measure_current                                     12    10      2    2235
                                             25 BANK0     12    10      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     726
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                              3 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      96
                                              2 BANK0      2     2      0
                  _LCD_2x16_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_2x16_WriteMsg                                    3     0      3     648
                                              2 BANK0      3     0      3
                  _LCD_2x16_WriteCmd
                 _LCD_2x16_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteData                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteCmd                                    2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          10    10      0    1152
                                             26 COMRAM    10    10      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                        _TMR0_Reload
                  _modbus_char_recvd
                       _modbus_timer
 ---------------------------------------------------------------------------------
 (10) _modbus_timer                                        0     0      0    1130
          _modbus_analyse_and_answer
                        _modbus_send
 ---------------------------------------------------------------------------------
 (11) _modbus_send                                         9     9      0     112
                                              1 COMRAM     6     6      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _modbus_analyse_and_answer                          17    17      0    1018
                                              9 COMRAM    17    17      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (12) _CRC16                                               9     5      4     486
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _modbus_char_recvd                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _LCD_2x16_WriteMsg
     _LCD_2x16_WriteCmd
     _LCD_2x16_WriteData
   _Lcd_Init
     _LCD_2x16_WriteCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _measure_current
     _ADC_GetConversion
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _measure_voltage
     _ADC_GetConversion
     ___lldiv
     ___lmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR0_Reload *
   _modbus_char_recvd *
   _modbus_timer *
     _modbus_analyse_and_answer
       _CRC16
     _modbus_send
       _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      52        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      14      11        7.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      98       5       95.0%
BITBIGSFR           80      0       0      51        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      50        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      49       1       77.7%
BITBIGSFR_1hhhh     1A      0       0      38        0.0%
BITBIGSFR_1llll     19      0       0      49        0.0%
BITBIGSFR_1hhhh      D      0       0      37        0.0%
BITBIGSFR_1hhll      C      0       0      45        0.0%
BITBIGSFR_1lllh      9      0       0      47        0.0%
BITBIGSFR_1hhll      6      0       0      44        0.0%
BITBIGSFR_1hhll      6      0       0      43        0.0%
BITBIGSFR_1hhlh      5      0       0      42        0.0%
BITBIGSFR_1lllh      4      0       0      48        0.0%
BITBIGSFR_1hhlh      3      0       0      41        0.0%
BITBIGSFR_1hhlh      2      0       0      40        0.0%
BITBIGSFR_1hhhl      1      0       0      39        0.0%
BITBIGSFR_1hhll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F5      32        0.0%
DATA                 0      0     2F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Mar 10 14:10:52 2023

               modbus_analyse_and_answer@crcAtt 000C                        _eusart1TxBufferRemaining 0041  
                                            l21 1116                                              l15 128A  
                                            l18 1016                                              l26 13C8  
                                            l52 15A0                                              l71 1526  
                                            l49 14E2                                              l86 12EA  
                                            l89 130C                                    ___awdiv@sign 0065  
                           ___wmul@multiplicand 0062                                 _timer0ReloadVal 0038  
                                           l133 134C                                             l152 146E  
                                           l401 15BA                                             l322 1588  
                                           l316 157A                                             l149 1510  
                                           l325 1550                                             l165 1534  
                                           l319 156C                                             l328 155E  
                                           l259 0ECA                                             l371 1542  
                                           l532 14C0                                             l349 1402  
                                           l543 0FA4                                             l544 0FB4  
                                           l465 0788                                             l459 0C30  
                                           l566 0E38                                             l559 0E28  
                                           l763 0AB6                                             l776 0CE2  
                                           _PR2 0FCB           modbus_analyse_and_answer@nbofRegister 0019  
                                           _abs 128C                                             _pad 0CE4  
                               _input_registers 00BD                                    ___awmod@sign 0065  
                               _TMR2_Initialize 1528                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                       __end_of_measure_current 078A                                            l1210 1166  
                                          ?_abs 0066                                            l1233 0D2C  
                                          l1308 0926                                            l1316 1242  
                                          l1236 0D70                                            l1260 05E0  
                                          l1244 046A                                            l3101 120A  
                                          l1238 0D92                                            l1246 0472  
                                          l1319 15BC                                            l3103 121C  
                                          l1247 04B8                                            l1264 0852  
                                          l3121 0A12                                            l3113 09F2  
                                          l3105 1222                                            l3201 0D24  
                                          l3131 0A46                                            l3123 0A20  
                                          l3115 09F8                                            l3211 128C  
                                          l3203 0D38                                            l3107 149A  
                                          l1283 0410                                            l1268 085A  
                                          l3141 0A80                                            l3133 0A4E  
                                          l3125 0A28                                            l3117 0A06  
                                          l3213 12A8                                            l1293 12C4  
                                          l3205 0D4C                                            l3221 0440  
                                          l3109 14B8                                            l3301 0266  
                                          l3151 0AA6                                            l3143 0A88  
                                          l3135 0A56                                            l3127 0A2C  
                                          l3119 0A0E                                            l3207 0D52  
                                          l3231 048A                                            l3223 044E  
                                          l3215 0412                                            l3311 0298  
                                          l3303 0274                                            l1296 12CC  
                                          l3401 1334                                            l3153 0AAE  
                                          l3145 0A8A                                            l3137 0A64  
                                          l3129 0A34                                            l3161 0C46  
                                          l3209 0D7E                                            l3241 04C0  
                                          l3233 0490                                            l3225 0450  
                                          l3217 0428                                            l3321 030A  
                                          l3305 0278                                            l1289 106C  
                                          l3411 1346                                            l3403 133A  
                                          l3147 0A90                                            l3139 0A6A  
                                          l3171 0C7A                                            l3163 0C4E  
                                          l3091 088C                                            l3251 050E  
                                          l3243 04C8                                            l3235 04A0  
                                          l3227 045E                                            l3219 0438  
                                          l3331 0374                                            l3323 031A  
                                          l3315 02A4                                            l3307 0284  
                                          l3413 1598                                            l3405 133C  
                                          l3421 152A                                            l3501 0E18  
                                          l3149 0A96                                            l3181 0CB6  
                                          l3173 0C82                                            l3165 0C52  
                                          l3157 0C32                                            l3093 08AA  
                                          l3085 085C                                            l3261 058C  
                                          l3245 04CE                                            l3253 052A  
                                          l3237 04AC                                            l3229 047A  
                                          l3333 03B8                                            l3325 0324  
                                          l3309 0286                                            l3317 02DC  
                                          l3341 03E2                                            l3351 0FBA  
                                          l3415 1512                                            l3407 133E  
                                          l3431 13EA                                            l3423 152E  
                                          l3503 0E22                                            l3183 0CBC  
                                          l3175 0C8A                                            l3167 0C60  
                                          l3159 0C38                                            l3095 08E0  
                                          l3087 0870                                            l3255 0546  
                                          l3263 059A                                            l3247 0502  
                                          l3239 04B4                                            l3327 0334  
                                          l3319 02EE                                            l3511 1062  
                                          l3361 0FDA                                            l3353 0FBC  
                                          l3521 126C                                            l3417 14FC  
                                          l3441 0E3C                                            l3409 1344  
                                          l3433 13EC                                            l3425 13CA  
                                          l3177 0C98                                            l3185 0CC2  
                                          l3169 0C68                                            l3089 0882  
                                          l3193 0CE4                                            l3265 05AA  
                                          l3257 0558                                            l3249 0508  
                                          l3281 0818                                            l3273 078A  
                                          l3337 03D0                                            l3329 0354  
                                          l3505 1018                                            l3371 1002  
                                          l3363 0FE0                                            l3355 0FCE  
                                          l3523 1272                                            l3515 1244  
                                          l3291 1560                                            l3451 0E6E  
                                          l3443 0E4E                                            l3435 13EE  
                                          l3427 13CE                                            l3419 1528  
                                          l3603 0780                                            l3187 0CD2  
                                          l3179 0CAE                                            l3099 11FC  
                                          l3195 0CF4                                            l3267 05B0  
                                          l3259 0572                                            l3283 0826  
                                          l3275 0794                                            l3507 1024  
                                          l3611 1132                                            l3373 1004  
                                          l3365 0FE8                                            l3357 0FD0  
                                          l3381 10DE                                            l3533 138E  
                                          l3525 1278                                            l3517 124C  
                                          l3293 157C                                            l3285 1552  
                                          l3461 0EC8                                            l3453 0E72  
                                          l3445 0E62                                            l3437 13FE  
                                          l3429 13D2                                            l3541 14C2  
                                          l3189 0CDA                                            l3197 0D08  
                                          l3269 05C0                                            l3277 07BC  
                                          l3509 1042                                            l3613 113A  
                                          l3621 092C                                            l3367 0FF8  
                                          l3359 0FD8                                            l3391 110C  
                                          l3383 10E4                                            l3375 10C8  
                                          l3535 139C                                            l3527 127E  
                                          l3519 1252                                            l3287 1544  
                                          l3455 0E76                                            l3447 0E66  
                                          l3439 0E3A                                            l3295 1536  
                                          l3551 14D6                                            l3543 14C6  
                                          l3463 12D2                                            l3199 0D18  
                                          l3279 07F6                                            l3615 1156  
                                          l3607 1118                                            l3631 094A  
                                          l3623 092E                                            l3369 0FFA  
                                          l3393 110E                                            l3385 10E6  
                                          l3377 10CA                                            l3537 13AA  
                                          l3529 1284                                            l3289 156E  
                                          l3457 0E88                                            l3449 0E6A  
                                          l3553 14DA                                            l3545 14CA  
                                          l3465 12E6                                            l3481 0F84  
                                          l3473 0F4A                                            l3297 0230  
                                          l3609 112A                                            l3641 09A8  
                                          l3633 095C                                            l3625 0930  
                                          l3387 1104                                            l3379 10DC  
                                          l3539 13B0                                            l3459 0E9A  
                                          l3395 15B8                                            l3555 14DE  
                                          l3547 14CE                                            l3467 12E8  
                                          l3491 0DD0                                            l3483 0D94  
                                          l3475 0F5C                                            l3571 0BCA  
                                          l3299 0258                                            l3643 09BA  
                                          l3635 0968                                            l3627 093A  
                                          l3619 0928                                            l3557 143E  
                                          l3389 1106                                            l3397 130E  
                                          l3549 14D2                                            l3469 12F8  
                                          l3493 0DDE                                            l3485 0DA6  
                                          l3477 0F6A                                            l3573 0BDE  
                                          l3565 0B92                                            l3645 09D8  
                                          l3637 097E                                            l3629 0946  
                                          ?_pad 0070                                            l3399 1332  
                                          l3495 0DE8                                            l3487 0DBC  
                                          l3479 0F7A                                            l3591 0648  
                                          l3583 05FC                                            l3567 0BAA  
                                          l3559 0B78                                            l3639 098A  
                                          l3497 0E06                                            l3489 0DC4  
                                          l3593 06A2                                            l3585 0614  
                                          l3577 05E2                                            l3569 0BAE  
                                          l3499 0E16                                            l3595 06D8  
                                          l3587 0618                                            l3597 070E  
                                          l3589 0634                                            l3599 0770  
                                          l3697 02CE                                            STR_1 FFF2  
                                          STR_2 FFE5                                            u2000 044E  
                                          u2001 044A                                            u2010 045E  
                                          u2011 045A                                            u2020 048A  
                                          u2100 07BC                                            u2021 0486  
                                          u2101 07B8                                            u2030 04A0  
                                          u2110 0852                                            u2031 049C  
                                          u2111 084E                                            u2200 0DBC  
                                          u2040 0546                                            u2120 0258  
                                          u2201 0DB8                                            u2041 0542  
                                          u2121 0254                                            u2210 0DDE  
                                          u2050 0558                                            u2130 02EE  
                                          u2211 0DDA                                            u2051 0554  
                                          u2131 02EA                                            u2220 0E06  
                                          u2060 0572                                            u2140 031A  
                                          u2221 0E02                                            u2061 056E  
                                          u2141 0316                                            _LATA 0F89  
                                          u2070 058C                                            u2150 0354  
                                          u2230 1062                                            _LATB 0F8A  
                                          u2071 0588                                            u2151 0350  
                                          u2231 105E                                            _LATC 0F8B  
                                          u2240 13C8                                            u2080 059A  
                                          u2160 0374                                            _LATD 0F8C  
                                          u2241 13C4                                            u2081 0596  
                                          u2161 0370                                            _LATE 0F8D  
                                          u2170 12F8                                            u2250 0BCA  
                                          u2090 05AA                                            _LATF 0F8E  
                                          u2171 12F4                                            u2251 0BC6  
                                          u2091 05A6                                            u2307 0952  
                                          _LATG 0F8F                                            u2180 0F6A  
                                          _LATH 0F90                                            u2317 125E  
                                          u2181 0F66                                            u2190 0FA4  
                                          u2270 0634                                            _LATJ 0F91  
                                          u2327 1110                                            u2191 0FA0  
                                          u2271 0630                                            u1800 0A06  
                                          u2337 0FD2                                            u2265 0BCE  
                                          u1801 0A02                                            u2290 0770  
                                          u1810 0A20                                            u2347 0FFC  
                                          u2291 076C                                            u1811 0A1C  
                                          u1820 0A46                                            u1900 0CAE  
                                          u2357 100C                                            u2285 0638  
                                          u1821 0A42                                            u1901 0CAA  
                                          u1830 0A64                                            u1910 0CD2  
                                          u1750 0870                                            u1831 0A60  
                                          u1911 0CCE                                            u1751 086C  
                                          u1840 0A80                                            u1760 0882  
                                          u1920 0CF4                                            u1841 0A7C  
                                          u1761 087E                                            u1921 0CF0  
                                          u1850 0AA6                                            u1770 08AA  
                                          u1930 0D18                                            u1851 0AA2  
                                          u1771 08A6                                            u1931 0D14  
                                          u1860 0C46                                            u1780 08E0  
                                          u1940 0D70                                            u1861 0C42  
                                          u1781 08DC                                            u1941 0D6C  
                                          u1870 0C60                                            u1790 1242  
                                          u1950 0D7E                                            u1871 0C5C  
                                          u1791 123E                                            u1951 0D7A  
                                          u1880 0C7A                                            u1960 12A8  
                                          u1881 0C76                                            u1961 12A4  
                                          u1890 0C98                                            u1970 0424  
                                          u1891 0C94                                            u1971 041E  
                                          u1980 0426                                            u1990 0438  
                                          u1991 0434                                            _TMR2 0FCC  
                                 _EUSART1_Write 106E                                            abs@a 0066  
                       __end_of_measure_voltage 0C32                                            _dbuf 00CC  
                                          _main 0928                                            _dtoa 0412  
                                          _prec 00C7                                            pad@i 0077  
                                          pad@p 0074                                            fsr1h 0FE2  
                                          fsr2h 0FDA                                            indf1 0FE7  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          pad@w 0079                                            fsr2l 0FD9  
                                          btemp 004A                                            prodh 0FF4  
                                          prodl 0FF3                                            start 0118  
                         ??_EPWM1_LoadDutyValue 0062                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 0000                                           ??_abs 0068  
                                         ??_pad 0076                         __end_of_TMR0_Initialize 1404  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 15A2  
                         _eusart1RxStatusBuffer 0025                                           ?_main 0001  
                                         ?_dtoa 007B                                 __end_of___awdiv 0AB8  
                                         _CRC16 0ECC                                 __end_of___awmod 0CE4  
                               __end_of___lldiv 0E3A                                           _T0CON 0FD5  
                               ___awdiv@divisor 0062                                           _T2CON 0FCA  
                                         i2l300 0B76                                           i2l310 15B0  
                                         i2l304 1498                                           i2l313 15B6  
                                         i2l307 15C0                                           i2l413 00EC  
                                         i2l502 1596                                           i2l414 00EC  
                                         i2l406 005C                                           i2l520 14FA  
                                         i2l512 022E                                           i2l409 00A4  
                                         i2l290 138A                                           i2l514 0188  
                                         i2l283 1080                                           i2l364 15AA  
                                         i2l508 00AC                                           i2l284 1096  
                                         i2l293 138C                                           i2l374 15BE  
                                         i2l526 11FA                                           i2l287 10C2  
                                         i2l368 143C                                           i2l475 0F48  
                               ___awdiv@counter 0064                                    vfpfcnvrt@fmt 008A  
                                         _TMR0H 0FD7                                           _TMR0L 0FD6  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _TRISD 0F95  
                                         _TRISE 0F96                                           _TRISF 0F97  
                                         _TRISG 0F98                                           _TRISH 0F99  
                                         _TRISJ 0F9A                             ___lmul@multiplicand 0064  
                     ?_TMR0_SetInterruptHandler 0060                            _EUSART1_Transmit_ISR 134E  
                              __end_of_TMR0_ISR 143E                                           _flags 00CB  
                                         _index 003B                             read_prec_or_width@c 006C  
                           read_prec_or_width@n 006D                                           _fputc 085C  
                                         _fputs 11FC                                           pad@fp 0070  
                                         _width 00C5                                           _putch 15BC  
                                         dtoa@d 007D                                           dtoa@i 0086  
                                         dtoa@p 0081                                           dtoa@s 0085  
                                         dtoa@w 0083                                  ?_EUSART1_Write 0001  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ttemp5 004B  
                                         ttemp6 004E                                           ttemp7 0052  
                                         status 0FD8                                           wtemp8 004B  
                               __end_of_sprintf 1168           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 15C2            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 15C0  
                              __end_of_Lcd_Init 128C           modbus_analyse_and_answer@functionCode 000E  
                               __initialization 1168                                    ?_modbus_send 0001  
                    __end_of_EUSART1_Initialize 0ECC                                    __end_of_main 09F2  
                                  __end_of_dtoa 05E2                         __end_of_TMR2_Initialize 1536  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 00B4  
                                        ??_dtoa 007F                                          ?_CRC16 0001  
                                 __activetblptr 0003                           ?_EUSART1_Transmit_ISR 0001  
                    __end_of_read_prec_or_width 085C                                ?_measure_current 0079  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0060  
                                        ?_fputs 0069                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                          _CCPR1H 0FBF  
                                        _CCPR1L 0FBE                                ___awdiv@dividend 0060  
                                        ?_putch 0001                                          i2l3001 00DC  
                                        i2l3003 00E2                                          i2l3005 00E6  
                                        i2l2441 1070                                          i2l2451 10BA  
                                        i2l2443 108E                                          i2l2461 1482  
                                        i2l2701 0156                                          i2l2453 10BE  
                                        i2l2445 1098                                          i2l2463 1492  
                                        i2l2471 0ED4                                          i2l2703 0166  
                                        i2l2447 10A8                                          i2l2455 10C0  
                                        i2l2439 1070                                          i2l2465 1496  
                                        i2l2457 1470                                          i2l2481 0F32  
                                        i2l2473 0EE2                                          i2l2721 01B2  
                                        i2l2713 018E                                          i2l2705 016C  
                                        i2l2449 10AA                                          i2l2459 1480  
                                        i2l2475 0EE6                                          i2l2731 01DE  
                                        i2l2723 01BA                                          i2l2715 0194  
                                        i2l2707 017C                                          i2l2661 15AC  
                                        i2l2477 0F00                                          i2l2469 0ECC  
                                        i2l2733 01E2                                          i2l2717 019E  
                                        i2l2709 0184                                          i2l2663 15B2  
                                        i2l2479 0F18                                          i2l2735 01FE  
                                        i2l2719 01A4                                          i2l2743 0204  
                                        i2l2671 003E                                          i2l2751 11B4  
                                        i2l2729 01C2                                          i2l2681 00B2  
                                        i2l2673 0056                                          i2l2665 0000  
                                        i2l2753 11C0                                          i2l2851 1370  
                                        i2l2691 00DC                                          i2l2683 00B8  
                                        i2l2675 0076                                          i2l2667 0022  
                                        i2l2755 11D2                                          i2l2861 0AD4  
                                        i2l2853 1380                                          i2l2845 134E  
                                        i2l2693 00EE                                          i2l2685 00C2  
                                        i2l2677 008E                                          i2l2669 0038  
                                        i2l2757 11D6                                          i2l2871 0B36  
                                        i2l2863 0AE2                                          i2l2855 1384  
                                        i2l2847 135E                                          i2l2695 011C  
                                        i2l2687 00C8                                          i2l2679 0092  
                                        i2l2873 0B52                                          i2l2865 0AFE  
                                        i2l2857 0AB8                                          i2l2849 136E  
                                        i2l2881 1404                                          i2l2697 0120  
                                        i2l2689 00D6                                          i2l2875 0B72  
                                        i2l2867 0B0C                                          i2l2859 0AC6  
                                        i2l2883 1406                                          i2l2699 0136  
                                        i2l2891 158A                                          i2l2869 0B1A  
                                        i2l2885 140A                                          i2l2877 15A2  
                                        i2l2893 1592                                          i2l2981 0032  
                                        i2l2887 140E                                          i2l2879 15A6  
                                        i2l2895 14E6                                          i2l2991 006A  
                                        i2l2983 0040                                          i2l2889 1422  
                                        i2l2897 14E8                                          i2l2993 0078  
                                        i2l2985 004E                                          i2l2899 14F8  
                                        i2l3699 0218                                          i2l2995 0086  
                                        i2l2987 0052                                          i2l2997 00B2  
                                        i2l2989 0054                                          i2l2999 00C0  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                   vfpfcnvrt@done 0094  
                                        _SPBRG1 0FAF                                          _TMR0ON 7EAF  
                              ?_measure_voltage 0079                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                                    vfprintf@cfmt 009E  
                                  ?_TMR0_Reload 0001                                          ___lmul 0F4A  
                                        ___wmul 149A                                       ??___awdiv 0064  
                                     ??___awmod 0064                                       ??___lldiv 0074  
                      ?_EUSART1_SetErrorHandler 0060                                          _recPtr 003A  
                              ?_TMR0_Initialize 0001                            read_prec_or_width@ap 0068  
                                        _offset 00C9                                          clear_0 1170  
                                        clear_1 1184                                          clear_2 1196  
                                        clear_3 11A2                      ?_modbus_analyse_and_answer 0001  
                              ___awdiv@quotient 0066                                 ___awmod@divisor 0062  
                                        isa$std 0001                                 ___awmod@counter 0064  
                                        pad@buf 0072                                          _rx_buf 0100  
              ??_EUSART1_SetOverrunErrorHandler 0063                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        _tx_buf 0200                                          dtoa@fp 007B  
                                        fputc@c 0060                                          fputs@c 006D  
                                        fputs@i 006E                                          fputs@s 0069  
                                  __mediumconst FDE4                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                    modbus_analyse_and_answer@i 0011                        ADC_GetConversion@channel 0064  
                                        putch@c 0001                                __end_of_vfprintf 106E  
                               ??_EUSART1_Write 0001        TMR0_SetInterruptHandler@InterruptHandler 0060  
                                     ??_sprintf 00A6                                 _eusart1RxBuffer 00B5  
                               _eusart1TxBuffer 002D                               _SYSTEM_Initialize 14C2  
                                    __accesstop 0060                         __end_of__initialization 11A8  
                            ?_SYSTEM_Initialize 0001                                   __end_of_CRC16 0F4A  
                                 ___rparam_used 0001                   __end_of_EUSART1_RxDataHandler 149A  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                                 ?_modbus_timer 0001                             ??_SYSTEM_Initialize 0065  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0060  
                                 __end_of_fputc 0928                                   __end_of_fputs 1244  
                                 __end_of_putch 15BE                                ?_TMR2_Initialize 0001  
                                       ??_CRC16 0005                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 0B78                               _LCD_2x16_WriteCmd 0FB6  
                                     ?_Lcd_Init 0001                               _LCD_2x16_WriteMsg 138E  
                                       ??_fputc 0064                       __end_of_SYSTEM_Initialize 14E4  
                                       ??_fputs 006D                                         ??_putch 0060  
                                 _eusart1RxHead 0040                              ?_LCD_2x16_WriteCmd 0001  
                                 _eusart1TxHead 0043                              ?_LCD_2x16_WriteMsg 0062  
                    __end_of_LCD_2x16_WriteData 1118                                   _eusart1RxTail 003F  
                                    __pbssBANK0 00B5                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart1TxTail 0042  
             _EUSART1_TxDefaultInterruptHandler 0047                 ??_EUSART1_SetRxInterruptHandler 0063  
                                    __pnvCOMRAM 0044                             ??_LCD_2x16_WriteCmd 0060  
                           ??_LCD_2x16_WriteMsg 0065                 __end_of_EUSART1_SetErrorHandler 158A  
                                ??_modbus_timer 001B                __end_of_TMR0_SetInterruptHandler 1544  
                                       ?___lmul 0060                                         ?___wmul 0060  
                                    ??_TMR0_ISR 0001                                         _CCP1CON 0FBD  
                                       _ECCP1AS 0FB6                                  ___lmul@product 0068  
        __end_of_EUSART1_SetFramingErrorHandler 157C                  _EUSART1_SetFramingErrorHandler 156E  
                     __end_of_LCD_2x16_WriteCmd 1018                       __end_of_LCD_2x16_WriteMsg 13CA  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0F7F                                      ??_Lcd_Init 0062  
                             __end_of_auchCRCHi FFE5                               __end_of_auchCRCLo FEE5  
                   __end_of_EPWM1_LoadDutyValue 1470        modbus_analyse_and_answer@startingAddress 0015  
                          _ADC_InterruptHandler 0035                                         __Hparam 0000  
                                       __Lparam 0000                                         ___awdiv 09F2  
                                       ___awmod 0C32                                         ___lldiv 0D94  
                                     ?_vfprintf 0098                                         __pcinit 1168  
                                       __ramtop 1000                            LCD_2x16_WriteMsg@msg 0062  
                                       __ptext0 0928                                         __ptext1 1118  
                                       __ptext2 1018                                         __ptext3 0230  
                                       __ptext4 078A                                         __ptext5 149A  
                                       __ptext6 0412                                         __ptext7 0CE4  
                                       __ptext8 11FC                                         __ptext9 085C  
                                     _T0CONbits 0FD5                           _OSCILLATOR_Initialize 1598  
                                     _T2CONbits 0FCA                           read_prec_or_width@fmt 0066  
                              ___awmod@dividend 0060                              _EUSART1_Initialize 0E3A  
                      ??_PIN_MANAGER_Initialize 0060                   ??_EUSART1_DefaultErrorHandler 0001  
                                main@tempString 0300                        LCD_2x16_WriteCmd@command 0061  
                                       _sprintf 1118                                   _modbusAddress 003C  
                          end_of_initialization 11A8                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 00EF  
                                       fputs@fp 006B                              _read_prec_or_width 078A  
                               ___lldiv@divisor 0070           __end_of_EUSART1_SetRxInterruptHandler 1560  
                 _EUSART1_SetRxInterruptHandler 1552                                 ___lldiv@counter 0078  
                             __end_of_vfpfcnvrt 0412                                         postdec1 0FE5  
                                       postdec2 0FDD                             ?_read_prec_or_width 0066  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 0090  
                                    ??_vfprintf 009E                            ??_EUSART1_Initialize 0063  
                   ??_modbus_analyse_and_answer 000A                        _TMR0_SetInterruptHandler 1536  
                     LCD_2x16_WriteData@command 0061                                       _TRISDbits 0F95  
                       fp__EUSART1_Transmit_ISR 0000                            ??_read_prec_or_width 006A  
                          __end_of_modbus_timer 1598                             EUSART1_Write@txData 0001  
                  modbus_analyse_and_answer@crc 0017                    __end_of_INTERRUPT_Initialize 15BC  
                             _modbus_char_recvd 14E4                                  __end_of___lmul 0FB6  
                                   vfpfcnvrt@ap 008C                                     vfpfcnvrt@cp 0096  
                                   vfpfcnvrt@fp 0088                                  __end_of___wmul 14C2  
                                _ADC_Initialize 1512                              ?_modbus_char_recvd 0001  
                        ?_OSCILLATOR_Initialize 0001                             start_initialization 1168  
                           ??_modbus_char_recvd 0001                                     __end_of_abs 12CE  
                                   __end_of_pad 0D94   EUSART1_SetRxInterruptHandler@interruptHandler 0060  
 EUSART1_SetTxInterruptHandler@interruptHandler 0060                    EPWM1_LoadDutyValue@dutyValue 0060  
                         __end_of_EUSART1_Write 10C4                       _modbus_analyse_and_answer 0000  
                        fp__EUSART1_Receive_ISR 0000                                        CRC16@msg 0001  
                                   vfprintf@fmt 009A                       __end_of_modbus_char_recvd 14FC  
                            _LCD_2x16_WriteData 10C4                                        ??___lmul 0068  
                                      ??___wmul 0064                           _EUSART1_RxDataHandler 1470  
                ?_EUSART1_SetRxInterruptHandler 0060                          __end_of_ADC_Initialize 1528  
                           ?_LCD_2x16_WriteData 0001                                  _eusart1RxCount 003E  
                             modbus_send@i_1196 0006                                     __pbssCOMRAM 0025  
             _EUSART1_RxDefaultInterruptHandler 00F5                                   __pcstackBANK0 0060  
                                 __pcstackBANK3 0300                               modbus_send@length 0005  
               ??_EUSART1_SetTxInterruptHandler 0063                ??_EUSART1_SetFramingErrorHandler 0063  
               ?_EUSART1_SetFramingErrorHandler 0060                            ??_LCD_2x16_WriteData 0060  
                         _TMR0_InterruptHandler 0044                                       __pnvBANK0 00EC  
                                     _auchCRCHi FEE5                                       _auchCRCLo FDE5  
                        _PIN_MANAGER_Initialize 130E                                       _dtoa$1718 007F  
                                 ??_modbus_send 0002                                       __pintcode 0008  
                                 __pmediumconst FDE4                                        ?___awdiv 0060  
                                      ?___awmod 0060                                        ?___lldiv 006C  
                             ??_measure_current 007B                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 001B                               ??_measure_voltage 007B  
                                      _ECCP1DEL 0F79                                        _BAUDCON1 0F7E  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 15B2  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 15AC                            _EUSART1_ErrorHandler 00EC  
                       _EUSART1_SetErrorHandler 157C                                        ?_sprintf 00A0  
                          _INTERRUPT_Initialize 15B8                               ??_TMR0_Initialize 0063  
                                ___wmul@product 0064         EUSART1_SetErrorHandler@interruptHandler 0060  
                                      _LATDbits 0F8C                                     CRC16@uIndex 0007  
                                   CRC16@length 0003                                        _PIE1bits 0F9D  
                                      i2u130_40 0F32                                        i2u130_41 0F2E  
                                      i2u140_40 01FE                                        i2u140_41 01FA  
                                      i2u141_40 11FA                                        i2u141_41 11F6  
                                      i2u150_40 1380                                        i2u126_40 1080  
                             _holding_registers 00C1                                        i2u150_41 137C  
                                      i2u126_41 107C                                        i2u151_40 0AD4  
                                      i2u127_40 108E                                        i2u151_41 0AD0  
                                      i2u127_41 108A                                        i2u128_40 10BA  
                                      i2u128_41 10B6                                        i2u129_40 1492  
                                      i2u153_40 0B0C                                        i2u152_48 0AE8  
                                      i2u137_40 0022                                        i2u129_41 148E  
                                      i2u153_41 0B08                                        i2u152_49 0AFE  
                                      i2u137_41 001E                                        i2u138_40 008E  
                                      i2u170_40 0086                                        i2u138_41 008A  
                                      i2u170_41 0082                                        i2u155_40 0B52  
                                      i2u154_48 0B20                                        i2u139_40 0136  
                                      i2u155_41 0B4E                                        i2u154_49 0B36  
                                      i2u139_41 0132                                        i2u172_40 00B2  
                                      i2u171_48 008C                                        i2u172_41 00AE  
                                      i2u171_49 00A0                                        i2u156_48 0B58  
                                      i2u149_40 135E                                        i2u157_40 1422  
                                      i2u173_40 00C0                      ??_TMR0_SetInterruptHandler 0063  
                                      i2u156_49 0B6E                                        i2u149_41 135A  
                                      i2u157_41 141E                                        i2u173_41 00BC  
                                      i2u166_40 0040                                        i2u166_41 003C  
                                      i2u158_48 1428                                        i2u174_48 00C6  
                                      i2u167_40 004E                                        i2u158_49 143C  
                                      i2u174_49 00DC                                        i2u167_41 004A  
                                      i2u168_40 006A                                        i2u168_41 0066  
                                      i2u169_40 0078                                        i2u169_41 0074  
                                      _PIR1bits 0F9E                                   ??_TMR0_Reload 0001  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 0FD0  
                                      _TMR0_ISR 1404                                    _modbus_timer 158A  
                                     _vfpfcnvrt 0230                             __end_of_modbus_send 11FC  
                                    _ADCON0bits 0FC2                                      _ADCON1bits 0FC1  
                             ___wmul@multiplier 0060                           measure_voltage@result 007C  
                              _EPWM1_Initialize 14FC                                        _Lcd_Init 1244  
                             ___lmul@multiplier 0060                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0060           __end_of_EUSART1_SetTxInterruptHandler 1552  
                 _EUSART1_SetTxInterruptHandler 1544                                        __Hrparam 0000  
                                    vfprintf@ap 009C                                        __Lrparam 0000  
                                    vfprintf@fp 0098                               _ADC_GetConversion 12CE  
                       ??_OSCILLATOR_Initialize 0060                              ?_ADC_GetConversion 0060  
                                    ?_vfpfcnvrt 0088                              modbus_char_recvd@c 0001  
                           __end_of_TMR0_Reload 15AC                       ??_EUSART1_SetErrorHandler 0063  
           __end_of_EUSART1_DefaultErrorHandler 15B8                     _EUSART1_DefaultErrorHandler 15B2  
                           ??_ADC_GetConversion 0062                                      sprintf@fmt 00A2  
             modbus_analyse_and_answer@pwmValue 000F                           LCD_2x16_WriteMsg@line 0064  
                                      __ptext10 15BC                                        __ptext11 128C  
                                      __ptext20 1528                                        __ptext12 0C32  
                                      __ptext21 13CA                                        __ptext13 09F2  
                                      __ptext30 156E                                        __ptext22 1536  
                                      __ptext14 0B78                                        __ptext31 157C  
                                      __ptext23 130E                                        __ptext15 05E2  
                                      __ptext40 158A                                        __ptext32 14FC  
                                      __ptext24 1598                                        __ptext16 0F4A  
                                      __ptext41 11B2                                        __ptext33 1512  
                                      __ptext25 15B8                                        __ptext17 0D94  
                                      __ptext50 0AB8                                        __ptext42 106E  
                                      __ptext34 1244                                        __ptext26 0E3A  
                                      __ptext18 12CE                                        __ptext51 15AC  
                                      __ptext43 0000                                        __ptext35 138E  
                                      __ptext27 1544                                        __ptext19 14C2  
                                      __ptext52 15C0                                        __ptext44 0ECC  
                                      __ptext36 10C4                                        __ptext28 1552  
                                      __ptext53 15B2                                        __ptext45 14E4  
                                      __ptext37 0FB6                                        __ptext29 1560  
                                      __ptext54 1470                                        __ptext46 15A2  
                                      __ptext38 143E                                        __ptext55 0000  
                                      __ptext47 1404                                        __ptext48 15BE  
                                      __ptext49 134E                                measure_current@i 007F  
                         measure_current@offset 0079                           measure_current@result 0081  
          __end_of_TMR0_DefaultInterruptHandler 15C0                    _TMR0_DefaultInterruptHandler 15BE  
                     __end_of_ADC_GetConversion 130E  EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                      isa$xinst 0000                                     _modbus_send 11B2  
                                      int$flags 004A               __end_of_modbus_analyse_and_answer 0230  
                                      _vfprintf 1018              __end_of_INTERRUPT_InterruptManager 0118  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 00F2  
                           _EUSART1_Receive_ISR 0AB8                                      _INTCONbits 0FF2  
                                 CRC16@uchCRCHi 0008                                   CRC16@uchCRCLo 0009  
                              measure_voltage@i 0080                          ??_INTERRUPT_Initialize 0060  
                                      intlevel2 0000                                       sprintf@ap 00A6  
                          ?_EUSART1_Receive_ISR 0001                                ___lldiv@dividend 006C  
                               _measure_current 05E2                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 156E                  _EUSART1_SetOverrunErrorHandler 1560  
                                    _RCSTA1bits 0FAB                    __end_of_EUSART1_Transmit_ISR 138E  
                              ??_ADC_Initialize 0060                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                 _measure_voltage 0B78  
                                   _TMR0_Reload 15A2  EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                ?_EUSART1_SetTxInterruptHandler 0060                                     ??_vfpfcnvrt 008E  
                            _eusart1RxLastError 003D                                        sprintf@f 00A8  
                                      sprintf@s 00A0                                ___lldiv@quotient 0074  
                               _TMR0_Initialize 13CA                             _EPWM1_LoadDutyValue 143E  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 134E  
                       ??_EUSART1_RxDataHandler 0001                 modbus_analyse_and_answer@i_1189 0013  
                      __end_of_EPWM1_Initialize 1512                            ?_EPWM1_LoadDutyValue 0060  
