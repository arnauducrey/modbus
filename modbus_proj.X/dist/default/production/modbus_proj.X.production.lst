

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Mar 14 15:19:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Version 2.40
    78                           ; Generated 17/11/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F97J60 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	mediumconst
   114   00FDE4                     __pmediumconst:
   115                           	callstack 0
   116   00FDE4  00                 	db	0
   117   00FDE5                     _auchCRCLo:
   118                           	callstack 0
   119   00FDE5  00                 	db	0
   120   00FDE6  C0                 	db	192
   121   00FDE7  C1                 	db	193
   122   00FDE8  01                 	db	1
   123   00FDE9  C3                 	db	195
   124   00FDEA  03                 	db	3
   125   00FDEB  02                 	db	2
   126   00FDEC  C2                 	db	194
   127   00FDED  C6                 	db	198
   128   00FDEE  06                 	db	6
   129   00FDEF  07                 	db	7
   130   00FDF0  C7                 	db	199
   131   00FDF1  05                 	db	5
   132   00FDF2  C5                 	db	197
   133   00FDF3  C4                 	db	196
   134   00FDF4  04                 	db	4
   135   00FDF5  CC                 	db	204
   136   00FDF6  0C                 	db	12
   137   00FDF7  0D                 	db	13
   138   00FDF8  CD                 	db	205
   139   00FDF9  0F                 	db	15
   140   00FDFA  CF                 	db	207
   141   00FDFB  CE                 	db	206
   142   00FDFC  0E                 	db	14
   143   00FDFD  0A                 	db	10
   144   00FDFE  CA                 	db	202
   145   00FDFF  CB                 	db	203
   146   00FE00  0B                 	db	11
   147   00FE01  C9                 	db	201
   148   00FE02  09                 	db	9
   149   00FE03  08                 	db	8
   150   00FE04  C8                 	db	200
   151   00FE05  D8                 	db	216
   152   00FE06  18                 	db	24
   153   00FE07  19                 	db	25
   154   00FE08  D9                 	db	217
   155   00FE09  1B                 	db	27
   156   00FE0A  DB                 	db	219
   157   00FE0B  DA                 	db	218
   158   00FE0C  1A                 	db	26
   159   00FE0D  1E                 	db	30
   160   00FE0E  DE                 	db	222
   161   00FE0F  DF                 	db	223
   162   00FE10  1F                 	db	31
   163   00FE11  DD                 	db	221
   164   00FE12  1D                 	db	29
   165   00FE13  1C                 	db	28
   166   00FE14  DC                 	db	220
   167   00FE15  14                 	db	20
   168   00FE16  D4                 	db	212
   169   00FE17  D5                 	db	213
   170   00FE18  15                 	db	21
   171   00FE19  D7                 	db	215
   172   00FE1A  17                 	db	23
   173   00FE1B  16                 	db	22
   174   00FE1C  D6                 	db	214
   175   00FE1D  D2                 	db	210
   176   00FE1E  12                 	db	18
   177   00FE1F  13                 	db	19
   178   00FE20  D3                 	db	211
   179   00FE21  11                 	db	17
   180   00FE22  D1                 	db	209
   181   00FE23  D0                 	db	208
   182   00FE24  10                 	db	16
   183   00FE25  F0                 	db	240
   184   00FE26  30                 	db	48
   185   00FE27  31                 	db	49
   186   00FE28  F1                 	db	241
   187   00FE29  33                 	db	51
   188   00FE2A  F3                 	db	243
   189   00FE2B  F2                 	db	242
   190   00FE2C  32                 	db	50
   191   00FE2D  36                 	db	54
   192   00FE2E  F6                 	db	246
   193   00FE2F  F7                 	db	247
   194   00FE30  37                 	db	55
   195   00FE31  F5                 	db	245
   196   00FE32  35                 	db	53
   197   00FE33  34                 	db	52
   198   00FE34  F4                 	db	244
   199   00FE35  3C                 	db	60
   200   00FE36  FC                 	db	252
   201   00FE37  FD                 	db	253
   202   00FE38  3D                 	db	61
   203   00FE39  FF                 	db	255
   204   00FE3A  3F                 	db	63
   205   00FE3B  3E                 	db	62
   206   00FE3C  FE                 	db	254
   207   00FE3D  FA                 	db	250
   208   00FE3E  3A                 	db	58
   209   00FE3F  3B                 	db	59
   210   00FE40  FB                 	db	251
   211   00FE41  39                 	db	57
   212   00FE42  F9                 	db	249
   213   00FE43  F8                 	db	248
   214   00FE44  38                 	db	56
   215   00FE45  28                 	db	40
   216   00FE46  E8                 	db	232
   217   00FE47  E9                 	db	233
   218   00FE48  29                 	db	41
   219   00FE49  EB                 	db	235
   220   00FE4A  2B                 	db	43
   221   00FE4B  2A                 	db	42
   222   00FE4C  EA                 	db	234
   223   00FE4D  EE                 	db	238
   224   00FE4E  2E                 	db	46
   225   00FE4F  2F                 	db	47
   226   00FE50  EF                 	db	239
   227   00FE51  2D                 	db	45
   228   00FE52  ED                 	db	237
   229   00FE53  EC                 	db	236
   230   00FE54  2C                 	db	44
   231   00FE55  E4                 	db	228
   232   00FE56  24                 	db	36
   233   00FE57  25                 	db	37
   234   00FE58  E5                 	db	229
   235   00FE59  27                 	db	39
   236   00FE5A  E7                 	db	231
   237   00FE5B  E6                 	db	230
   238   00FE5C  26                 	db	38
   239   00FE5D  22                 	db	34
   240   00FE5E  E2                 	db	226
   241   00FE5F  E3                 	db	227
   242   00FE60  23                 	db	35
   243   00FE61  E1                 	db	225
   244   00FE62  21                 	db	33
   245   00FE63  20                 	db	32
   246   00FE64  E0                 	db	224
   247   00FE65  A0                 	db	160
   248   00FE66  60                 	db	96
   249   00FE67  61                 	db	97
   250   00FE68  A1                 	db	161
   251   00FE69  63                 	db	99
   252   00FE6A  A3                 	db	163
   253   00FE6B  A2                 	db	162
   254   00FE6C  62                 	db	98
   255   00FE6D  66                 	db	102
   256   00FE6E  A6                 	db	166
   257   00FE6F  A7                 	db	167
   258   00FE70  67                 	db	103
   259   00FE71  A5                 	db	165
   260   00FE72  65                 	db	101
   261   00FE73  64                 	db	100
   262   00FE74  A4                 	db	164
   263   00FE75  6C                 	db	108
   264   00FE76  AC                 	db	172
   265   00FE77  AD                 	db	173
   266   00FE78  6D                 	db	109
   267   00FE79  AF                 	db	175
   268   00FE7A  6F                 	db	111
   269   00FE7B  6E                 	db	110
   270   00FE7C  AE                 	db	174
   271   00FE7D  AA                 	db	170
   272   00FE7E  6A                 	db	106
   273   00FE7F  6B                 	db	107
   274   00FE80  AB                 	db	171
   275   00FE81  69                 	db	105
   276   00FE82  A9                 	db	169
   277   00FE83  A8                 	db	168
   278   00FE84  68                 	db	104
   279   00FE85  78                 	db	120
   280   00FE86  B8                 	db	184
   281   00FE87  B9                 	db	185
   282   00FE88  79                 	db	121
   283   00FE89  BB                 	db	187
   284   00FE8A  7B                 	db	123
   285   00FE8B  7A                 	db	122
   286   00FE8C  BA                 	db	186
   287   00FE8D  BE                 	db	190
   288   00FE8E  7E                 	db	126
   289   00FE8F  7F                 	db	127
   290   00FE90  BF                 	db	191
   291   00FE91  7D                 	db	125
   292   00FE92  BD                 	db	189
   293   00FE93  BC                 	db	188
   294   00FE94  7C                 	db	124
   295   00FE95  B4                 	db	180
   296   00FE96  74                 	db	116
   297   00FE97  75                 	db	117
   298   00FE98  B5                 	db	181
   299   00FE99  77                 	db	119
   300   00FE9A  B7                 	db	183
   301   00FE9B  B6                 	db	182
   302   00FE9C  76                 	db	118
   303   00FE9D  72                 	db	114
   304   00FE9E  B2                 	db	178
   305   00FE9F  B3                 	db	179
   306   00FEA0  73                 	db	115
   307   00FEA1  B1                 	db	177
   308   00FEA2  71                 	db	113
   309   00FEA3  70                 	db	112
   310   00FEA4  B0                 	db	176
   311   00FEA5  50                 	db	80
   312   00FEA6  90                 	db	144
   313   00FEA7  91                 	db	145
   314   00FEA8  51                 	db	81
   315   00FEA9  93                 	db	147
   316   00FEAA  53                 	db	83
   317   00FEAB  52                 	db	82
   318   00FEAC  92                 	db	146
   319   00FEAD  96                 	db	150
   320   00FEAE  56                 	db	86
   321   00FEAF  57                 	db	87
   322   00FEB0  97                 	db	151
   323   00FEB1  55                 	db	85
   324   00FEB2  95                 	db	149
   325   00FEB3  94                 	db	148
   326   00FEB4  54                 	db	84
   327   00FEB5  9C                 	db	156
   328   00FEB6  5C                 	db	92
   329   00FEB7  5D                 	db	93
   330   00FEB8  9D                 	db	157
   331   00FEB9  5F                 	db	95
   332   00FEBA  9F                 	db	159
   333   00FEBB  9E                 	db	158
   334   00FEBC  5E                 	db	94
   335   00FEBD  5A                 	db	90
   336   00FEBE  9A                 	db	154
   337   00FEBF  9B                 	db	155
   338   00FEC0  5B                 	db	91
   339   00FEC1  99                 	db	153
   340   00FEC2  59                 	db	89
   341   00FEC3  58                 	db	88
   342   00FEC4  98                 	db	152
   343   00FEC5  88                 	db	136
   344   00FEC6  48                 	db	72
   345   00FEC7  49                 	db	73
   346   00FEC8  89                 	db	137
   347   00FEC9  4B                 	db	75
   348   00FECA  8B                 	db	139
   349   00FECB  8A                 	db	138
   350   00FECC  4A                 	db	74
   351   00FECD  4E                 	db	78
   352   00FECE  8E                 	db	142
   353   00FECF  8F                 	db	143
   354   00FED0  4F                 	db	79
   355   00FED1  8D                 	db	141
   356   00FED2  4D                 	db	77
   357   00FED3  4C                 	db	76
   358   00FED4  8C                 	db	140
   359   00FED5  44                 	db	68
   360   00FED6  84                 	db	132
   361   00FED7  85                 	db	133
   362   00FED8  45                 	db	69
   363   00FED9  87                 	db	135
   364   00FEDA  47                 	db	71
   365   00FEDB  46                 	db	70
   366   00FEDC  86                 	db	134
   367   00FEDD  82                 	db	130
   368   00FEDE  42                 	db	66
   369   00FEDF  43                 	db	67
   370   00FEE0  83                 	db	131
   371   00FEE1  41                 	db	65
   372   00FEE2  81                 	db	129
   373   00FEE3  80                 	db	128
   374   00FEE4  40                 	db	64
   375   00FEE5                     __end_of_auchCRCLo:
   376                           	callstack 0
   377   00FEE5                     _auchCRCHi:
   378                           	callstack 0
   379   00FEE5  00                 	db	0
   380   00FEE6  C1                 	db	193
   381   00FEE7  81                 	db	129
   382   00FEE8  40                 	db	64
   383   00FEE9  01                 	db	1
   384   00FEEA  C0                 	db	192
   385   00FEEB  80                 	db	128
   386   00FEEC  41                 	db	65
   387   00FEED  01                 	db	1
   388   00FEEE  C0                 	db	192
   389   00FEEF  80                 	db	128
   390   00FEF0  41                 	db	65
   391   00FEF1  00                 	db	0
   392   00FEF2  C1                 	db	193
   393   00FEF3  81                 	db	129
   394   00FEF4  40                 	db	64
   395   00FEF5  01                 	db	1
   396   00FEF6  C0                 	db	192
   397   00FEF7  80                 	db	128
   398   00FEF8  41                 	db	65
   399   00FEF9  00                 	db	0
   400   00FEFA  C1                 	db	193
   401   00FEFB  81                 	db	129
   402   00FEFC  40                 	db	64
   403   00FEFD  00                 	db	0
   404   00FEFE  C1                 	db	193
   405   00FEFF  81                 	db	129
   406   00FF00  40                 	db	64
   407   00FF01  01                 	db	1
   408   00FF02  C0                 	db	192
   409   00FF03  80                 	db	128
   410   00FF04  41                 	db	65
   411   00FF05  01                 	db	1
   412   00FF06  C0                 	db	192
   413   00FF07  80                 	db	128
   414   00FF08  41                 	db	65
   415   00FF09  00                 	db	0
   416   00FF0A  C1                 	db	193
   417   00FF0B  81                 	db	129
   418   00FF0C  40                 	db	64
   419   00FF0D  00                 	db	0
   420   00FF0E  C1                 	db	193
   421   00FF0F  81                 	db	129
   422   00FF10  40                 	db	64
   423   00FF11  01                 	db	1
   424   00FF12  C0                 	db	192
   425   00FF13  80                 	db	128
   426   00FF14  41                 	db	65
   427   00FF15  00                 	db	0
   428   00FF16  C1                 	db	193
   429   00FF17  81                 	db	129
   430   00FF18  40                 	db	64
   431   00FF19  01                 	db	1
   432   00FF1A  C0                 	db	192
   433   00FF1B  80                 	db	128
   434   00FF1C  41                 	db	65
   435   00FF1D  01                 	db	1
   436   00FF1E  C0                 	db	192
   437   00FF1F  80                 	db	128
   438   00FF20  41                 	db	65
   439   00FF21  00                 	db	0
   440   00FF22  C1                 	db	193
   441   00FF23  81                 	db	129
   442   00FF24  40                 	db	64
   443   00FF25  01                 	db	1
   444   00FF26  C0                 	db	192
   445   00FF27  80                 	db	128
   446   00FF28  41                 	db	65
   447   00FF29  00                 	db	0
   448   00FF2A  C1                 	db	193
   449   00FF2B  81                 	db	129
   450   00FF2C  40                 	db	64
   451   00FF2D  00                 	db	0
   452   00FF2E  C1                 	db	193
   453   00FF2F  81                 	db	129
   454   00FF30  40                 	db	64
   455   00FF31  01                 	db	1
   456   00FF32  C0                 	db	192
   457   00FF33  80                 	db	128
   458   00FF34  41                 	db	65
   459   00FF35  00                 	db	0
   460   00FF36  C1                 	db	193
   461   00FF37  81                 	db	129
   462   00FF38  40                 	db	64
   463   00FF39  01                 	db	1
   464   00FF3A  C0                 	db	192
   465   00FF3B  80                 	db	128
   466   00FF3C  41                 	db	65
   467   00FF3D  01                 	db	1
   468   00FF3E  C0                 	db	192
   469   00FF3F  80                 	db	128
   470   00FF40  41                 	db	65
   471   00FF41  00                 	db	0
   472   00FF42  C1                 	db	193
   473   00FF43  81                 	db	129
   474   00FF44  40                 	db	64
   475   00FF45  00                 	db	0
   476   00FF46  C1                 	db	193
   477   00FF47  81                 	db	129
   478   00FF48  40                 	db	64
   479   00FF49  01                 	db	1
   480   00FF4A  C0                 	db	192
   481   00FF4B  80                 	db	128
   482   00FF4C  41                 	db	65
   483   00FF4D  01                 	db	1
   484   00FF4E  C0                 	db	192
   485   00FF4F  80                 	db	128
   486   00FF50  41                 	db	65
   487   00FF51  00                 	db	0
   488   00FF52  C1                 	db	193
   489   00FF53  81                 	db	129
   490   00FF54  40                 	db	64
   491   00FF55  01                 	db	1
   492   00FF56  C0                 	db	192
   493   00FF57  80                 	db	128
   494   00FF58  41                 	db	65
   495   00FF59  00                 	db	0
   496   00FF5A  C1                 	db	193
   497   00FF5B  81                 	db	129
   498   00FF5C  40                 	db	64
   499   00FF5D  00                 	db	0
   500   00FF5E  C1                 	db	193
   501   00FF5F  81                 	db	129
   502   00FF60  40                 	db	64
   503   00FF61  01                 	db	1
   504   00FF62  C0                 	db	192
   505   00FF63  80                 	db	128
   506   00FF64  41                 	db	65
   507   00FF65  01                 	db	1
   508   00FF66  C0                 	db	192
   509   00FF67  80                 	db	128
   510   00FF68  41                 	db	65
   511   00FF69  00                 	db	0
   512   00FF6A  C1                 	db	193
   513   00FF6B  81                 	db	129
   514   00FF6C  40                 	db	64
   515   00FF6D  00                 	db	0
   516   00FF6E  C1                 	db	193
   517   00FF6F  81                 	db	129
   518   00FF70  40                 	db	64
   519   00FF71  01                 	db	1
   520   00FF72  C0                 	db	192
   521   00FF73  80                 	db	128
   522   00FF74  41                 	db	65
   523   00FF75  00                 	db	0
   524   00FF76  C1                 	db	193
   525   00FF77  81                 	db	129
   526   00FF78  40                 	db	64
   527   00FF79  01                 	db	1
   528   00FF7A  C0                 	db	192
   529   00FF7B  80                 	db	128
   530   00FF7C  41                 	db	65
   531   00FF7D  01                 	db	1
   532   00FF7E  C0                 	db	192
   533   00FF7F  80                 	db	128
   534   00FF80  41                 	db	65
   535   00FF81  00                 	db	0
   536   00FF82  C1                 	db	193
   537   00FF83  81                 	db	129
   538   00FF84  40                 	db	64
   539   00FF85  00                 	db	0
   540   00FF86  C1                 	db	193
   541   00FF87  81                 	db	129
   542   00FF88  40                 	db	64
   543   00FF89  01                 	db	1
   544   00FF8A  C0                 	db	192
   545   00FF8B  80                 	db	128
   546   00FF8C  41                 	db	65
   547   00FF8D  01                 	db	1
   548   00FF8E  C0                 	db	192
   549   00FF8F  80                 	db	128
   550   00FF90  41                 	db	65
   551   00FF91  00                 	db	0
   552   00FF92  C1                 	db	193
   553   00FF93  81                 	db	129
   554   00FF94  40                 	db	64
   555   00FF95  01                 	db	1
   556   00FF96  C0                 	db	192
   557   00FF97  80                 	db	128
   558   00FF98  41                 	db	65
   559   00FF99  00                 	db	0
   560   00FF9A  C1                 	db	193
   561   00FF9B  81                 	db	129
   562   00FF9C  40                 	db	64
   563   00FF9D  00                 	db	0
   564   00FF9E  C1                 	db	193
   565   00FF9F  81                 	db	129
   566   00FFA0  40                 	db	64
   567   00FFA1  01                 	db	1
   568   00FFA2  C0                 	db	192
   569   00FFA3  80                 	db	128
   570   00FFA4  41                 	db	65
   571   00FFA5  00                 	db	0
   572   00FFA6  C1                 	db	193
   573   00FFA7  81                 	db	129
   574   00FFA8  40                 	db	64
   575   00FFA9  01                 	db	1
   576   00FFAA  C0                 	db	192
   577   00FFAB  80                 	db	128
   578   00FFAC  41                 	db	65
   579   00FFAD  01                 	db	1
   580   00FFAE  C0                 	db	192
   581   00FFAF  80                 	db	128
   582   00FFB0  41                 	db	65
   583   00FFB1  00                 	db	0
   584   00FFB2  C1                 	db	193
   585   00FFB3  81                 	db	129
   586   00FFB4  40                 	db	64
   587   00FFB5  01                 	db	1
   588   00FFB6  C0                 	db	192
   589   00FFB7  80                 	db	128
   590   00FFB8  41                 	db	65
   591   00FFB9  00                 	db	0
   592   00FFBA  C1                 	db	193
   593   00FFBB  81                 	db	129
   594   00FFBC  40                 	db	64
   595   00FFBD  00                 	db	0
   596   00FFBE  C1                 	db	193
   597   00FFBF  81                 	db	129
   598   00FFC0  40                 	db	64
   599   00FFC1  01                 	db	1
   600   00FFC2  C0                 	db	192
   601   00FFC3  80                 	db	128
   602   00FFC4  41                 	db	65
   603   00FFC5  01                 	db	1
   604   00FFC6  C0                 	db	192
   605   00FFC7  80                 	db	128
   606   00FFC8  41                 	db	65
   607   00FFC9  00                 	db	0
   608   00FFCA  C1                 	db	193
   609   00FFCB  81                 	db	129
   610   00FFCC  40                 	db	64
   611   00FFCD  00                 	db	0
   612   00FFCE  C1                 	db	193
   613   00FFCF  81                 	db	129
   614   00FFD0  40                 	db	64
   615   00FFD1  01                 	db	1
   616   00FFD2  C0                 	db	192
   617   00FFD3  80                 	db	128
   618   00FFD4  41                 	db	65
   619   00FFD5  00                 	db	0
   620   00FFD6  C1                 	db	193
   621   00FFD7  81                 	db	129
   622   00FFD8  40                 	db	64
   623   00FFD9  01                 	db	1
   624   00FFDA  C0                 	db	192
   625   00FFDB  80                 	db	128
   626   00FFDC  41                 	db	65
   627   00FFDD  01                 	db	1
   628   00FFDE  C0                 	db	192
   629   00FFDF  80                 	db	128
   630   00FFE0  41                 	db	65
   631   00FFE1  00                 	db	0
   632   00FFE2  C1                 	db	193
   633   00FFE3  81                 	db	129
   634   00FFE4  40                 	db	64
   635   00FFE5                     __end_of_auchCRCHi:
   636                           	callstack 0
   637   000000                     _TMR0L	set	4054
   638   000000                     _TMR0H	set	4055
   639   000000                     _RCREG1	set	4014
   640   000000                     _TXREG1	set	4013
   641   000000                     _SPBRG1	set	4015
   642   000000                     _TXSTA1	set	4012
   643   000000                     _CCPR1L	set	4030
   644   000000                     _CCPR1H	set	4031
   645   000000                     _TRISC	set	3988
   646   000000                     _TRISH	set	3993
   647   000000                     _TRISB	set	3987
   648   000000                     _TRISG	set	3992
   649   000000                     _TRISA	set	3986
   650   000000                     _TRISF	set	3991
   651   000000                     _TRISE	set	3990
   652   000000                     _LATH	set	3984
   653   000000                     _LATC	set	3979
   654   000000                     _LATG	set	3983
   655   000000                     _LATB	set	3978
   656   000000                     _LATF	set	3982
   657   000000                     _LATE	set	3981
   658   000000                     _ADCON0	set	4034
   659   000000                     _ADRESL	set	4035
   660   000000                     _LATJ	set	3985
   661   000000                     _TRISJ	set	3994
   662   00FFE5                     STR_2:
   663   00FFE5  49                 	db	73	;'I'
   664   00FFE6  20                 	db	32
   665   00FFE7  3D                 	db	61	;'='
   666   00FFE8  20                 	db	32
   667   00FFE9  25                 	db	37
   668   00FFEA  30                 	db	48	;'0'
   669   00FFEB  34                 	db	52	;'4'
   670   00FFEC  64                 	db	100	;'d'
   671   00FFED  5B                 	db	91	;'['
   672   00FFEE  75                 	db	117	;'u'
   673   00FFEF  41                 	db	65	;'A'
   674   00FFF0  5D                 	db	93	;']'
   675   00FFF1  00                 	db	0
   676   00FFF2                     STR_1:
   677   00FFF2  55                 	db	85	;'U'
   678   00FFF3  20                 	db	32
   679   00FFF4  3D                 	db	61	;'='
   680   00FFF5  20                 	db	32
   681   00FFF6  25                 	db	37
   682   00FFF7  30                 	db	48	;'0'
   683   00FFF8  33                 	db	51	;'3'
   684   00FFF9  64                 	db	100	;'d'
   685   00FFFA  5B                 	db	91	;'['
   686   00FFFB  6D                 	db	109	;'m'
   687   00FFFC  56                 	db	86	;'V'
   688   00FFFD  5D                 	db	93	;']'
   689   00FFFE  00                 	db	0
   690   00FFFF  00                 	db	0	; dummy byte at the end
   691   000000                     
   692                           	psect	nvCOMRAM
   693   000048                     __pnvCOMRAM:
   694                           	callstack 0
   695   000048                     _TMR0_InterruptHandler:
   696                           	callstack 0
   697   000048                     	ds	3
   698   00004B                     _EUSART1_RxDefaultInterruptHandler:
   699                           	callstack 0
   700   00004B                     	ds	3
   701   00004E                     _EUSART1_TxDefaultInterruptHandler:
   702                           	callstack 0
   703   00004E                     	ds	3
   704                           
   705                           	psect	nvBANK0
   706   0000EC                     __pnvBANK0:
   707                           	callstack 0
   708   0000EC                     _EUSART1_ErrorHandler:
   709                           	callstack 0
   710   0000EC                     	ds	3
   711   0000EF                     _EUSART1_OverrunErrorHandler:
   712                           	callstack 0
   713   0000EF                     	ds	3
   714   0000F2                     _EUSART1_FramingErrorHandler:
   715                           	callstack 0
   716   0000F2                     	ds	3
   717   000000                     _T0CON	set	4053
   718   000000                     _RCSTA1bits	set	4011
   719   000000                     _TXSTA1bits	set	4012
   720   000000                     _T2CONbits	set	4042
   721   000000                     _ADCON1bits	set	4033
   722   000000                     _TRISD	set	3989
   723   000000                     _LATD	set	3980
   724   000000                     _ADCON0bits	set	4034
   725   000000                     _TMR0ON	set	32431
   726   000000                     _ECCP1DEL	set	3961
   727   000000                     _LATA	set	3977
   728   000000                     _LATDbits	set	3980
   729   000000                     _TRISDbits	set	3989
   730   000000                     _PIE1bits	set	3997
   731   000000                     _PIR1bits	set	3998
   732   000000                     _ECCP1AS	set	4022
   733   000000                     _CCP1CON	set	4029
   734   000000                     _ADCON2	set	4032
   735   000000                     _ADCON1	set	4033
   736   000000                     _OSCTUNE	set	3995
   737   000000                     _OSCCON	set	4051
   738   000000                     _T0CONbits	set	4053
   739   000000                     _T2CON	set	4042
   740   000000                     _PR2	set	4043
   741   000000                     _ADRESH	set	4036
   742   000000                     _BAUDCON1	set	3966
   743   000000                     _RCONbits	set	4048
   744   000000                     _TMR2	set	4044
   745   000000                     _RCSTA1	set	4011
   746   000000                     _SPBRGH1	set	3967
   747   000000                     _INTCONbits	set	4082
   748                           
   749                           ; #config settings
   750                           
   751                           	psect	cinit
   752   0111E4                     __pcinit:
   753                           	callstack 0
   754   0111E4                     start_initialization:
   755                           	callstack 0
   756   0111E4                     __initialization:
   757                           	callstack 0
   758                           
   759                           ; Clear objects allocated to BANK2 (256 bytes)
   760   0111E4  EE02  F000         	lfsr	0,__pbssBANK2
   761   0111E8  EE11 F000          	lfsr	1,256
   762   0111EC                     clear_0:
   763   0111EC  6AEE               	clrf	postinc0,c
   764   0111EE  50E5               	movf	postdec1,w,c
   765   0111F0  50E1               	movf	fsr1l,w,c
   766   0111F2  E1FC               	bnz	clear_0
   767   0111F4  50E2               	movf	fsr1h,w,c
   768   0111F6  E1FA               	bnz	clear_0
   769                           
   770                           ; Clear objects allocated to BANK1 (256 bytes)
   771   0111F8  EE01  F000         	lfsr	0,__pbssBANK1
   772   0111FC  EE11 F000          	lfsr	1,256
   773   011200                     clear_1:
   774   011200  6AEE               	clrf	postinc0,c
   775   011202  50E5               	movf	postdec1,w,c
   776   011204  50E1               	movf	fsr1l,w,c
   777   011206  E1FC               	bnz	clear_1
   778   011208  50E2               	movf	fsr1h,w,c
   779   01120A  E1FA               	bnz	clear_1
   780                           
   781                           ; Clear objects allocated to BANK0 (55 bytes)
   782   01120C  EE00  F0B5         	lfsr	0,__pbssBANK0
   783   011210  0E37               	movlw	55
   784   011212                     clear_2:
   785   011212  6AEE               	clrf	postinc0,c
   786   011214  06E8               	decf	wreg,f,c
   787   011216  E1FD               	bnz	clear_2
   788                           
   789                           ; Clear objects allocated to COMRAM (31 bytes)
   790   011218  EE00  F029         	lfsr	0,__pbssCOMRAM
   791   01121C  0E1F               	movlw	31
   792   01121E                     clear_3:
   793   01121E  6AEE               	clrf	postinc0,c
   794   011220  06E8               	decf	wreg,f,c
   795   011222  E1FD               	bnz	clear_3
   796   011224                     end_of_initialization:
   797                           	callstack 0
   798   011224                     __end_of__initialization:
   799                           	callstack 0
   800   011224  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   801   011226  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   802   011228  0100               	movlb	0
   803   01122A  EFF8  F083         	goto	_main	;jump to C main() function
   804                           
   805                           	psect	bssCOMRAM
   806   000029                     __pbssCOMRAM:
   807                           	callstack 0
   808   000029                     _eusart1RxStatusBuffer:
   809                           	callstack 0
   810   000029                     	ds	8
   811   000031                     _eusart1TxBuffer:
   812                           	callstack 0
   813   000031                     	ds	8
   814   000039                     _ADC_InterruptHandler:
   815                           	callstack 0
   816   000039                     	ds	3
   817   00003C                     _timer0ReloadVal:
   818                           	callstack 0
   819   00003C                     	ds	2
   820   00003E                     _recPtr:
   821                           	callstack 0
   822   00003E                     	ds	1
   823   00003F                     _index:
   824                           	callstack 0
   825   00003F                     	ds	1
   826   000040                     _modbusAddress:
   827                           	callstack 0
   828   000040                     	ds	1
   829   000041                     _eusart1RxLastError:
   830                           	callstack 0
   831   000041                     	ds	1
   832   000042                     _eusart1RxCount:
   833                           	callstack 0
   834   000042                     	ds	1
   835   000043                     _eusart1RxTail:
   836                           	callstack 0
   837   000043                     	ds	1
   838   000044                     _eusart1RxHead:
   839                           	callstack 0
   840   000044                     	ds	1
   841   000045                     _eusart1TxBufferRemaining:
   842                           	callstack 0
   843   000045                     	ds	1
   844   000046                     _eusart1TxTail:
   845                           	callstack 0
   846   000046                     	ds	1
   847   000047                     _eusart1TxHead:
   848                           	callstack 0
   849   000047                     	ds	1
   850                           
   851                           	psect	bssBANK0
   852   0000B5                     __pbssBANK0:
   853                           	callstack 0
   854   0000B5                     _eusart1RxBuffer:
   855                           	callstack 0
   856   0000B5                     	ds	8
   857   0000BD                     _input_registers:
   858                           	callstack 0
   859   0000BD                     	ds	4
   860   0000C1                     _holding_registers:
   861                           	callstack 0
   862   0000C1                     	ds	4
   863   0000C5                     _width:
   864                           	callstack 0
   865   0000C5                     	ds	2
   866   0000C7                     _prec:
   867                           	callstack 0
   868   0000C7                     	ds	2
   869   0000C9                     _offset:
   870                           	callstack 0
   871   0000C9                     	ds	2
   872   0000CB                     _flags:
   873                           	callstack 0
   874   0000CB                     	ds	1
   875   0000CC                     _dbuf:
   876                           	callstack 0
   877   0000CC                     	ds	32
   878                           
   879                           	psect	bssBANK1
   880   000100                     __pbssBANK1:
   881                           	callstack 0
   882   000100                     _rx_buf:
   883                           	callstack 0
   884   000100                     	ds	256
   885                           
   886                           	psect	bssBANK2
   887   000200                     __pbssBANK2:
   888                           	callstack 0
   889   000200                     _tx_buf:
   890                           	callstack 0
   891   000200                     	ds	256
   892                           
   893                           	psect	cstackBANK3
   894   000300                     __pcstackBANK3:
   895                           	callstack 0
   896   000300                     main@tempString:
   897                           	callstack 0
   898                           
   899                           ; 20 bytes @ 0x0
   900   000300                     	ds	20
   901                           
   902                           	psect	cstackBANK0
   903   000060                     __pcstackBANK0:
   904                           	callstack 0
   905   000060                     ??_LCD_2x16_WriteCmd:
   906   000060                     ??_LCD_2x16_WriteData:
   907   000060                     ?_ADC_GetConversion:
   908                           	callstack 0
   909   000060                     ?___wmul:
   910                           	callstack 0
   911   000060                     ?___awdiv:
   912                           	callstack 0
   913   000060                     ?___awmod:
   914                           	callstack 0
   915   000060                     ?___lmul:
   916                           	callstack 0
   917   000060                     EPWM1_LoadDutyValue@dutyValue:
   918                           	callstack 0
   919   000060                     ___wmul@multiplier:
   920                           	callstack 0
   921   000060                     ___awdiv@dividend:
   922                           	callstack 0
   923   000060                     ___awmod@dividend:
   924                           	callstack 0
   925   000060                     fputc@c:
   926                           	callstack 0
   927   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   928                           	callstack 0
   929   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   930                           	callstack 0
   931   000060                     EUSART1_SetErrorHandler@interruptHandler:
   932                           	callstack 0
   933   000060                     EUSART1_SetTxInterruptHandler@interruptHandler:
   934                           	callstack 0
   935   000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   936                           	callstack 0
   937   000060                     TMR0_SetInterruptHandler@InterruptHandler:
   938                           	callstack 0
   939   000060                     ___lmul@multiplier:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x0
   943   000060                     	ds	1
   944   000061                     LCD_2x16_WriteCmd@command:
   945                           	callstack 0
   946   000061                     LCD_2x16_WriteData@command:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1
   950   000061                     	ds	1
   951   000062                     ??_Lcd_Init:
   952   000062                     ??_ADC_GetConversion:
   953   000062                     ??_EPWM1_LoadDutyValue:
   954   000062                     LCD_2x16_WriteMsg@msg:
   955                           	callstack 0
   956   000062                     ___wmul@multiplicand:
   957                           	callstack 0
   958   000062                     ___awdiv@divisor:
   959                           	callstack 0
   960   000062                     ___awmod@divisor:
   961                           	callstack 0
   962   000062                     fputc@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x2
   966   000062                     	ds	1
   967   000063                     ??_TMR0_Initialize:
   968   000063                     
   969                           ; 1 bytes @ 0x3
   970   000063                     	ds	1
   971   000064                     ??_fputc:
   972   000064                     LCD_2x16_WriteMsg@line:
   973                           	callstack 0
   974   000064                     ADC_GetConversion@channel:
   975                           	callstack 0
   976   000064                     ___awdiv@counter:
   977                           	callstack 0
   978   000064                     ___awmod@counter:
   979                           	callstack 0
   980   000064                     ___wmul@product:
   981                           	callstack 0
   982   000064                     ___lmul@multiplicand:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x4
   986   000064                     	ds	1
   987   000065                     ___awdiv@sign:
   988                           	callstack 0
   989   000065                     ___awmod@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x5
   993   000065                     	ds	1
   994   000066                     ?_abs:
   995                           	callstack 0
   996   000066                     ?_read_prec_or_width:
   997                           	callstack 0
   998   000066                     ___awdiv@quotient:
   999                           	callstack 0
  1000   000066                     read_prec_or_width@fmt:
  1001                           	callstack 0
  1002   000066                     abs@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x6
  1006   000066                     	ds	2
  1007   000068                     ??_abs:
  1008   000068                     read_prec_or_width@ap:
  1009                           	callstack 0
  1010   000068                     ___lmul@product:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x8
  1014   000068                     	ds	1
  1015   000069                     fputs@s:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x9
  1019   000069                     	ds	1
  1020   00006A                     ??_read_prec_or_width:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023   00006A                     	ds	1
  1024   00006B                     fputs@fp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xB
  1028   00006B                     	ds	1
  1029   00006C                     ?___lldiv:
  1030                           	callstack 0
  1031   00006C                     read_prec_or_width@c:
  1032                           	callstack 0
  1033   00006C                     ___lldiv@dividend:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0xC
  1037   00006C                     	ds	1
  1038   00006D                     fputs@c:
  1039                           	callstack 0
  1040   00006D                     read_prec_or_width@n:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xD
  1044   00006D                     	ds	1
  1045   00006E                     fputs@i:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xE
  1049   00006E                     	ds	2
  1050   000070                     pad@fp:
  1051                           	callstack 0
  1052   000070                     ___lldiv@divisor:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x10
  1056   000070                     	ds	2
  1057   000072                     pad@buf:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x12
  1061   000072                     	ds	2
  1062   000074                     pad@p:
  1063                           	callstack 0
  1064   000074                     ___lldiv@quotient:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x14
  1068   000074                     	ds	2
  1069   000076                     ??_pad:
  1070                           
  1071                           ; 1 bytes @ 0x16
  1072   000076                     	ds	1
  1073   000077                     pad@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x17
  1077   000077                     	ds	1
  1078   000078                     ___lldiv@counter:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x18
  1082   000078                     	ds	1
  1083   000079                     ?_measure_current:
  1084                           	callstack 0
  1085   000079                     ?_measure_voltage:
  1086                           	callstack 0
  1087   000079                     measure_current@offset:
  1088                           	callstack 0
  1089   000079                     pad@w:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x19
  1093   000079                     	ds	2
  1094   00007B                     ??_measure_current:
  1095   00007B                     ??_measure_voltage:
  1096   00007B                     dtoa@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x1B
  1100   00007B                     	ds	1
  1101   00007C                     measure_voltage@result:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x1C
  1105   00007C                     	ds	1
  1106   00007D                     dtoa@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x1D
  1110   00007D                     	ds	2
  1111   00007F                     measure_current@i:
  1112                           	callstack 0
  1113   00007F                     _dtoa$1711:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x1F
  1117   00007F                     	ds	1
  1118   000080                     measure_voltage@i:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x20
  1122   000080                     	ds	1
  1123   000081                     dtoa@p:
  1124                           	callstack 0
  1125   000081                     measure_current@result:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x21
  1129   000081                     	ds	2
  1130   000083                     dtoa@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x23
  1134   000083                     	ds	2
  1135   000085                     dtoa@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x25
  1139   000085                     	ds	1
  1140   000086                     dtoa@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x26
  1144   000086                     	ds	2
  1145   000088                     vfpfcnvrt@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x28
  1149   000088                     	ds	2
  1150   00008A                     vfpfcnvrt@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154   00008A                     	ds	2
  1155   00008C                     vfpfcnvrt@ap:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2C
  1159   00008C                     	ds	2
  1160   00008E                     ??_vfpfcnvrt:
  1161                           
  1162                           ; 1 bytes @ 0x2E
  1163   00008E                     	ds	2
  1164   000090                     vfpfcnvrt@convarg:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x30
  1168   000090                     	ds	4
  1169   000094                     vfpfcnvrt@done:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x34
  1173   000094                     	ds	2
  1174   000096                     vfpfcnvrt@cp:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x36
  1178   000096                     	ds	2
  1179   000098                     ?_vfprintf:
  1180                           	callstack 0
  1181   000098                     vfprintf@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x38
  1185   000098                     	ds	2
  1186   00009A                     vfprintf@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x3A
  1190   00009A                     	ds	2
  1191   00009C                     vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3C
  1195   00009C                     	ds	2
  1196   00009E                     vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3E
  1200   00009E                     	ds	2
  1201   0000A0                     ?_sprintf:
  1202                           	callstack 0
  1203   0000A0                     sprintf@s:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x40
  1207   0000A0                     	ds	2
  1208   0000A2                     sprintf@fmt:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x42
  1212   0000A2                     	ds	4
  1213   0000A6                     sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x46
  1217   0000A6                     	ds	2
  1218   0000A8                     sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 12 bytes @ 0x48
  1222   0000A8                     	ds	12
  1223   0000B4                     ??_main:
  1224                           
  1225                           ; 1 bytes @ 0x54
  1226   0000B4                     	ds	1
  1227                           
  1228                           	psect	cstackCOMRAM
  1229   000001                     __pcstackCOMRAM:
  1230                           	callstack 0
  1231   000001                     ?_CRC16:
  1232                           	callstack 0
  1233   000001                     EUSART1_Write@txData:
  1234                           	callstack 0
  1235   000001                     modbus_char_recvd@c:
  1236                           	callstack 0
  1237   000001                     CRC16@msg:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241   000001                     	ds	1
  1242   000002                     ??_modbus_send:
  1243                           
  1244                           ; 1 bytes @ 0x1
  1245   000002                     	ds	1
  1246   000003                     CRC16@length:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2
  1250   000003                     	ds	2
  1251   000005                     ??_CRC16:
  1252   000005                     modbus_send@length:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x4
  1256   000005                     	ds	1
  1257   000006                     modbus_send@i:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x5
  1261   000006                     	ds	1
  1262   000007                     CRC16@uIndex:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x6
  1266   000007                     	ds	1
  1267   000008                     CRC16@uchCRCHi:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x7
  1271   000008                     	ds	1
  1272   000009                     CRC16@uchCRCLo:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x8
  1276   000009                     	ds	1
  1277   00000A                     ??_modbus_analyse_and_answer:
  1278                           
  1279                           ; 1 bytes @ 0x9
  1280   00000A                     	ds	4
  1281   00000E                     modbus_analyse_and_answer@crcAtt:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0xD
  1285   00000E                     	ds	2
  1286   000010                     modbus_analyse_and_answer@functionCode:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0xF
  1290   000010                     	ds	1
  1291   000011                     modbus_analyse_and_answer@pwmValue:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x10
  1295   000011                     	ds	2
  1296   000013                     modbus_analyse_and_answer@i_1186:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x12
  1300   000013                     	ds	2
  1301   000015                     modbus_analyse_and_answer@crc:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x14
  1305   000015                     	ds	2
  1306   000017                     modbus_analyse_and_answer@i:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x16
  1310   000017                     	ds	2
  1311   000019                     modbus_analyse_and_answer@startingAddress:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x18
  1315   000019                     	ds	2
  1316   00001B                     modbus_analyse_and_answer@nbofRegister:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x1A
  1320   00001B                     	ds	2
  1321   00001D                     ??_INTERRUPT_InterruptManager:
  1322                           
  1323                           ; 1 bytes @ 0x1C
  1324   00001D                     	ds	12
  1325                           
  1326 ;;
  1327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1328 ;;
  1329 ;; *************** function _main *****************
  1330 ;; Defined at:
  1331 ;;		line 51 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  tempString     20    0[BANK3 ] unsigned char [20]
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         0       1       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:       21 bytes
  1350 ;; Hardware stack levels required when called: 12
  1351 ;; This function calls:
  1352 ;;		_EPWM1_LoadDutyValue
  1353 ;;		_LCD_2x16_WriteMsg
  1354 ;;		_Lcd_Init
  1355 ;;		_SYSTEM_Initialize
  1356 ;;		_measure_current
  1357 ;;		_measure_voltage
  1358 ;;		_sprintf
  1359 ;; This function is called by:
  1360 ;;		Startup code after reset
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text0
  1365   0107F0                     __ptext0:
  1366                           	callstack 0
  1367   0107F0                     _main:
  1368                           	callstack 19
  1369   0107F0                     
  1370                           ;main.c: 54:     SYSTEM_Initialize();
  1371   0107F0  EC9F  F08A         	call	_SYSTEM_Initialize	;wreg free
  1372   0107F4                     
  1373                           ;main.c: 57:     (INTCONbits.GIE = 1);
  1374   0107F4  8EF2               	bsf	242,7,c	;volatile
  1375   0107F6                     
  1376                           ;main.c: 59:     (INTCONbits.PEIE = 1);
  1377   0107F6  8CF2               	bsf	242,6,c	;volatile
  1378   0107F8                     
  1379                           ;main.c: 61:     holding_registers[1] = 0x80;
  1380   0107F8  0E00               	movlw	0
  1381   0107FA  0100               	movlb	0	; () banked
  1382   0107FC  6FC4               	movwf	(_holding_registers+3)& (0+255),b
  1383   0107FE  0E80               	movlw	128
  1384   010800  6FC3               	movwf	(_holding_registers+2)& (0+255),b
  1385   010802                     
  1386                           ; BSR set to: 0
  1387                           ;main.c: 64:     char tempString[20];;main.c: 65:     Lcd_Init();
  1388   010802  EC60  F089         	call	_Lcd_Init	;wreg free
  1389   010806                     
  1390                           ;main.c: 67:      EPWM1_LoadDutyValue(0);
  1391   010806  0E00               	movlw	0
  1392   010808  0100               	movlb	0	; () banked
  1393   01080A  6F61               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1394   01080C  0E00               	movlw	0
  1395   01080E  6F60               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1396   010810  EC5D  F08A         	call	_EPWM1_LoadDutyValue	;wreg free
  1397   010814                     
  1398                           ;main.c: 68:     _delay((unsigned long)((30)*(25000000/4000.0)));
  1399   010814  0EF4               	movlw	244
  1400   010816  0100               	movlb	0	; () banked
  1401   010818  6FB4               	movwf	??_main& (0+255),b
  1402   01081A  0E80               	movlw	128
  1403   01081C                     u2267:
  1404   01081C  2EE8               	decfsz	wreg,f,c
  1405   01081E  D7FE               	bra	u2267
  1406   010820  2FB4               	decfsz	??_main& (0+255),f,b
  1407   010822  D7FC               	bra	u2267
  1408   010824  F000               	nop	
  1409   010826                     
  1410                           ;main.c: 69:     offset = measure_current(0);
  1411   010826  0E00               	movlw	0
  1412   010828  0100               	movlb	0	; () banked
  1413   01082A  6F7A               	movwf	(measure_current@offset+1)& (0+255),b
  1414   01082C  0E00               	movlw	0
  1415   01082E  6F79               	movwf	measure_current@offset& (0+255),b
  1416   010830  EC24  F083         	call	_measure_current	;wreg free
  1417   010834  C079  F0C9         	movff	?_measure_current,_offset
  1418   010838  C07A  F0CA         	movff	?_measure_current+1,_offset+1
  1419   01083C                     l3596:
  1420                           
  1421                           ;main.c: 72:     {;main.c: 73:          input_registers[0] = measure_voltage();
  1422   01083C  ECFA  F085         	call	_measure_voltage	;wreg free
  1423   010840  C079  F0BD         	movff	?_measure_voltage,_input_registers
  1424   010844  C07A  F0BE         	movff	?_measure_voltage+1,_input_registers+1
  1425   010848                     
  1426                           ;main.c: 74:          input_registers[1] = measure_current(offset);
  1427   010848  C0C9  F079         	movff	_offset,measure_current@offset
  1428   01084C  C0CA  F07A         	movff	_offset+1,measure_current@offset+1
  1429   010850  EC24  F083         	call	_measure_current	;wreg free
  1430   010854  C079  F0BF         	movff	?_measure_current,_input_registers+2
  1431   010858  C07A  F0C0         	movff	?_measure_current+1,_input_registers+3
  1432   01085C                     
  1433                           ;main.c: 75:          EPWM1_LoadDutyValue(holding_registers[0]);
  1434   01085C  C0C1  F060         	movff	_holding_registers,EPWM1_LoadDutyValue@dutyValue
  1435   010860  C0C2  F061         	movff	_holding_registers+1,EPWM1_LoadDutyValue@dutyValue+1
  1436   010864  EC5D  F08A         	call	_EPWM1_LoadDutyValue	;wreg free
  1437   010868                     
  1438                           ;main.c: 79:          sprintf(tempString,"U = %03d[mV]",input_registers[0]);
  1439   010868  0E00               	movlw	low main@tempString
  1440   01086A  0100               	movlb	0	; () banked
  1441   01086C  6FA0               	movwf	sprintf@s& (0+255),b
  1442   01086E  0E03               	movlw	high main@tempString
  1443   010870  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1444   010872  0EF2               	movlw	low STR_1
  1445   010874  6FA2               	movwf	sprintf@fmt& (0+255),b
  1446   010876  0EFF               	movlw	high STR_1
  1447   010878  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1448   01087A  C0BD  F0A4         	movff	_input_registers,?_sprintf+4
  1449   01087E  C0BE  F0A5         	movff	_input_registers+1,?_sprintf+5
  1450   010882  ECCA  F088         	call	_sprintf	;wreg free
  1451   010886                     
  1452                           ;main.c: 80:          LCD_2x16_WriteMsg(tempString,0);
  1453   010886  0E00               	movlw	low main@tempString
  1454   010888  0100               	movlb	0	; () banked
  1455   01088A  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1456   01088C  0E03               	movlw	high main@tempString
  1457   01088E  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1458   010890  0E00               	movlw	0
  1459   010892  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1460   010894  EC05  F08A         	call	_LCD_2x16_WriteMsg	;wreg free
  1461   010898                     
  1462                           ;main.c: 81:          sprintf(tempString,"I = %04d[uA]",input_registers[1]);
  1463   010898  0E00               	movlw	low main@tempString
  1464   01089A  0100               	movlb	0	; () banked
  1465   01089C  6FA0               	movwf	sprintf@s& (0+255),b
  1466   01089E  0E03               	movlw	high main@tempString
  1467   0108A0  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1468   0108A2  0EE5               	movlw	low STR_2
  1469   0108A4  6FA2               	movwf	sprintf@fmt& (0+255),b
  1470   0108A6  0EFF               	movlw	high STR_2
  1471   0108A8  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1472   0108AA  C0BF  F0A4         	movff	_input_registers+2,?_sprintf+4
  1473   0108AE  C0C0  F0A5         	movff	_input_registers+3,?_sprintf+5
  1474   0108B2  ECCA  F088         	call	_sprintf	;wreg free
  1475   0108B6                     
  1476                           ;main.c: 82:          LCD_2x16_WriteMsg(tempString,1);
  1477   0108B6  0E00               	movlw	low main@tempString
  1478   0108B8  0100               	movlb	0	; () banked
  1479   0108BA  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1480   0108BC  0E03               	movlw	high main@tempString
  1481   0108BE  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1482   0108C0  0E01               	movlw	1
  1483   0108C2  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1484   0108C4  EC05  F08A         	call	_LCD_2x16_WriteMsg	;wreg free
  1485   0108C8  EF1E  F084         	goto	l3596
  1486   0108CC  EF93  F000         	goto	start
  1487   0108D0                     __end_of_main:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _sprintf *****************
  1491 ;; Defined at:
  1492 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1495 ;;		 -> main@tempString(20), 
  1496 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1497 ;;		 -> STR_2(13), STR_1(13), 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  f              12   72[BANK0 ] struct _IO_FILE
  1500 ;;  ap              2   70[BANK0 ] PTR void [1]
  1501 ;;		 -> ?_sprintf(2), 
  1502 ;;  ret             2    0        int 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  2   64[BANK0 ] int 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1512 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;Total ram usage:       20 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 11
  1519 ;; This function calls:
  1520 ;;		_vfprintf
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text1
  1527   011194                     __ptext1:
  1528                           	callstack 0
  1529   011194                     _sprintf:
  1530                           	callstack 19
  1531   011194  0EA4               	movlw	low (?_sprintf+4)
  1532   011196  0100               	movlb	0	; () banked
  1533   011198  6FA6               	movwf	sprintf@ap& (0+255),b
  1534   01119A  0E00               	movlw	high (?_sprintf+4)
  1535   01119C  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1536   01119E  C0A0  F0A8         	movff	sprintf@s,sprintf@f
  1537   0111A2  C0A1  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1538   0111A6                     
  1539                           ; BSR set to: 0
  1540   0111A6  0E00               	movlw	0
  1541   0111A8  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1542   0111AA  0E00               	movlw	0
  1543   0111AC  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1544   0111AE                     
  1545                           ; BSR set to: 0
  1546   0111AE  0E00               	movlw	0
  1547   0111B0  6FB3               	movwf	(sprintf@f+11)& (0+255),b
  1548   0111B2  0E00               	movlw	0
  1549   0111B4  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1550   0111B6                     
  1551                           ; BSR set to: 0
  1552   0111B6  0EA8               	movlw	low sprintf@f
  1553   0111B8  6F98               	movwf	vfprintf@fp& (0+255),b
  1554   0111BA  0E00               	movlw	high sprintf@f
  1555   0111BC  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1556   0111BE  C0A2  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1557   0111C2  C0A3  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1558   0111C6  0EA6               	movlw	low sprintf@ap
  1559   0111C8  6F9C               	movwf	vfprintf@ap& (0+255),b
  1560   0111CA  0E00               	movlw	high sprintf@ap
  1561   0111CC  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1562   0111CE  EC4A  F088         	call	_vfprintf	;wreg free
  1563   0111D2  0100               	movlb	0	; () banked
  1564   0111D4  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1565   0111D6  25A0               	addwf	sprintf@s& (0+255),w,b
  1566   0111D8  6ED9               	movwf	fsr2l,c
  1567   0111DA  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1568   0111DC  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1569   0111DE  6EDA               	movwf	fsr2h,c
  1570   0111E0  6ADF               	clrf	indf2,c
  1571   0111E2                     
  1572                           ; BSR set to: 0
  1573   0111E2  0012               	return		;funcret
  1574   0111E4                     __end_of_sprintf:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _vfprintf *****************
  1578 ;; Defined at:
  1579 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1582 ;;		 -> sprintf@f(12), 
  1583 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1584 ;;		 -> STR_2(13), STR_1(13), 
  1585 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1586 ;;		 -> sprintf@ap(2), 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1589 ;;		 -> STR_2(13), STR_1(13), 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2   56[BANK0 ] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        8 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 10
  1606 ;; This function calls:
  1607 ;;		_vfpfcnvrt
  1608 ;; This function is called by:
  1609 ;;		_sprintf
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text2
  1614   011094                     __ptext2:
  1615                           	callstack 0
  1616   011094                     _vfprintf:
  1617                           	callstack 19
  1618   011094                     
  1619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1620   011094  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1621   011098  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1624   01109C  EF5F  F088         	goto	l3470
  1625   0110A0                     l3468:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1628   0110A0  C098  F088         	movff	vfprintf@fp,vfpfcnvrt@fp
  1629   0110A4  C099  F089         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1630   0110A8  0E9E               	movlw	low vfprintf@cfmt
  1631   0110AA  0100               	movlb	0	; () banked
  1632   0110AC  6F8A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1633   0110AE  0E00               	movlw	high vfprintf@cfmt
  1634   0110B0  6F8B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1635   0110B2  C09C  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1636   0110B6  C09D  F08D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1637   0110BA  EC4B  F081         	call	_vfpfcnvrt	;wreg free
  1638   0110BE                     l3470:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1641   0110BE  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1642   0110C2  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1643   0110C6                     	if	0	;tblptru may be non-zero
  1644   0110C6                     	endif
  1645   0110C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1646   0110C6  0E00               	movlw	low (__mediumconst shr (0+16))
  1647   0110C8  6EF8               	movwf	tblptru,c
  1648   0110CA                     	endif
  1649   0110CA  0008               	tblrd		*
  1650   0110CC  50F5               	movf	tablat,w,c
  1651   0110CE  0900               	iorlw	0
  1652   0110D0  A4D8               	btfss	status,2,c
  1653   0110D2  EF6D  F088         	goto	u2191
  1654   0110D6  EF6F  F088         	goto	u2190
  1655   0110DA                     u2191:
  1656   0110DA  EF50  F088         	goto	l3468
  1657   0110DE                     u2190:
  1658   0110DE                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1660   0110DE  0E00               	movlw	0
  1661   0110E0  0100               	movlb	0	; () banked
  1662   0110E2  6F99               	movwf	(?_vfprintf+1)& (0+255),b
  1663   0110E4  0E00               	movlw	0
  1664   0110E6  6F98               	movwf	?_vfprintf& (0+255),b
  1665   0110E8                     
  1666                           ; BSR set to: 0
  1667   0110E8  0012               	return		;funcret
  1668   0110EA                     __end_of_vfprintf:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _vfpfcnvrt *****************
  1672 ;; Defined at:
  1673 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  1676 ;;		 -> sprintf@f(12), 
  1677 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  1678 ;;		 -> vfprintf@cfmt(2), 
  1679 ;;  ap              2   44[BANK0 ] PTR PTR void 
  1680 ;;		 -> sprintf@ap(2), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  convarg         4   48[BANK0 ] struct .
  1683 ;;  cp              2   54[BANK0 ] PTR unsigned char 
  1684 ;;		 -> STR_2(13), STR_1(13), 
  1685 ;;  done            2   52[BANK0 ] int 
  1686 ;;  i               2    0        int 
  1687 ;;  c               1    0        unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1697 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;Total ram usage:       16 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 9
  1704 ;; This function calls:
  1705 ;;		_dtoa
  1706 ;;		_fputc
  1707 ;;		_read_prec_or_width
  1708 ;; This function is called by:
  1709 ;;		_vfprintf
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text3
  1714   010296                     __ptext3:
  1715                           	callstack 0
  1716   010296                     _vfpfcnvrt:
  1717                           	callstack 19
  1718   010296                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1720   010296  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721   01029A  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722   01029E  CFDE FFF6          	movff	postinc2,tblptrl
  1723   0102A2  CFDD FFF7          	movff	postdec2,tblptrh
  1724   0102A6                     	if	0	;tblptru may be non-zero
  1725   0102A6                     	endif
  1726   0102A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1727   0102A6  0E00               	movlw	low (__mediumconst shr (0+16))
  1728   0102A8  6EF8               	movwf	tblptru,c
  1729   0102AA                     	endif
  1730   0102AA  0008               	tblrd		*
  1731   0102AC  50F5               	movf	tablat,w,c
  1732   0102AE  0A25               	xorlw	37
  1733   0102B0  A4D8               	btfss	status,2,c
  1734   0102B2  EF5D  F081         	goto	u2081
  1735   0102B6  EF5F  F081         	goto	u2080
  1736   0102BA                     u2081:
  1737   0102BA  EF24  F082         	goto	l3302
  1738   0102BE                     u2080:
  1739   0102BE                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1741   0102BE  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742   0102C2  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743   0102C6  2ADE               	incf	postinc2,f,c
  1744   0102C8  0E00               	movlw	0
  1745   0102CA  22DD               	addwfc	postdec2,f,c
  1746   0102CC                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1748   0102CC  0E00               	movlw	0
  1749   0102CE  0100               	movlb	0	; () banked
  1750   0102D0  6FC6               	movwf	(_width+1)& (0+255),b
  1751   0102D2  0E00               	movlw	0
  1752   0102D4  6FC5               	movwf	_width& (0+255),b
  1753   0102D6  C0C5  F0CB         	movff	_width,_flags
  1754   0102DA                     
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1757   0102DA  69C7               	setf	_prec& (0+255),b
  1758   0102DC  69C8               	setf	(_prec+1)& (0+255),b
  1759   0102DE                     
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1762   0102DE  0E00               	movlw	0
  1763   0102E0  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1764   0102E2  0E00               	movlw	0
  1765   0102E4  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1768   0102E6  EFA1  F081         	goto	l3278
  1769   0102EA                     l3268:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1773   0102EA  83CB               	bsf	_flags& (0+255),1,b
  1774   0102EC                     
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1777   0102EC  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1778   0102F0  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1779   0102F4  2ADE               	incf	postinc2,f,c
  1780   0102F6  0E00               	movlw	0
  1781   0102F8  22DD               	addwfc	postdec2,f,c
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1784   0102FA  EFA1  F081         	goto	l3278
  1785   0102FE                     l3272:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1789   0102FE  0E00               	movlw	0
  1790   010300  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1791   010302  0E01               	movlw	1
  1792   010304  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1795   010306  EFA1  F081         	goto	l3278
  1796   01030A                     l3276:
  1797                           
  1798                           ; BSR set to: 0
  1799   01030A  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1800   01030E  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1801   010312  CFDE FFF6          	movff	postinc2,tblptrl
  1802   010316  CFDD FFF7          	movff	postdec2,tblptrh
  1803   01031A                     	if	0	;tblptru may be non-zero
  1804   01031A                     	endif
  1805   01031A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1806   01031A  0E00               	movlw	low (__mediumconst shr (0+16))
  1807   01031C  6EF8               	movwf	tblptru,c
  1808   01031E                     	endif
  1809   01031E  0008               	tblrd		*
  1810   010320  50F5               	movf	tablat,w,c
  1811   010322  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1812   010324  6B8F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1813                           
  1814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 1, Range of values is 0 to 0
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte            4     3 (average)
  1820                           ;	Chosen strategy is simple_byte
  1821   010326  518F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1822   010328  0A00               	xorlw	0	; case 0
  1823   01032A  B4D8               	btfsc	status,2,c
  1824   01032C  EF9A  F081         	goto	l3660
  1825   010330  EF7F  F081         	goto	l3272
  1826   010334                     l3660:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 1, Range of values is 48 to 48
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte            4     3 (average)
  1834                           ;	Chosen strategy is simple_byte
  1835   010334  518E               	movf	??_vfpfcnvrt& (0+255),w,b
  1836   010336  0A30               	xorlw	48	; case 48
  1837   010338  B4D8               	btfsc	status,2,c
  1838   01033A  EF75  F081         	goto	l3268
  1839   01033E  EF7F  F081         	goto	l3272
  1840   010342                     l3278:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1844   010342  5194               	movf	vfpfcnvrt@done& (0+255),w,b
  1845   010344  1195               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1846   010346  B4D8               	btfsc	status,2,c
  1847   010348  EFA8  F081         	goto	u2091
  1848   01034C  EFAA  F081         	goto	u2090
  1849   010350                     u2091:
  1850   010350  EF85  F081         	goto	l3276
  1851   010354                     u2090:
  1852   010354                     
  1853                           ; BSR set to: 0
  1854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1855   010354  C08A  F066         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1856   010358  C08B  F067         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1857   01035C  C08C  F068         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1858   010360  C08D  F069         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1859   010364  EC68  F084         	call	_read_prec_or_width	;wreg free
  1860   010368  C066  F0C5         	movff	?_read_prec_or_width,_width
  1861   01036C  C067  F0C6         	movff	?_read_prec_or_width+1,_width+1
  1862   010370                     
  1863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1864   010370  0100               	movlb	0	; () banked
  1865   010372  BFC6               	btfsc	(_width+1)& (0+255),7,b
  1866   010374  EFC0  F081         	goto	u2100
  1867   010378  EFBE  F081         	goto	u2101
  1868   01037C                     u2101:
  1869   01037C  EFC5  F081         	goto	l3286
  1870   010380                     u2100:
  1871   010380                     
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1874   010380  81CB               	bsf	_flags& (0+255),0,b
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1877   010382  6DC5               	negf	_width& (0+255),b
  1878   010384  1FC6               	comf	(_width+1)& (0+255),f,b
  1879   010386  B0D8               	btfsc	status,0,c
  1880   010388  2BC6               	incf	(_width+1)& (0+255),f,b
  1881   01038A                     l3286:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1885   01038A  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1886   01038E  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1887   010392  CFDE F096          	movff	postinc2,vfpfcnvrt@cp
  1888   010396  CFDD F097          	movff	postdec2,vfpfcnvrt@cp+1
  1889   01039A                     
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1892   01039A  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1893   01039E  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1894   0103A2                     	if	0	;tblptru may be non-zero
  1895   0103A2                     	endif
  1896   0103A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1897   0103A2  0E00               	movlw	low (__mediumconst shr (0+16))
  1898   0103A4  6EF8               	movwf	tblptru,c
  1899   0103A6                     	endif
  1900   0103A6  0008               	tblrd		*
  1901   0103A8  50F5               	movf	tablat,w,c
  1902   0103AA  0A64               	xorlw	100
  1903   0103AC  B4D8               	btfsc	status,2,c
  1904   0103AE  EFDB  F081         	goto	u2111
  1905   0103B2  EFDD  F081         	goto	u2110
  1906   0103B6                     u2111:
  1907   0103B6  EFED  F081         	goto	l3292
  1908   0103BA                     u2110:
  1909   0103BA                     
  1910                           ; BSR set to: 0
  1911   0103BA  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1912   0103BE  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1913   0103C2                     	if	0	;tblptru may be non-zero
  1914   0103C2                     	endif
  1915   0103C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1916   0103C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1917   0103C4  6EF8               	movwf	tblptru,c
  1918   0103C6                     	endif
  1919   0103C6  0008               	tblrd		*
  1920   0103C8  50F5               	movf	tablat,w,c
  1921   0103CA  0A69               	xorlw	105
  1922   0103CC  A4D8               	btfss	status,2,c
  1923   0103CE  EFEB  F081         	goto	u2121
  1924   0103D2  EFED  F081         	goto	u2120
  1925   0103D6                     u2121:
  1926   0103D6  EF1B  F082         	goto	l3298
  1927   0103DA                     u2120:
  1928   0103DA                     l3292:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1932   0103DA  C08C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1933   0103DE  C08D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1934   0103E2  CFDF F08E          	movff	indf2,??_vfpfcnvrt
  1935   0103E6  0E02               	movlw	2
  1936   0103E8  26DE               	addwf	postinc2,f,c
  1937   0103EA  CFDF F08F          	movff	indf2,??_vfpfcnvrt+1
  1938   0103EE  0E00               	movlw	0
  1939   0103F0  22DD               	addwfc	postdec2,f,c
  1940   0103F2  C08E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1941   0103F6  C08F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1942   0103FA  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  1943   0103FE  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1946   010402  0E01               	movlw	1
  1947   010404  2596               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1948   010406  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1949   010408  0E00               	movlw	0
  1950   01040A  2197               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1951   01040C  6F8F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1952   01040E  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953   010412  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954   010416  C08E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1955   01041A  C08F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1956   01041E                     
  1957                           ; BSR set to: 0
  1958                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1959   01041E  C088  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  1960   010422  C089  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1961   010426  C090  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  1962   01042A  C091  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1963   01042E  EC3C  F082         	call	_dtoa	;wreg free
  1964   010432  EF3B  F082         	goto	l1274
  1965   010436                     l3298:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1968   010436  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1969   01043A  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1970   01043E  2ADE               	incf	postinc2,f,c
  1971   010440  0E00               	movlw	0
  1972   010442  22DD               	addwfc	postdec2,f,c
  1973   010444  EF3B  F082         	goto	l1274
  1974   010448                     l3302:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1977   010448  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1978   01044C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1979   010450  CFDE FFF6          	movff	postinc2,tblptrl
  1980   010454  CFDD FFF7          	movff	postdec2,tblptrh
  1981   010458                     	if	0	;tblptru may be non-zero
  1982   010458                     	endif
  1983   010458                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1984   010458  0E00               	movlw	low (__mediumconst shr (0+16))
  1985   01045A  6EF8               	movwf	tblptru,c
  1986   01045C                     	endif
  1987   01045C  0008               	tblrd		*
  1988   01045E  50F5               	movf	tablat,w,c
  1989   010460  0100               	movlb	0	; () banked
  1990   010462  6F60               	movwf	fputc@c& (0+255),b
  1991   010464  6B61               	clrf	(fputc@c+1)& (0+255),b
  1992   010466  C088  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1993   01046A  C089  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1994   01046E  ECD1  F084         	call	_fputc	;wreg free
  1995   010472  EF1B  F082         	goto	l3298
  1996   010476                     l1274:
  1997   010476  0012               	return		;funcret
  1998   010478                     __end_of_vfpfcnvrt:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _read_prec_or_width *****************
  2002 ;; Defined at:
  2003 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  fmt             2    6[BANK0 ] PTR PTR const unsigned c
  2006 ;;		 -> vfprintf@cfmt(2), 
  2007 ;;  ap              2    8[BANK0 ] PTR PTR void [1]
  2008 ;;		 -> sprintf@ap(2), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  c               1   12[BANK0 ] unsigned char 
  2011 ;;  n               2   13[BANK0 ] int 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    6[BANK0 ] int 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        9 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 5
  2028 ;; This function calls:
  2029 ;;		___wmul
  2030 ;; This function is called by:
  2031 ;;		_vfpfcnvrt
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text4
  2036   0108D0                     __ptext4:
  2037                           	callstack 0
  2038   0108D0                     _read_prec_or_width:
  2039                           	callstack 22
  2040   0108D0                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2042   0108D0  0E00               	movlw	0
  2043   0108D2  0100               	movlb	0	; () banked
  2044   0108D4  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2045   0108D6  0E00               	movlw	0
  2046   0108D8  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2047   0108DA                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2050   0108DA  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2051   0108DE  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2052   0108E2  CFDE FFF6          	movff	postinc2,tblptrl
  2053   0108E6  CFDD FFF7          	movff	postdec2,tblptrh
  2054   0108EA                     	if	0	;tblptru may be non-zero
  2055   0108EA                     	endif
  2056   0108EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2057   0108EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2058   0108EC  6EF8               	movwf	tblptru,c
  2059   0108EE                     	endif
  2060   0108EE  0008               	tblrd		*
  2061   0108F0  50F5               	movf	tablat,w,c
  2062   0108F2  0A2A               	xorlw	42
  2063   0108F4  A4D8               	btfss	status,2,c
  2064   0108F6  EF7F  F084         	goto	u2061
  2065   0108FA  EF81  F084         	goto	u2060
  2066   0108FE                     u2061:
  2067   0108FE  EFB6  F084         	goto	l3244
  2068   010902                     u2060:
  2069   010902                     
  2070                           ; BSR set to: 0
  2071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2072   010902  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2073   010906  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2074   01090A  2ADE               	incf	postinc2,f,c
  2075   01090C  0E00               	movlw	0
  2076   01090E  22DD               	addwfc	postdec2,f,c
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2079   010910  C068  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2080   010914  C069  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2081   010918  CFDF F06A          	movff	indf2,??_read_prec_or_width
  2082   01091C  0E02               	movlw	2
  2083   01091E  26DE               	addwf	postinc2,f,c
  2084   010920  CFDF F06B          	movff	indf2,??_read_prec_or_width+1
  2085   010924  0E00               	movlw	0
  2086   010926  22DD               	addwfc	postdec2,f,c
  2087   010928  C06A  FFD9         	movff	??_read_prec_or_width,fsr2l
  2088   01092C  C06B  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2089   010930  CFDE F06D          	movff	postinc2,read_prec_or_width@n
  2090   010934  CFDD F06E          	movff	postdec2,read_prec_or_width@n+1
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2093   010938  EFCC  F084         	goto	l1255
  2094   01093C                     l3240:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2098   01093C  C06D  F060         	movff	read_prec_or_width@n,___wmul@multiplier
  2099   010940  C06E  F061         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2100   010944  0E00               	movlw	0
  2101   010946  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2102   010948  0E0A               	movlw	10
  2103   01094A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2104   01094C  EC8B  F08A         	call	___wmul	;wreg free
  2105   010950  0100               	movlb	0	; () banked
  2106   010952  516C               	movf	read_prec_or_width@c& (0+255),w,b
  2107   010954  2560               	addwf	?___wmul& (0+255),w,b
  2108   010956  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2109   010958  0E00               	movlw	0
  2110   01095A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2111   01095C  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2112   01095E                     
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2115   01095E  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2116   010962  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2117   010966  2ADE               	incf	postinc2,f,c
  2118   010968  0E00               	movlw	0
  2119   01096A  22DD               	addwfc	postdec2,f,c
  2120   01096C                     l3244:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2124   01096C  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2125   010970  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2126   010974  CFDE FFF6          	movff	postinc2,tblptrl
  2127   010978  CFDD FFF7          	movff	postdec2,tblptrh
  2128   01097C                     	if	0	;tblptru may be non-zero
  2129   01097C                     	endif
  2130   01097C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2131   01097C  0E00               	movlw	low (__mediumconst shr (0+16))
  2132   01097E  6EF8               	movwf	tblptru,c
  2133   010980                     	endif
  2134   010980  0008               	tblrd		*
  2135   010982  50F5               	movf	tablat,w,c
  2136   010984  0FD0               	addlw	208
  2137   010986  6F6C               	movwf	read_prec_or_width@c& (0+255),b
  2138   010988  0E09               	movlw	9
  2139   01098A  656C               	cpfsgt	read_prec_or_width@c& (0+255),b
  2140   01098C  EFCA  F084         	goto	u2071
  2141   010990  EFCC  F084         	goto	u2070
  2142   010994                     u2071:
  2143   010994  EF9E  F084         	goto	l3240
  2144   010998                     u2070:
  2145   010998                     l1255:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2149   010998  C06D  F066         	movff	read_prec_or_width@n,?_read_prec_or_width
  2150   01099C  C06E  F067         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2151   0109A0                     
  2152                           ; BSR set to: 0
  2153   0109A0  0012               	return		;funcret
  2154   0109A2                     __end_of_read_prec_or_width:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function ___wmul *****************
  2158 ;; Defined at:
  2159 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2162 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  product         2    4[BANK0 ] unsigned int 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  2    0[BANK0 ] unsigned int 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, prodl, prodh
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        6 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 4
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_read_prec_or_width
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text5
  2189   011516                     __ptext5:
  2190                           	callstack 0
  2191   011516                     ___wmul:
  2192                           	callstack 22
  2193   011516  0100               	movlb	0	; () banked
  2194   011518  5160               	movf	___wmul@multiplier& (0+255),w,b
  2195   01151A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2196   01151C  CFF3 F064          	movff	prodl,___wmul@product
  2197   011520  CFF4 F065          	movff	prodh,___wmul@product+1
  2198   011524  5160               	movf	___wmul@multiplier& (0+255),w,b
  2199   011526  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2200   011528  50F3               	movf	243,w,c
  2201   01152A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2202   01152C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2203   01152E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2204   011530  50F3               	movf	243,w,c
  2205   011532  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2206   011534                     
  2207                           ; BSR set to: 0
  2208   011534  C064  F060         	movff	___wmul@product,?___wmul
  2209   011538  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2210   01153C                     
  2211                           ; BSR set to: 0
  2212   01153C  0012               	return		;funcret
  2213   01153E                     __end_of___wmul:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _dtoa *****************
  2217 ;; Defined at:
  2218 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2221 ;;		 -> sprintf@f(12), 
  2222 ;;  d               2   29[BANK0 ] int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  i               2   38[BANK0 ] int 
  2225 ;;  w               2   35[BANK0 ] int 
  2226 ;;  p               2   33[BANK0 ] int 
  2227 ;;  s               1   37[BANK0 ] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;Total ram usage:       13 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 8
  2244 ;; This function calls:
  2245 ;;		___awdiv
  2246 ;;		___awmod
  2247 ;;		_abs
  2248 ;;		_pad
  2249 ;; This function is called by:
  2250 ;;		_vfpfcnvrt
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text6
  2255   010478                     __ptext6:
  2256                           	callstack 0
  2257   010478                     _dtoa:
  2258                           	callstack 19
  2259   010478                     
  2260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2261   010478  0100               	movlb	0	; () banked
  2262   01047A  BF7E               	btfsc	(dtoa@d+1)& (0+255),7,b
  2263   01047C  EF42  F082         	goto	u1931
  2264   010480  EF45  F082         	goto	u1930
  2265   010484                     u1931:
  2266   010484  0E01               	movlw	1
  2267   010486  EF46  F082         	goto	u1940
  2268   01048A                     u1930:
  2269   01048A  0E00               	movlw	0
  2270   01048C                     u1940:
  2271   01048C  6F85               	movwf	dtoa@s& (0+255),b
  2272   01048E                     
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2275   01048E  5185               	movf	dtoa@s& (0+255),w,b
  2276   010490  B4D8               	btfsc	status,2,c
  2277   010492  EF4D  F082         	goto	u1951
  2278   010496  EF4F  F082         	goto	u1950
  2279   01049A                     u1951:
  2280   01049A  EF53  F082         	goto	l3182
  2281   01049E                     u1950:
  2282   01049E                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2285   01049E  6D7D               	negf	dtoa@d& (0+255),b
  2286   0104A0  1F7E               	comf	(dtoa@d+1)& (0+255),f,b
  2287   0104A2  B0D8               	btfsc	status,0,c
  2288   0104A4  2B7E               	incf	(dtoa@d+1)& (0+255),f,b
  2289   0104A6                     l3182:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2293   0104A6  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2294   0104A8  EF58  F082         	goto	u1961
  2295   0104AC  EF5A  F082         	goto	u1960
  2296   0104B0                     u1961:
  2297   0104B0  EF5B  F082         	goto	l3186
  2298   0104B4                     u1960:
  2299   0104B4                     
  2300                           ; BSR set to: 0
  2301                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2302   0104B4  93CB               	bcf	_flags& (0+255),1,b
  2303   0104B6                     l3186:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2307   0104B6  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2308   0104B8  EF62  F082         	goto	u1970
  2309   0104BC  EF60  F082         	goto	u1971
  2310   0104C0                     u1971:
  2311   0104C0  EF68  F082         	goto	l1235
  2312   0104C4                     u1970:
  2313   0104C4                     
  2314                           ; BSR set to: 0
  2315   0104C4  0E00               	movlw	0
  2316   0104C6  6F82               	movwf	(dtoa@p+1)& (0+255),b
  2317   0104C8  0E01               	movlw	1
  2318   0104CA  6F81               	movwf	dtoa@p& (0+255),b
  2319   0104CC  EF6C  F082         	goto	l1237
  2320   0104D0                     l1235:
  2321                           
  2322                           ; BSR set to: 0
  2323   0104D0  C0C7  F081         	movff	_prec,dtoa@p
  2324   0104D4  C0C8  F082         	movff	_prec+1,dtoa@p+1
  2325   0104D8                     l1237:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2329   0104D8  C0C5  F083         	movff	_width,dtoa@w
  2330   0104DC  C0C6  F084         	movff	_width+1,dtoa@w+1
  2331   0104E0                     
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2334   0104E0  5185               	movf	dtoa@s& (0+255),w,b
  2335   0104E2  B4D8               	btfsc	status,2,c
  2336   0104E4  EF76  F082         	goto	u1981
  2337   0104E8  EF78  F082         	goto	u1980
  2338   0104EC                     u1981:
  2339   0104EC  EF8F  F082         	goto	l1238
  2340   0104F0                     u1980:
  2341   0104F0                     
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2344   0104F0  0783               	decf	dtoa@w& (0+255),f,b
  2345   0104F2  A0D8               	btfss	status,0,c
  2346   0104F4  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2347   0104F6                     
  2348                           ; BSR set to: 0
  2349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2350   0104F6  5185               	movf	dtoa@s& (0+255),w,b
  2351   0104F8  A4D8               	btfss	status,2,c
  2352   0104FA  EF81  F082         	goto	u1991
  2353   0104FE  EF83  F082         	goto	u1990
  2354   010502                     u1991:
  2355   010502  EF89  F082         	goto	l3198
  2356   010506                     u1990:
  2357   010506                     
  2358                           ; BSR set to: 0
  2359   010506  0E00               	movlw	0
  2360   010508  6F80               	movwf	(_dtoa$1711+1)& (0+255),b
  2361   01050A  0E2B               	movlw	43
  2362   01050C  6F7F               	movwf	_dtoa$1711& (0+255),b
  2363   01050E  EF8D  F082         	goto	l3200
  2364   010512                     l3198:
  2365                           
  2366                           ; BSR set to: 0
  2367   010512  0E00               	movlw	0
  2368   010514  6F80               	movwf	(_dtoa$1711+1)& (0+255),b
  2369   010516  0E2D               	movlw	45
  2370   010518  6F7F               	movwf	_dtoa$1711& (0+255),b
  2371   01051A                     l3200:
  2372                           
  2373                           ; BSR set to: 0
  2374   01051A  C07F  F085         	movff	_dtoa$1711,dtoa@s
  2375   01051E                     l1238:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2379   01051E  0E00               	movlw	0
  2380   010520  6F87               	movwf	(dtoa@i+1)& (0+255),b
  2381   010522  0E1F               	movlw	31
  2382   010524  6F86               	movwf	dtoa@i& (0+255),b
  2383   010526                     
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2386   010526  0E00               	movlw	0
  2387   010528  6FEB               	movwf	(_dbuf+31)& (0+255),b
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2390   01052A  EFC8  F082         	goto	l3214
  2391   01052E                     l3204:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2395   01052E  0786               	decf	dtoa@i& (0+255),f,b
  2396   010530  A0D8               	btfss	status,0,c
  2397   010532  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2398   010534                     
  2399                           ; BSR set to: 0
  2400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2401   010534  0ECC               	movlw	low _dbuf
  2402   010536  2586               	addwf	dtoa@i& (0+255),w,b
  2403   010538  6ED9               	movwf	fsr2l,c
  2404   01053A  0E00               	movlw	high _dbuf
  2405   01053C  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2406   01053E  6EDA               	movwf	fsr2h,c
  2407   010540  C07D  F060         	movff	dtoa@d,___awmod@dividend
  2408   010544  C07E  F061         	movff	dtoa@d+1,___awmod@dividend+1
  2409   010548  0E00               	movlw	0
  2410   01054A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2411   01054C  0E0A               	movlw	10
  2412   01054E  6F62               	movwf	___awmod@divisor& (0+255),b
  2413   010550  EC57  F086         	call	___awmod	;wreg free
  2414   010554  C060  F066         	movff	?___awmod,abs@a
  2415   010558  C061  F067         	movff	?___awmod+1,abs@a+1
  2416   01055C  EC84  F089         	call	_abs	;wreg free
  2417   010560  0100               	movlb	0	; () banked
  2418   010562  5166               	movf	?_abs& (0+255),w,b
  2419   010564  0F30               	addlw	48
  2420   010566  6EDF               	movwf	indf2,c
  2421   010568                     
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2424   010568  0781               	decf	dtoa@p& (0+255),f,b
  2425   01056A  A0D8               	btfss	status,0,c
  2426   01056C  0782               	decf	(dtoa@p+1)& (0+255),f,b
  2427   01056E                     
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2430   01056E  0783               	decf	dtoa@w& (0+255),f,b
  2431   010570  A0D8               	btfss	status,0,c
  2432   010572  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2433   010574                     
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2436   010574  C07D  F060         	movff	dtoa@d,___awdiv@dividend
  2437   010578  C07E  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  2438   01057C  0E00               	movlw	0
  2439   01057E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2440   010580  0E0A               	movlw	10
  2441   010582  6F62               	movwf	___awdiv@divisor& (0+255),b
  2442   010584  EC37  F085         	call	___awdiv	;wreg free
  2443   010588  C060  F07D         	movff	?___awdiv,dtoa@d
  2444   01058C  C061  F07E         	movff	?___awdiv+1,dtoa@d+1
  2445   010590                     l3214:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2448   010590  0100               	movlb	0	; () banked
  2449   010592  BF87               	btfsc	(dtoa@i+1)& (0+255),7,b
  2450   010594  EFD4  F082         	goto	u2001
  2451   010598  5187               	movf	(dtoa@i+1)& (0+255),w,b
  2452   01059A  E108               	bnz	u2000
  2453   01059C  0586               	decf	dtoa@i& (0+255),w,b
  2454   01059E  A0D8               	btfss	status,0,c
  2455   0105A0  EFD4  F082         	goto	u2001
  2456   0105A4  EFD6  F082         	goto	u2000
  2457   0105A8                     u2001:
  2458   0105A8  EF00  F083         	goto	l3224
  2459   0105AC                     u2000:
  2460   0105AC                     
  2461                           ; BSR set to: 0
  2462   0105AC  517D               	movf	dtoa@d& (0+255),w,b
  2463   0105AE  117E               	iorwf	(dtoa@d+1)& (0+255),w,b
  2464   0105B0  A4D8               	btfss	status,2,c
  2465   0105B2  EFDD  F082         	goto	u2011
  2466   0105B6  EFDF  F082         	goto	u2010
  2467   0105BA                     u2011:
  2468   0105BA  EF97  F082         	goto	l3204
  2469   0105BE                     u2010:
  2470   0105BE                     
  2471                           ; BSR set to: 0
  2472   0105BE  BF82               	btfsc	(dtoa@p+1)& (0+255),7,b
  2473   0105C0  EFEC  F082         	goto	u2020
  2474   0105C4  5182               	movf	(dtoa@p+1)& (0+255),w,b
  2475   0105C6  E106               	bnz	u2021
  2476   0105C8  0581               	decf	dtoa@p& (0+255),w,b
  2477   0105CA  B0D8               	btfsc	status,0,c
  2478   0105CC  EFEA  F082         	goto	u2021
  2479   0105D0  EFEC  F082         	goto	u2020
  2480   0105D4                     u2021:
  2481   0105D4  EF97  F082         	goto	l3204
  2482   0105D8                     u2020:
  2483   0105D8                     
  2484                           ; BSR set to: 0
  2485   0105D8  BF84               	btfsc	(dtoa@w+1)& (0+255),7,b
  2486   0105DA  EFF7  F082         	goto	u2031
  2487   0105DE  5184               	movf	(dtoa@w+1)& (0+255),w,b
  2488   0105E0  E108               	bnz	u2030
  2489   0105E2  0583               	decf	dtoa@w& (0+255),w,b
  2490   0105E4  A0D8               	btfss	status,0,c
  2491   0105E6  EFF7  F082         	goto	u2031
  2492   0105EA  EFF9  F082         	goto	u2030
  2493   0105EE                     u2031:
  2494   0105EE  EF00  F083         	goto	l3224
  2495   0105F2                     u2030:
  2496   0105F2                     
  2497                           ; BSR set to: 0
  2498   0105F2  B3CB               	btfsc	_flags& (0+255),1,b
  2499   0105F4  EFFE  F082         	goto	u2041
  2500   0105F8  EF00  F083         	goto	u2040
  2501   0105FC                     u2041:
  2502   0105FC  EF97  F082         	goto	l3204
  2503   010600                     u2040:
  2504   010600                     l3224:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2508   010600  5185               	movf	dtoa@s& (0+255),w,b
  2509   010602  B4D8               	btfsc	status,2,c
  2510   010604  EF06  F083         	goto	u2051
  2511   010608  EF08  F083         	goto	u2050
  2512   01060C                     u2051:
  2513   01060C  EF13  F083         	goto	l3230
  2514   010610                     u2050:
  2515   010610                     
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2518   010610  0786               	decf	dtoa@i& (0+255),f,b
  2519   010612  A0D8               	btfss	status,0,c
  2520   010614  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2521   010616                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2524   010616  0ECC               	movlw	low _dbuf
  2525   010618  2586               	addwf	dtoa@i& (0+255),w,b
  2526   01061A  6ED9               	movwf	fsr2l,c
  2527   01061C  0E00               	movlw	high _dbuf
  2528   01061E  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2529   010620  6EDA               	movwf	fsr2h,c
  2530   010622  C085  FFDF         	movff	dtoa@s,indf2
  2531   010626                     l3230:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2535   010626  C07B  F070         	movff	dtoa@fp,pad@fp
  2536   01062A  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  2537   01062E  0ECC               	movlw	low _dbuf
  2538   010630  2586               	addwf	dtoa@i& (0+255),w,b
  2539   010632  6F72               	movwf	pad@buf& (0+255),b
  2540   010634  0E00               	movlw	high _dbuf
  2541   010636  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2542   010638  6F73               	movwf	(pad@buf+1)& (0+255),b
  2543   01063A  C083  F074         	movff	dtoa@w,pad@p
  2544   01063E  C084  F075         	movff	dtoa@w+1,pad@p+1
  2545   010642  ECB0  F086         	call	_pad	;wreg free
  2546   010646  0012               	return		;funcret
  2547   010648                     __end_of_dtoa:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _pad *****************
  2551 ;; Defined at:
  2552 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2555 ;;		 -> sprintf@f(12), 
  2556 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2557 ;;		 -> dbuf(32), 
  2558 ;;  p               2   20[BANK0 ] int 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  w               2   25[BANK0 ] int 
  2561 ;;  i               2   23[BANK0 ] int 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2571 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;Total ram usage:       11 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 7
  2578 ;; This function calls:
  2579 ;;		_fputc
  2580 ;;		_fputs
  2581 ;; This function is called by:
  2582 ;;		_dtoa
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text7
  2587   010D60                     __ptext7:
  2588                           	callstack 0
  2589   010D60                     _pad:
  2590                           	callstack 19
  2591   010D60                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2593   010D60  0100               	movlb	0	; () banked
  2594   010D62  A1CB               	btfss	_flags& (0+255),0,b
  2595   010D64  EFB6  F086         	goto	u1881
  2596   010D68  EFB8  F086         	goto	u1880
  2597   010D6C                     u1881:
  2598   010D6C  EFC2  F086         	goto	l3158
  2599   010D70                     u1880:
  2600   010D70                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2603   010D70  C072  F069         	movff	pad@buf,fputs@s
  2604   010D74  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2605   010D78  C070  F06B         	movff	pad@fp,fputs@fp
  2606   010D7C  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2607   010D80  EC3C  F089         	call	_fputs	;wreg free
  2608   010D84                     l3158:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2611   010D84  0100               	movlb	0	; () banked
  2612   010D86  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2613   010D88  EFC8  F086         	goto	u1891
  2614   010D8C  EFCA  F086         	goto	u1890
  2615   010D90                     u1891:
  2616   010D90  EFD0  F086         	goto	l3162
  2617   010D94                     u1890:
  2618   010D94                     
  2619                           ; BSR set to: 0
  2620   010D94  C074  F079         	movff	pad@p,pad@w
  2621   010D98  C075  F07A         	movff	pad@p+1,pad@w+1
  2622   010D9C  EFD4  F086         	goto	l1224
  2623   010DA0                     l3162:
  2624                           
  2625                           ; BSR set to: 0
  2626   010DA0  0E00               	movlw	0
  2627   010DA2  6F7A               	movwf	(pad@w+1)& (0+255),b
  2628   010DA4  0E00               	movlw	0
  2629   010DA6  6F79               	movwf	pad@w& (0+255),b
  2630   010DA8                     l1224:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2634   010DA8  0E00               	movlw	0
  2635   010DAA  6F78               	movwf	(pad@i+1)& (0+255),b
  2636   010DAC  0E00               	movlw	0
  2637   010DAE  6F77               	movwf	pad@i& (0+255),b
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2640   010DB0  EFE7  F086         	goto	l3168
  2641   010DB4                     l3164:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2645   010DB4  0E00               	movlw	0
  2646   010DB6  6F61               	movwf	(fputc@c+1)& (0+255),b
  2647   010DB8  0E20               	movlw	32
  2648   010DBA  6F60               	movwf	fputc@c& (0+255),b
  2649   010DBC  C070  F062         	movff	pad@fp,fputc@fp
  2650   010DC0  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2651   010DC4  ECD1  F084         	call	_fputc	;wreg free
  2652   010DC8                     
  2653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2654   010DC8  0100               	movlb	0	; () banked
  2655   010DCA  4B77               	infsnz	pad@i& (0+255),f,b
  2656   010DCC  2B78               	incf	(pad@i+1)& (0+255),f,b
  2657   010DCE                     l3168:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2661   010DCE  5179               	movf	pad@w& (0+255),w,b
  2662   010DD0  5D77               	subwf	pad@i& (0+255),w,b
  2663   010DD2  5178               	movf	(pad@i+1)& (0+255),w,b
  2664   010DD4  0A80               	xorlw	128
  2665   010DD6  6F76               	movwf	??_pad& (0+255),b
  2666   010DD8  517A               	movf	(pad@w+1)& (0+255),w,b
  2667   010DDA  0A80               	xorlw	128
  2668   010DDC  5976               	subwfb	??_pad& (0+255),w,b
  2669   010DDE  A0D8               	btfss	status,0,c
  2670   010DE0  EFF4  F086         	goto	u1901
  2671   010DE4  EFF6  F086         	goto	u1900
  2672   010DE8                     u1901:
  2673   010DE8  EFDA  F086         	goto	l3164
  2674   010DEC                     u1900:
  2675   010DEC                     
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2678   010DEC  B1CB               	btfsc	_flags& (0+255),0,b
  2679   010DEE  EFFB  F086         	goto	u1911
  2680   010DF2  EFFD  F086         	goto	u1910
  2681   010DF6                     u1911:
  2682   010DF6  EF07  F087         	goto	l1229
  2683   010DFA                     u1910:
  2684   010DFA                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2687   010DFA  C072  F069         	movff	pad@buf,fputs@s
  2688   010DFE  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2689   010E02  C070  F06B         	movff	pad@fp,fputs@fp
  2690   010E06  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2691   010E0A  EC3C  F089         	call	_fputs	;wreg free
  2692   010E0E                     l1229:
  2693   010E0E  0012               	return		;funcret
  2694   010E10                     __end_of_pad:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _fputs *****************
  2698 ;; Defined at:
  2699 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2702 ;;		 -> dbuf(32), 
  2703 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2704 ;;		 -> sprintf@f(12), 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  i               2   14[BANK0 ] int 
  2707 ;;  c               1   13[BANK0 ] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    9[BANK0 ] int 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;Total ram usage:        7 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 6
  2724 ;; This function calls:
  2725 ;;		_fputc
  2726 ;; This function is called by:
  2727 ;;		_pad
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text8
  2732   011278                     __ptext8:
  2733                           	callstack 0
  2734   011278                     _fputs:
  2735                           	callstack 19
  2736   011278  0E00               	movlw	0
  2737   01127A  0100               	movlb	0	; () banked
  2738   01127C  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2739   01127E  0E00               	movlw	0
  2740   011280  6F6E               	movwf	fputs@i& (0+255),b
  2741   011282  EF4F  F089         	goto	l3066
  2742   011286                     l3062:
  2743                           
  2744                           ; BSR set to: 0
  2745   011286  C06D  F060         	movff	fputs@c,fputc@c
  2746   01128A  6B61               	clrf	(fputc@c+1)& (0+255),b
  2747   01128C  C06B  F062         	movff	fputs@fp,fputc@fp
  2748   011290  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2749   011294  ECD1  F084         	call	_fputc	;wreg free
  2750   011298  0100               	movlb	0	; () banked
  2751   01129A  4B6E               	infsnz	fputs@i& (0+255),f,b
  2752   01129C  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2753   01129E                     l3066:
  2754                           
  2755                           ; BSR set to: 0
  2756   01129E  516E               	movf	fputs@i& (0+255),w,b
  2757   0112A0  2569               	addwf	fputs@s& (0+255),w,b
  2758   0112A2  6ED9               	movwf	fsr2l,c
  2759   0112A4  516F               	movf	(fputs@i+1)& (0+255),w,b
  2760   0112A6  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2761   0112A8  6EDA               	movwf	fsr2h,c
  2762   0112AA  50DF               	movf	indf2,w,c
  2763   0112AC  6F6D               	movwf	fputs@c& (0+255),b
  2764   0112AE  516D               	movf	fputs@c& (0+255),w,b
  2765   0112B0  A4D8               	btfss	status,2,c
  2766   0112B2  EF5D  F089         	goto	u1751
  2767   0112B6  EF5F  F089         	goto	u1750
  2768   0112BA                     u1751:
  2769   0112BA  EF43  F089         	goto	l3062
  2770   0112BE                     u1750:
  2771   0112BE                     
  2772                           ; BSR set to: 0
  2773   0112BE  0012               	return		;funcret
  2774   0112C0                     __end_of_fputs:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _fputc *****************
  2778 ;; Defined at:
  2779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  c               2    0[BANK0 ] int 
  2782 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2783 ;;		 -> sprintf@f(12), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  2    0[BANK0 ] int 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;Total ram usage:        9 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 5
  2802 ;; This function calls:
  2803 ;;		_putch
  2804 ;; This function is called by:
  2805 ;;		_pad
  2806 ;;		_vfpfcnvrt
  2807 ;;		_fputs
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text9
  2812   0109A2                     __ptext9:
  2813                           	callstack 0
  2814   0109A2                     _fputc:
  2815                           	callstack 22
  2816   0109A2  0100               	movlb	0	; () banked
  2817   0109A4  5162               	movf	fputc@fp& (0+255),w,b
  2818   0109A6  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2819   0109A8  B4D8               	btfsc	status,2,c
  2820   0109AA  EFD9  F084         	goto	u1711
  2821   0109AE  EFDB  F084         	goto	u1710
  2822   0109B2                     u1711:
  2823   0109B2  EFE4  F084         	goto	l3050
  2824   0109B6                     u1710:
  2825   0109B6                     
  2826                           ; BSR set to: 0
  2827   0109B6  5162               	movf	fputc@fp& (0+255),w,b
  2828   0109B8  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2829   0109BA  A4D8               	btfss	status,2,c
  2830   0109BC  EFE2  F084         	goto	u1721
  2831   0109C0  EFE4  F084         	goto	u1720
  2832   0109C4                     u1721:
  2833   0109C4  EFE9  F084         	goto	l3052
  2834   0109C8                     u1720:
  2835   0109C8                     l3050:
  2836                           
  2837                           ; BSR set to: 0
  2838   0109C8  5160               	movf	fputc@c& (0+255),w,b
  2839   0109CA  EC1C  F08B         	call	_putch
  2840   0109CE  EF36  F085         	goto	l1299
  2841   0109D2                     l3052:
  2842                           
  2843                           ; BSR set to: 0
  2844   0109D2  EE20 F00A          	lfsr	2,10
  2845   0109D6  5162               	movf	fputc@fp& (0+255),w,b
  2846   0109D8  26D9               	addwf	fsr2l,f,c
  2847   0109DA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2848   0109DC  22DA               	addwfc	fsr2h,f,c
  2849   0109DE  50DE               	movf	postinc2,w,c
  2850   0109E0  10DE               	iorwf	postinc2,w,c
  2851   0109E2  B4D8               	btfsc	status,2,c
  2852   0109E4  EFF6  F084         	goto	u1731
  2853   0109E8  EFF8  F084         	goto	u1730
  2854   0109EC                     u1731:
  2855   0109EC  EF13  F085         	goto	l3056
  2856   0109F0                     u1730:
  2857   0109F0                     
  2858                           ; BSR set to: 0
  2859   0109F0  EE20 F00A          	lfsr	2,10
  2860   0109F4  5162               	movf	fputc@fp& (0+255),w,b
  2861   0109F6  26D9               	addwf	fsr2l,f,c
  2862   0109F8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2863   0109FA  22DA               	addwfc	fsr2h,f,c
  2864   0109FC  EE10 F003          	lfsr	1,3
  2865   010A00  5162               	movf	fputc@fp& (0+255),w,b
  2866   010A02  26E1               	addwf	fsr1l,f,c
  2867   010A04  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2868   010A06  22E2               	addwfc	fsr1h,f,c
  2869   010A08  50DE               	movf	postinc2,w,c
  2870   010A0A  5CE6               	subwf	postinc1,w,c
  2871   010A0C  50E6               	movf	postinc1,w,c
  2872   010A0E  0A80               	xorlw	128
  2873   010A10  6F68               	movwf	(??_fputc+4)& (0+255),b
  2874   010A12  50DE               	movf	postinc2,w,c
  2875   010A14  0A80               	xorlw	128
  2876   010A16  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2877   010A18  B0D8               	btfsc	status,0,c
  2878   010A1A  EF11  F085         	goto	u1741
  2879   010A1E  EF13  F085         	goto	u1740
  2880   010A22                     u1741:
  2881   010A22  EF36  F085         	goto	l1299
  2882   010A26                     u1740:
  2883   010A26                     l3056:
  2884                           
  2885                           ; BSR set to: 0
  2886   010A26  EE20 F003          	lfsr	2,3
  2887   010A2A  5162               	movf	fputc@fp& (0+255),w,b
  2888   010A2C  26D9               	addwf	fsr2l,f,c
  2889   010A2E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2890   010A30  22DA               	addwfc	fsr2h,f,c
  2891   010A32  CFDE F064          	movff	postinc2,??_fputc
  2892   010A36  CFDD F065          	movff	postdec2,??_fputc+1
  2893   010A3A  C062  FFD9         	movff	fputc@fp,fsr2l
  2894   010A3E  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2895   010A42  CFDE F066          	movff	postinc2,??_fputc+2
  2896   010A46  CFDD F067          	movff	postdec2,??_fputc+3
  2897   010A4A  5164               	movf	??_fputc& (0+255),w,b
  2898   010A4C  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2899   010A4E  6ED9               	movwf	fsr2l,c
  2900   010A50  5165               	movf	(??_fputc+1)& (0+255),w,b
  2901   010A52  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2902   010A54  6EDA               	movwf	fsr2h,c
  2903   010A56  C060  FFDF         	movff	fputc@c,indf2
  2904   010A5A  EE20 F003          	lfsr	2,3
  2905   010A5E  5162               	movf	fputc@fp& (0+255),w,b
  2906   010A60  26D9               	addwf	fsr2l,f,c
  2907   010A62  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2908   010A64  22DA               	addwfc	fsr2h,f,c
  2909   010A66  2ADE               	incf	postinc2,f,c
  2910   010A68  0E00               	movlw	0
  2911   010A6A  22DD               	addwfc	postdec2,f,c
  2912   010A6C                     l1299:
  2913   010A6C  0012               	return		;funcret
  2914   010A6E                     __end_of_fputc:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _putch *****************
  2918 ;; Defined at:
  2919 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  c               1    wreg     unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  c               1    0[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 4
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_fputc
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text10
  2948   011638                     __ptext10:
  2949                           	callstack 0
  2950   011638                     _putch:
  2951                           	callstack 22
  2952   011638  0012               	return		;funcret
  2953   01163A                     __end_of_putch:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function _abs *****************
  2957 ;; Defined at:
  2958 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  a               2    6[BANK0 ] int 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2    6[BANK0 ] int 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2972 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;Total ram usage:        4 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 4
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_dtoa
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text11
  2987   011308                     __ptext11:
  2988                           	callstack 0
  2989   011308                     _abs:
  2990                           	callstack 22
  2991   011308  0100               	movlb	0	; () banked
  2992   01130A  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2993   01130C  EF92  F089         	goto	u1920
  2994   011310  5167               	movf	(abs@a+1)& (0+255),w,b
  2995   011312  E106               	bnz	u1921
  2996   011314  0566               	decf	abs@a& (0+255),w,b
  2997   011316  B0D8               	btfsc	status,0,c
  2998   011318  EF90  F089         	goto	u1921
  2999   01131C  EF92  F089         	goto	u1920
  3000   011320                     u1921:
  3001   011320  EFA0  F089         	goto	l1284
  3002   011324                     u1920:
  3003   011324                     
  3004                           ; BSR set to: 0
  3005   011324  C066  F068         	movff	abs@a,??_abs
  3006   011328  C067  F069         	movff	abs@a+1,??_abs+1
  3007   01132C  1F68               	comf	??_abs& (0+255),f,b
  3008   01132E  1F69               	comf	(??_abs+1)& (0+255),f,b
  3009   011330  4B68               	infsnz	??_abs& (0+255),f,b
  3010   011332  2B69               	incf	(??_abs+1)& (0+255),f,b
  3011   011334  C068  F066         	movff	??_abs,?_abs
  3012   011338  C069  F067         	movff	??_abs+1,?_abs+1
  3013   01133C  EFA4  F089         	goto	l1287
  3014   011340                     l1284:
  3015                           
  3016                           ; BSR set to: 0
  3017   011340  C066  F066         	movff	abs@a,?_abs
  3018   011344  C067  F067         	movff	abs@a+1,?_abs+1
  3019   011348                     l1287:
  3020                           
  3021                           ; BSR set to: 0
  3022   011348  0012               	return		;funcret
  3023   01134A                     __end_of_abs:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function ___awmod *****************
  3027 ;; Defined at:
  3028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  dividend        2    0[BANK0 ] int 
  3031 ;;  divisor         2    2[BANK0 ] int 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  sign            1    5[BANK0 ] unsigned char 
  3034 ;;  counter         1    4[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2    0[BANK0 ] int 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3044 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;Total ram usage:        6 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 4
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_dtoa
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text12
  3059   010CAE                     __ptext12:
  3060                           	callstack 0
  3061   010CAE                     ___awmod:
  3062                           	callstack 22
  3063   010CAE  0E00               	movlw	0
  3064   010CB0  0100               	movlb	0	; () banked
  3065   010CB2  6F65               	movwf	___awmod@sign& (0+255),b
  3066   010CB4                     
  3067                           ; BSR set to: 0
  3068   010CB4  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3069   010CB6  EF61  F086         	goto	u1820
  3070   010CBA  EF5F  F086         	goto	u1821
  3071   010CBE                     u1821:
  3072   010CBE  EF67  F086         	goto	l3126
  3073   010CC2                     u1820:
  3074   010CC2                     
  3075                           ; BSR set to: 0
  3076   010CC2  6D60               	negf	___awmod@dividend& (0+255),b
  3077   010CC4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3078   010CC6  B0D8               	btfsc	status,0,c
  3079   010CC8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3080   010CCA                     
  3081                           ; BSR set to: 0
  3082   010CCA  0E01               	movlw	1
  3083   010CCC  6F65               	movwf	___awmod@sign& (0+255),b
  3084   010CCE                     l3126:
  3085                           
  3086                           ; BSR set to: 0
  3087   010CCE  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3088   010CD0  EF6E  F086         	goto	u1830
  3089   010CD4  EF6C  F086         	goto	u1831
  3090   010CD8                     u1831:
  3091   010CD8  EF72  F086         	goto	l3130
  3092   010CDC                     u1830:
  3093   010CDC                     
  3094                           ; BSR set to: 0
  3095   010CDC  6D62               	negf	___awmod@divisor& (0+255),b
  3096   010CDE  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3097   010CE0  B0D8               	btfsc	status,0,c
  3098   010CE2  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3099   010CE4                     l3130:
  3100                           
  3101                           ; BSR set to: 0
  3102   010CE4  5162               	movf	___awmod@divisor& (0+255),w,b
  3103   010CE6  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3104   010CE8  B4D8               	btfsc	status,2,c
  3105   010CEA  EF79  F086         	goto	u1841
  3106   010CEE  EF7B  F086         	goto	u1840
  3107   010CF2                     u1841:
  3108   010CF2  EF9F  F086         	goto	l3146
  3109   010CF6                     u1840:
  3110   010CF6                     
  3111                           ; BSR set to: 0
  3112   010CF6  0E01               	movlw	1
  3113   010CF8  6F64               	movwf	___awmod@counter& (0+255),b
  3114   010CFA  EF83  F086         	goto	l3136
  3115   010CFE                     l3134:
  3116                           
  3117                           ; BSR set to: 0
  3118   010CFE  90D8               	bcf	status,0,c
  3119   010D00  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3120   010D02  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3121   010D04  2B64               	incf	___awmod@counter& (0+255),f,b
  3122   010D06                     l3136:
  3123                           
  3124                           ; BSR set to: 0
  3125   010D06  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3126   010D08  EF88  F086         	goto	u1851
  3127   010D0C  EF8A  F086         	goto	u1850
  3128   010D10                     u1851:
  3129   010D10  EF7F  F086         	goto	l3134
  3130   010D14                     u1850:
  3131   010D14                     l3138:
  3132                           
  3133                           ; BSR set to: 0
  3134   010D14  5162               	movf	___awmod@divisor& (0+255),w,b
  3135   010D16  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3136   010D18  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3137   010D1A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3138   010D1C  A0D8               	btfss	status,0,c
  3139   010D1E  EF93  F086         	goto	u1861
  3140   010D22  EF95  F086         	goto	u1860
  3141   010D26                     u1861:
  3142   010D26  EF99  F086         	goto	l3142
  3143   010D2A                     u1860:
  3144   010D2A                     
  3145                           ; BSR set to: 0
  3146   010D2A  5162               	movf	___awmod@divisor& (0+255),w,b
  3147   010D2C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3148   010D2E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3149   010D30  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3150   010D32                     l3142:
  3151                           
  3152                           ; BSR set to: 0
  3153   010D32  90D8               	bcf	status,0,c
  3154   010D34  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3155   010D36  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3156   010D38                     
  3157                           ; BSR set to: 0
  3158   010D38  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3159   010D3A  EF8A  F086         	goto	l3138
  3160   010D3E                     l3146:
  3161                           
  3162                           ; BSR set to: 0
  3163   010D3E  5165               	movf	___awmod@sign& (0+255),w,b
  3164   010D40  B4D8               	btfsc	status,2,c
  3165   010D42  EFA5  F086         	goto	u1871
  3166   010D46  EFA7  F086         	goto	u1870
  3167   010D4A                     u1871:
  3168   010D4A  EFAB  F086         	goto	l3150
  3169   010D4E                     u1870:
  3170   010D4E                     
  3171                           ; BSR set to: 0
  3172   010D4E  6D60               	negf	___awmod@dividend& (0+255),b
  3173   010D50  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3174   010D52  B0D8               	btfsc	status,0,c
  3175   010D54  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3176   010D56                     l3150:
  3177                           
  3178                           ; BSR set to: 0
  3179   010D56  C060  F060         	movff	___awmod@dividend,?___awmod
  3180   010D5A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3181   010D5E                     
  3182                           ; BSR set to: 0
  3183   010D5E  0012               	return		;funcret
  3184   010D60                     __end_of___awmod:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function ___awdiv *****************
  3188 ;; Defined at:
  3189 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  dividend        2    0[BANK0 ] int 
  3192 ;;  divisor         2    2[BANK0 ] int 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  quotient        2    6[BANK0 ] int 
  3195 ;;  sign            1    5[BANK0 ] unsigned char 
  3196 ;;  counter         1    4[BANK0 ] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    0[BANK0 ] int 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        8 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 4
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_dtoa
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text13
  3221   010A6E                     __ptext13:
  3222                           	callstack 0
  3223   010A6E                     ___awdiv:
  3224                           	callstack 22
  3225   010A6E  0E00               	movlw	0
  3226   010A70  0100               	movlb	0	; () banked
  3227   010A72  6F65               	movwf	___awdiv@sign& (0+255),b
  3228   010A74                     
  3229                           ; BSR set to: 0
  3230   010A74  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3231   010A76  EF41  F085         	goto	u1760
  3232   010A7A  EF3F  F085         	goto	u1761
  3233   010A7E                     u1761:
  3234   010A7E  EF47  F085         	goto	l3082
  3235   010A82                     u1760:
  3236   010A82                     
  3237                           ; BSR set to: 0
  3238   010A82  6D62               	negf	___awdiv@divisor& (0+255),b
  3239   010A84  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3240   010A86  B0D8               	btfsc	status,0,c
  3241   010A88  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3242   010A8A                     
  3243                           ; BSR set to: 0
  3244   010A8A  0E01               	movlw	1
  3245   010A8C  6F65               	movwf	___awdiv@sign& (0+255),b
  3246   010A8E                     l3082:
  3247                           
  3248                           ; BSR set to: 0
  3249   010A8E  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3250   010A90  EF4E  F085         	goto	u1770
  3251   010A94  EF4C  F085         	goto	u1771
  3252   010A98                     u1771:
  3253   010A98  EF54  F085         	goto	l3088
  3254   010A9C                     u1770:
  3255   010A9C                     
  3256                           ; BSR set to: 0
  3257   010A9C  6D60               	negf	___awdiv@dividend& (0+255),b
  3258   010A9E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3259   010AA0  B0D8               	btfsc	status,0,c
  3260   010AA2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3261   010AA4                     
  3262                           ; BSR set to: 0
  3263   010AA4  0E01               	movlw	1
  3264   010AA6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3265   010AA8                     l3088:
  3266                           
  3267                           ; BSR set to: 0
  3268   010AA8  0E00               	movlw	0
  3269   010AAA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3270   010AAC  0E00               	movlw	0
  3271   010AAE  6F66               	movwf	___awdiv@quotient& (0+255),b
  3272   010AB0                     
  3273                           ; BSR set to: 0
  3274   010AB0  5162               	movf	___awdiv@divisor& (0+255),w,b
  3275   010AB2  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3276   010AB4  B4D8               	btfsc	status,2,c
  3277   010AB6  EF5F  F085         	goto	u1781
  3278   010ABA  EF61  F085         	goto	u1780
  3279   010ABE                     u1781:
  3280   010ABE  EF89  F085         	goto	l3110
  3281   010AC2                     u1780:
  3282   010AC2                     
  3283                           ; BSR set to: 0
  3284   010AC2  0E01               	movlw	1
  3285   010AC4  6F64               	movwf	___awdiv@counter& (0+255),b
  3286   010AC6  EF69  F085         	goto	l3096
  3287   010ACA                     l3094:
  3288                           
  3289                           ; BSR set to: 0
  3290   010ACA  90D8               	bcf	status,0,c
  3291   010ACC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3292   010ACE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3293   010AD0  2B64               	incf	___awdiv@counter& (0+255),f,b
  3294   010AD2                     l3096:
  3295                           
  3296                           ; BSR set to: 0
  3297   010AD2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3298   010AD4  EF6E  F085         	goto	u1791
  3299   010AD8  EF70  F085         	goto	u1790
  3300   010ADC                     u1791:
  3301   010ADC  EF65  F085         	goto	l3094
  3302   010AE0                     u1790:
  3303   010AE0                     l3098:
  3304                           
  3305                           ; BSR set to: 0
  3306   010AE0  90D8               	bcf	status,0,c
  3307   010AE2  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3308   010AE4  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3309   010AE6                     
  3310                           ; BSR set to: 0
  3311   010AE6  5162               	movf	___awdiv@divisor& (0+255),w,b
  3312   010AE8  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3313   010AEA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3314   010AEC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3315   010AEE  A0D8               	btfss	status,0,c
  3316   010AF0  EF7C  F085         	goto	u1801
  3317   010AF4  EF7E  F085         	goto	u1800
  3318   010AF8                     u1801:
  3319   010AF8  EF83  F085         	goto	l3106
  3320   010AFC                     u1800:
  3321   010AFC                     
  3322                           ; BSR set to: 0
  3323   010AFC  5162               	movf	___awdiv@divisor& (0+255),w,b
  3324   010AFE  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3325   010B00  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3326   010B02  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3327   010B04                     
  3328                           ; BSR set to: 0
  3329   010B04  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3330   010B06                     l3106:
  3331                           
  3332                           ; BSR set to: 0
  3333   010B06  90D8               	bcf	status,0,c
  3334   010B08  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3335   010B0A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3336   010B0C                     
  3337                           ; BSR set to: 0
  3338   010B0C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3339   010B0E  EF70  F085         	goto	l3098
  3340   010B12                     l3110:
  3341                           
  3342                           ; BSR set to: 0
  3343   010B12  5165               	movf	___awdiv@sign& (0+255),w,b
  3344   010B14  B4D8               	btfsc	status,2,c
  3345   010B16  EF8F  F085         	goto	u1811
  3346   010B1A  EF91  F085         	goto	u1810
  3347   010B1E                     u1811:
  3348   010B1E  EF95  F085         	goto	l3114
  3349   010B22                     u1810:
  3350   010B22                     
  3351                           ; BSR set to: 0
  3352   010B22  6D66               	negf	___awdiv@quotient& (0+255),b
  3353   010B24  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3354   010B26  B0D8               	btfsc	status,0,c
  3355   010B28  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3356   010B2A                     l3114:
  3357                           
  3358                           ; BSR set to: 0
  3359   010B2A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3360   010B2E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3361   010B32                     
  3362                           ; BSR set to: 0
  3363   010B32  0012               	return		;funcret
  3364   010B34                     __end_of___awdiv:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _measure_voltage *****************
  3368 ;; Defined at:
  3369 ;;		line 18 in file "measure.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  i               2   32[BANK0 ] int 
  3374 ;;  result          4   28[BANK0 ] unsigned long 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2   25[BANK0 ] unsigned short 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:        9 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 5
  3391 ;; This function calls:
  3392 ;;		_ADC_GetConversion
  3393 ;;		___lldiv
  3394 ;;		___lmul
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text14
  3401   010BF4                     __ptext14:
  3402                           	callstack 0
  3403   010BF4                     _measure_voltage:
  3404                           	callstack 25
  3405   010BF4                     
  3406                           ;measure.c: 21:         uint32_t result = 0;
  3407   010BF4  0E00               	movlw	0
  3408   010BF6  0100               	movlb	0	; () banked
  3409   010BF8  6F7C               	movwf	measure_voltage@result& (0+255),b
  3410   010BFA  0E00               	movlw	0
  3411   010BFC  6F7D               	movwf	(measure_voltage@result+1)& (0+255),b
  3412   010BFE  0E00               	movlw	0
  3413   010C00  6F7E               	movwf	(measure_voltage@result+2)& (0+255),b
  3414   010C02  0E00               	movlw	0
  3415   010C04  6F7F               	movwf	(measure_voltage@result+3)& (0+255),b
  3416                           
  3417                           ;measure.c: 23:         for(int i = 0;i < 8;i++)
  3418   010C06  0E00               	movlw	0
  3419   010C08  6F81               	movwf	(measure_voltage@i+1)& (0+255),b
  3420   010C0A  0E00               	movlw	0
  3421   010C0C  6F80               	movwf	measure_voltage@i& (0+255),b
  3422   010C0E                     l3556:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;measure.c: 24:         {;measure.c: 25:             result += ADC_GetConversion(VOLTAGE
      +                          );
  3426   010C0E  0E05               	movlw	5
  3427   010C10  ECA5  F089         	call	_ADC_GetConversion
  3428   010C14  0100               	movlb	0	; () banked
  3429   010C16  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3430   010C18  277C               	addwf	measure_voltage@result& (0+255),f,b
  3431   010C1A  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3432   010C1C  237D               	addwfc	(measure_voltage@result+1)& (0+255),f,b
  3433   010C1E  0E00               	movlw	0
  3434   010C20  237E               	addwfc	(measure_voltage@result+2)& (0+255),f,b
  3435   010C22  0E00               	movlw	0
  3436   010C24  237F               	addwfc	(measure_voltage@result+3)& (0+255),f,b
  3437   010C26                     
  3438                           ; BSR set to: 0
  3439                           ;measure.c: 26:         }
  3440   010C26  4B80               	infsnz	measure_voltage@i& (0+255),f,b
  3441   010C28  2B81               	incf	(measure_voltage@i+1)& (0+255),f,b
  3442   010C2A                     
  3443                           ; BSR set to: 0
  3444   010C2A  BF81               	btfsc	(measure_voltage@i+1)& (0+255),7,b
  3445   010C2C  EF21  F086         	goto	u2241
  3446   010C30  5181               	movf	(measure_voltage@i+1)& (0+255),w,b
  3447   010C32  E109               	bnz	u2240
  3448   010C34  0E08               	movlw	8
  3449   010C36  5D80               	subwf	measure_voltage@i& (0+255),w,b
  3450   010C38  A0D8               	btfss	status,0,c
  3451   010C3A  EF21  F086         	goto	u2241
  3452   010C3E  EF23  F086         	goto	u2240
  3453   010C42                     u2241:
  3454   010C42  EF07  F086         	goto	l3556
  3455   010C46                     u2240:
  3456   010C46                     
  3457                           ; BSR set to: 0
  3458                           ;measure.c: 27:         result/= 8;
  3459   010C46  0E03               	movlw	3
  3460   010C48  6F7B               	movwf	??_measure_voltage& (0+255),b
  3461   010C4A                     u2255:
  3462   010C4A  90D8               	bcf	status,0,c
  3463   010C4C  337F               	rrcf	(measure_voltage@result+3)& (0+255),f,b
  3464   010C4E  337E               	rrcf	(measure_voltage@result+2)& (0+255),f,b
  3465   010C50  337D               	rrcf	(measure_voltage@result+1)& (0+255),f,b
  3466   010C52  337C               	rrcf	measure_voltage@result& (0+255),f,b
  3467   010C54  2F7B               	decfsz	??_measure_voltage& (0+255),f,b
  3468   010C56  EF25  F086         	goto	u2255
  3469   010C5A                     
  3470                           ; BSR set to: 0
  3471                           ;measure.c: 29:         return (result*3300)/(1024 - 1);
  3472   010C5A  C07C  F060         	movff	measure_voltage@result,___lmul@multiplier
  3473   010C5E  C07D  F061         	movff	measure_voltage@result+1,___lmul@multiplier+1
  3474   010C62  C07E  F062         	movff	measure_voltage@result+2,___lmul@multiplier+2
  3475   010C66  C07F  F063         	movff	measure_voltage@result+3,___lmul@multiplier+3
  3476   010C6A  0EE4               	movlw	228
  3477   010C6C  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3478   010C6E  0E0C               	movlw	12
  3479   010C70  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3480   010C72  0E00               	movlw	0
  3481   010C74  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3482   010C76  0E00               	movlw	0
  3483   010C78  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3484   010C7A  ECE3  F087         	call	___lmul	;wreg free
  3485   010C7E  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3486   010C82  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3487   010C86  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3488   010C8A  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3489   010C8E  0EFF               	movlw	255
  3490   010C90  0100               	movlb	0	; () banked
  3491   010C92  6F70               	movwf	___lldiv@divisor& (0+255),b
  3492   010C94  0E03               	movlw	3
  3493   010C96  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3494   010C98  0E00               	movlw	0
  3495   010C9A  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3496   010C9C  0E00               	movlw	0
  3497   010C9E  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3498   010CA0  EC08  F087         	call	___lldiv	;wreg free
  3499   010CA4  C06C  F079         	movff	?___lldiv,?_measure_voltage
  3500   010CA8  C06D  F07A         	movff	?___lldiv+1,?_measure_voltage+1
  3501   010CAC  0012               	return		;funcret
  3502   010CAE                     __end_of_measure_voltage:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _measure_current *****************
  3506 ;; Defined at:
  3507 ;;		line 32 in file "measure.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  offset          2   25[BANK0 ] unsigned short 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  i               2   31[BANK0 ] int 
  3512 ;;  result          4   33[BANK0 ] unsigned long 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2   25[BANK0 ] unsigned short 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:       12 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 5
  3529 ;; This function calls:
  3530 ;;		_ADC_GetConversion
  3531 ;;		___lldiv
  3532 ;;		___lmul
  3533 ;; This function is called by:
  3534 ;;		_main
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text15
  3539   010648                     __ptext15:
  3540                           	callstack 0
  3541   010648                     _measure_current:
  3542                           	callstack 25
  3543   010648                     
  3544                           ;measure.c: 32: uint16_t measure_current(uint16_t offset);measure.c: 33: {;measure.c: 35
      +                          :         uint32_t result = 0;
  3545   010648  0E00               	movlw	0
  3546   01064A  0100               	movlb	0	; () banked
  3547   01064C  6F81               	movwf	measure_current@result& (0+255),b
  3548   01064E  0E00               	movlw	0
  3549   010650  6F82               	movwf	(measure_current@result+1)& (0+255),b
  3550   010652  0E00               	movlw	0
  3551   010654  6F83               	movwf	(measure_current@result+2)& (0+255),b
  3552   010656  0E00               	movlw	0
  3553   010658  6F84               	movwf	(measure_current@result+3)& (0+255),b
  3554                           
  3555                           ;measure.c: 37:         for(int i = 0;i < 8;i++)
  3556   01065A  0E00               	movlw	0
  3557   01065C  6F80               	movwf	(measure_current@i+1)& (0+255),b
  3558   01065E  0E00               	movlw	0
  3559   010660  6F7F               	movwf	measure_current@i& (0+255),b
  3560   010662                     l3526:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;measure.c: 38:         {;measure.c: 39:             result += ADC_GetConversion(CURRENT
      +                          );
  3564   010662  0E06               	movlw	6
  3565   010664  ECA5  F089         	call	_ADC_GetConversion
  3566   010668  0100               	movlb	0	; () banked
  3567   01066A  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3568   01066C  2781               	addwf	measure_current@result& (0+255),f,b
  3569   01066E  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3570   010670  2382               	addwfc	(measure_current@result+1)& (0+255),f,b
  3571   010672  0E00               	movlw	0
  3572   010674  2383               	addwfc	(measure_current@result+2)& (0+255),f,b
  3573   010676  0E00               	movlw	0
  3574   010678  2384               	addwfc	(measure_current@result+3)& (0+255),f,b
  3575   01067A                     
  3576                           ; BSR set to: 0
  3577                           ;measure.c: 40:         }
  3578   01067A  4B7F               	infsnz	measure_current@i& (0+255),f,b
  3579   01067C  2B80               	incf	(measure_current@i+1)& (0+255),f,b
  3580   01067E                     
  3581                           ; BSR set to: 0
  3582   01067E  BF80               	btfsc	(measure_current@i+1)& (0+255),7,b
  3583   010680  EF4B  F083         	goto	u2211
  3584   010684  5180               	movf	(measure_current@i+1)& (0+255),w,b
  3585   010686  E109               	bnz	u2210
  3586   010688  0E08               	movlw	8
  3587   01068A  5D7F               	subwf	measure_current@i& (0+255),w,b
  3588   01068C  A0D8               	btfss	status,0,c
  3589   01068E  EF4B  F083         	goto	u2211
  3590   010692  EF4D  F083         	goto	u2210
  3591   010696                     u2211:
  3592   010696  EF31  F083         	goto	l3526
  3593   01069A                     u2210:
  3594   01069A                     
  3595                           ; BSR set to: 0
  3596                           ;measure.c: 41:         result/= 8;
  3597   01069A  0E03               	movlw	3
  3598   01069C  6F7B               	movwf	??_measure_current& (0+255),b
  3599   01069E                     u2225:
  3600   01069E  90D8               	bcf	status,0,c
  3601   0106A0  3384               	rrcf	(measure_current@result+3)& (0+255),f,b
  3602   0106A2  3383               	rrcf	(measure_current@result+2)& (0+255),f,b
  3603   0106A4  3382               	rrcf	(measure_current@result+1)& (0+255),f,b
  3604   0106A6  3381               	rrcf	measure_current@result& (0+255),f,b
  3605   0106A8  2F7B               	decfsz	??_measure_current& (0+255),f,b
  3606   0106AA  EF4F  F083         	goto	u2225
  3607   0106AE                     
  3608                           ; BSR set to: 0
  3609                           ;measure.c: 43:         result = (result*3300)/(1024 - 1);
  3610   0106AE  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3611   0106B2  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3612   0106B6  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3613   0106BA  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3614   0106BE  0EE4               	movlw	228
  3615   0106C0  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3616   0106C2  0E0C               	movlw	12
  3617   0106C4  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3618   0106C6  0E00               	movlw	0
  3619   0106C8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3620   0106CA  0E00               	movlw	0
  3621   0106CC  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3622   0106CE  ECE3  F087         	call	___lmul	;wreg free
  3623   0106D2  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3624   0106D6  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3625   0106DA  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3626   0106DE  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3627   0106E2  0EFF               	movlw	255
  3628   0106E4  0100               	movlb	0	; () banked
  3629   0106E6  6F70               	movwf	___lldiv@divisor& (0+255),b
  3630   0106E8  0E03               	movlw	3
  3631   0106EA  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3632   0106EC  0E00               	movlw	0
  3633   0106EE  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3634   0106F0  0E00               	movlw	0
  3635   0106F2  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3636   0106F4  EC08  F087         	call	___lldiv	;wreg free
  3637   0106F8  C06C  F081         	movff	?___lldiv,measure_current@result
  3638   0106FC  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3639   010700  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3640   010704  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3641   010708                     
  3642                           ;measure.c: 45:         result *= 1000;
  3643   010708  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3644   01070C  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3645   010710  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3646   010714  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3647   010718  0EE8               	movlw	232
  3648   01071A  0100               	movlb	0	; () banked
  3649   01071C  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3650   01071E  0E03               	movlw	3
  3651   010720  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3652   010722  0E00               	movlw	0
  3653   010724  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3654   010726  0E00               	movlw	0
  3655   010728  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3656   01072A  ECE3  F087         	call	___lmul	;wreg free
  3657   01072E  C060  F081         	movff	?___lmul,measure_current@result
  3658   010732  C061  F082         	movff	?___lmul+1,measure_current@result+1
  3659   010736  C062  F083         	movff	?___lmul+2,measure_current@result+2
  3660   01073A  C063  F084         	movff	?___lmul+3,measure_current@result+3
  3661   01073E                     
  3662                           ;measure.c: 47:         result /= 66;
  3663   01073E  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3664   010742  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3665   010746  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3666   01074A  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3667   01074E  0E42               	movlw	66
  3668   010750  0100               	movlb	0	; () banked
  3669   010752  6F70               	movwf	___lldiv@divisor& (0+255),b
  3670   010754  0E00               	movlw	0
  3671   010756  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3672   010758  0E00               	movlw	0
  3673   01075A  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3674   01075C  0E00               	movlw	0
  3675   01075E  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3676   010760  EC08  F087         	call	___lldiv	;wreg free
  3677   010764  C06C  F081         	movff	?___lldiv,measure_current@result
  3678   010768  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3679   01076C  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3680   010770  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3681   010774                     
  3682                           ;measure.c: 49:         result /= 3;
  3683   010774  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3684   010778  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3685   01077C  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3686   010780  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3687   010784  0E03               	movlw	3
  3688   010786  0100               	movlb	0	; () banked
  3689   010788  6F70               	movwf	___lldiv@divisor& (0+255),b
  3690   01078A  0E00               	movlw	0
  3691   01078C  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3692   01078E  0E00               	movlw	0
  3693   010790  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3694   010792  0E00               	movlw	0
  3695   010794  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3696   010796  EC08  F087         	call	___lldiv	;wreg free
  3697   01079A  C06C  F081         	movff	?___lldiv,measure_current@result
  3698   01079E  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3699   0107A2  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3700   0107A6  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3701                           
  3702                           ;measure.c: 51:         if(result > offset)
  3703   0107AA  0100               	movlb	0	; () banked
  3704   0107AC  5179               	movf	measure_current@offset& (0+255),w,b
  3705   0107AE  6F7B               	movwf	??_measure_current& (0+255),b
  3706   0107B0  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3707   0107B2  6F7C               	movwf	(??_measure_current+1)& (0+255),b
  3708   0107B4  6B7D               	clrf	(??_measure_current+2)& (0+255),b
  3709   0107B6  6B7E               	clrf	(??_measure_current+3)& (0+255),b
  3710   0107B8  5181               	movf	measure_current@result& (0+255),w,b
  3711   0107BA  5D7B               	subwf	??_measure_current& (0+255),w,b
  3712   0107BC  5182               	movf	(measure_current@result+1)& (0+255),w,b
  3713   0107BE  597C               	subwfb	(??_measure_current+1)& (0+255),w,b
  3714   0107C0  5183               	movf	(measure_current@result+2)& (0+255),w,b
  3715   0107C2  597D               	subwfb	(??_measure_current+2)& (0+255),w,b
  3716   0107C4  5184               	movf	(measure_current@result+3)& (0+255),w,b
  3717   0107C6  597E               	subwfb	(??_measure_current+3)& (0+255),w,b
  3718   0107C8  B0D8               	btfsc	status,0,c
  3719   0107CA  EFE9  F083         	goto	u2231
  3720   0107CE  EFEB  F083         	goto	u2230
  3721   0107D2                     u2231:
  3722   0107D2  EFF3  F083         	goto	l3546
  3723   0107D6                     u2230:
  3724   0107D6                     
  3725                           ; BSR set to: 0
  3726                           ;measure.c: 52:         {;measure.c: 53:             return result-offset;
  3727   0107D6  5179               	movf	measure_current@offset& (0+255),w,b
  3728   0107D8  5D81               	subwf	measure_current@result& (0+255),w,b
  3729   0107DA  6F79               	movwf	?_measure_current& (0+255),b
  3730   0107DC  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3731   0107DE  5982               	subwfb	(measure_current@result+1)& (0+255),w,b
  3732   0107E0  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3733   0107E2  EFF7  F083         	goto	l459
  3734   0107E6                     l3546:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;measure.c: 55:         return 0;
  3738   0107E6  0E00               	movlw	0
  3739   0107E8  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3740   0107EA  0E00               	movlw	0
  3741   0107EC  6F79               	movwf	?_measure_current& (0+255),b
  3742   0107EE                     l459:
  3743                           
  3744                           ; BSR set to: 0
  3745   0107EE  0012               	return		;funcret
  3746   0107F0                     __end_of_measure_current:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function ___lmul *****************
  3750 ;; Defined at:
  3751 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3754 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  product         4    8[BANK0 ] unsigned long 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  4    0[BANK0 ] unsigned long 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3766 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;Total ram usage:       12 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 4
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_measure_voltage
  3777 ;;		_measure_current
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text16
  3782   010FC6                     __ptext16:
  3783                           	callstack 0
  3784   010FC6                     ___lmul:
  3785                           	callstack 25
  3786   010FC6  0E00               	movlw	0
  3787   010FC8  0100               	movlb	0	; () banked
  3788   010FCA  6F68               	movwf	___lmul@product& (0+255),b
  3789   010FCC  0E00               	movlw	0
  3790   010FCE  6F69               	movwf	(___lmul@product+1)& (0+255),b
  3791   010FD0  0E00               	movlw	0
  3792   010FD2  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  3793   010FD4  0E00               	movlw	0
  3794   010FD6  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  3795   010FD8                     l3436:
  3796                           
  3797                           ; BSR set to: 0
  3798   010FD8  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3799   010FDA  EFF1  F087         	goto	u2141
  3800   010FDE  EFF3  F087         	goto	u2140
  3801   010FE2                     u2141:
  3802   010FE2  EFFB  F087         	goto	l3440
  3803   010FE6                     u2140:
  3804   010FE6                     
  3805                           ; BSR set to: 0
  3806   010FE6  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3807   010FE8  2768               	addwf	___lmul@product& (0+255),f,b
  3808   010FEA  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3809   010FEC  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  3810   010FEE  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3811   010FF0  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  3812   010FF2  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3813   010FF4  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  3814   010FF6                     l3440:
  3815                           
  3816                           ; BSR set to: 0
  3817   010FF6  90D8               	bcf	status,0,c
  3818   010FF8  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3819   010FFA  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3820   010FFC  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3821   010FFE  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3822   011000                     
  3823                           ; BSR set to: 0
  3824   011000  90D8               	bcf	status,0,c
  3825   011002  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3826   011004  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3827   011006  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3828   011008  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3829   01100A  5160               	movf	___lmul@multiplier& (0+255),w,b
  3830   01100C  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3831   01100E  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3832   011010  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3833   011012  A4D8               	btfss	status,2,c
  3834   011014  EF0E  F088         	goto	u2151
  3835   011018  EF10  F088         	goto	u2150
  3836   01101C                     u2151:
  3837   01101C  EFEC  F087         	goto	l3436
  3838   011020                     u2150:
  3839   011020                     
  3840                           ; BSR set to: 0
  3841   011020  C068  F060         	movff	___lmul@product,?___lmul
  3842   011024  C069  F061         	movff	___lmul@product+1,?___lmul+1
  3843   011028  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  3844   01102C  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  3845   011030                     
  3846                           ; BSR set to: 0
  3847   011030  0012               	return		;funcret
  3848   011032                     __end_of___lmul:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function ___lldiv *****************
  3852 ;; Defined at:
  3853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  dividend        4   12[BANK0 ] unsigned long 
  3856 ;;  divisor         4   16[BANK0 ] unsigned long 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  quotient        4   20[BANK0 ] unsigned long 
  3859 ;;  counter         1   24[BANK0 ] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  4   12[BANK0 ] unsigned long 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3869 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;Total ram usage:       13 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 4
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_measure_voltage
  3880 ;;		_measure_current
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text17
  3885   010E10                     __ptext17:
  3886                           	callstack 0
  3887   010E10                     ___lldiv:
  3888                           	callstack 25
  3889   010E10  0E00               	movlw	0
  3890   010E12  0100               	movlb	0	; () banked
  3891   010E14  6F74               	movwf	___lldiv@quotient& (0+255),b
  3892   010E16  0E00               	movlw	0
  3893   010E18  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
  3894   010E1A  0E00               	movlw	0
  3895   010E1C  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
  3896   010E1E  0E00               	movlw	0
  3897   010E20  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
  3898   010E22                     
  3899                           ; BSR set to: 0
  3900   010E22  5170               	movf	___lldiv@divisor& (0+255),w,b
  3901   010E24  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3902   010E26  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3903   010E28  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3904   010E2A  B4D8               	btfsc	status,2,c
  3905   010E2C  EF1A  F087         	goto	u2161
  3906   010E30  EF1C  F087         	goto	u2160
  3907   010E34                     u2161:
  3908   010E34  EF52  F087         	goto	l550
  3909   010E38                     u2160:
  3910   010E38                     
  3911                           ; BSR set to: 0
  3912   010E38  0E01               	movlw	1
  3913   010E3A  6F78               	movwf	___lldiv@counter& (0+255),b
  3914   010E3C  EF26  F087         	goto	l3452
  3915   010E40                     l3450:
  3916                           
  3917                           ; BSR set to: 0
  3918   010E40  90D8               	bcf	status,0,c
  3919   010E42  3770               	rlcf	___lldiv@divisor& (0+255),f,b
  3920   010E44  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3921   010E46  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3922   010E48  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3923   010E4A  2B78               	incf	___lldiv@counter& (0+255),f,b
  3924   010E4C                     l3452:
  3925                           
  3926                           ; BSR set to: 0
  3927   010E4C  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3928   010E4E  EF2B  F087         	goto	u2171
  3929   010E52  EF2D  F087         	goto	u2170
  3930   010E56                     u2171:
  3931   010E56  EF20  F087         	goto	l3450
  3932   010E5A                     u2170:
  3933   010E5A                     l3454:
  3934                           
  3935                           ; BSR set to: 0
  3936   010E5A  90D8               	bcf	status,0,c
  3937   010E5C  3774               	rlcf	___lldiv@quotient& (0+255),f,b
  3938   010E5E  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3939   010E60  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3940   010E62  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3941   010E64                     
  3942                           ; BSR set to: 0
  3943   010E64  5170               	movf	___lldiv@divisor& (0+255),w,b
  3944   010E66  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
  3945   010E68  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3946   010E6A  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3947   010E6C  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3948   010E6E  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3949   010E70  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3950   010E72  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3951   010E74  A0D8               	btfss	status,0,c
  3952   010E76  EF3F  F087         	goto	u2181
  3953   010E7A  EF41  F087         	goto	u2180
  3954   010E7E                     u2181:
  3955   010E7E  EF4A  F087         	goto	l3462
  3956   010E82                     u2180:
  3957   010E82                     
  3958                           ; BSR set to: 0
  3959   010E82  5170               	movf	___lldiv@divisor& (0+255),w,b
  3960   010E84  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
  3961   010E86  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3962   010E88  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3963   010E8A  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3964   010E8C  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3965   010E8E  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3966   010E90  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3967   010E92                     
  3968                           ; BSR set to: 0
  3969   010E92  8174               	bsf	___lldiv@quotient& (0+255),0,b
  3970   010E94                     l3462:
  3971                           
  3972                           ; BSR set to: 0
  3973   010E94  90D8               	bcf	status,0,c
  3974   010E96  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3975   010E98  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3976   010E9A  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3977   010E9C  3370               	rrcf	___lldiv@divisor& (0+255),f,b
  3978   010E9E                     
  3979                           ; BSR set to: 0
  3980   010E9E  2F78               	decfsz	___lldiv@counter& (0+255),f,b
  3981   010EA0  EF2D  F087         	goto	l3454
  3982   010EA4                     l550:
  3983                           
  3984                           ; BSR set to: 0
  3985   010EA4  C074  F06C         	movff	___lldiv@quotient,?___lldiv
  3986   010EA8  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
  3987   010EAC  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
  3988   010EB0  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
  3989   010EB4                     
  3990                           ; BSR set to: 0
  3991   010EB4  0012               	return		;funcret
  3992   010EB6                     __end_of___lldiv:
  3993                           	callstack 0
  3994                           
  3995 ;; *************** function _ADC_GetConversion *****************
  3996 ;; Defined at:
  3997 ;;		line 109 in file "mcc_generated_files/adc.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  channel         1    wreg     enum E4918
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  channel         1    4[BANK0 ] enum E4918
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  2    0[BANK0 ] unsigned short 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4011 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;Total ram usage:        5 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 4
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_measure_voltage
  4022 ;;		_measure_current
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text18
  4027   01134A                     __ptext18:
  4028                           	callstack 0
  4029   01134A                     _ADC_GetConversion:
  4030                           	callstack 25
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;incstack = 0
  4034                           ;ADC_GetConversion@channel stored from wreg
  4035   01134A  0100               	movlb	0	; () banked
  4036   01134C  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
  4037   01134E                     
  4038                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  4039   01134E  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4040   011352  0100               	movlb	0	; () banked
  4041   011354  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4042   011356  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4043   011358  50C2               	movf	194,w,c	;volatile
  4044   01135A  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4045   01135C  0BC3               	andlw	-61
  4046   01135E  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4047   011360  6EC2               	movwf	194,c	;volatile
  4048   011362                     
  4049                           ; BSR set to: 0
  4050                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  4051   011362  80C2               	bsf	194,0,c	;volatile
  4052   011364                     
  4053                           ; BSR set to: 0
  4054                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4055   011364  82C2               	bsf	194,1,c	;volatile
  4056   011366                     l86:
  4057                           
  4058                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4059   011366  B2C2               	btfsc	194,1,c	;volatile
  4060   011368  EFB8  F089         	goto	u2131
  4061   01136C  EFBA  F089         	goto	u2130
  4062   011370                     u2131:
  4063   011370  EFB3  F089         	goto	l86
  4064   011374                     u2130:
  4065   011374                     
  4066                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4067   011374  50C4               	movf	196,w,c	;volatile
  4068   011376  0100               	movlb	0	; () banked
  4069   011378  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4070   01137A  6B62               	clrf	??_ADC_GetConversion& (0+255),b
  4071   01137C  50C3               	movf	195,w,c	;volatile
  4072   01137E  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
  4073   011380  6F60               	movwf	?_ADC_GetConversion& (0+255),b
  4074   011382  0E00               	movlw	0
  4075   011384  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4076   011386  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4077   011388                     
  4078                           ; BSR set to: 0
  4079   011388  0012               	return		;funcret
  4080   01138A                     __end_of_ADC_GetConversion:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function _SYSTEM_Initialize *****************
  4084 ;; Defined at:
  4085 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 6
  4106 ;; This function calls:
  4107 ;;		_ADC_Initialize
  4108 ;;		_EPWM1_Initialize
  4109 ;;		_EUSART1_Initialize
  4110 ;;		_INTERRUPT_Initialize
  4111 ;;		_OSCILLATOR_Initialize
  4112 ;;		_PIN_MANAGER_Initialize
  4113 ;;		_TMR0_Initialize
  4114 ;;		_TMR2_Initialize
  4115 ;; This function is called by:
  4116 ;;		_main
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text19
  4121   01153E                     __ptext19:
  4122                           	callstack 0
  4123   01153E                     _SYSTEM_Initialize:
  4124                           	callstack 24
  4125   01153E                     
  4126                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4127   01153E  EC1A  F08B         	call	_INTERRUPT_Initialize	;wreg free
  4128   011542                     
  4129                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4130   011542  ECC5  F089         	call	_PIN_MANAGER_Initialize	;wreg free
  4131   011546                     
  4132                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4133   011546  EC0A  F08B         	call	_OSCILLATOR_Initialize	;wreg free
  4134   01154A                     
  4135                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4136   01154A  ECC7  F08A         	call	_ADC_Initialize	;wreg free
  4137   01154E                     
  4138                           ;mcc_generated_files/mcc.c: 57:     EPWM1_Initialize();
  4139   01154E  ECBC  F08A         	call	_EPWM1_Initialize	;wreg free
  4140   011552                     
  4141                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4142   011552  ECD2  F08A         	call	_TMR2_Initialize	;wreg free
  4143   011556                     
  4144                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  4145   011556  EC23  F08A         	call	_TMR0_Initialize	;wreg free
  4146   01155A                     
  4147                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  4148   01155A  EC5B  F087         	call	_EUSART1_Initialize	;wreg free
  4149   01155E  0012               	return		;funcret
  4150   011560                     __end_of_SYSTEM_Initialize:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _TMR2_Initialize *****************
  4154 ;; Defined at:
  4155 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 4
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_SYSTEM_Initialize
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text20
  4184   0115A4                     __ptext20:
  4185                           	callstack 0
  4186   0115A4                     _TMR2_Initialize:
  4187                           	callstack 25
  4188   0115A4                     
  4189                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4190   0115A4  68CB               	setf	203,c	;volatile
  4191   0115A6                     
  4192                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4193   0115A6  0E00               	movlw	0
  4194   0115A8  6ECC               	movwf	204,c	;volatile
  4195   0115AA                     
  4196                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4197   0115AA  929E               	bcf	158,1,c	;volatile
  4198                           
  4199                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4200   0115AC  0E04               	movlw	4
  4201   0115AE  6ECA               	movwf	202,c	;volatile
  4202   0115B0  0012               	return		;funcret
  4203   0115B2                     __end_of_TMR2_Initialize:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function _TMR0_Initialize *****************
  4207 ;; Defined at:
  4208 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 5
  4229 ;; This function calls:
  4230 ;;		_TMR0_SetInterruptHandler
  4231 ;; This function is called by:
  4232 ;;		_SYSTEM_Initialize
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text21
  4237   011446                     __ptext21:
  4238                           	callstack 0
  4239   011446                     _TMR0_Initialize:
  4240                           	callstack 24
  4241   011446                     
  4242                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4243   011446  9CD5               	bcf	213,6,c	;volatile
  4244                           
  4245                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4246   011448  68D7               	setf	215,c	;volatile
  4247   01144A                     
  4248                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
  4249   01144A  0E9D               	movlw	157
  4250   01144C  6ED6               	movwf	214,c	;volatile
  4251   01144E                     
  4252                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4253   01144E  50D6               	movf	214,w,c	;volatile
  4254   011450  CFD7 F063          	movff	4055,??_TMR0_Initialize	;volatile
  4255   011454  0100               	movlb	0	; () banked
  4256   011456  6B64               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  4257   011458  C063  F064         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4258   01145C  6B63               	clrf	??_TMR0_Initialize& (0+255),b
  4259   01145E  1163               	iorwf	??_TMR0_Initialize& (0+255),w,b
  4260   011460  6E3C               	movwf	_timer0ReloadVal^0,c	;volatile
  4261   011462  5164               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  4262   011464  6E3D               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4263   011466                     
  4264                           ; BSR set to: 0
  4265                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4266   011466  94F2               	bcf	242,2,c	;volatile
  4267   011468                     
  4268                           ; BSR set to: 0
  4269                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4270   011468  8AF2               	bsf	242,5,c	;volatile
  4271   01146A                     
  4272                           ; BSR set to: 0
  4273                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4274   01146A  0E3A               	movlw	low _TMR0_DefaultInterruptHandler
  4275   01146C  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  4276   01146E  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  4277   011470  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4278   011472  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  4279   011474  6F62               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  4280   011476  ECD9  F08A         	call	_TMR0_SetInterruptHandler	;wreg free
  4281   01147A                     
  4282                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x17;
  4283   01147A  0E17               	movlw	23
  4284   01147C  6ED5               	movwf	213,c	;volatile
  4285   01147E  0012               	return		;funcret
  4286   011480                     __end_of_TMR0_Initialize:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _TMR0_SetInterruptHandler *****************
  4290 ;; Defined at:
  4291 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
  4294 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4306 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;Total ram usage:        3 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 4
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_TMR0_Initialize
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text22
  4321   0115B2                     __ptext22:
  4322                           	callstack 0
  4323   0115B2                     _TMR0_SetInterruptHandler:
  4324                           	callstack 24
  4325   0115B2                     
  4326                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4327   0115B2  C060  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4328   0115B6  C061  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4329   0115BA  C062  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  4330   0115BE  0012               	return		;funcret
  4331   0115C0                     __end_of_TMR0_SetInterruptHandler:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function _PIN_MANAGER_Initialize *****************
  4335 ;; Defined at:
  4336 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 4
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_SYSTEM_Initialize
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text23
  4365   01138A                     __ptext23:
  4366                           	callstack 0
  4367   01138A                     _PIN_MANAGER_Initialize:
  4368                           	callstack 25
  4369   01138A                     
  4370                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  4371   01138A  0E00               	movlw	0
  4372   01138C  6E8D               	movwf	141,c	;volatile
  4373                           
  4374                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  4375   01138E  0E00               	movlw	0
  4376   011390  6E91               	movwf	145,c	;volatile
  4377                           
  4378                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  4379   011392  0E00               	movlw	0
  4380   011394  6E8C               	movwf	140,c	;volatile
  4381                           
  4382                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  4383   011396  0E00               	movlw	0
  4384   011398  6E89               	movwf	137,c	;volatile
  4385                           
  4386                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  4387   01139A  0E00               	movlw	0
  4388   01139C  6E8E               	movwf	142,c	;volatile
  4389                           
  4390                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  4391   01139E  0E00               	movlw	0
  4392   0113A0  6E8A               	movwf	138,c	;volatile
  4393                           
  4394                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  4395   0113A2  0E00               	movlw	0
  4396   0113A4  6E8F               	movwf	143,c	;volatile
  4397                           
  4398                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4399   0113A6  0E00               	movlw	0
  4400   0113A8  6E8B               	movwf	139,c	;volatile
  4401                           
  4402                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  4403   0113AA  0E00               	movlw	0
  4404   0113AC  6E90               	movwf	144,c	;volatile
  4405   0113AE                     
  4406                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  4407   0113AE  6896               	setf	150,c	;volatile
  4408   0113B0                     
  4409                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  4410   0113B0  6897               	setf	151,c	;volatile
  4411                           
  4412                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  4413   0113B2  0E3F               	movlw	63
  4414   0113B4  6E92               	movwf	146,c	;volatile
  4415   0113B6                     
  4416                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  4417   0113B6  6898               	setf	152,c	;volatile
  4418   0113B8                     
  4419                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  4420   0113B8  6893               	setf	147,c	;volatile
  4421   0113BA                     
  4422                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  4423   0113BA  6899               	setf	153,c	;volatile
  4424                           
  4425                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBB;
  4426   0113BC  0EBB               	movlw	187
  4427   0113BE  6E94               	movwf	148,c	;volatile
  4428   0113C0                     
  4429                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  4430   0113C0  6895               	setf	149,c	;volatile
  4431   0113C2                     
  4432                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  4433   0113C2  689A               	setf	154,c	;volatile
  4434                           
  4435                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  4436   0113C4  0EF0               	movlw	-16
  4437   0113C6  16C1               	andwf	193,f,c	;volatile
  4438   0113C8  0012               	return		;funcret
  4439   0113CA                     __end_of_PIN_MANAGER_Initialize:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _OSCILLATOR_Initialize *****************
  4443 ;; Defined at:
  4444 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 4
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_SYSTEM_Initialize
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text24
  4473   011614                     __ptext24:
  4474                           	callstack 0
  4475   011614                     _OSCILLATOR_Initialize:
  4476                           	callstack 25
  4477   011614                     
  4478                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x02;
  4479   011614  0E02               	movlw	2
  4480   011616  6ED3               	movwf	211,c	;volatile
  4481                           
  4482                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4483   011618  0E00               	movlw	0
  4484   01161A  6E9B               	movwf	155,c	;volatile
  4485   01161C  0012               	return		;funcret
  4486   01161E                     __end_of_OSCILLATOR_Initialize:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _INTERRUPT_Initialize *****************
  4490 ;; Defined at:
  4491 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		None
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 4
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_SYSTEM_Initialize
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text25
  4520   011634                     __ptext25:
  4521                           	callstack 0
  4522   011634                     _INTERRUPT_Initialize:
  4523                           	callstack 25
  4524   011634                     
  4525                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4526   011634  9ED0               	bcf	208,7,c	;volatile
  4527   011636  0012               	return		;funcret
  4528   011638                     __end_of_INTERRUPT_Initialize:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _EUSART1_Initialize *****************
  4532 ;; Defined at:
  4533 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 5
  4554 ;; This function calls:
  4555 ;;		_EUSART1_SetErrorHandler
  4556 ;;		_EUSART1_SetFramingErrorHandler
  4557 ;;		_EUSART1_SetOverrunErrorHandler
  4558 ;;		_EUSART1_SetRxInterruptHandler
  4559 ;;		_EUSART1_SetTxInterruptHandler
  4560 ;; This function is called by:
  4561 ;;		_SYSTEM_Initialize
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text26
  4566   010EB6                     __ptext26:
  4567                           	callstack 0
  4568   010EB6                     _EUSART1_Initialize:
  4569                           	callstack 24
  4570   010EB6                     
  4571                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4572   010EB6  9A9D               	bcf	157,5,c	;volatile
  4573   010EB8                     
  4574                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4575   010EB8  0E34               	movlw	low _EUSART1_Receive_ISR
  4576   010EBA  0100               	movlb	0	; () banked
  4577   010EBC  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  4578   010EBE  0E0B               	movlw	high _EUSART1_Receive_ISR
  4579   010EC0  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  4580   010EC2  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  4581   010EC4  6F62               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  4582   010EC6  ECE7  F08A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4583   010ECA                     
  4584                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4585   010ECA  989D               	bcf	157,4,c	;volatile
  4586                           
  4587                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4588   010ECC  0ECA               	movlw	low _EUSART1_Transmit_ISR
  4589   010ECE  0100               	movlb	0	; () banked
  4590   010ED0  6F60               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  4591   010ED2  0E13               	movlw	high _EUSART1_Transmit_ISR
  4592   010ED4  6F61               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  4593   010ED6  0E01               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  4594   010ED8  6F62               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
  4595   010EDA  ECE0  F08A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4596   010EDE                     
  4597                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4598   010EDE  0E08               	movlw	8
  4599   010EE0  6E7E               	movwf	126,c	;volatile
  4600   010EE2                     
  4601                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0xD0;
  4602   010EE2  0ED0               	movlw	208
  4603   010EE4  6EAB               	movwf	171,c	;volatile
  4604   010EE6                     
  4605                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x65;
  4606   010EE6  0E65               	movlw	101
  4607   010EE8  6EAC               	movwf	172,c	;volatile
  4608   010EEA                     
  4609                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  4610   010EEA  0E8A               	movlw	138
  4611   010EEC  6EAF               	movwf	175,c	;volatile
  4612   010EEE                     
  4613                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  4614   010EEE  0E02               	movlw	2
  4615   010EF0  6E7F               	movwf	127,c	;volatile
  4616   010EF2                     
  4617                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4618   010EF2  0E3C               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4619   010EF4  0100               	movlb	0	; () banked
  4620   010EF6  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4621   010EF8  0E16               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4622   010EFA  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4623   010EFC  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  4624   010EFE  6F62               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
  4625   010F00  ECF5  F08A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4626   010F04                     
  4627                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4628   010F04  0E28               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4629   010F06  0100               	movlb	0	; () banked
  4630   010F08  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4631   010F0A  0E16               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4632   010F0C  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4633   010F0E  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  4634   010F10  6F62               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
  4635   010F12  ECEE  F08A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4636   010F16                     
  4637                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4638   010F16  0E2E               	movlw	low _EUSART1_DefaultErrorHandler
  4639   010F18  0100               	movlb	0	; () banked
  4640   010F1A  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4641   010F1C  0E16               	movlw	high _EUSART1_DefaultErrorHandler
  4642   010F1E  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4643   010F20  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  4644   010F22  6F62               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)& (0+255),b
  4645   010F24  ECFC  F08A         	call	_EUSART1_SetErrorHandler	;wreg free
  4646                           
  4647                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4648   010F28  0E00               	movlw	0
  4649   010F2A  6E41               	movwf	_eusart1RxLastError^0,c	;volatile
  4650                           
  4651                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4652   010F2C  0E00               	movlw	0
  4653   010F2E  6E47               	movwf	_eusart1TxHead^0,c	;volatile
  4654                           
  4655                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4656   010F30  0E00               	movlw	0
  4657   010F32  6E46               	movwf	_eusart1TxTail^0,c	;volatile
  4658                           
  4659                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4660   010F34  0E08               	movlw	8
  4661   010F36  6E45               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4662                           
  4663                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4664   010F38  0E00               	movlw	0
  4665   010F3A  6E44               	movwf	_eusart1RxHead^0,c	;volatile
  4666                           
  4667                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4668   010F3C  0E00               	movlw	0
  4669   010F3E  6E43               	movwf	_eusart1RxTail^0,c	;volatile
  4670                           
  4671                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4672   010F40  0E00               	movlw	0
  4673   010F42  6E42               	movwf	_eusart1RxCount^0,c	;volatile
  4674   010F44                     
  4675                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4676   010F44  8A9D               	bsf	157,5,c	;volatile
  4677   010F46  0012               	return		;funcret
  4678   010F48                     __end_of_EUSART1_Initialize:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4682 ;; Defined at:
  4683 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4686 ;;		 -> EUSART1_Transmit_ISR(1), 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4698 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;Total ram usage:        3 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 4
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_EUSART1_Initialize
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text27
  4713   0115C0                     __ptext27:
  4714                           	callstack 0
  4715   0115C0                     _EUSART1_SetTxInterruptHandler:
  4716                           	callstack 24
  4717   0115C0                     
  4718                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4719   0115C0  C060  F04E         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4720   0115C4  C061  F04F         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4721   0115C8  C062  F050         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  4722   0115CC  0012               	return		;funcret
  4723   0115CE                     __end_of_EUSART1_SetTxInterruptHandler:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4727 ;; Defined at:
  4728 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4731 ;;		 -> EUSART1_Receive_ISR(1), 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        3 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 4
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_EUSART1_Initialize
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text28
  4758   0115CE                     __ptext28:
  4759                           	callstack 0
  4760   0115CE                     _EUSART1_SetRxInterruptHandler:
  4761                           	callstack 24
  4762   0115CE                     
  4763                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4764   0115CE  C060  F04B         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4765   0115D2  C061  F04C         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4766   0115D6  C062  F04D         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  4767   0115DA  0012               	return		;funcret
  4768   0115DC                     __end_of_EUSART1_SetRxInterruptHandler:
  4769                           	callstack 0
  4770                           
  4771 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4772 ;; Defined at:
  4773 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4776 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4788 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;Total ram usage:        3 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; Hardware stack levels required when called: 4
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_EUSART1_Initialize
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text29
  4803   0115DC                     __ptext29:
  4804                           	callstack 0
  4805   0115DC                     _EUSART1_SetOverrunErrorHandler:
  4806                           	callstack 24
  4807   0115DC                     
  4808                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  4809   0115DC  C060  F0EF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4810   0115E0  C061  F0F0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4811   0115E4  C062  F0F1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  4812   0115E8  0012               	return		;funcret
  4813   0115EA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4817 ;; Defined at:
  4818 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4821 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        3 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; Hardware stack levels required when called: 4
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_EUSART1_Initialize
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text30
  4848   0115EA                     __ptext30:
  4849                           	callstack 0
  4850   0115EA                     _EUSART1_SetFramingErrorHandler:
  4851                           	callstack 24
  4852   0115EA                     
  4853                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  4854   0115EA  C060  F0F2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4855   0115EE  C061  F0F3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4856   0115F2  C062  F0F4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  4857   0115F6  0012               	return		;funcret
  4858   0115F8                     __end_of_EUSART1_SetFramingErrorHandler:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _EUSART1_SetErrorHandler *****************
  4862 ;; Defined at:
  4863 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4866 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4878 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;Total ram usage:        3 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 4
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_EUSART1_Initialize
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text31
  4893   0115F8                     __ptext31:
  4894                           	callstack 0
  4895   0115F8                     _EUSART1_SetErrorHandler:
  4896                           	callstack 24
  4897   0115F8                     
  4898                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  4899   0115F8  C060  F0EC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4900   0115FC  C061  F0ED         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4901   011600  C062  F0EE         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  4902   011604  0012               	return		;funcret
  4903   011606                     __end_of_EUSART1_SetErrorHandler:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _EPWM1_Initialize *****************
  4907 ;; Defined at:
  4908 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 4
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_SYSTEM_Initialize
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text32
  4937   011578                     __ptext32:
  4938                           	callstack 0
  4939   011578                     _EPWM1_Initialize:
  4940                           	callstack 25
  4941   011578                     
  4942                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4943   011578  0E3C               	movlw	60
  4944   01157A  6EBD               	movwf	189,c	;volatile
  4945                           
  4946                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4947   01157C  0E00               	movlw	0
  4948   01157E  6EB6               	movwf	182,c	;volatile
  4949                           
  4950                           ;mcc_generated_files/epwm1.c: 75:  ECCP1DEL = 0x80;
  4951   011580  0E80               	movlw	128
  4952   011582  6E79               	movwf	121,c	;volatile
  4953                           
  4954                           ;mcc_generated_files/epwm1.c: 78:  CCPR1H = 0x00;
  4955   011584  0E00               	movlw	0
  4956   011586  6EBF               	movwf	191,c	;volatile
  4957                           
  4958                           ;mcc_generated_files/epwm1.c: 81:  CCPR1L = 0x7F;
  4959   011588  0E7F               	movlw	127
  4960   01158A  6EBE               	movwf	190,c	;volatile
  4961   01158C  0012               	return		;funcret
  4962   01158E                     __end_of_EPWM1_Initialize:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _ADC_Initialize *****************
  4966 ;; Defined at:
  4967 ;;		line 61 in file "mcc_generated_files/adc.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 4
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_SYSTEM_Initialize
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text33
  4996   01158E                     __ptext33:
  4997                           	callstack 0
  4998   01158E                     _ADC_Initialize:
  4999                           	callstack 25
  5000   01158E                     
  5001                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  5002   01158E  0E00               	movlw	0
  5003   011590  6EC1               	movwf	193,c	;volatile
  5004                           
  5005                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0x92;
  5006   011592  0E92               	movlw	146
  5007   011594  6EC0               	movwf	192,c	;volatile
  5008                           
  5009                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  5010   011596  0E00               	movlw	0
  5011   011598  6EC3               	movwf	195,c	;volatile
  5012                           
  5013                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  5014   01159A  0E00               	movlw	0
  5015   01159C  6EC4               	movwf	196,c	;volatile
  5016                           
  5017                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  5018   01159E  0E01               	movlw	1
  5019   0115A0  6EC2               	movwf	194,c	;volatile
  5020   0115A2  0012               	return		;funcret
  5021   0115A4                     __end_of_ADC_Initialize:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _Lcd_Init *****************
  5025 ;; Defined at:
  5026 ;;		line 17 in file "lcd/lcd.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      char 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 5
  5047 ;; This function calls:
  5048 ;;		_LCD_2x16_WriteCmd
  5049 ;; This function is called by:
  5050 ;;		_main
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text34
  5055   0112C0                     __ptext34:
  5056                           	callstack 0
  5057   0112C0                     _Lcd_Init:
  5058                           	callstack 25
  5059   0112C0                     
  5060                           ;lcd/lcd.c: 21:         TRISDbits.TRISD3 = 0;
  5061   0112C0  9695               	bcf	149,3,c	;volatile
  5062                           
  5063                           ;lcd/lcd.c: 22:         LATDbits.LATD3 = 0;
  5064   0112C2  968C               	bcf	140,3,c	;volatile
  5065                           
  5066                           ;lcd/lcd.c: 23:         TRISDbits.TRISD2 = 0;
  5067   0112C4  9495               	bcf	149,2,c	;volatile
  5068                           
  5069                           ;lcd/lcd.c: 24:         LATDbits.LATD2 = 0;
  5070   0112C6  948C               	bcf	140,2,c	;volatile
  5071   0112C8                     
  5072                           ;lcd/lcd.c: 25:         TRISJ = TRISJ & 0x0F;
  5073   0112C8  509A               	movf	154,w,c	;volatile
  5074   0112CA  0B0F               	andlw	15
  5075   0112CC  6E9A               	movwf	154,c	;volatile
  5076   0112CE                     
  5077                           ;lcd/lcd.c: 27:         _delay((unsigned long)((200)*(25000000L/4000.0)));
  5078   0112CE  0E07               	movlw	7
  5079   0112D0  0100               	movlb	0	; () banked
  5080   0112D2  6F63               	movwf	(??_Lcd_Init+1)& (0+255),b
  5081   0112D4  0E58               	movlw	88
  5082   0112D6  6F62               	movwf	??_Lcd_Init& (0+255),b
  5083   0112D8  0E59               	movlw	89
  5084   0112DA                     u2277:
  5085   0112DA  2EE8               	decfsz	wreg,f,c
  5086   0112DC  D7FE               	bra	u2277
  5087   0112DE  2F62               	decfsz	??_Lcd_Init& (0+255),f,b
  5088   0112E0  D7FC               	bra	u2277
  5089   0112E2  2F63               	decfsz	(??_Lcd_Init+1)& (0+255),f,b
  5090   0112E4  D7FA               	bra	u2277
  5091   0112E6  D000               	nop2	
  5092   0112E8                     
  5093                           ;lcd/lcd.c: 28:         LCD_2x16_WriteCmd(0x02);
  5094   0112E8  0E02               	movlw	2
  5095   0112EA  EC19  F088         	call	_LCD_2x16_WriteCmd
  5096   0112EE                     
  5097                           ;lcd/lcd.c: 30:         LCD_2x16_WriteCmd(0x28);
  5098   0112EE  0E28               	movlw	40
  5099   0112F0  EC19  F088         	call	_LCD_2x16_WriteCmd
  5100   0112F4                     
  5101                           ;lcd/lcd.c: 33:         LCD_2x16_WriteCmd(0x01);
  5102   0112F4  0E01               	movlw	1
  5103   0112F6  EC19  F088         	call	_LCD_2x16_WriteCmd
  5104   0112FA                     
  5105                           ;lcd/lcd.c: 34:         LCD_2x16_WriteCmd(0x0C);
  5106   0112FA  0E0C               	movlw	12
  5107   0112FC  EC19  F088         	call	_LCD_2x16_WriteCmd
  5108   011300                     
  5109                           ;lcd/lcd.c: 37:         LCD_2x16_WriteCmd(0x06);
  5110   011300  0E06               	movlw	6
  5111   011302  EC19  F088         	call	_LCD_2x16_WriteCmd
  5112   011306  0012               	return		;funcret
  5113   011308                     __end_of_Lcd_Init:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _LCD_2x16_WriteMsg *****************
  5117 ;; Defined at:
  5118 ;;		line 74 in file "lcd/lcd.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  msg             2    2[BANK0 ] PTR unsigned char 
  5121 ;;		 -> main@tempString(20), 
  5122 ;;  line            1    4[BANK0 ] unsigned char 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        3 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 5
  5141 ;; This function calls:
  5142 ;;		_LCD_2x16_WriteCmd
  5143 ;;		_LCD_2x16_WriteData
  5144 ;; This function is called by:
  5145 ;;		_main
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text35
  5150   01140A                     __ptext35:
  5151                           	callstack 0
  5152   01140A                     _LCD_2x16_WriteMsg:
  5153                           	callstack 25
  5154   01140A                     
  5155                           ;lcd/lcd.c: 74: void LCD_2x16_WriteMsg(unsigned char * msg, uint8_t line);lcd/lcd.c: 75:
      +                           {;lcd/lcd.c: 76:     LCD_2x16_WriteCmd(0x80 | (line << 6));
  5156   01140A  0100               	movlb	0	; () banked
  5157   01140C  4164               	rrncf	LCD_2x16_WriteMsg@line& (0+255),w,b
  5158   01140E  42E8               	rrncf	wreg,f,c
  5159   011410  0BC0               	andlw	192
  5160   011412  0980               	iorlw	128
  5161   011414  EC19  F088         	call	_LCD_2x16_WriteCmd
  5162   011418                     l3496:
  5163                           
  5164                           ;lcd/lcd.c: 78:     {;lcd/lcd.c: 79:         LCD_2x16_WriteData(*msg);
  5165   011418  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5166   01141C  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5167   011420  50DF               	movf	indf2,w,c
  5168   011422  ECA0  F088         	call	_LCD_2x16_WriteData
  5169   011426                     
  5170                           ;lcd/lcd.c: 80:         msg++;
  5171   011426  0100               	movlb	0	; () banked
  5172   011428  4B62               	infsnz	LCD_2x16_WriteMsg@msg& (0+255),f,b
  5173   01142A  2B63               	incf	(LCD_2x16_WriteMsg@msg+1)& (0+255),f,b
  5174   01142C                     
  5175                           ; BSR set to: 0
  5176                           ;lcd/lcd.c: 81:     }while(*msg != 0);
  5177   01142C  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5178   011430  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5179   011434  50DF               	movf	indf2,w,c
  5180   011436  A4D8               	btfss	status,2,c
  5181   011438  EF20  F08A         	goto	u2201
  5182   01143C  EF22  F08A         	goto	u2200
  5183   011440                     u2201:
  5184   011440  EF0C  F08A         	goto	l3496
  5185   011444                     u2200:
  5186   011444                     
  5187                           ; BSR set to: 0
  5188   011444  0012               	return		;funcret
  5189   011446                     __end_of_LCD_2x16_WriteMsg:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _LCD_2x16_WriteData *****************
  5193 ;; Defined at:
  5194 ;;		line 58 in file "lcd/lcd.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  command         1    wreg     unsigned char 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  command         1    1[BANK0 ] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        2 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 4
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_LCD_2x16_WriteMsg
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text36
  5223   011140                     __ptext36:
  5224                           	callstack 0
  5225   011140                     _LCD_2x16_WriteData:
  5226                           	callstack 25
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;incstack = 0
  5230                           ;LCD_2x16_WriteData@command stored from wreg
  5231   011140  0100               	movlb	0	; () banked
  5232   011142  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5233   011144                     
  5234                           ;lcd/lcd.c: 58: void LCD_2x16_WriteData(uint8_t command);lcd/lcd.c: 59: {;lcd/lcd.c: 60:
      +                               LATDbits.LATD3 = 1;
  5235   011144  868C               	bsf	140,3,c	;volatile
  5236   011146                     
  5237                           ;lcd/lcd.c: 61:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5238   011146  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5239   01114A  0E0F               	movlw	15
  5240   01114C  0100               	movlb	0	; () banked
  5241   01114E  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5242   011150  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5243   011152  0BF0               	andlw	240
  5244   011154  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5245   011156  6E91               	movwf	145,c	;volatile
  5246   011158                     
  5247                           ; BSR set to: 0
  5248                           ;lcd/lcd.c: 62:     LATDbits.LATD2 = 1;
  5249   011158  848C               	bsf	140,2,c	;volatile
  5250   01115A                     
  5251                           ; BSR set to: 0
  5252                           ;lcd/lcd.c: 63:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5253   01115A  D000               	nop2		;2 cycle nop
  5254   01115C  D000               	nop2		;2 cycle nop
  5255   01115E  D000               	nop2		;2 cycle nop
  5256   011160                     
  5257                           ;lcd/lcd.c: 64:     LATDbits.LATD2 = 0;
  5258   011160  948C               	bcf	140,2,c	;volatile
  5259   011162                     
  5260                           ;lcd/lcd.c: 65:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5261   011162  D000               	nop2		;2 cycle nop
  5262   011164  D000               	nop2		;2 cycle nop
  5263   011166  D000               	nop2		;2 cycle nop
  5264                           
  5265                           ;lcd/lcd.c: 66:     command = command << 4;
  5266   011168  0100               	movlb	0	; () banked
  5267   01116A  3961               	swapf	LCD_2x16_WriteData@command& (0+255),w,b
  5268   01116C  0BF0               	andlw	240
  5269   01116E  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5270                           
  5271                           ;lcd/lcd.c: 67:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5272   011170  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5273   011174  0E0F               	movlw	15
  5274   011176  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5275   011178  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5276   01117A  0BF0               	andlw	240
  5277   01117C  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5278   01117E  6E91               	movwf	145,c	;volatile
  5279   011180                     
  5280                           ; BSR set to: 0
  5281                           ;lcd/lcd.c: 68:     LATDbits.LATD2 = 1;
  5282   011180  848C               	bsf	140,2,c	;volatile
  5283   011182                     
  5284                           ; BSR set to: 0
  5285                           ;lcd/lcd.c: 69:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5286   011182  D000               	nop2		;2 cycle nop
  5287   011184  D000               	nop2		;2 cycle nop
  5288   011186  D000               	nop2		;2 cycle nop
  5289   011188                     
  5290                           ;lcd/lcd.c: 70:     LATDbits.LATD2 = 0;
  5291   011188  948C               	bcf	140,2,c	;volatile
  5292   01118A                     
  5293                           ;lcd/lcd.c: 71:     _delay((unsigned long)((100)*(25000000L/4000000.0)));
  5294   01118A  0ED0               	movlw	208
  5295   01118C                     u2287:
  5296   01118C  2EE8               	decfsz	wreg,f,c
  5297   01118E  D7FE               	bra	u2287
  5298   011190  F000               	nop	
  5299   011192  0012               	return		;funcret
  5300   011194                     __end_of_LCD_2x16_WriteData:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _LCD_2x16_WriteCmd *****************
  5304 ;; Defined at:
  5305 ;;		line 43 in file "lcd/lcd.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  command         1    wreg     unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  command         1    1[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;Total ram usage:        2 bytes
  5324 ;; Hardware stack levels used: 1
  5325 ;; Hardware stack levels required when called: 4
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_Lcd_Init
  5330 ;;		_LCD_2x16_WriteMsg
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text37
  5335   011032                     __ptext37:
  5336                           	callstack 0
  5337   011032                     _LCD_2x16_WriteCmd:
  5338                           	callstack 25
  5339                           
  5340                           ;incstack = 0
  5341                           ;LCD_2x16_WriteCmd@command stored from wreg
  5342   011032  0100               	movlb	0	; () banked
  5343   011034  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5344   011036                     
  5345                           ;lcd/lcd.c: 43: void LCD_2x16_WriteCmd(uint8_t command);lcd/lcd.c: 44: {;lcd/lcd.c: 45: 
      +                              LATDbits.LATD3 = 0;
  5346   011036  968C               	bcf	140,3,c	;volatile
  5347   011038                     
  5348                           ;lcd/lcd.c: 46:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5349   011038  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5350   01103C  0E0F               	movlw	15
  5351   01103E  0100               	movlb	0	; () banked
  5352   011040  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5353   011042  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5354   011044  0BF0               	andlw	240
  5355   011046  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5356   011048  6E91               	movwf	145,c	;volatile
  5357   01104A                     
  5358                           ; BSR set to: 0
  5359                           ;lcd/lcd.c: 47:     LATDbits.LATD2 = 1;
  5360   01104A  848C               	bsf	140,2,c	;volatile
  5361   01104C                     
  5362                           ; BSR set to: 0
  5363                           ;lcd/lcd.c: 48:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5364   01104C  0E14               	movlw	20
  5365   01104E                     u2297:
  5366   01104E  2EE8               	decfsz	wreg,f,c
  5367   011050  D7FE               	bra	u2297
  5368   011052  D000               	nop2	
  5369   011054                     
  5370                           ;lcd/lcd.c: 49:     LATDbits.LATD2 = 0;
  5371   011054  948C               	bcf	140,2,c	;volatile
  5372   011056                     
  5373                           ;lcd/lcd.c: 50:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5374   011056  D000               	nop2		;2 cycle nop
  5375   011058  D000               	nop2		;2 cycle nop
  5376   01105A  D000               	nop2		;2 cycle nop
  5377   01105C                     
  5378                           ;lcd/lcd.c: 51:     command = command << 4;
  5379   01105C  0100               	movlb	0	; () banked
  5380   01105E  3961               	swapf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5381   011060  0BF0               	andlw	240
  5382   011062  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5383   011064                     
  5384                           ; BSR set to: 0
  5385                           ;lcd/lcd.c: 52:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5386   011064  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5387   011068  0E0F               	movlw	15
  5388   01106A  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5389   01106C  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5390   01106E  0BF0               	andlw	240
  5391   011070  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5392   011072  6E91               	movwf	145,c	;volatile
  5393   011074                     
  5394                           ; BSR set to: 0
  5395                           ;lcd/lcd.c: 53:     LATDbits.LATD2 = 1;
  5396   011074  848C               	bsf	140,2,c	;volatile
  5397   011076                     
  5398                           ; BSR set to: 0
  5399                           ;lcd/lcd.c: 54:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5400   011076  0E14               	movlw	20
  5401   011078                     u2307:
  5402   011078  2EE8               	decfsz	wreg,f,c
  5403   01107A  D7FE               	bra	u2307
  5404   01107C  D000               	nop2	
  5405   01107E                     
  5406                           ;lcd/lcd.c: 55:     LATDbits.LATD2 = 0;
  5407   01107E  948C               	bcf	140,2,c	;volatile
  5408   011080                     
  5409                           ;lcd/lcd.c: 56:     _delay((unsigned long)((3)*(25000000L/4000.0)));
  5410   011080  0E19               	movlw	25
  5411   011082  0100               	movlb	0	; () banked
  5412   011084  6F60               	movwf	??_LCD_2x16_WriteCmd& (0+255),b
  5413   011086  0E58               	movlw	88
  5414   011088                     u2317:
  5415   011088  2EE8               	decfsz	wreg,f,c
  5416   01108A  D7FE               	bra	u2317
  5417   01108C  2F60               	decfsz	??_LCD_2x16_WriteCmd& (0+255),f,b
  5418   01108E  D7FC               	bra	u2317
  5419   011090  F000               	nop	
  5420   011092  0012               	return		;funcret
  5421   011094                     __end_of_LCD_2x16_WriteCmd:
  5422                           	callstack 0
  5423                           
  5424 ;; *************** function _EPWM1_LoadDutyValue *****************
  5425 ;; Defined at:
  5426 ;;		line 85 in file "mcc_generated_files/epwm1.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;Total ram usage:        4 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; Hardware stack levels required when called: 4
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_main
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text38
  5455   0114BA                     __ptext38:
  5456                           	callstack 0
  5457   0114BA                     _EPWM1_LoadDutyValue:
  5458                           	callstack 26
  5459   0114BA                     
  5460                           ;mcc_generated_files/epwm1.c: 85: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 86: {;mcc_generated_files/epwm1.c: 88:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5461   0114BA  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5462   0114BE  C061  F063         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5463   0114C2  0100               	movlb	0	; () banked
  5464   0114C4  90D8               	bcf	status,0,c
  5465   0114C6  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5466   0114C8  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5467   0114CA  90D8               	bcf	status,0,c
  5468   0114CC  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5469   0114CE  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5470   0114D0  5162               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5471   0114D2  6EBE               	movwf	190,c	;volatile
  5472                           
  5473                           ;mcc_generated_files/epwm1.c: 91:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5474   0114D4  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5475   0114D8  0E03               	movlw	3
  5476   0114DA  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5477   0114DC  3B62               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5478   0114DE  0EF0               	movlw	240
  5479   0114E0  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5480   0114E2  50BD               	movf	189,w,c	;volatile
  5481   0114E4  0BCF               	andlw	207
  5482   0114E6  1162               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5483   0114E8  6EBD               	movwf	189,c	;volatile
  5484   0114EA                     
  5485                           ; BSR set to: 0
  5486   0114EA  0012               	return		;funcret
  5487   0114EC                     __end_of_EPWM1_LoadDutyValue:
  5488                           	callstack 0
  5489                           
  5490 ;; *************** function _INTERRUPT_InterruptManager *****************
  5491 ;; Defined at:
  5492 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;Total ram usage:       12 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 3
  5513 ;; This function calls:
  5514 ;;		NULL
  5515 ;;		_EUSART1_Receive_ISR
  5516 ;;		_EUSART1_Transmit_ISR
  5517 ;;		_TMR0_ISR
  5518 ;;		_TMR0_Reload
  5519 ;;		_modbus_char_recvd
  5520 ;;		_modbus_timer
  5521 ;; This function is called by:
  5522 ;;		Interrupt level 2
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	intcode
  5527   000008                     __pintcode:
  5528                           	callstack 0
  5529   000008                     _INTERRUPT_InterruptManager:
  5530                           	callstack 19
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;incstack = 0
  5534   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5535   00000A  CFFA F01D          	movff	pclath,??_INTERRUPT_InterruptManager
  5536   00000E  CFFB F01E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5537   000012  CFE1 F01F          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5538   000016  CFE2 F020          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5539   00001A  CFD9 F021          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5540   00001E  CFDA F022          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5541   000022  CFF3 F023          	movff	prodl,??_INTERRUPT_InterruptManager+6
  5542   000026  CFF4 F024          	movff	prodh,??_INTERRUPT_InterruptManager+7
  5543   00002A  CFF6 F025          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
  5544   00002E  CFF7 F026          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
  5545   000032  CFF8 F027          	movff	tblptru,??_INTERRUPT_InterruptManager+10
  5546   000036  CFF5 F028          	movff	tablat,??_INTERRUPT_InterruptManager+11
  5547   00003A                     
  5548                           ;mcc_generated_files/interrupt_manager.c: 62:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5549   00003A  AAF2               	btfss	242,5,c	;volatile
  5550   00003C  EF22  F000         	goto	i2u162_41
  5551   000040  EF24  F000         	goto	i2u162_40
  5552   000044                     i2u162_41:
  5553   000044  EF32  F000         	goto	i2l406
  5554   000048                     i2u162_40:
  5555   000048  A4F2               	btfss	242,2,c	;volatile
  5556   00004A  EF29  F000         	goto	i2u163_41
  5557   00004E  EF2B  F000         	goto	i2u163_40
  5558   000052                     i2u163_41:
  5559   000052  EF32  F000         	goto	i2l406
  5560   000056                     i2u163_40:
  5561   000056                     
  5562                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         TMR0_ISR();
  5563   000056  EC40  F08A         	call	_TMR0_ISR	;wreg free
  5564   00005A                     
  5565                           ;mcc_generated_files/interrupt_manager.c: 65:         TMR0ON = 0;
  5566   00005A  9ED5               	bcf	4053,7,c	;volatile
  5567   00005C                     
  5568                           ;mcc_generated_files/interrupt_manager.c: 66:         modbus_timer();
  5569   00005C  EC03  F08B         	call	_modbus_timer	;wreg free
  5570                           
  5571                           ;mcc_generated_files/interrupt_manager.c: 67:     }
  5572   000060  EF79  F000         	goto	i2l414
  5573   000064                     i2l406:
  5574   000064  ACF2               	btfss	242,6,c	;volatile
  5575   000066  EF37  F000         	goto	i2u164_41
  5576   00006A  EF39  F000         	goto	i2u164_40
  5577   00006E                     i2u164_41:
  5578   00006E  EF79  F000         	goto	i2l414
  5579   000072                     i2u164_40:
  5580   000072                     
  5581                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5582   000072  A89D               	btfss	157,4,c	;volatile
  5583   000074  EF3E  F000         	goto	i2u165_41
  5584   000078  EF40  F000         	goto	i2u165_40
  5585   00007C                     i2u165_41:
  5586   00007C  EF56  F000         	goto	i2l409
  5587   000080                     i2u165_40:
  5588   000080  A89E               	btfss	158,4,c	;volatile
  5589   000082  EF45  F000         	goto	i2u166_41
  5590   000086  EF47  F000         	goto	i2u166_40
  5591   00008A                     i2u166_41:
  5592   00008A  EF56  F000         	goto	i2l409
  5593   00008E                     i2u166_40:
  5594   00008E                     
  5595                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             EUSART1_TxDefaultInterruptHandler();
  5596   00008E  D802               	call	i2u167_48
  5597   000090  EF54  F000         	goto	i2u167_49
  5598   000094                     i2u167_48:
  5599   000094  0005               	push	
  5600   000096  6EFA               	movwf	pclath,c
  5601   000098  504E               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  5602   00009A  6EFD               	movwf	tosl,c
  5603   00009C  504F               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  5604   00009E  6EFE               	movwf	tosh,c
  5605   0000A0  5050               	movf	(_EUSART1_TxDefaultInterruptHandler+2)^0,w,c
  5606   0000A2  6EFF               	movwf	tosu,c
  5607   0000A4  50FA               	movf	pclath,w,c
  5608   0000A6  0012               	return		;indir
  5609   0000A8                     i2u167_49:
  5610                           
  5611                           ;mcc_generated_files/interrupt_manager.c: 73:         }
  5612   0000A8  EF79  F000         	goto	i2l414
  5613   0000AC                     i2l409:
  5614   0000AC  AA9D               	btfss	157,5,c	;volatile
  5615   0000AE  EF5B  F000         	goto	i2u168_41
  5616   0000B2  EF5D  F000         	goto	i2u168_40
  5617   0000B6                     i2u168_41:
  5618   0000B6  EF79  F000         	goto	i2l413
  5619   0000BA                     i2u168_40:
  5620   0000BA  AA9E               	btfss	158,5,c	;volatile
  5621   0000BC  EF62  F000         	goto	i2u169_41
  5622   0000C0  EF64  F000         	goto	i2u169_40
  5623   0000C4                     i2u169_41:
  5624   0000C4  EF79  F000         	goto	i2l413
  5625   0000C8                     i2u169_40:
  5626   0000C8                     
  5627                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART1_RxDefaultInterruptHandler();
  5628   0000C8  D802               	call	i2u170_48
  5629   0000CA  EF71  F000         	goto	i2u170_49
  5630   0000CE                     i2u170_48:
  5631   0000CE  0005               	push	
  5632   0000D0  6EFA               	movwf	pclath,c
  5633   0000D2  504B               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  5634   0000D4  6EFD               	movwf	tosl,c
  5635   0000D6  504C               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  5636   0000D8  6EFE               	movwf	tosh,c
  5637   0000DA  504D               	movf	(_EUSART1_RxDefaultInterruptHandler+2)^0,w,c
  5638   0000DC  6EFF               	movwf	tosu,c
  5639   0000DE  50FA               	movf	pclath,w,c
  5640   0000E0  0012               	return		;indir
  5641   0000E2                     i2u170_49:
  5642   0000E2                     
  5643                           ;mcc_generated_files/interrupt_manager.c: 77:             modbus_char_recvd(RCREG1);
  5644   0000E2  50AE               	movf	174,w,c	;volatile
  5645   0000E4  ECB0  F08A         	call	_modbus_char_recvd
  5646   0000E8                     
  5647                           ;mcc_generated_files/interrupt_manager.c: 78:             TMR0_Reload();
  5648   0000E8  EC0F  F08B         	call	_TMR0_Reload	;wreg free
  5649   0000EC                     
  5650                           ;mcc_generated_files/interrupt_manager.c: 79:             TMR0ON = 1;
  5651   0000EC  8ED5               	bsf	4053,7,c	;volatile
  5652                           
  5653                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  5654   0000EE  EF79  F000         	goto	i2l414
  5655   0000F2                     i2l413:
  5656   0000F2                     i2l414:
  5657   0000F2  C028  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
  5658   0000F6  C027  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
  5659   0000FA  C026  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
  5660   0000FE  C025  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
  5661   000102  C024  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  5662   000106  C023  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  5663   00010A  C022  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5664   00010E  C021  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5665   000112  C020  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5666   000116  C01F  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5667   00011A  C01E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5668   00011E  C01D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5669   000122  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5670   000124  0011               	retfie		f
  5671   000126                     __end_of_INTERRUPT_InterruptManager:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _modbus_timer *****************
  5675 ;; Defined at:
  5676 ;;		line 33 in file "modbus.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; Hardware stack levels required when called: 2
  5697 ;; This function calls:
  5698 ;;		_modbus_analyse_and_answer
  5699 ;;		_modbus_send
  5700 ;; This function is called by:
  5701 ;;		_INTERRUPT_InterruptManager
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text40
  5706   011606                     __ptext40:
  5707                           	callstack 0
  5708   011606                     _modbus_timer:
  5709                           	callstack 19
  5710   011606                     
  5711                           ;modbus.c: 35:     modbus_send(modbus_analyse_and_answer());
  5712   011606  EC00  F080         	call	_modbus_analyse_and_answer	;wreg free
  5713   01160A  EC17  F089         	call	_modbus_send
  5714   01160E                     
  5715                           ;modbus.c: 36:     index = 0;
  5716   01160E  0E00               	movlw	0
  5717   011610  6E3F               	movwf	_index^0,c
  5718   011612  0012               	return		;funcret
  5719   011614                     __end_of_modbus_timer:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _modbus_send *****************
  5723 ;; Defined at:
  5724 ;;		line 136 in file "modbus.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  length          1    wreg     unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  length          1    4[COMRAM] unsigned char 
  5729 ;;  i               2    5[COMRAM] int 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5741 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;Total ram usage:        6 bytes
  5744 ;; Hardware stack levels used: 1
  5745 ;; Hardware stack levels required when called: 1
  5746 ;; This function calls:
  5747 ;;		_EUSART1_Write
  5748 ;; This function is called by:
  5749 ;;		_modbus_timer
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text41
  5754   01122E                     __ptext41:
  5755                           	callstack 0
  5756   01122E                     _modbus_send:
  5757                           	callstack 19
  5758                           
  5759                           ;incstack = 0
  5760                           ;modbus_send@length stored from wreg
  5761   01122E  6E05               	movwf	modbus_send@length^0,c
  5762   011230                     
  5763                           ;modbus.c: 136: void modbus_send(uint8_t length);modbus.c: 137: {;modbus.c: 139:     for
      +                          (int i = 0; i < length; i++){
  5764   011230  0E00               	movlw	0
  5765   011232  6E07               	movwf	(modbus_send@i+1)^0,c
  5766   011234  0E00               	movlw	0
  5767   011236  6E06               	movwf	modbus_send@i^0,c
  5768   011238  EF29  F089         	goto	i2l2748
  5769   01123C                     i2l2744:
  5770                           
  5771                           ;modbus.c: 140:         EUSART1_Write(tx_buf[i]);
  5772   01123C  0E00               	movlw	low _tx_buf
  5773   01123E  2406               	addwf	modbus_send@i^0,w,c
  5774   011240  6ED9               	movwf	fsr2l,c
  5775   011242  0E02               	movlw	high _tx_buf
  5776   011244  2007               	addwfc	(modbus_send@i+1)^0,w,c
  5777   011246  6EDA               	movwf	fsr2h,c
  5778   011248  50DF               	movf	indf2,w,c
  5779   01124A  EC75  F088         	call	_EUSART1_Write
  5780   01124E                     
  5781                           ;modbus.c: 141:     }
  5782   01124E  4A06               	infsnz	modbus_send@i^0,f,c
  5783   011250  2A07               	incf	(modbus_send@i+1)^0,f,c
  5784   011252                     i2l2748:
  5785   011252  5005               	movf	modbus_send@length^0,w,c
  5786   011254  6E02               	movwf	??_modbus_send^0,c
  5787   011256  6A03               	clrf	(??_modbus_send+1)^0,c
  5788   011258  5002               	movf	??_modbus_send^0,w,c
  5789   01125A  5C06               	subwf	modbus_send@i^0,w,c
  5790   01125C  5007               	movf	(modbus_send@i+1)^0,w,c
  5791   01125E  0A80               	xorlw	128
  5792   011260  6E04               	movwf	(??_modbus_send+2)^0,c
  5793   011262  5003               	movf	(??_modbus_send+1)^0,w,c
  5794   011264  0A80               	xorlw	128
  5795   011266  5804               	subwfb	(??_modbus_send+2)^0,w,c
  5796   011268  A0D8               	btfss	status,0,c
  5797   01126A  EF39  F089         	goto	i2u141_41
  5798   01126E  EF3B  F089         	goto	i2u141_40
  5799   011272                     i2u141_41:
  5800   011272  EF1E  F089         	goto	i2l2744
  5801   011276                     i2u141_40:
  5802   011276  0012               	return		;funcret
  5803   011278                     __end_of_modbus_send:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _EUSART1_Write *****************
  5807 ;; Defined at:
  5808 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  txData          1    wreg     unsigned char 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  txData          1    0[COMRAM] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      void 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;Total ram usage:        1 bytes
  5827 ;; Hardware stack levels used: 1
  5828 ;; This function calls:
  5829 ;;		Nothing
  5830 ;; This function is called by:
  5831 ;;		_modbus_send
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text42
  5836   0110EA                     __ptext42:
  5837                           	callstack 0
  5838   0110EA                     _EUSART1_Write:
  5839                           	callstack 19
  5840                           
  5841                           ;incstack = 0
  5842                           ;EUSART1_Write@txData stored from wreg
  5843   0110EA  6E01               	movwf	EUSART1_Write@txData^0,c
  5844   0110EC                     i2l2432:
  5845                           
  5846                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5847   0110EC  5045               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5848   0110EE  B4D8               	btfsc	status,2,c
  5849   0110F0  EF7C  F088         	goto	i2u126_41
  5850   0110F4  EF7E  F088         	goto	i2u126_40
  5851   0110F8                     i2u126_41:
  5852   0110F8  EF76  F088         	goto	i2l2432
  5853   0110FC                     i2u126_40:
  5854   0110FC                     
  5855                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5856   0110FC  B89D               	btfsc	157,4,c	;volatile
  5857   0110FE  EF83  F088         	goto	i2u127_41
  5858   011102  EF85  F088         	goto	i2u127_40
  5859   011106                     i2u127_41:
  5860   011106  EF89  F088         	goto	i2l284
  5861   01110A                     i2u127_40:
  5862   01110A                     
  5863                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5864   01110A  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5865                           
  5866                           ;mcc_generated_files/eusart1.c: 182:     }
  5867   01110E  EF9E  F088         	goto	i2l2446
  5868   011112                     i2l284:
  5869                           
  5870                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5871   011112  989D               	bcf	157,4,c	;volatile
  5872   011114                     
  5873                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5874   011114  0E31               	movlw	low _eusart1TxBuffer
  5875   011116  2447               	addwf	_eusart1TxHead^0,w,c	;volatile
  5876   011118  6ED9               	movwf	fsr2l,c
  5877   01111A  6ADA               	clrf	fsr2h,c
  5878   01111C  0E00               	movlw	high _eusart1TxBuffer
  5879   01111E  22DA               	addwfc	fsr2h,f,c
  5880   011120  C001  FFDF         	movff	EUSART1_Write@txData,indf2
  5881   011124  2A47               	incf	_eusart1TxHead^0,f,c	;volatile
  5882   011126                     
  5883                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5884   011126  0E07               	movlw	7
  5885   011128  6447               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5886   01112A  EF99  F088         	goto	i2u128_41
  5887   01112E  EF9B  F088         	goto	i2u128_40
  5888   011132                     i2u128_41:
  5889   011132  EF9D  F088         	goto	i2l2444
  5890   011136                     i2u128_40:
  5891   011136                     
  5892                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5893   011136  0E00               	movlw	0
  5894   011138  6E47               	movwf	_eusart1TxHead^0,c	;volatile
  5895   01113A                     i2l2444:
  5896                           
  5897                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5898   01113A  0645               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5899   01113C                     i2l2446:
  5900                           
  5901                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5902   01113C  889D               	bsf	157,4,c	;volatile
  5903   01113E  0012               	return		;funcret
  5904   011140                     __end_of_EUSART1_Write:
  5905                           	callstack 0
  5906                           
  5907 ;; *************** function _modbus_analyse_and_answer *****************
  5908 ;; Defined at:
  5909 ;;		line 39 in file "modbus.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  i               2   18[COMRAM] int 
  5914 ;;  i               2   22[COMRAM] int 
  5915 ;;  nbofRegister    2   26[COMRAM] unsigned short 
  5916 ;;  startingAddr    2   24[COMRAM] unsigned short 
  5917 ;;  pwmValue        2   16[COMRAM] unsigned short 
  5918 ;;  functionCode    1   15[COMRAM] unsigned char 
  5919 ;;  crc             2   20[COMRAM] unsigned short 
  5920 ;;  crcAtt          2   13[COMRAM] unsigned short 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      unsigned char 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;Total ram usage:       19 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 1
  5937 ;; This function calls:
  5938 ;;		_CRC16
  5939 ;; This function is called by:
  5940 ;;		_modbus_timer
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text43
  5945   010000                     __ptext43:
  5946                           	callstack 0
  5947   010000                     _modbus_analyse_and_answer:
  5948                           	callstack 19
  5949   010000                     
  5950                           ;modbus.c: 41:     if(holding_registers[1] == rx_buf[0])
  5951   010000  0101               	movlb	1	; () banked
  5952   010002  5100               	movf	_rx_buf& (0+255),w,b
  5953   010004  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5954   010006  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  5955   010008  0100               	movlb	0	; () banked
  5956   01000A  51C3               	movf	(_holding_registers+2)& (0+255),w,b
  5957   01000C  180A               	xorwf	??_modbus_analyse_and_answer^0,w,c
  5958   01000E  E107               	bnz	i2u137_41
  5959   010010  51C4               	movf	(_holding_registers+3)& (0+255),w,b
  5960   010012  180B               	xorwf	(??_modbus_analyse_and_answer+1)^0,w,c
  5961   010014  A4D8               	btfss	status,2,c
  5962   010016  EF0F  F080         	goto	i2u137_41
  5963   01001A  EF11  F080         	goto	i2u137_40
  5964   01001E                     i2u137_41:
  5965   01001E  EF4A  F081         	goto	i2l506
  5966   010022                     i2u137_40:
  5967   010022                     
  5968                           ; BSR set to: 0
  5969                           ;modbus.c: 42:     {;modbus.c: 45:         uint16_t crc = rx_buf[index-1];
  5970   010022  0EFF               	movlw	low (_rx_buf+65535)
  5971   010024  243F               	addwf	_index^0,w,c
  5972   010026  6ED9               	movwf	fsr2l,c
  5973   010028  6ADA               	clrf	fsr2h,c
  5974   01002A  0E00               	movlw	high (_rx_buf+65535)
  5975   01002C  22DA               	addwfc	fsr2h,f,c
  5976   01002E  50DF               	movf	indf2,w,c
  5977   010030  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5978   010032  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5979   010034  6E15               	movwf	modbus_analyse_and_answer@crc^0,c
  5980   010036  6A16               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  5981   010038                     
  5982                           ; BSR set to: 0
  5983                           ;modbus.c: 46:         crc = crc << 8;
  5984   010038  5015               	movf	modbus_analyse_and_answer@crc^0,w,c
  5985   01003A  6E16               	movwf	(modbus_analyse_and_answer@crc+1)^0,c
  5986   01003C  6A15               	clrf	modbus_analyse_and_answer@crc^0,c
  5987   01003E                     
  5988                           ; BSR set to: 0
  5989                           ;modbus.c: 47:         crc += rx_buf[index-2];
  5990   01003E  0EFE               	movlw	low (_rx_buf+65534)
  5991   010040  243F               	addwf	_index^0,w,c
  5992   010042  6ED9               	movwf	fsr2l,c
  5993   010044  6ADA               	clrf	fsr2h,c
  5994   010046  0E00               	movlw	high (_rx_buf+65534)
  5995   010048  22DA               	addwfc	fsr2h,f,c
  5996   01004A  50DF               	movf	indf2,w,c
  5997   01004C  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5998   01004E  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5999   010050  2615               	addwf	modbus_analyse_and_answer@crc^0,f,c
  6000   010052  0E00               	movlw	0
  6001   010054  2216               	addwfc	(modbus_analyse_and_answer@crc+1)^0,f,c
  6002   010056                     
  6003                           ; BSR set to: 0
  6004                           ;modbus.c: 49:         uint16_t crcAtt = CRC16(rx_buf,index-2);
  6005   010056  0E00               	movlw	low _rx_buf
  6006   010058  6E01               	movwf	CRC16@msg^0,c
  6007   01005A  0E01               	movlw	high _rx_buf
  6008   01005C  6E02               	movwf	(CRC16@msg+1)^0,c
  6009   01005E  0EFE               	movlw	254
  6010   010060  243F               	addwf	_index^0,w,c
  6011   010062  6E03               	movwf	CRC16@length^0,c
  6012   010064  6A04               	clrf	(CRC16@length+1)^0,c
  6013   010066  0EFF               	movlw	255
  6014   010068  2204               	addwfc	(CRC16@length+1)^0,f,c
  6015   01006A  ECA4  F087         	call	_CRC16	;wreg free
  6016   01006E  C001  F00E         	movff	?_CRC16,modbus_analyse_and_answer@crcAtt
  6017   010072  C002  F00F         	movff	?_CRC16+1,modbus_analyse_and_answer@crcAtt+1
  6018   010076                     
  6019                           ;modbus.c: 50:         if(crc == crcAtt){
  6020   010076  500E               	movf	modbus_analyse_and_answer@crcAtt^0,w,c
  6021   010078  1815               	xorwf	modbus_analyse_and_answer@crc^0,w,c
  6022   01007A  E107               	bnz	i2u138_41
  6023   01007C  500F               	movf	(modbus_analyse_and_answer@crcAtt+1)^0,w,c
  6024   01007E  1816               	xorwf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6025   010080  A4D8               	btfss	status,2,c
  6026   010082  EF45  F080         	goto	i2u138_41
  6027   010086  EF47  F080         	goto	i2u138_40
  6028   01008A                     i2u138_41:
  6029   01008A  EF4A  F081         	goto	i2l506
  6030   01008E                     i2u138_40:
  6031   01008E                     
  6032                           ;modbus.c: 57:             uint8_t functionCode = rx_buf[1];
  6033   01008E  C101  F010         	movff	_rx_buf+1,modbus_analyse_and_answer@functionCode
  6034   010092                     
  6035                           ;modbus.c: 60:             uint16_t nbofRegister = 0;
  6036   010092  0E00               	movlw	0
  6037   010094  6E1C               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6038   010096  0E00               	movlw	0
  6039   010098  6E1B               	movwf	modbus_analyse_and_answer@nbofRegister^0,c
  6040                           
  6041                           ;modbus.c: 61:             uint16_t pwmValue = 0;
  6042   01009A  0E00               	movlw	0
  6043   01009C  6E12               	movwf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6044   01009E  0E00               	movlw	0
  6045   0100A0  6E11               	movwf	modbus_analyse_and_answer@pwmValue^0,c
  6046                           
  6047                           ;modbus.c: 63:             tx_buf[0] = 0x80;
  6048   0100A2  0E80               	movlw	128
  6049   0100A4  0102               	movlb	2	; () banked
  6050   0100A6  6F00               	movwf	_tx_buf& (0+255),b
  6051                           
  6052                           ;modbus.c: 64:             switch (functionCode){
  6053   0100A8  EF35  F081         	goto	i2l2734
  6054   0100AC                     i2l502:
  6055                           
  6056                           ; BSR set to: 2
  6057                           ;modbus.c: 70:                     startingAddress = rx_buf[2];
  6058   0100AC  C102  F019         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6059   0100B0  6A1A               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6060   0100B2                     
  6061                           ; BSR set to: 2
  6062                           ;modbus.c: 71:                     startingAddress = startingAddress << 8;
  6063   0100B2  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6064   0100B4  6E1A               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6065   0100B6  6A19               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6066   0100B8                     
  6067                           ; BSR set to: 2
  6068                           ;modbus.c: 72:                     startingAddress += rx_buf[3];
  6069   0100B8  0101               	movlb	1	; () banked
  6070   0100BA  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6071   0100BC  2619               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6072   0100BE  0E00               	movlw	0
  6073   0100C0  221A               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6074   0100C2                     
  6075                           ; BSR set to: 1
  6076                           ;modbus.c: 75:                     nbofRegister = rx_buf[4];
  6077   0100C2  C104  F01B         	movff	_rx_buf+4,modbus_analyse_and_answer@nbofRegister
  6078   0100C6  6A1C               	clrf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6079   0100C8                     
  6080                           ; BSR set to: 1
  6081                           ;modbus.c: 76:                     nbofRegister <<= 8;
  6082   0100C8  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6083   0100CA  6E1C               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6084   0100CC  6A1B               	clrf	modbus_analyse_and_answer@nbofRegister^0,c
  6085                           
  6086                           ;modbus.c: 77:                     nbofRegister += rx_buf[5];
  6087   0100CE  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6088   0100D0  261B               	addwf	modbus_analyse_and_answer@nbofRegister^0,f,c
  6089   0100D2  0E00               	movlw	0
  6090   0100D4  221C               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,f,c
  6091   0100D6                     
  6092                           ; BSR set to: 1
  6093                           ;modbus.c: 80:                     tx_buf[1] = 0x04;
  6094   0100D6  0E04               	movlw	4
  6095   0100D8  0102               	movlb	2	; () banked
  6096   0100DA  6F01               	movwf	(_tx_buf+1)& (0+255),b
  6097   0100DC                     
  6098                           ; BSR set to: 2
  6099                           ;modbus.c: 81:                     tx_buf[2] = 2*nbofRegister;
  6100   0100DC  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6101   0100DE  241B               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6102   0100E0  6F02               	movwf	(_tx_buf+2)& (0+255),b
  6103                           
  6104                           ;modbus.c: 84:                     for(int i = 0;i < nbofRegister;i++)
  6105   0100E2  0E00               	movlw	0
  6106   0100E4  6E18               	movwf	(modbus_analyse_and_answer@i+1)^0,c
  6107   0100E6  0E00               	movlw	0
  6108   0100E8  6E17               	movwf	modbus_analyse_and_answer@i^0,c
  6109   0100EA  EFB4  F080         	goto	i2l2688
  6110   0100EE                     i2l2684:
  6111                           
  6112                           ;modbus.c: 85:                     {;modbus.c: 87:                         tx_buf[3+(i*2
      +                          )] = (input_registers[startingAddress + i]>>8);
  6113   0100EE  90D8               	bcf	status,0,c
  6114   0100F0  3417               	rlcf	modbus_analyse_and_answer@i^0,w,c
  6115   0100F2  6ED9               	movwf	fsr2l,c
  6116   0100F4  3418               	rlcf	(modbus_analyse_and_answer@i+1)^0,w,c
  6117   0100F6  6EDA               	movwf	fsr2h,c
  6118   0100F8  0E03               	movlw	low (_tx_buf+3)
  6119   0100FA  26D9               	addwf	fsr2l,f,c
  6120   0100FC  0E02               	movlw	high (_tx_buf+3)
  6121   0100FE  22DA               	addwfc	fsr2h,f,c
  6122   010100  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6123   010102  2417               	addwf	modbus_analyse_and_answer@i^0,w,c
  6124   010104  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6125   010106  501A               	movf	(modbus_analyse_and_answer@startingAddress+1)^0,w,c
  6126   010108  2018               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6127   01010A  6E0B               	movwf	(??_modbus_analyse_and_answer+1)^0,c
  6128   01010C  90D8               	bcf	status,0,c
  6129   01010E  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6130   010110  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6131   010112  0EBD               	movlw	low _input_registers
  6132   010114  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6133   010116  6EE1               	movwf	fsr1l,c
  6134   010118  0E00               	movlw	high _input_registers
  6135   01011A  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6136   01011C  6EE2               	movwf	fsr1h,c
  6137   01011E  CFE6 F00C          	movff	postinc1,??_modbus_analyse_and_answer+2
  6138   010122  CFE5 F00D          	movff	postdec1,??_modbus_analyse_and_answer+3
  6139   010126  C00D  F00C         	movff	??_modbus_analyse_and_answer+3,??_modbus_analyse_and_answer+2
  6140   01012A  6A0D               	clrf	(??_modbus_analyse_and_answer+3)^0,c
  6141   01012C  500C               	movf	(??_modbus_analyse_and_answer+2)^0,w,c
  6142   01012E  6EDF               	movwf	indf2,c
  6143                           
  6144                           ;modbus.c: 88:                         tx_buf[3+(i*2)+1] = input_registers[startingAddre
      +                          ss + i];
  6145   010130  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6146   010132  2417               	addwf	modbus_analyse_and_answer@i^0,w,c
  6147   010134  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6148   010136  501A               	movf	(modbus_analyse_and_answer@startingAddress+1)^0,w,c
  6149   010138  2018               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6150   01013A  6E0B               	movwf	(??_modbus_analyse_and_answer+1)^0,c
  6151   01013C  90D8               	bcf	status,0,c
  6152   01013E  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6153   010140  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6154   010142  0EBD               	movlw	low _input_registers
  6155   010144  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6156   010146  6ED9               	movwf	fsr2l,c
  6157   010148  0E00               	movlw	high _input_registers
  6158   01014A  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6159   01014C  6EDA               	movwf	fsr2h,c
  6160   01014E  90D8               	bcf	status,0,c
  6161   010150  3417               	rlcf	modbus_analyse_and_answer@i^0,w,c
  6162   010152  6EE1               	movwf	fsr1l,c
  6163   010154  3418               	rlcf	(modbus_analyse_and_answer@i+1)^0,w,c
  6164   010156  6EE2               	movwf	fsr1h,c
  6165   010158  0E04               	movlw	low (_tx_buf+4)
  6166   01015A  26E1               	addwf	fsr1l,f,c
  6167   01015C  0E02               	movlw	high (_tx_buf+4)
  6168   01015E  22E2               	addwfc	fsr1h,f,c
  6169   010160  CFDF FFE7          	movff	indf2,indf1
  6170   010164                     
  6171                           ;modbus.c: 89:                     }
  6172   010164  4A17               	infsnz	modbus_analyse_and_answer@i^0,f,c
  6173   010166  2A18               	incf	(modbus_analyse_and_answer@i+1)^0,f,c
  6174   010168                     i2l2688:
  6175   010168  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6176   01016A  5C17               	subwf	modbus_analyse_and_answer@i^0,w,c
  6177   01016C  501C               	movf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6178   01016E  5818               	subwfb	(modbus_analyse_and_answer@i+1)^0,w,c
  6179   010170  A0D8               	btfss	status,0,c
  6180   010172  EFBD  F080         	goto	i2u139_41
  6181   010176  EFBF  F080         	goto	i2u139_40
  6182   01017A                     i2u139_41:
  6183   01017A  EF77  F080         	goto	i2l2684
  6184   01017E                     i2u139_40:
  6185   01017E                     
  6186                           ;modbus.c: 92:                     crc = CRC16(tx_buf,nbofRegister*2+3);
  6187   01017E  0E00               	movlw	low _tx_buf
  6188   010180  6E01               	movwf	CRC16@msg^0,c
  6189   010182  0E02               	movlw	high _tx_buf
  6190   010184  6E02               	movwf	(CRC16@msg+1)^0,c
  6191   010186  C01B  F00A         	movff	modbus_analyse_and_answer@nbofRegister,??_modbus_analyse_and_answer
  6192   01018A  C01C  F00B         	movff	modbus_analyse_and_answer@nbofRegister+1,??_modbus_analyse_and_answer+1
  6193   01018E  90D8               	bcf	status,0,c
  6194   010190  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6195   010192  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6196   010194  0E03               	movlw	3
  6197   010196  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6198   010198  6E03               	movwf	CRC16@length^0,c
  6199   01019A  0E00               	movlw	0
  6200   01019C  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6201   01019E  6E04               	movwf	(CRC16@length+1)^0,c
  6202   0101A0  ECA4  F087         	call	_CRC16	;wreg free
  6203   0101A4  C001  F015         	movff	?_CRC16,modbus_analyse_and_answer@crc
  6204   0101A8  C002  F016         	movff	?_CRC16+1,modbus_analyse_and_answer@crc+1
  6205   0101AC                     
  6206                           ;modbus.c: 93:                     tx_buf[nbofRegister*2+3] = crc;
  6207   0101AC  90D8               	bcf	status,0,c
  6208   0101AE  341B               	rlcf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6209   0101B0  6ED9               	movwf	fsr2l,c
  6210   0101B2  341C               	rlcf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6211   0101B4  6EDA               	movwf	fsr2h,c
  6212   0101B6  0E03               	movlw	low (_tx_buf+3)
  6213   0101B8  26D9               	addwf	fsr2l,f,c
  6214   0101BA  0E02               	movlw	high (_tx_buf+3)
  6215   0101BC  22DA               	addwfc	fsr2h,f,c
  6216   0101BE  C015  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6217   0101C2                     
  6218                           ;modbus.c: 94:                     crc >>= 8;
  6219   0101C2  5016               	movf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6220   0101C4  6E15               	movwf	modbus_analyse_and_answer@crc^0,c
  6221   0101C6  6A16               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  6222   0101C8                     
  6223                           ;modbus.c: 95:                     tx_buf[nbofRegister*2+4] = crc;
  6224   0101C8  90D8               	bcf	status,0,c
  6225   0101CA  341B               	rlcf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6226   0101CC  6ED9               	movwf	fsr2l,c
  6227   0101CE  341C               	rlcf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6228   0101D0  6EDA               	movwf	fsr2h,c
  6229   0101D2  0E04               	movlw	low (_tx_buf+4)
  6230   0101D4  26D9               	addwf	fsr2l,f,c
  6231   0101D6  0E02               	movlw	high (_tx_buf+4)
  6232   0101D8  22DA               	addwfc	fsr2h,f,c
  6233   0101DA  C015  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6234   0101DE                     
  6235                           ;modbus.c: 97:                     return nbofRegister*2+5;
  6236   0101DE  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6237   0101E0  0D02               	mullw	2
  6238   0101E2  50F3               	movf	243,w,c
  6239   0101E4  0F05               	addlw	5
  6240   0101E6  EF4A  F081         	goto	i2l506
  6241   0101EA                     i2l2700:
  6242                           
  6243                           ; BSR set to: 2
  6244   0101EA  EF4A  F081         	goto	i2l506
  6245   0101EE                     i2l508:
  6246                           
  6247                           ; BSR set to: 2
  6248                           ;modbus.c: 104:                     startingAddress = rx_buf[2];
  6249   0101EE  C102  F019         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6250   0101F2  6A1A               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6251   0101F4                     
  6252                           ; BSR set to: 2
  6253                           ;modbus.c: 105:                     startingAddress = startingAddress << 8;
  6254   0101F4  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6255   0101F6  6E1A               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6256   0101F8  6A19               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6257   0101FA                     
  6258                           ; BSR set to: 2
  6259                           ;modbus.c: 106:                     startingAddress += rx_buf[3];
  6260   0101FA  0101               	movlb	1	; () banked
  6261   0101FC  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6262   0101FE  2619               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6263   010200  0E00               	movlw	0
  6264   010202  221A               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6265   010204                     
  6266                           ; BSR set to: 1
  6267                           ;modbus.c: 109:                     pwmValue = rx_buf[4];
  6268   010204  C104  F011         	movff	_rx_buf+4,modbus_analyse_and_answer@pwmValue
  6269   010208  6A12               	clrf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6270   01020A                     
  6271                           ; BSR set to: 1
  6272                           ;modbus.c: 110:                     pwmValue <<= 8;
  6273   01020A  5011               	movf	modbus_analyse_and_answer@pwmValue^0,w,c
  6274   01020C  6E12               	movwf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6275   01020E  6A11               	clrf	modbus_analyse_and_answer@pwmValue^0,c
  6276                           
  6277                           ;modbus.c: 111:                     pwmValue += rx_buf[5];
  6278   010210  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6279   010212  2611               	addwf	modbus_analyse_and_answer@pwmValue^0,f,c
  6280   010214  0E00               	movlw	0
  6281   010216  2212               	addwfc	(modbus_analyse_and_answer@pwmValue+1)^0,f,c
  6282   010218                     
  6283                           ; BSR set to: 1
  6284                           ;modbus.c: 113:                     holding_registers[0] = pwmValue;
  6285   010218  C011  F0C1         	movff	modbus_analyse_and_answer@pwmValue,_holding_registers
  6286   01021C  C012  F0C2         	movff	modbus_analyse_and_answer@pwmValue+1,_holding_registers+1
  6287   010220                     
  6288                           ; BSR set to: 1
  6289                           ;modbus.c: 117:                     for (int i = 0; i < 7; i++){
  6290   010220  0E00               	movlw	0
  6291   010222  6E14               	movwf	(modbus_analyse_and_answer@i_1186+1)^0,c
  6292   010224  0E00               	movlw	0
  6293   010226  6E13               	movwf	modbus_analyse_and_answer@i_1186^0,c
  6294   010228                     i2l2720:
  6295                           
  6296                           ;modbus.c: 118:                         tx_buf[i+1] = rx_buf[i+1];
  6297   010228  0E01               	movlw	low (_rx_buf+1)
  6298   01022A  2413               	addwf	modbus_analyse_and_answer@i_1186^0,w,c
  6299   01022C  6ED9               	movwf	fsr2l,c
  6300   01022E  0E01               	movlw	high (_rx_buf+1)
  6301   010230  2014               	addwfc	(modbus_analyse_and_answer@i_1186+1)^0,w,c
  6302   010232  6EDA               	movwf	fsr2h,c
  6303   010234  0E01               	movlw	low (_tx_buf+1)
  6304   010236  2413               	addwf	modbus_analyse_and_answer@i_1186^0,w,c
  6305   010238  6EE1               	movwf	fsr1l,c
  6306   01023A  0E02               	movlw	high (_tx_buf+1)
  6307   01023C  2014               	addwfc	(modbus_analyse_and_answer@i_1186+1)^0,w,c
  6308   01023E  6EE2               	movwf	fsr1h,c
  6309   010240  CFDF FFE7          	movff	indf2,indf1
  6310   010244                     
  6311                           ;modbus.c: 119:                     }
  6312   010244  4A13               	infsnz	modbus_analyse_and_answer@i_1186^0,f,c
  6313   010246  2A14               	incf	(modbus_analyse_and_answer@i_1186+1)^0,f,c
  6314   010248  BE14               	btfsc	(modbus_analyse_and_answer@i_1186+1)^0,7,c
  6315   01024A  EF30  F081         	goto	i2u140_41
  6316   01024E  5014               	movf	(modbus_analyse_and_answer@i_1186+1)^0,w,c
  6317   010250  E109               	bnz	i2u140_40
  6318   010252  0E07               	movlw	7
  6319   010254  5C13               	subwf	modbus_analyse_and_answer@i_1186^0,w,c
  6320   010256  A0D8               	btfss	status,0,c
  6321   010258  EF30  F081         	goto	i2u140_41
  6322   01025C  EF32  F081         	goto	i2u140_40
  6323   010260                     i2u140_41:
  6324   010260  EF14  F081         	goto	i2l2720
  6325   010264                     i2u140_40:
  6326   010264                     
  6327                           ;modbus.c: 120:                     return 8;
  6328   010264  0E08               	movlw	8
  6329   010266  EF4A  F081         	goto	i2l506
  6330   01026A                     i2l2734:
  6331                           
  6332                           ; BSR set to: 2
  6333   01026A  5010               	movf	modbus_analyse_and_answer@functionCode^0,w,c
  6334   01026C  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6335   01026E  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  6336                           
  6337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6338                           ; Switch size 1, requested type "simple"
  6339                           ; Number of cases is 1, Range of values is 0 to 0
  6340                           ; switch strategies available:
  6341                           ; Name         Instructions Cycles
  6342                           ; simple_byte            4     3 (average)
  6343                           ;	Chosen strategy is simple_byte
  6344   010270  500B               	movf	(??_modbus_analyse_and_answer+1)^0,w,c
  6345   010272  0A00               	xorlw	0	; case 0
  6346   010274  B4D8               	btfsc	status,2,c
  6347   010276  EF3F  F081         	goto	i2l3662
  6348   01027A  EFF5  F080         	goto	i2l2700
  6349   01027E                     i2l3662:
  6350                           
  6351                           ; BSR set to: 2
  6352                           ; Switch size 1, requested type "simple"
  6353                           ; Number of cases is 2, Range of values is 4 to 6
  6354                           ; switch strategies available:
  6355                           ; Name         Instructions Cycles
  6356                           ; simple_byte            7     4 (average)
  6357                           ;	Chosen strategy is simple_byte
  6358   01027E  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  6359   010280  0A04               	xorlw	4	; case 4
  6360   010282  B4D8               	btfsc	status,2,c
  6361   010284  EF56  F080         	goto	i2l502
  6362   010288  0A02               	xorlw	2	; case 6
  6363   01028A  B4D8               	btfsc	status,2,c
  6364   01028C  EFF7  F080         	goto	i2l508
  6365   010290  EFF5  F080         	goto	i2l2700
  6366   010294                     i2l506:
  6367   010294  0012               	return		;funcret
  6368   010296                     __end_of_modbus_analyse_and_answer:
  6369                           	callstack 0
  6370                           
  6371 ;; *************** function _CRC16 *****************
  6372 ;; Defined at:
  6373 ;;		line 48 in file "crc.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  msg             2    0[COMRAM] PTR const unsigned char 
  6376 ;;		 -> tx_buf(256), rx_buf(256), 
  6377 ;;  length          2    2[COMRAM] unsigned short 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  uchCRCLo        1    8[COMRAM] unsigned char 
  6380 ;;  uchCRCHi        1    7[COMRAM] unsigned char 
  6381 ;;  uIndex          1    6[COMRAM] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  2    0[COMRAM] unsigned short 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;Total ram usage:        9 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_modbus_analyse_and_answer
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text44
  6405   010F48                     __ptext44:
  6406                           	callstack 0
  6407   010F48                     _CRC16:
  6408                           	callstack 19
  6409   010F48                     
  6410                           ;crc.c: 48: uint16_t CRC16(const uint8_t *msg, uint16_t length);crc.c: 49: {;crc.c: 50: 
      +                           uint8_t uchCRCHi = 0xFF;
  6411   010F48  6808               	setf	CRC16@uchCRCHi^0,c
  6412                           
  6413                           ;crc.c: 51:  uint8_t uchCRCLo = 0xFF;
  6414   010F4A  6809               	setf	CRC16@uchCRCLo^0,c
  6415                           
  6416                           ;crc.c: 52:  uint8_t uIndex;;crc.c: 54:  while (length--) {
  6417   010F4C  EFCA  F087         	goto	i2l2470
  6418   010F50                     i2l2462:
  6419                           
  6420                           ;crc.c: 55:   uIndex = uchCRCLo ^ *msg++;
  6421   010F50  C001  FFD9         	movff	CRC16@msg,fsr2l
  6422   010F54  C002  FFDA         	movff	CRC16@msg+1,fsr2h
  6423   010F58  50DF               	movf	indf2,w,c
  6424   010F5A  1809               	xorwf	CRC16@uchCRCLo^0,w,c
  6425   010F5C  6E07               	movwf	CRC16@uIndex^0,c
  6426   010F5E  4A01               	infsnz	CRC16@msg^0,f,c
  6427   010F60  2A02               	incf	(CRC16@msg+1)^0,f,c
  6428   010F62                     
  6429                           ;crc.c: 56:   uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex];
  6430   010F62  0EE5               	movlw	low _auchCRCHi
  6431   010F64  2407               	addwf	CRC16@uIndex^0,w,c
  6432   010F66  6EF6               	movwf	tblptrl,c
  6433   010F68  6AF7               	clrf	tblptrh,c
  6434   010F6A  0EFE               	movlw	high _auchCRCHi
  6435   010F6C  22F7               	addwfc	tblptrh,f,c
  6436   010F6E                     	if	1	;There are 3 active tblptr bytes
  6437   010F6E  6AF8               	clrf	tblptru,c
  6438   010F70  0E00               	movlw	low (__mediumconst shr (0+16))
  6439   010F72  22F8               	addwfc	tblptru,f,c
  6440   010F74                     	endif
  6441   010F74  0008               	tblrd		*
  6442   010F76  50F5               	movf	tablat,w,c
  6443   010F78  1808               	xorwf	CRC16@uchCRCHi^0,w,c
  6444   010F7A  6E09               	movwf	CRC16@uchCRCLo^0,c
  6445   010F7C                     
  6446                           ;crc.c: 57:   uchCRCHi = auchCRCLo[uIndex];
  6447   010F7C  0EE5               	movlw	low _auchCRCLo
  6448   010F7E  2407               	addwf	CRC16@uIndex^0,w,c
  6449   010F80  6EF6               	movwf	tblptrl,c
  6450   010F82  6AF7               	clrf	tblptrh,c
  6451   010F84  0EFD               	movlw	high _auchCRCLo
  6452   010F86  22F7               	addwfc	tblptrh,f,c
  6453   010F88                     	if	1	;There are 3 active tblptr bytes
  6454   010F88  6AF8               	clrf	tblptru,c
  6455   010F8A  0E00               	movlw	low (__mediumconst shr (0+16))
  6456   010F8C  22F8               	addwfc	tblptru,f,c
  6457   010F8E                     	endif
  6458   010F8E  0008               	tblrd		*
  6459   010F90  CFF5 F008          	movff	tablat,CRC16@uchCRCHi
  6460   010F94                     i2l2470:
  6461                           
  6462                           ;crc.c: 54:  while (length--) {
  6463   010F94  0603               	decf	CRC16@length^0,f,c
  6464   010F96  A0D8               	btfss	status,0,c
  6465   010F98  0604               	decf	(CRC16@length+1)^0,f,c
  6466   010F9A  2803               	incf	CRC16@length^0,w,c
  6467   010F9C  E106               	bnz	i2u130_41
  6468   010F9E  2804               	incf	(CRC16@length+1)^0,w,c
  6469   010FA0  A4D8               	btfss	status,2,c
  6470   010FA2  EFD5  F087         	goto	i2u130_41
  6471   010FA6  EFD7  F087         	goto	i2u130_40
  6472   010FAA                     i2u130_41:
  6473   010FAA  EFA8  F087         	goto	i2l2462
  6474   010FAE                     i2u130_40:
  6475   010FAE                     
  6476                           ;crc.c: 59:  return (uchCRCHi << 8 | uchCRCLo);
  6477   010FAE  5009               	movf	CRC16@uchCRCLo^0,w,c
  6478   010FB0  C008  F005         	movff	CRC16@uchCRCHi,??_CRC16
  6479   010FB4  6A06               	clrf	(??_CRC16+1)^0,c
  6480   010FB6  C005  F006         	movff	??_CRC16,??_CRC16+1
  6481   010FBA  6A05               	clrf	??_CRC16^0,c
  6482   010FBC  1005               	iorwf	??_CRC16^0,w,c
  6483   010FBE  6E01               	movwf	?_CRC16^0,c
  6484   010FC0  5006               	movf	(??_CRC16+1)^0,w,c
  6485   010FC2  6E02               	movwf	(?_CRC16+1)^0,c
  6486   010FC4  0012               	return		;funcret
  6487   010FC6                     __end_of_CRC16:
  6488                           	callstack 0
  6489                           
  6490 ;; *************** function _modbus_char_recvd *****************
  6491 ;; Defined at:
  6492 ;;		line 129 in file "modbus.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  c               1    wreg     unsigned char 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  c               1    0[COMRAM] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;Total ram usage:        1 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_INTERRUPT_InterruptManager
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text45
  6520   011560                     __ptext45:
  6521                           	callstack 0
  6522   011560                     _modbus_char_recvd:
  6523                           	callstack 21
  6524                           
  6525                           ;incstack = 0
  6526                           ;modbus_char_recvd@c stored from wreg
  6527   011560  6E01               	movwf	modbus_char_recvd@c^0,c
  6528   011562                     
  6529                           ;modbus.c: 129: void modbus_char_recvd(uint8_t c);modbus.c: 130: {;modbus.c: 131:     TM
      +                          R0ON = 1;
  6530   011562  8ED5               	bsf	4053,7,c	;volatile
  6531   011564                     
  6532                           ;modbus.c: 132:     rx_buf[index] = c;
  6533   011564  0E00               	movlw	low _rx_buf
  6534   011566  243F               	addwf	_index^0,w,c
  6535   011568  6ED9               	movwf	fsr2l,c
  6536   01156A  6ADA               	clrf	fsr2h,c
  6537   01156C  0E01               	movlw	high _rx_buf
  6538   01156E  22DA               	addwfc	fsr2h,f,c
  6539   011570  C001  FFDF         	movff	modbus_char_recvd@c,indf2
  6540   011574                     
  6541                           ;modbus.c: 133:     index ++;
  6542   011574  2A3F               	incf	_index^0,f,c
  6543   011576  0012               	return		;funcret
  6544   011578                     __end_of_modbus_char_recvd:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _TMR0_Reload *****************
  6548 ;; Defined at:
  6549 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;		None
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      void 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;Total ram usage:        0 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_INTERRUPT_InterruptManager
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text46
  6577   01161E                     __ptext46:
  6578                           	callstack 0
  6579   01161E                     _TMR0_Reload:
  6580                           	callstack 21
  6581   01161E                     
  6582                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  6583   01161E  503D               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6584   011620  6ED7               	movwf	215,c	;volatile
  6585   011622                     
  6586                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  6587   011622  C03C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6588   011626  0012               	return		;funcret
  6589   011628                     __end_of_TMR0_Reload:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _TMR0_ISR *****************
  6593 ;; Defined at:
  6594 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 1
  6615 ;; This function calls:
  6616 ;;		NULL
  6617 ;;		_TMR0_DefaultInterruptHandler
  6618 ;; This function is called by:
  6619 ;;		_INTERRUPT_InterruptManager
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text47
  6624   011480                     __ptext47:
  6625                           	callstack 0
  6626   011480                     _TMR0_ISR:
  6627                           	callstack 20
  6628   011480                     
  6629                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6630   011480  94F2               	bcf	242,2,c	;volatile
  6631   011482                     
  6632                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6633   011482  503D               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6634   011484  6ED7               	movwf	215,c	;volatile
  6635   011486                     
  6636                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6637   011486  C03C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6638   01148A                     
  6639                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  6640   01148A  5048               	movf	_TMR0_InterruptHandler^0,w,c
  6641   01148C  1049               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  6642   01148E  104A               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  6643   011490  B4D8               	btfsc	status,2,c
  6644   011492  EF4D  F08A         	goto	i2u69_41
  6645   011496  EF4F  F08A         	goto	i2u69_40
  6646   01149A                     i2u69_41:
  6647   01149A  EF5C  F08A         	goto	i2l368
  6648   01149E                     i2u69_40:
  6649   01149E                     
  6650                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  6651   01149E  D802               	call	i2u70_48
  6652   0114A0  EF5C  F08A         	goto	i2u70_49
  6653   0114A4                     i2u70_48:
  6654   0114A4  0005               	push	
  6655   0114A6  6EFA               	movwf	pclath,c
  6656   0114A8  5048               	movf	_TMR0_InterruptHandler^0,w,c
  6657   0114AA  6EFD               	movwf	tosl,c
  6658   0114AC  5049               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  6659   0114AE  6EFE               	movwf	tosh,c
  6660   0114B0  504A               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  6661   0114B2  6EFF               	movwf	tosu,c
  6662   0114B4  50FA               	movf	pclath,w,c
  6663   0114B6  0012               	return		;indir
  6664   0114B8                     i2u70_49:
  6665   0114B8                     i2l368:
  6666   0114B8  0012               	return		;funcret
  6667   0114BA                     __end_of_TMR0_ISR:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6671 ;; Defined at:
  6672 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		None
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_TMR0_Initialize
  6696 ;;		_TMR0_ISR
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text48
  6701   01163A                     __ptext48:
  6702                           	callstack 0
  6703   01163A                     _TMR0_DefaultInterruptHandler:
  6704                           	callstack 20
  6705   01163A  0012               	return		;funcret
  6706   01163C                     __end_of_TMR0_DefaultInterruptHandler:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _EUSART1_Transmit_ISR *****************
  6710 ;; Defined at:
  6711 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used: 1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_EUSART1_Initialize
  6735 ;;		_INTERRUPT_InterruptManager
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text49
  6740   0113CA                     __ptext49:
  6741                           	callstack 0
  6742   0113CA                     _EUSART1_Transmit_ISR:
  6743                           	callstack 21
  6744   0113CA                     
  6745                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6746   0113CA  0E08               	movlw	8
  6747   0113CC  6045               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  6748   0113CE  EFEB  F089         	goto	i2u61_41
  6749   0113D2  EFED  F089         	goto	i2u61_40
  6750   0113D6                     i2u61_41:
  6751   0113D6  EF03  F08A         	goto	i2l290
  6752   0113DA                     i2u61_40:
  6753   0113DA                     
  6754                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6755   0113DA  0E31               	movlw	low _eusart1TxBuffer
  6756   0113DC  2446               	addwf	_eusart1TxTail^0,w,c	;volatile
  6757   0113DE  6ED9               	movwf	fsr2l,c
  6758   0113E0  6ADA               	clrf	fsr2h,c
  6759   0113E2  0E00               	movlw	high _eusart1TxBuffer
  6760   0113E4  22DA               	addwfc	fsr2h,f,c
  6761   0113E6  50DF               	movf	indf2,w,c
  6762   0113E8  6EAD               	movwf	173,c	;volatile
  6763   0113EA  2A46               	incf	_eusart1TxTail^0,f,c	;volatile
  6764   0113EC                     
  6765                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6766   0113EC  0E07               	movlw	7
  6767   0113EE  6446               	cpfsgt	_eusart1TxTail^0,c	;volatile
  6768   0113F0  EFFC  F089         	goto	i2u62_41
  6769   0113F4  EFFE  F089         	goto	i2u62_40
  6770   0113F8                     i2u62_41:
  6771   0113F8  EF00  F08A         	goto	i2l1938
  6772   0113FC                     i2u62_40:
  6773   0113FC                     
  6774                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6775   0113FC  0E00               	movlw	0
  6776   0113FE  6E46               	movwf	_eusart1TxTail^0,c	;volatile
  6777   011400                     i2l1938:
  6778                           
  6779                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6780   011400  2A45               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  6781                           
  6782                           ;mcc_generated_files/eusart1.c: 209:     }
  6783   011402  EF04  F08A         	goto	i2l293
  6784   011406                     i2l290:
  6785                           
  6786                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE1bits.TX1IE = 0;
  6787   011406  989D               	bcf	157,4,c	;volatile
  6788   011408                     i2l293:
  6789   011408  0012               	return		;funcret
  6790   01140A                     __end_of_EUSART1_Transmit_ISR:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function _EUSART1_Receive_ISR *****************
  6794 ;; Defined at:
  6795 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used: 1
  6815 ;; Hardware stack levels required when called: 2
  6816 ;; This function calls:
  6817 ;;		NULL
  6818 ;;		_EUSART1_DefaultErrorHandler
  6819 ;;		_EUSART1_DefaultFramingErrorHandler
  6820 ;;		_EUSART1_DefaultOverrunErrorHandler
  6821 ;;		_EUSART1_RxDataHandler
  6822 ;; This function is called by:
  6823 ;;		_EUSART1_Initialize
  6824 ;;		_INTERRUPT_InterruptManager
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text50
  6829   010B34                     __ptext50:
  6830                           	callstack 0
  6831   010B34                     _EUSART1_Receive_ISR:
  6832                           	callstack 19
  6833   010B34                     
  6834                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6835   010B34  0E29               	movlw	low _eusart1RxStatusBuffer
  6836   010B36  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6837   010B38  6ED9               	movwf	fsr2l,c
  6838   010B3A  6ADA               	clrf	fsr2h,c
  6839   010B3C  0E00               	movlw	high _eusart1RxStatusBuffer
  6840   010B3E  22DA               	addwfc	fsr2h,f,c
  6841   010B40  6ADF               	clrf	indf2,c
  6842   010B42                     
  6843                           ;mcc_generated_files/eusart1.c: 221:     if(RCSTA1bits.FERR){
  6844   010B42  A4AB               	btfss	171,2,c	;volatile
  6845   010B44  EFA6  F085         	goto	i2u149_41
  6846   010B48  EFA8  F085         	goto	i2u149_40
  6847   010B4C                     i2u149_41:
  6848   010B4C  EFBD  F085         	goto	i2l2844
  6849   010B50                     i2u149_40:
  6850   010B50                     
  6851                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6852   010B50  0E29               	movlw	low _eusart1RxStatusBuffer
  6853   010B52  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6854   010B54  6ED9               	movwf	fsr2l,c
  6855   010B56  6ADA               	clrf	fsr2h,c
  6856   010B58  0E00               	movlw	high _eusart1RxStatusBuffer
  6857   010B5A  22DA               	addwfc	fsr2h,f,c
  6858   010B5C  82DF               	bsf	indf2,1,c
  6859   010B5E                     
  6860                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6861   010B5E  D802               	call	i2u150_48
  6862   010B60  EFBD  F085         	goto	i2u150_49
  6863   010B64                     i2u150_48:
  6864   010B64  0005               	push	
  6865   010B66  6EFA               	movwf	pclath,c
  6866   010B68  0100               	movlb	0	; () banked
  6867   010B6A  51F2               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6868   010B6C  6EFD               	movwf	tosl,c
  6869   010B6E  51F3               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6870   010B70  6EFE               	movwf	tosh,c
  6871   010B72  51F4               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  6872   010B74  6EFF               	movwf	tosu,c
  6873   010B76  50FA               	movf	pclath,w,c
  6874   010B78  0012               	return		;indir
  6875   010B7A                     i2u150_49:
  6876   010B7A                     i2l2844:
  6877                           
  6878                           ;mcc_generated_files/eusart1.c: 226:     if(RCSTA1bits.OERR){
  6879   010B7A  A2AB               	btfss	171,1,c	;volatile
  6880   010B7C  EFC2  F085         	goto	i2u151_41
  6881   010B80  EFC4  F085         	goto	i2u151_40
  6882   010B84                     i2u151_41:
  6883   010B84  EFD9  F085         	goto	i2l2850
  6884   010B88                     i2u151_40:
  6885   010B88                     
  6886                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6887   010B88  0E29               	movlw	low _eusart1RxStatusBuffer
  6888   010B8A  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6889   010B8C  6ED9               	movwf	fsr2l,c
  6890   010B8E  6ADA               	clrf	fsr2h,c
  6891   010B90  0E00               	movlw	high _eusart1RxStatusBuffer
  6892   010B92  22DA               	addwfc	fsr2h,f,c
  6893   010B94  84DF               	bsf	indf2,2,c
  6894   010B96                     
  6895                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6896   010B96  D802               	call	i2u152_48
  6897   010B98  EFD9  F085         	goto	i2u152_49
  6898   010B9C                     i2u152_48:
  6899   010B9C  0005               	push	
  6900   010B9E  6EFA               	movwf	pclath,c
  6901   010BA0  0100               	movlb	0	; () banked
  6902   010BA2  51EF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6903   010BA4  6EFD               	movwf	tosl,c
  6904   010BA6  51F0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6905   010BA8  6EFE               	movwf	tosh,c
  6906   010BAA  51F1               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  6907   010BAC  6EFF               	movwf	tosu,c
  6908   010BAE  50FA               	movf	pclath,w,c
  6909   010BB0  0012               	return		;indir
  6910   010BB2                     i2u152_49:
  6911   010BB2                     i2l2850:
  6912                           
  6913                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6914   010BB2  0E29               	movlw	low _eusart1RxStatusBuffer
  6915   010BB4  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6916   010BB6  6ED9               	movwf	fsr2l,c
  6917   010BB8  6ADA               	clrf	fsr2h,c
  6918   010BBA  0E00               	movlw	high _eusart1RxStatusBuffer
  6919   010BBC  22DA               	addwfc	fsr2h,f,c
  6920   010BBE  50DF               	movf	indf2,w,c
  6921   010BC0  B4D8               	btfsc	status,2,c
  6922   010BC2  EFE5  F085         	goto	i2u153_41
  6923   010BC6  EFE7  F085         	goto	i2u153_40
  6924   010BCA                     i2u153_41:
  6925   010BCA  EFF7  F085         	goto	i2l2854
  6926   010BCE                     i2u153_40:
  6927   010BCE                     
  6928                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6929   010BCE  D802               	call	i2u154_48
  6930   010BD0  EFF5  F085         	goto	i2u154_49
  6931   010BD4                     i2u154_48:
  6932   010BD4  0005               	push	
  6933   010BD6  6EFA               	movwf	pclath,c
  6934   010BD8  0100               	movlb	0	; () banked
  6935   010BDA  51EC               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6936   010BDC  6EFD               	movwf	tosl,c
  6937   010BDE  51ED               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6938   010BE0  6EFE               	movwf	tosh,c
  6939   010BE2  51EE               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  6940   010BE4  6EFF               	movwf	tosu,c
  6941   010BE6  50FA               	movf	pclath,w,c
  6942   010BE8  0012               	return		;indir
  6943   010BEA                     i2u154_49:
  6944                           
  6945                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6946   010BEA  EFF9  F085         	goto	i2l300
  6947   010BEE                     i2l2854:
  6948                           
  6949                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6950   010BEE  EC76  F08A         	call	_EUSART1_RxDataHandler	;wreg free
  6951   010BF2                     i2l300:
  6952   010BF2  0012               	return		;funcret
  6953   010BF4                     __end_of_EUSART1_Receive_ISR:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6957 ;; Defined at:
  6958 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		None
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_EUSART1_Initialize
  6982 ;;		_EUSART1_Receive_ISR
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text51
  6987   011628                     __ptext51:
  6988                           	callstack 0
  6989   011628                     _EUSART1_DefaultOverrunErrorHandler:
  6990                           	callstack 20
  6991   011628                     
  6992                           ;mcc_generated_files/eusart1.c: 255:     RCSTA1bits.CREN = 0;
  6993   011628  98AB               	bcf	171,4,c	;volatile
  6994                           
  6995                           ;mcc_generated_files/eusart1.c: 256:     RCSTA1bits.CREN = 1;
  6996   01162A  88AB               	bsf	171,4,c	;volatile
  6997   01162C  0012               	return		;funcret
  6998   01162E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7002 ;; Defined at:
  7003 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		None
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_EUSART1_Initialize
  7027 ;;		_EUSART1_Receive_ISR
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text52
  7032   01163C                     __ptext52:
  7033                           	callstack 0
  7034   01163C                     _EUSART1_DefaultFramingErrorHandler:
  7035                           	callstack 20
  7036   01163C  0012               	return		;funcret
  7037   01163E                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7041 ;; Defined at:
  7042 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 1
  7063 ;; This function calls:
  7064 ;;		_EUSART1_RxDataHandler
  7065 ;; This function is called by:
  7066 ;;		_EUSART1_Initialize
  7067 ;;		_EUSART1_Receive_ISR
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text53
  7072   01162E                     __ptext53:
  7073                           	callstack 0
  7074   01162E                     _EUSART1_DefaultErrorHandler:
  7075                           	callstack 19
  7076   01162E                     
  7077                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7078   01162E  EC76  F08A         	call	_EUSART1_RxDataHandler	;wreg free
  7079   011632  0012               	return		;funcret
  7080   011634                     __end_of_EUSART1_DefaultErrorHandler:
  7081                           	callstack 0
  7082                           
  7083 ;; *************** function _EUSART1_RxDataHandler *****************
  7084 ;; Defined at:
  7085 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;		None
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;		None
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  1    wreg      void 
  7092 ;; Registers used:
  7093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;Total ram usage:        0 bytes
  7104 ;; Hardware stack levels used: 1
  7105 ;; This function calls:
  7106 ;;		Nothing
  7107 ;; This function is called by:
  7108 ;;		_EUSART1_Receive_ISR
  7109 ;;		_EUSART1_DefaultErrorHandler
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text54
  7114   0114EC                     __ptext54:
  7115                           	callstack 0
  7116   0114EC                     _EUSART1_RxDataHandler:
  7117                           	callstack 20
  7118   0114EC                     
  7119                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7120   0114EC  0EB5               	movlw	low _eusart1RxBuffer
  7121   0114EE  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  7122   0114F0  6ED9               	movwf	fsr2l,c
  7123   0114F2  6ADA               	clrf	fsr2h,c
  7124   0114F4  0E00               	movlw	high _eusart1RxBuffer
  7125   0114F6  22DA               	addwfc	fsr2h,f,c
  7126   0114F8  CFAE FFDF          	movff	4014,indf2	;volatile
  7127   0114FC  2A44               	incf	_eusart1RxHead^0,f,c	;volatile
  7128   0114FE                     
  7129                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7130   0114FE  0E07               	movlw	7
  7131   011500  6444               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7132   011502  EF85  F08A         	goto	i2u129_41
  7133   011506  EF87  F08A         	goto	i2u129_40
  7134   01150A                     i2u129_41:
  7135   01150A  EF89  F08A         	goto	i2l2456
  7136   01150E                     i2u129_40:
  7137   01150E                     
  7138                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7139   01150E  0E00               	movlw	0
  7140   011510  6E44               	movwf	_eusart1RxHead^0,c	;volatile
  7141   011512                     i2l2456:
  7142                           
  7143                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7144   011512  2A42               	incf	_eusart1RxCount^0,f,c	;volatile
  7145   011514  0012               	return		;funcret
  7146   011516                     __end_of_EUSART1_RxDataHandler:
  7147                           	callstack 0
  7148                           
  7149                           	psect	text55
  7150   000000                     __ptext55:
  7151                           	callstack 0
  7152   000000                     
  7153                           	psect	rparam
  7154   000000                     
  7155                           	psect	temp
  7156   000051                     btemp:
  7157                           	callstack 0
  7158   000051                     	ds	1
  7159   000000                     int$flags	set	btemp
  7160   000000                     wtemp8	set	btemp+1
  7161   000000                     ttemp5	set	btemp+1
  7162   000000                     ttemp6	set	btemp+4
  7163   000000                     ttemp7	set	btemp+8
  7164                           
  7165                           	psect	config
  7166                           
  7167                           ;Config register CONFIG1L @ 0x1FFF8
  7168                           ;	Watchdog Timer Enable bit
  7169                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  7170                           ;	Stack Overflow/Underflow Reset Enable bit
  7171                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  7172                           ;	Extended Instruction Set Enable bit
  7173                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7174                           ;	Background Debugger Enable bit
  7175                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  7176   01FFF8                     	org	131064
  7177   01FFF8  A0                 	db	160
  7178                           
  7179                           ;Config register CONFIG1H @ 0x1FFF9
  7180                           ;	Code Protection bit
  7181                           ;	CP0 = OFF, Program memory is not code-protected
  7182   01FFF9                     	org	131065
  7183   01FFF9  F4                 	db	244
  7184                           
  7185                           ;Config register CONFIG2L @ 0x1FFFA
  7186                           ;	Oscillator Selection bits
  7187                           ;	FOSC = HS, HS oscillator
  7188                           ;	Default/Reset System Clock Select bit
  7189                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  7190                           ;	Fail-Safe Clock Monitor Enable
  7191                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7192                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  7193                           ;	IESO = ON, Two-Speed Start-up enabled
  7194   01FFFA                     	org	131066
  7195   01FFFA  C4                 	db	196
  7196                           
  7197                           ;Config register CONFIG2H @ 0x1FFFB
  7198                           ;	Watchdog Timer Postscaler Select bits
  7199                           ;	WDTPS = 32768, 1:32768
  7200   01FFFB                     	org	131067
  7201   01FFFB  FF                 	db	255
  7202                           
  7203                           ;Config register CONFIG3L @ 0x1FFFC
  7204                           ;	External Address Bus Shift Enable bit
  7205                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  7206                           ;	External Memory Bus
  7207                           ;	MODE = MM, Microcontroller mode, external bus disabled
  7208                           ;	Data Bus Width Select bit
  7209                           ;	BW = 16, 16-Bit Data Width mode
  7210                           ;	External Bus Wait Enable bit
  7211                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  7212   01FFFC                     	org	131068
  7213   01FFFC  F8                 	db	248
  7214                           
  7215                           ;Config register CONFIG3H @ 0x1FFFD
  7216                           ;	ECCP2 MUX bit
  7217                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  7218                           ;	ECCP MUX bit
  7219                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  7220                           ;	Ethernet LED Enable bit
  7221                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  7222   01FFFD                     	org	131069
  7223   01FFFD  F7                 	db	247
  7224                           tosu	equ	0xFFF
  7225                           tosh	equ	0xFFE
  7226                           tosl	equ	0xFFD
  7227                           stkptr	equ	0xFFC
  7228                           pclatu	equ	0xFFB
  7229                           pclath	equ	0xFFA
  7230                           pcl	equ	0xFF9
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           indf0	equ	0xFEF
  7238                           postinc0	equ	0xFEE
  7239                           postdec0	equ	0xFED
  7240                           preinc0	equ	0xFEC
  7241                           plusw0	equ	0xFEB
  7242                           fsr0h	equ	0xFEA
  7243                           fsr0l	equ	0xFE9
  7244                           wreg	equ	0xFE8
  7245                           indf1	equ	0xFE7
  7246                           postinc1	equ	0xFE6
  7247                           postdec1	equ	0xFE5
  7248                           preinc1	equ	0xFE4
  7249                           plusw1	equ	0xFE3
  7250                           fsr1h	equ	0xFE2
  7251                           fsr1l	equ	0xFE1
  7252                           bsr	equ	0xFE0
  7253                           indf2	equ	0xFDF
  7254                           postinc2	equ	0xFDE
  7255                           postdec2	equ	0xFDD
  7256                           preinc2	equ	0xFDC
  7257                           plusw2	equ	0xFDB
  7258                           fsr2h	equ	0xFDA
  7259                           fsr2l	equ	0xFD9
  7260                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    512
    Data        0
    BSS         598
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      80
    BANK0           160     85     149
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256     20      20
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1689$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1630$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1630$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    CRC16@msg	PTR const unsigned char  size(2) Largest target is 256
		 -> tx_buf(BANK2[256]), rx_buf(BANK1[256]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    LCD_2x16_WriteMsg@msg	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _modbus_timer->_modbus_analyse_and_answer
    _modbus_send->_EUSART1_Write
    _modbus_analyse_and_answer->_CRC16

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _measure_voltage->___lldiv
    _measure_current->___lldiv
    ___lldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _Lcd_Init->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   14876
                                             84 BANK0      1     1      0
                                              0 BANK3     20    20      0
                _EPWM1_LoadDutyValue
                  _LCD_2x16_WriteMsg
                           _Lcd_Init
                  _SYSTEM_Initialize
                    _measure_current
                    _measure_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    8781
                                             64 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8109
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    7621
                                             40 BANK0     16    10      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     852
                                              6 BANK0      9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    5041
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _measure_voltage                                      9     7      2    1916
                                             25 BANK0      9     7      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _measure_current                                     12    10      2    2325
                                             25 BANK0     12    10      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     726
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                              3 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      96
                                              2 BANK0      2     2      0
                  _LCD_2x16_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_2x16_WriteMsg                                    3     0      3     648
                                              2 BANK0      3     0      3
                  _LCD_2x16_WriteCmd
                 _LCD_2x16_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteData                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteCmd                                    2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          12    12      0    1211
                                             28 COMRAM    12    12      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                        _TMR0_Reload
                  _modbus_char_recvd
                       _modbus_timer
 ---------------------------------------------------------------------------------
 (10) _modbus_timer                                        0     0      0    1196
          _modbus_analyse_and_answer
                        _modbus_send
 ---------------------------------------------------------------------------------
 (11) _modbus_send                                         6     6      0     112
                                              1 COMRAM     6     6      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _modbus_analyse_and_answer                          19    19      0    1084
                                              9 COMRAM    19    19      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (12) _CRC16                                               9     5      4     486
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _modbus_char_recvd                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _LCD_2x16_WriteMsg
     _LCD_2x16_WriteCmd
     _LCD_2x16_WriteData
   _Lcd_Init
     _LCD_2x16_WriteCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _measure_current
     _ADC_GetConversion
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _measure_voltage
     _ADC_GetConversion
     ___lldiv
     ___lmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR0_Reload *
   _modbus_char_recvd *
   _modbus_timer *
     _modbus_analyse_and_answer
       _CRC16
     _modbus_send
       _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      52        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      14      11        7.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      95       5       93.1%
BITBIGSFR           80      0       0      51        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      50        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      50       1       85.1%
BITBIGSFR_1hhhh     1A      0       0      38        0.0%
BITBIGSFR_1llll     19      0       0      49        0.0%
BITBIGSFR_1hhhh      D      0       0      37        0.0%
BITBIGSFR_1hhll      C      0       0      45        0.0%
BITBIGSFR_1lllh      9      0       0      47        0.0%
BITBIGSFR_1hhll      6      0       0      44        0.0%
BITBIGSFR_1hhll      6      0       0      43        0.0%
BITBIGSFR_1hhlh      5      0       0      42        0.0%
BITBIGSFR_1lllh      4      0       0      48        0.0%
BITBIGSFR_1hhlh      3      0       0      41        0.0%
BITBIGSFR_1hhlh      2      0       0      40        0.0%
BITBIGSFR_1hhhl      1      0       0      39        0.0%
BITBIGSFR_1hhll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F9      32        0.0%
DATA                 0      0     2F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Mar 14 15:19:18 2023

               modbus_analyse_and_answer@crcAtt 000E                        _eusart1TxBufferRemaining 0045  
                                            l21 1192                                              l15 1306  
                                            l18 1092                                              l26 1444  
                                            l52 161C                                              l71 15A2  
                                            l49 155E                                              l86 1366  
                                            l89 1388                                    ___awdiv@sign 0065  
                           ___wmul@multiplicand 0062                                 _timer0ReloadVal 003C  
                                           l133 13C8                                             l152 14EA  
                                           l401 1636                                             l322 1604  
                                           l316 15F6                                             l149 158C  
                                           l325 15CC                                             l165 15B0  
                                           l319 15E8                                             l328 15DA  
                                           l259 0F46                                             l371 15BE  
                                           l523 153C                                             l349 147E  
                                           l453 0CAC                                             l550 0EA4  
                                           l534 1020                                             l535 1030  
                                           l459 07EE                                             l557 0EB4  
                                           l754 0B32                                             l767 0D5E  
                                           _PR2 0FCB           modbus_analyse_and_answer@nbofRegister 001B  
                                           _abs 1308                                             _pad 0D60  
                               _input_registers 00BD                                    ___awmod@sign 0065  
                               _TMR2_Initialize 15A4                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                       __end_of_measure_current 07F0                                            l1201 11E2  
                                          ?_abs 0066                                            l1310 1638  
                                          l1224 0DA8                                            l1307 12BE  
                                          l1227 0DEC                                            l1251 0646  
                                          l1235 04D0                                            l3100 0AE6  
                                          l1229 0E0E                                            l1237 04D8  
                                          l3102 0AFC                                            l3110 0B12  
                                          l1238 051E                                            l1255 0998  
                                          l3112 0B22                                            l3104 0B04  
                                          l3120 0CB4                                            l3200 051A  
                                          l1280 10E8                                            l3114 0B2A  
                                          l3106 0B06                                            l3130 0CE4  
                                          l3122 0CC2                                            l3050 09C8  
                                          l3210 056E                                            l3202 0526  
                                          l1274 0476                                            l1259 09A0  
                                          l3108 0B0C                                            l3140 0D2A  
                                          l3132 0CF6                                            l3124 0CCA  
                                          l1284 1340                                            l3052 09D2  
                                          l3060 1278                                            l3220 05D8  
                                          l3212 0574                                            l3204 052E  
                                          l3150 0D56                                            l3142 0D32  
                                          l3134 0CFE                                            l3126 0CCE  
                                          l3118 0CAE                                            l3054 09F0  
                                          l3046 09A2                                            l3062 1286  
                                          l3230 0626                                            l3222 05F2  
                                          l3206 0534                                            l3214 0590  
                                          l3070 1534                                            l3302 0448  
                                          l1287 1348                                            l3320 1054  
                                          l3312 1036                                            l3400 0EB6  
                                          l3080 0A8A                                            l3144 0D38  
                                          l3136 0D06                                            l3128 0CDC  
                                          l3056 0A26                                            l3048 09B6  
                                          l3064 1298                                            l3160 0D94  
                                          l3216 05AC                                            l3224 0600  
                                          l3208 0568                                            l3240 093C  
                                          l3330 1076                                            l3322 1056  
                                          l3314 1038                                            l3250 15EA  
                                          l3410 0EE6                                            l3402 0EB8  
                                          l3090 0AB0                                            l3082 0A8E  
                                          l3074 0A6E                                            l3138 0D14  
                                          l3146 0D3E                                            l3066 129E  
                                          l3170 0DFA                                            l3162 0DA0  
                                          l3154 0D60                                            l3226 0610  
                                          l3218 05BE                                            l3242 095E  
                                          l3234 08D0                                            l1299 0A6C  
                                          l3332 107E                                            l3324 105C  
                                          l3316 104A                                            l3340 1158  
                                          l3500 142C                                            l3252 15DC  
                                          l3420 0F16                                            l3412 0EEA  
                                          l3404 0ECA                                            l3092 0AC2  
                                          l3084 0A9C                                            l3076 0A74  
                                          l3148 0D4E                                            l3172 1308  
                                          l3164 0DB4                                            l3156 0D70  
                                          l3228 0616                                            l3180 049E  
                                          l3068 1516                                            l3244 096C  
                                          l3236 08DA                                            l3260 02BE  
                                          l3334 1080                                            l3326 1064  
                                          l3318 104C                                            l3350 1182  
                                          l3342 115A                                            l3254 15F8  
                                          l3246 15CE                                            l3422 0F44  
                                          l3414 0EEE                                            l3406 0EDE  
                                          l3510 154E                                            l3502 153E  
                                          l3430 1374                                            l3094 0ACA  
                                          l3086 0AA4                                            l3078 0A82  
                                          l3174 1324                                            l3166 0DC8  
                                          l3158 0D84                                            l3190 04E0  
                                          l3182 04A6                                            l3238 0902  
                                          l3270 02EC                                            l3262 02CC  
                                          l3328 1074                                            l3352 1188  
                                          l3344 1160                                            l3336 1144  
                                          l3248 15C0                                            l3416 0EF2  
                                          l3408 0EE2                                            l3360 13AE  
                                          l3256 15B2                                            l3512 1552  
                                          l3504 1542                                            l3424 134E  
                                          l3440 0FF6                                            l3520 0648  
                                          l3096 0AD2                                            l3088 0AA8  
                                          l3168 0DCE                                            l3192 04F0  
                                          l3184 04B4                                            l3176 0478  
                                          l3280 0354                                            l3272 02FE  
                                          l3264 02DA                                            l3600 085C  
                                          l3354 118A                                            l3346 1162  
                                          l3338 1146                                            l3418 0F04  
                                          l3370 13C0                                            l3362 13B0  
                                          l3514 1556                                            l3506 1546  
                                          l3426 1362                                            l3450 0E40  
                                          l3442 1000                                            l3434 0FC6  
                                          l3530 067E                                            l3098 0AE0  
                                          l3194 04F6                                            l3186 04B6  
                                          l3178 048E                                            l3290 03BA  
                                          l3282 0370                                            l3266 02DE  
                                          l3258 0296                                            l3602 0868  
                                          l3348 1180                                            l3356 1634  
                                          l3372 13C2                                            l3364 13B6  
                                          l3380 15A4                                            l3516 155A  
                                          l3508 154A                                            l3428 1364  
                                          l3460 0E92                                            l3452 0E4C  
                                          l3444 0E10                                            l3436 0FD8  
                                          l3540 0774                                            l3532 069A  
                                          l3196 0506                                            l3188 04C4  
                                          l3292 03DA                                            l3284 0380  
                                          l3276 030A                                            l3268 02EA  
                                          l3604 0886                                            l3518 14BA  
                                          l3374 1614                                            l3366 13B8  
                                          l3358 138A                                            l3390 144E  
                                          l3382 15A6                                            l3462 0E94  
                                          l3454 0E5A                                            l3446 0E22  
                                          l3438 0FE6                                            l3542 07D6  
                                          l3534 06AE                                            l3526 0662  
                                          l3550 0BF4                                            l3198 0512  
                                          l3294 041E                                            l3286 038A  
                                          l3278 0342                                            l3470 10BE  
                                          l3606 0898                                            l3480 12CE  
                                          l3376 158E                                            l3368 13BA  
                                          l3392 1466                                            l3384 15AA  
                                          l3464 0E9E                                            l3456 0E64  
                                          l3448 0E38                                            l3536 0708  
                                          l3528 067A                                            l3560 0C2A  
                                          l3288 039A                                            l3472 10DE  
                                          l3608 08B6                                            l3490 1300  
                                          l3482 12E8                                            l3378 1578  
                                          l3394 1468                                            l3386 1446  
                                          l3458 0E82                                            l3546 07E6  
                                          l3538 073E                                            l3562 0C46  
                                          l3298 0436                                            l3466 1094  
                                          l3570 11A6                                            l3484 12EE  
                                          l3476 12C0                                            l3396 146A  
                                          l3388 144A                                            l3564 0C5A  
                                          l3556 0C0E                                            l3660 0334  
                                          l3468 10A0                                            l3572 11AE  
                                          l3580 07F0                                            l3494 140A  
                                          l3486 12F4                                            l3478 12C8  
                                          l3398 147A                                            l3558 0C26  
                                          l3574 11B6                                            l3590 0806  
                                          l3582 07F4                                            ?_pad 0070  
                                          l3496 1418                                            l3488 12FA  
                                          l3576 11D2                                            l3568 1194  
                                          l3592 0814                                            l3584 07F6  
                                          l3498 1426                                            l3594 0826  
                                          l3586 07F8                                            l3596 083C  
                                          l3588 0802                                            l3598 0848  
                                          STR_1 FFF2                                            STR_2 FFE5  
                                          u2000 05AC                                            u2001 05A8  
                                          u2010 05BE                                            u2011 05BA  
                                          u2020 05D8                                            u2100 0380  
                                          u2021 05D4                                            u2101 037C  
                                          u2030 05F2                                            u2110 03BA  
                                          u2031 05EE                                            u2111 03B6  
                                          u2200 1444                                            u2040 0600  
                                          u2120 03DA                                            u2201 1440  
                                          u2041 05FC                                            u2121 03D6  
                                          u2130 1374                                            u2210 069A  
                                          u2050 0610                                            u2131 1370  
                                          u2211 0696                                            u2051 060C  
                                          u2140 0FE6                                            u2060 0902  
                                          u2141 0FE2                                            u2061 08FE  
                                          _LATA 0F89                                            u2150 1020  
                                          u2230 07D6                                            u2070 0998  
                                          _LATB 0F8A                                            u2151 101C  
                                          u2231 07D2                                            u2071 0994  
                                          _LATC 0F8B                                            u2160 0E38  
                                          u2240 0C46                                            u2080 02BE  
                                          _LATD 0F8C                                            u2161 0E34  
                                          u2225 069E                                            u2241 0C42  
                                          u2081 02BA                                            _LATE 0F8D  
                                          u2170 0E5A                                            u2090 0354  
                                          _LATF 0F8E                                            u2307 1078  
                                          u2171 0E56                                            u2091 0350  
                                          _LATG 0F8F                                            u2180 0E82  
                                          _LATH 0F90                                            u2317 1088  
                                          u2181 0E7E                                            u1710 09B6  
                                          u2190 10DE                                            _LATJ 0F91  
                                          u2255 0C4A                                            u1711 09B2  
                                          u2191 10DA                                            u1800 0AFC  
                                          u1720 09C8                                            u1801 0AF8  
                                          u1721 09C4                                            u1810 0B22  
                                          u1730 09F0                                            u1811 0B1E  
                                          u1731 09EC                                            u2267 081C  
                                          u1820 0CC2                                            u1740 0A26  
                                          u1900 0DEC                                            u2277 12DA  
                                          u1821 0CBE                                            u1741 0A22  
                                          u1901 0DE8                                            u1830 0CDC  
                                          u1750 12BE                                            u1910 0DFA  
                                          u2287 118C                                            u1831 0CD8  
                                          u1751 12BA                                            u1911 0DF6  
                                          u1760 0A82                                            u1840 0CF6  
                                          u1920 1324                                            u2297 104E  
                                          u1761 0A7E                                            u1841 0CF2  
                                          u1921 1320                                            u1770 0A9C  
                                          u1850 0D14                                            u1930 048A  
                                          u1771 0A98                                            u1851 0D10  
                                          u1931 0484                                            u1780 0AC2  
                                          u1860 0D2A                                            u1940 048C  
                                          u1781 0ABE                                            u1861 0D26  
                                          u1790 0AE0                                            u1870 0D4E  
                                          u1950 049E                                            u1791 0ADC  
                                          u1871 0D4A                                            u1951 049A  
                                          u1880 0D70                                            u1960 04B4  
                                          u1881 0D6C                                            u1961 04B0  
                                          u1890 0D94                                            u1970 04C4  
                                          u1891 0D90                                            u1971 04C0  
                                          u1980 04F0                                            u1981 04EC  
                                          u1990 0506                                            u1991 0502  
                                          _TMR2 0FCC                                   _EUSART1_Write 10EA  
                                          abs@a 0066                         __end_of_measure_voltage 0CAE  
                                          _dbuf 00CC                                            _main 07F0  
                                          _dtoa 0478                                            _prec 00C7  
                                          pad@i 0077                                            pad@p 0074  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf1 0FE7                                            indf2 0FDF  
                                          fsr1l 0FE1                                            pad@w 0079  
                                          fsr2l 0FD9                                            btemp 0051  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 0126                           ??_EPWM1_LoadDutyValue 0062  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 0000  
                                         ??_abs 0068                                           ??_pad 0076  
                       __end_of_TMR0_Initialize 1480                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 161E                           _eusart1RxStatusBuffer 0029  
                                         ?_main 0001                                           ?_dtoa 007B  
                               __end_of___awdiv 0B34                                           _CRC16 0F48  
                               __end_of___awmod 0D60                                 __end_of___lldiv 0EB6  
                                         _T0CON 0FD5                                 ___awdiv@divisor 0062  
                                         _T2CON 0FCA                                           i2l300 0BF2  
                                         i2l310 162C                                           i2l304 1514  
                                         i2l313 1632                                           i2l307 163C  
                                         i2l413 00F2                                           i2l502 00AC  
                                         i2l414 00F2                                           i2l406 0064  
                                         i2l520 1276                                           i2l409 00AC  
                                         i2l290 1406                                           i2l514 1576  
                                         i2l506 0294                                           i2l283 10FC  
                                         i2l364 1626                                           i2l508 01EE  
                                         i2l284 1112                                           i2l293 1408  
                                         i2l374 163A                                           i2l287 113E  
                                         i2l368 14B8                                           i2l469 0FC4  
                                         i2l496 1612                                 ___awdiv@counter 0064  
                                  vfpfcnvrt@fmt 008A                                           _TMR0H 0FD7  
                                         _TMR0L 0FD6                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _TRISF 0F97                                           _TRISG 0F98  
                                         _TRISH 0F99                                           _TRISJ 0F9A  
                           ___lmul@multiplicand 0064                       ?_TMR0_SetInterruptHandler 0060  
                          _EUSART1_Transmit_ISR 13CA                                __end_of_TMR0_ISR 14BA  
                                         _flags 00CB                                           _index 003F  
                           read_prec_or_width@c 006C                             read_prec_or_width@n 006D  
                                         _fputc 09A2                                           _fputs 1278  
                                         pad@fp 0070                                           _width 00C5  
                                         _putch 1638                                           dtoa@d 007D  
                                         dtoa@i 0086                                           dtoa@p 0081  
                                         dtoa@s 0085                                           dtoa@w 0083  
                                ?_EUSART1_Write 0001                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 0052                                           ttemp6 0055  
                                         ttemp7 0059                                           status 0FD8  
                                         wtemp8 0052                                 __end_of_sprintf 11E4  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 163E  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 163C                                __end_of_Lcd_Init 1308  
         modbus_analyse_and_answer@functionCode 0010                                 __initialization 11E4  
                                  ?_modbus_send 0001                      __end_of_EUSART1_Initialize 0F48  
                                  __end_of_main 08D0                                    __end_of_dtoa 0648  
                       __end_of_TMR2_Initialize 15B2                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 00B4                                          ??_dtoa 007F  
                                        ?_CRC16 0001                                   __activetblptr 0003  
                         ?_EUSART1_Transmit_ISR 0001                      __end_of_read_prec_or_width 09A2  
                              ?_measure_current 0079                                          _ADCON0 0FC2  
                                        _ADCON1 0FC1                                          _ADCON2 0FC0  
                                        ?_fputc 0060                                          ?_fputs 0069  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _CCPR1H 0FBF                                          _CCPR1L 0FBE  
                              ___awdiv@dividend 0060                                          ?_putch 0001  
                                        i2l2430 10EC                                          i2l2440 1126  
                                        i2l2432 10EC                                          i2l2450 14FC  
                                        i2l2442 1136                                          i2l2434 110A  
                                        i2l2452 14FE                                          i2l2460 0F48  
                                        i2l2700 01EA                                          i2l2444 113A  
                                        i2l2436 1114                                          i2l2454 150E  
                                        i2l2462 0F50                                          i2l2470 0F94  
                                        i2l2710 020A                                          i2l2438 1124  
                                        i2l2446 113C                                          i2l2456 1512  
                                        i2l2448 14EC                                          i2l2472 0FAE  
                                        i2l2464 0F5E                                          i2l2720 0228  
                                        i2l2712 0218                                          i2l2704 01F4  
                                        i2l1930 13DA                                          i2l2466 0F62  
                                        i2l2722 0244                                          i2l2714 0220  
                                        i2l2706 01FA                                          i2l2652 1628  
                                        i2l1932 13EA                                          i2l2468 0F7C  
                                        i2l2724 0248                                          i2l2708 0204  
                                        i2l2660 0038                                          i2l2654 162E  
                                        i2l1934 13EC                                          i2l2726 0264  
                                        i2l2734 026A                                          i2l2670 0092  
                                        i2l2662 003E                                          i2l2742 1230  
                                        i2l2840 0B50                                          i2l1936 13FC  
                                        i2l1928 13CA                                          i2l1960 161E  
                                        i2l2680 00D6                                          i2l2672 00B2  
                                        i2l2664 0056                                          i2l2656 0000  
                                        i2l2744 123C                                          i2l2850 0BB2  
                                        i2l2842 0B5E                                          i2l1938 1400  
                                        i2l1970 148A                                          i2l1962 1622  
                                        i2l2690 017E                                          i2l2682 00DC  
                                        i2l2674 00B8                                          i2l2666 0076  
                                        i2l2658 0022                                          i2l2746 124E  
                                        i2l2852 0BCE                                          i2l2844 0B7A  
                                        i2l2836 0B34                                          i2l1972 149E  
                                        i2l1964 1480                                          i2l1980 1564  
                                        i2l2692 01AC                                          i2l2684 00EE  
                                        i2l2676 00C2                                          i2l2668 008E  
                                        i2l2748 1252                                          i2l2940 003A  
                                        i2l2854 0BEE                                          i2l2846 0B88  
                                        i2l2838 0B42                                          i2l1966 1482  
                                        i2l1982 1574                                          i2l3662 027E  
                                        i2l2694 01C2                                          i2l2686 0164  
                                        i2l2678 00C8                                          i2l2950 0072  
                                        i2l2942 0048                                          i2l2848 0B96  
                                        i2l1968 1486                                          i2l2696 01C8  
                                        i2l2688 0168                                          i2l2856 1606  
                                        i2l2960 00E2                                          i2l2952 0080  
                                        i2l2944 0056                                          i2l1978 1562  
                                        i2l2698 01DE                                          i2l2858 160E  
                                        i2l2962 00E8                                          i2l2954 008E  
                                        i2l2946 005A                                          i2l2964 00EC  
                                        i2l2956 00BA                                          i2l2948 005C  
                                        i2l2958 00C8                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                 vfpfcnvrt@done 0094                                          _SPBRG1 0FAF  
                                        _TMR0ON 7EAF                                ?_measure_voltage 0079  
                                        _TXREG1 0FAD                                          _TXSTA1 0FAC  
                                  vfprintf@cfmt 009E                                    ?_TMR0_Reload 0001  
                                        ___lmul 0FC6                                          ___wmul 1516  
                                     ??___awdiv 0064                                       ??___awmod 0064  
                                     ??___lldiv 0074                        ?_EUSART1_SetErrorHandler 0060  
                                        _recPtr 003E                                ?_TMR0_Initialize 0001  
                          read_prec_or_width@ap 0068                                          _offset 00C9  
                                        clear_0 11EC                                          clear_1 1200  
                                        clear_2 1212                                          clear_3 121E  
                    ?_modbus_analyse_and_answer 0001                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                          isa$std 0001  
                               ___awmod@counter 0064                                          pad@buf 0072  
                                        _rx_buf 0100                ??_EUSART1_SetOverrunErrorHandler 0063  
               ?_EUSART1_SetOverrunErrorHandler 0060                                          _tx_buf 0200  
                                        dtoa@fp 007B                                          fputc@c 0060  
                                        fputs@c 006D                                          fputs@i 006E  
                                        fputs@s 0069                                    __mediumconst FDE4  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                      modbus_analyse_and_answer@i 0017  
                      ADC_GetConversion@channel 0064                                          putch@c 0001  
                              __end_of_vfprintf 10EA                                 ??_EUSART1_Write 0001  
      TMR0_SetInterruptHandler@InterruptHandler 0060                                       ??_sprintf 00A6  
                               _eusart1RxBuffer 00B5                                 _eusart1TxBuffer 0031  
                             _SYSTEM_Initialize 153E                                      __accesstop 0060  
                       __end_of__initialization 1224                              ?_SYSTEM_Initialize 0001  
                                 __end_of_CRC16 0FC6                                   ___rparam_used 0001  
                 __end_of_EUSART1_RxDataHandler 1516                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                                   ?_modbus_timer 0001  
                           ??_SYSTEM_Initialize 0065                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 0060                                   __end_of_fputc 0A6E  
                                 __end_of_fputs 12C0                                   __end_of_putch 163A  
                              ?_TMR2_Initialize 0001                                         ??_CRC16 0005  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 0BF4  
                             _LCD_2x16_WriteCmd 1032                                       ?_Lcd_Init 0001  
                             _LCD_2x16_WriteMsg 140A                                         ??_fputc 0064  
                     __end_of_SYSTEM_Initialize 1560                                         ??_fputs 006D  
                                       ??_putch 0060                                   _eusart1RxHead 0044  
                            ?_LCD_2x16_WriteCmd 0001                                   _eusart1TxHead 0047  
                            ?_LCD_2x16_WriteMsg 0062                      __end_of_LCD_2x16_WriteData 1194  
                                 _eusart1RxTail 0043                                      __pbssBANK0 00B5  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 0046               _EUSART1_TxDefaultInterruptHandler 004E  
               ??_EUSART1_SetRxInterruptHandler 0063                                      __pnvCOMRAM 0048  
                           ??_LCD_2x16_WriteCmd 0060                             ??_LCD_2x16_WriteMsg 0065  
               __end_of_EUSART1_SetErrorHandler 1606                                  ??_modbus_timer 001D  
              __end_of_TMR0_SetInterruptHandler 15C0                                         ?___lmul 0060  
                                       ?___wmul 0060                                      ??_TMR0_ISR 0001  
                                       _CCP1CON 0FBD                                         _ECCP1AS 0FB6  
                                ___lmul@product 0068          __end_of_EUSART1_SetFramingErrorHandler 15F8  
                _EUSART1_SetFramingErrorHandler 15EA                       __end_of_LCD_2x16_WriteCmd 1094  
                     __end_of_LCD_2x16_WriteMsg 1446                    ?_EUSART1_DefaultErrorHandler 0001  
                                       i2u61_40 13DA                                         i2u61_41 13D6  
                                       i2u62_40 13FC                                         i2u62_41 13F8  
                                       _OSCTUNE 0F9B                                         i2u70_48 14A4  
                                       i2u70_49 14B8                                         _SPBRGH1 0F7F  
                                       i2u69_40 149E                                      ??_Lcd_Init 0062  
                                       i2u69_41 149A                               __end_of_auchCRCHi FFE5  
                             __end_of_auchCRCLo FEE5                     __end_of_EPWM1_LoadDutyValue 14EC  
      modbus_analyse_and_answer@startingAddress 0019                            _ADC_InterruptHandler 0039  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___awdiv 0A6E                                         ___awmod 0CAE  
                                       ___lldiv 0E10                                       ?_vfprintf 0098  
                                       __pcinit 11E4                                         __ramtop 1000  
                          LCD_2x16_WriteMsg@msg 0062                                         __ptext0 07F0  
                                       __ptext1 1194                                         __ptext2 1094  
                                       __ptext3 0296                                         __ptext4 08D0  
                                       __ptext5 1516                                         __ptext6 0478  
                                       __ptext7 0D60                                         __ptext8 1278  
                                       __ptext9 09A2                                       _T0CONbits 0FD5  
                         _OSCILLATOR_Initialize 1614                                       _T2CONbits 0FCA  
                         read_prec_or_width@fmt 0066                                ___awmod@dividend 0060  
                            _EUSART1_Initialize 0EB6                        ??_PIN_MANAGER_Initialize 0060  
                 ??_EUSART1_DefaultErrorHandler 0001                                  main@tempString 0300  
                      LCD_2x16_WriteCmd@command 0061                                         _sprintf 1194  
                                 _modbusAddress 0040                            end_of_initialization 1224  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0062  
                   _EUSART1_OverrunErrorHandler 00EF                                         fputs@fp 006B  
                            _read_prec_or_width 08D0                                 ___lldiv@divisor 0070  
         __end_of_EUSART1_SetRxInterruptHandler 15DC                   _EUSART1_SetRxInterruptHandler 15CE  
                               ___lldiv@counter 0078                               __end_of_vfpfcnvrt 0478  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 0066                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 0090                                      ??_vfprintf 009E  
                          ??_EUSART1_Initialize 0063                     ??_modbus_analyse_and_answer 000A  
                      _TMR0_SetInterruptHandler 15B2                       LCD_2x16_WriteData@command 0061  
                                     _TRISDbits 0F95                         fp__EUSART1_Transmit_ISR 0000  
                          ??_read_prec_or_width 006A                            __end_of_modbus_timer 1614  
                           EUSART1_Write@txData 0001                    modbus_analyse_and_answer@crc 0015  
                  __end_of_INTERRUPT_Initialize 1638                               _modbus_char_recvd 1560  
                                __end_of___lmul 1032                                     vfpfcnvrt@ap 008C  
                                   vfpfcnvrt@cp 0096                                     vfpfcnvrt@fp 0088  
                                __end_of___wmul 153E                                  _ADC_Initialize 158E  
                            ?_modbus_char_recvd 0001                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 11E4                             ??_modbus_char_recvd 0001  
                                   __end_of_abs 134A                                     __end_of_pad 0E10  
 EUSART1_SetRxInterruptHandler@interruptHandler 0060   EUSART1_SetTxInterruptHandler@interruptHandler 0060  
                  EPWM1_LoadDutyValue@dutyValue 0060                           __end_of_EUSART1_Write 1140  
                     _modbus_analyse_and_answer 0000                          fp__EUSART1_Receive_ISR 0000  
                                      CRC16@msg 0001                                     vfprintf@fmt 009A  
                     __end_of_modbus_char_recvd 1578                              _LCD_2x16_WriteData 1140  
                                      ??___lmul 0068                                        ??___wmul 0064  
                         _EUSART1_RxDataHandler 14EC                  ?_EUSART1_SetRxInterruptHandler 0060  
                        __end_of_ADC_Initialize 15A4                                    modbus_send@i 0006  
                           ?_LCD_2x16_WriteData 0001                                  _eusart1RxCount 0042  
                                   __pbssCOMRAM 0029               _EUSART1_RxDefaultInterruptHandler 004B  
                                 __pcstackBANK0 0060                                   __pcstackBANK3 0300  
                             modbus_send@length 0005                 ??_EUSART1_SetTxInterruptHandler 0063  
              ??_EUSART1_SetFramingErrorHandler 0063                 ?_EUSART1_SetFramingErrorHandler 0060  
                          ??_LCD_2x16_WriteData 0060                           _TMR0_InterruptHandler 0048  
                                     __pnvBANK0 00EC                                       _auchCRCHi FEE5  
                                     _auchCRCLo FDE5                          _PIN_MANAGER_Initialize 138A  
                                     _dtoa$1711 007F                                   ??_modbus_send 0002  
                                     __pintcode 0008                                   __pmediumconst FDE4  
                                      ?___awdiv 0060                                        ?___awmod 0060  
                                      ?___lldiv 006C                               ??_measure_current 007B  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 001D  
                             ??_measure_voltage 007B                                        _ECCP1DEL 0F79  
                                      _BAUDCON1 0F7E           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 162E            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1628  
                          _EUSART1_ErrorHandler 00EC                         _EUSART1_SetErrorHandler 15F8  
                                      ?_sprintf 00A0                            _INTERRUPT_Initialize 1634  
                             ??_TMR0_Initialize 0063                                  ___wmul@product 0064  
       EUSART1_SetErrorHandler@interruptHandler 0060                                        _LATDbits 0F8C  
                                   CRC16@uIndex 0007                                     CRC16@length 0003  
                                      _PIE1bits 0F9D                                        i2u130_40 0FAE  
                                      i2u130_41 0FAA                                        i2u140_40 0264  
                                      i2u140_41 0260                                        i2u141_40 1276  
                                      i2u141_41 1272                                        i2u126_40 10FC  
                             _holding_registers 00C1                                        i2u126_41 10F8  
                                      i2u151_40 0B88                                        i2u150_48 0B64  
                                      i2u127_40 110A                                        i2u151_41 0B84  
                                      i2u150_49 0B7A                                        i2u127_41 1106  
                                      i2u128_40 1136                                        i2u128_41 1132  
                                      i2u129_40 150E                                        i2u153_40 0BCE  
                                      i2u152_48 0B9C                                        i2u137_40 0022  
                                      i2u129_41 150A                                        i2u153_41 0BCA  
                                      i2u152_49 0BB2                                        i2u137_41 001E  
                                      i2u138_40 008E                                        i2u162_40 0048  
                                      i2u138_41 008A                                        i2u162_41 0044  
                                      i2u154_48 0BD4                                        i2u139_40 017E  
                                      i2u170_48 00CE                                        i2u163_40 0056  
                                      i2u154_49 0BEA                                        i2u139_41 017A  
                                      i2u170_49 00E2                                        i2u163_41 0052  
                                      i2u164_40 0072                                        i2u164_41 006E  
                                      i2u149_40 0B50                                        i2u165_40 0080  
                    ??_TMR0_SetInterruptHandler 0063                                        i2u149_41 0B4C  
                                      i2u165_41 007C                                        i2u166_40 008E  
                                      i2u166_41 008A                                        i2u168_40 00BA  
                                      i2u167_48 0094                                        i2u168_41 00B6  
                                      i2u167_49 00A8                                        i2u169_40 00C8  
                                      i2u169_41 00C4                                        _PIR1bits 0F9E  
                                 ??_TMR0_Reload 0001                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 0FD0                                        _TMR0_ISR 1480  
                                  _modbus_timer 1606                                       _vfpfcnvrt 0296  
                           __end_of_modbus_send 1278                                      _ADCON0bits 0FC2  
                                    _ADCON1bits 0FC1                               ___wmul@multiplier 0060  
                         measure_voltage@result 007C                                _EPWM1_Initialize 1578  
                                      _Lcd_Init 12C0                               ___lmul@multiplier 0060  
                         ?_INTERRUPT_Initialize 0001                               ??_TMR2_Initialize 0060  
         __end_of_EUSART1_SetTxInterruptHandler 15CE                   _EUSART1_SetTxInterruptHandler 15C0  
                                      __Hrparam 0000                                      vfprintf@ap 009C  
                                      __Lrparam 0000                                      vfprintf@fp 0098  
                             _ADC_GetConversion 134A                         ??_OSCILLATOR_Initialize 0060  
                            ?_ADC_GetConversion 0060                                      ?_vfpfcnvrt 0088  
                            modbus_char_recvd@c 0001                             __end_of_TMR0_Reload 1628  
                     ??_EUSART1_SetErrorHandler 0063             __end_of_EUSART1_DefaultErrorHandler 1634  
                   _EUSART1_DefaultErrorHandler 162E                             ??_ADC_GetConversion 0062  
                                    sprintf@fmt 00A2               modbus_analyse_and_answer@pwmValue 0011  
                         LCD_2x16_WriteMsg@line 0064                                        __ptext10 1638  
                                      __ptext11 1308                                        __ptext20 15A4  
                                      __ptext12 0CAE                                        __ptext21 1446  
                                      __ptext13 0A6E                                        __ptext30 15EA  
                                      __ptext22 15B2                                        __ptext14 0BF4  
                                      __ptext31 15F8                                        __ptext23 138A  
                                      __ptext15 0648                                        __ptext40 1606  
                                      __ptext32 1578                                        __ptext24 1614  
                                      __ptext16 0FC6                                        __ptext41 122E  
                                      __ptext33 158E                                        __ptext25 1634  
                                      __ptext17 0E10                                        __ptext50 0B34  
                                      __ptext42 10EA                                        __ptext34 12C0  
                                      __ptext26 0EB6                                        __ptext18 134A  
                                      __ptext51 1628                                        __ptext43 0000  
                                      __ptext35 140A                                        __ptext27 15C0  
                                      __ptext19 153E                                        __ptext52 163C  
                                      __ptext44 0F48                                        __ptext36 1140  
                                      __ptext28 15CE                                        __ptext53 162E  
                                      __ptext45 1560                                        __ptext37 1032  
                                      __ptext29 15DC                                        __ptext54 14EC  
                                      __ptext46 161E                                        __ptext38 14BA  
                                      __ptext55 0000                                        __ptext47 1480  
                                      __ptext48 163A                                        __ptext49 13CA  
                              measure_current@i 007F                           measure_current@offset 0079  
                         measure_current@result 0081            __end_of_TMR0_DefaultInterruptHandler 163C  
                  _TMR0_DefaultInterruptHandler 163A                       __end_of_ADC_GetConversion 138A  
EUSART1_SetOverrunErrorHandler@interruptHandler 0060                                        isa$xinst 0000  
                                   _modbus_send 122E                                        int$flags 0051  
             __end_of_modbus_analyse_and_answer 0296                                        _vfprintf 1094  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 00F2                             _EUSART1_Receive_ISR 0B34  
                                    _INTCONbits 0FF2                                   CRC16@uchCRCHi 0008  
                                 CRC16@uchCRCLo 0009                                measure_voltage@i 0080  
                        ??_INTERRUPT_Initialize 0060                                        intlevel2 0000  
                                     sprintf@ap 00A6                            ?_EUSART1_Receive_ISR 0001  
                              ___lldiv@dividend 006C                                 _measure_current 0648  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 15EA  
                _EUSART1_SetOverrunErrorHandler 15DC                                      _RCSTA1bits 0FAB  
                  __end_of_EUSART1_Transmit_ISR 140A                                ??_ADC_Initialize 0060  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                               _measure_voltage 0BF4                                     _TMR0_Reload 161E  
EUSART1_SetFramingErrorHandler@interruptHandler 0060                  ?_EUSART1_SetTxInterruptHandler 0060  
                                   ??_vfpfcnvrt 008E                              _eusart1RxLastError 0041  
                                      sprintf@f 00A8                                        sprintf@s 00A0  
                              ___lldiv@quotient 0074                                 _TMR0_Initialize 1446  
                           _EPWM1_LoadDutyValue 14BA                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 13CA                         ??_EUSART1_RxDataHandler 0001  
               modbus_analyse_and_answer@i_1186 0013                        __end_of_EPWM1_Initialize 158E  
                          ?_EPWM1_LoadDutyValue 0060  
