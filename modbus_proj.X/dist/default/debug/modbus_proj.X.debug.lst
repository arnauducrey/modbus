

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Mar 10 16:01:19 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Version 2.40
    78                           ; Generated 17/11/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F97J60 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	mediumconst
   114   00FDE4                     __pmediumconst:
   115                           	callstack 0
   116   00FDE4  00                 	db	0
   117   00FDE5                     _auchCRCLo:
   118                           	callstack 0
   119   00FDE5  00                 	db	0
   120   00FDE6  C0                 	db	192
   121   00FDE7  C1                 	db	193
   122   00FDE8  01                 	db	1
   123   00FDE9  C3                 	db	195
   124   00FDEA  03                 	db	3
   125   00FDEB  02                 	db	2
   126   00FDEC  C2                 	db	194
   127   00FDED  C6                 	db	198
   128   00FDEE  06                 	db	6
   129   00FDEF  07                 	db	7
   130   00FDF0  C7                 	db	199
   131   00FDF1  05                 	db	5
   132   00FDF2  C5                 	db	197
   133   00FDF3  C4                 	db	196
   134   00FDF4  04                 	db	4
   135   00FDF5  CC                 	db	204
   136   00FDF6  0C                 	db	12
   137   00FDF7  0D                 	db	13
   138   00FDF8  CD                 	db	205
   139   00FDF9  0F                 	db	15
   140   00FDFA  CF                 	db	207
   141   00FDFB  CE                 	db	206
   142   00FDFC  0E                 	db	14
   143   00FDFD  0A                 	db	10
   144   00FDFE  CA                 	db	202
   145   00FDFF  CB                 	db	203
   146   00FE00  0B                 	db	11
   147   00FE01  C9                 	db	201
   148   00FE02  09                 	db	9
   149   00FE03  08                 	db	8
   150   00FE04  C8                 	db	200
   151   00FE05  D8                 	db	216
   152   00FE06  18                 	db	24
   153   00FE07  19                 	db	25
   154   00FE08  D9                 	db	217
   155   00FE09  1B                 	db	27
   156   00FE0A  DB                 	db	219
   157   00FE0B  DA                 	db	218
   158   00FE0C  1A                 	db	26
   159   00FE0D  1E                 	db	30
   160   00FE0E  DE                 	db	222
   161   00FE0F  DF                 	db	223
   162   00FE10  1F                 	db	31
   163   00FE11  DD                 	db	221
   164   00FE12  1D                 	db	29
   165   00FE13  1C                 	db	28
   166   00FE14  DC                 	db	220
   167   00FE15  14                 	db	20
   168   00FE16  D4                 	db	212
   169   00FE17  D5                 	db	213
   170   00FE18  15                 	db	21
   171   00FE19  D7                 	db	215
   172   00FE1A  17                 	db	23
   173   00FE1B  16                 	db	22
   174   00FE1C  D6                 	db	214
   175   00FE1D  D2                 	db	210
   176   00FE1E  12                 	db	18
   177   00FE1F  13                 	db	19
   178   00FE20  D3                 	db	211
   179   00FE21  11                 	db	17
   180   00FE22  D1                 	db	209
   181   00FE23  D0                 	db	208
   182   00FE24  10                 	db	16
   183   00FE25  F0                 	db	240
   184   00FE26  30                 	db	48
   185   00FE27  31                 	db	49
   186   00FE28  F1                 	db	241
   187   00FE29  33                 	db	51
   188   00FE2A  F3                 	db	243
   189   00FE2B  F2                 	db	242
   190   00FE2C  32                 	db	50
   191   00FE2D  36                 	db	54
   192   00FE2E  F6                 	db	246
   193   00FE2F  F7                 	db	247
   194   00FE30  37                 	db	55
   195   00FE31  F5                 	db	245
   196   00FE32  35                 	db	53
   197   00FE33  34                 	db	52
   198   00FE34  F4                 	db	244
   199   00FE35  3C                 	db	60
   200   00FE36  FC                 	db	252
   201   00FE37  FD                 	db	253
   202   00FE38  3D                 	db	61
   203   00FE39  FF                 	db	255
   204   00FE3A  3F                 	db	63
   205   00FE3B  3E                 	db	62
   206   00FE3C  FE                 	db	254
   207   00FE3D  FA                 	db	250
   208   00FE3E  3A                 	db	58
   209   00FE3F  3B                 	db	59
   210   00FE40  FB                 	db	251
   211   00FE41  39                 	db	57
   212   00FE42  F9                 	db	249
   213   00FE43  F8                 	db	248
   214   00FE44  38                 	db	56
   215   00FE45  28                 	db	40
   216   00FE46  E8                 	db	232
   217   00FE47  E9                 	db	233
   218   00FE48  29                 	db	41
   219   00FE49  EB                 	db	235
   220   00FE4A  2B                 	db	43
   221   00FE4B  2A                 	db	42
   222   00FE4C  EA                 	db	234
   223   00FE4D  EE                 	db	238
   224   00FE4E  2E                 	db	46
   225   00FE4F  2F                 	db	47
   226   00FE50  EF                 	db	239
   227   00FE51  2D                 	db	45
   228   00FE52  ED                 	db	237
   229   00FE53  EC                 	db	236
   230   00FE54  2C                 	db	44
   231   00FE55  E4                 	db	228
   232   00FE56  24                 	db	36
   233   00FE57  25                 	db	37
   234   00FE58  E5                 	db	229
   235   00FE59  27                 	db	39
   236   00FE5A  E7                 	db	231
   237   00FE5B  E6                 	db	230
   238   00FE5C  26                 	db	38
   239   00FE5D  22                 	db	34
   240   00FE5E  E2                 	db	226
   241   00FE5F  E3                 	db	227
   242   00FE60  23                 	db	35
   243   00FE61  E1                 	db	225
   244   00FE62  21                 	db	33
   245   00FE63  20                 	db	32
   246   00FE64  E0                 	db	224
   247   00FE65  A0                 	db	160
   248   00FE66  60                 	db	96
   249   00FE67  61                 	db	97
   250   00FE68  A1                 	db	161
   251   00FE69  63                 	db	99
   252   00FE6A  A3                 	db	163
   253   00FE6B  A2                 	db	162
   254   00FE6C  62                 	db	98
   255   00FE6D  66                 	db	102
   256   00FE6E  A6                 	db	166
   257   00FE6F  A7                 	db	167
   258   00FE70  67                 	db	103
   259   00FE71  A5                 	db	165
   260   00FE72  65                 	db	101
   261   00FE73  64                 	db	100
   262   00FE74  A4                 	db	164
   263   00FE75  6C                 	db	108
   264   00FE76  AC                 	db	172
   265   00FE77  AD                 	db	173
   266   00FE78  6D                 	db	109
   267   00FE79  AF                 	db	175
   268   00FE7A  6F                 	db	111
   269   00FE7B  6E                 	db	110
   270   00FE7C  AE                 	db	174
   271   00FE7D  AA                 	db	170
   272   00FE7E  6A                 	db	106
   273   00FE7F  6B                 	db	107
   274   00FE80  AB                 	db	171
   275   00FE81  69                 	db	105
   276   00FE82  A9                 	db	169
   277   00FE83  A8                 	db	168
   278   00FE84  68                 	db	104
   279   00FE85  78                 	db	120
   280   00FE86  B8                 	db	184
   281   00FE87  B9                 	db	185
   282   00FE88  79                 	db	121
   283   00FE89  BB                 	db	187
   284   00FE8A  7B                 	db	123
   285   00FE8B  7A                 	db	122
   286   00FE8C  BA                 	db	186
   287   00FE8D  BE                 	db	190
   288   00FE8E  7E                 	db	126
   289   00FE8F  7F                 	db	127
   290   00FE90  BF                 	db	191
   291   00FE91  7D                 	db	125
   292   00FE92  BD                 	db	189
   293   00FE93  BC                 	db	188
   294   00FE94  7C                 	db	124
   295   00FE95  B4                 	db	180
   296   00FE96  74                 	db	116
   297   00FE97  75                 	db	117
   298   00FE98  B5                 	db	181
   299   00FE99  77                 	db	119
   300   00FE9A  B7                 	db	183
   301   00FE9B  B6                 	db	182
   302   00FE9C  76                 	db	118
   303   00FE9D  72                 	db	114
   304   00FE9E  B2                 	db	178
   305   00FE9F  B3                 	db	179
   306   00FEA0  73                 	db	115
   307   00FEA1  B1                 	db	177
   308   00FEA2  71                 	db	113
   309   00FEA3  70                 	db	112
   310   00FEA4  B0                 	db	176
   311   00FEA5  50                 	db	80
   312   00FEA6  90                 	db	144
   313   00FEA7  91                 	db	145
   314   00FEA8  51                 	db	81
   315   00FEA9  93                 	db	147
   316   00FEAA  53                 	db	83
   317   00FEAB  52                 	db	82
   318   00FEAC  92                 	db	146
   319   00FEAD  96                 	db	150
   320   00FEAE  56                 	db	86
   321   00FEAF  57                 	db	87
   322   00FEB0  97                 	db	151
   323   00FEB1  55                 	db	85
   324   00FEB2  95                 	db	149
   325   00FEB3  94                 	db	148
   326   00FEB4  54                 	db	84
   327   00FEB5  9C                 	db	156
   328   00FEB6  5C                 	db	92
   329   00FEB7  5D                 	db	93
   330   00FEB8  9D                 	db	157
   331   00FEB9  5F                 	db	95
   332   00FEBA  9F                 	db	159
   333   00FEBB  9E                 	db	158
   334   00FEBC  5E                 	db	94
   335   00FEBD  5A                 	db	90
   336   00FEBE  9A                 	db	154
   337   00FEBF  9B                 	db	155
   338   00FEC0  5B                 	db	91
   339   00FEC1  99                 	db	153
   340   00FEC2  59                 	db	89
   341   00FEC3  58                 	db	88
   342   00FEC4  98                 	db	152
   343   00FEC5  88                 	db	136
   344   00FEC6  48                 	db	72
   345   00FEC7  49                 	db	73
   346   00FEC8  89                 	db	137
   347   00FEC9  4B                 	db	75
   348   00FECA  8B                 	db	139
   349   00FECB  8A                 	db	138
   350   00FECC  4A                 	db	74
   351   00FECD  4E                 	db	78
   352   00FECE  8E                 	db	142
   353   00FECF  8F                 	db	143
   354   00FED0  4F                 	db	79
   355   00FED1  8D                 	db	141
   356   00FED2  4D                 	db	77
   357   00FED3  4C                 	db	76
   358   00FED4  8C                 	db	140
   359   00FED5  44                 	db	68
   360   00FED6  84                 	db	132
   361   00FED7  85                 	db	133
   362   00FED8  45                 	db	69
   363   00FED9  87                 	db	135
   364   00FEDA  47                 	db	71
   365   00FEDB  46                 	db	70
   366   00FEDC  86                 	db	134
   367   00FEDD  82                 	db	130
   368   00FEDE  42                 	db	66
   369   00FEDF  43                 	db	67
   370   00FEE0  83                 	db	131
   371   00FEE1  41                 	db	65
   372   00FEE2  81                 	db	129
   373   00FEE3  80                 	db	128
   374   00FEE4  40                 	db	64
   375   00FEE5                     __end_of_auchCRCLo:
   376                           	callstack 0
   377   00FEE5                     _auchCRCHi:
   378                           	callstack 0
   379   00FEE5  00                 	db	0
   380   00FEE6  C1                 	db	193
   381   00FEE7  81                 	db	129
   382   00FEE8  40                 	db	64
   383   00FEE9  01                 	db	1
   384   00FEEA  C0                 	db	192
   385   00FEEB  80                 	db	128
   386   00FEEC  41                 	db	65
   387   00FEED  01                 	db	1
   388   00FEEE  C0                 	db	192
   389   00FEEF  80                 	db	128
   390   00FEF0  41                 	db	65
   391   00FEF1  00                 	db	0
   392   00FEF2  C1                 	db	193
   393   00FEF3  81                 	db	129
   394   00FEF4  40                 	db	64
   395   00FEF5  01                 	db	1
   396   00FEF6  C0                 	db	192
   397   00FEF7  80                 	db	128
   398   00FEF8  41                 	db	65
   399   00FEF9  00                 	db	0
   400   00FEFA  C1                 	db	193
   401   00FEFB  81                 	db	129
   402   00FEFC  40                 	db	64
   403   00FEFD  00                 	db	0
   404   00FEFE  C1                 	db	193
   405   00FEFF  81                 	db	129
   406   00FF00  40                 	db	64
   407   00FF01  01                 	db	1
   408   00FF02  C0                 	db	192
   409   00FF03  80                 	db	128
   410   00FF04  41                 	db	65
   411   00FF05  01                 	db	1
   412   00FF06  C0                 	db	192
   413   00FF07  80                 	db	128
   414   00FF08  41                 	db	65
   415   00FF09  00                 	db	0
   416   00FF0A  C1                 	db	193
   417   00FF0B  81                 	db	129
   418   00FF0C  40                 	db	64
   419   00FF0D  00                 	db	0
   420   00FF0E  C1                 	db	193
   421   00FF0F  81                 	db	129
   422   00FF10  40                 	db	64
   423   00FF11  01                 	db	1
   424   00FF12  C0                 	db	192
   425   00FF13  80                 	db	128
   426   00FF14  41                 	db	65
   427   00FF15  00                 	db	0
   428   00FF16  C1                 	db	193
   429   00FF17  81                 	db	129
   430   00FF18  40                 	db	64
   431   00FF19  01                 	db	1
   432   00FF1A  C0                 	db	192
   433   00FF1B  80                 	db	128
   434   00FF1C  41                 	db	65
   435   00FF1D  01                 	db	1
   436   00FF1E  C0                 	db	192
   437   00FF1F  80                 	db	128
   438   00FF20  41                 	db	65
   439   00FF21  00                 	db	0
   440   00FF22  C1                 	db	193
   441   00FF23  81                 	db	129
   442   00FF24  40                 	db	64
   443   00FF25  01                 	db	1
   444   00FF26  C0                 	db	192
   445   00FF27  80                 	db	128
   446   00FF28  41                 	db	65
   447   00FF29  00                 	db	0
   448   00FF2A  C1                 	db	193
   449   00FF2B  81                 	db	129
   450   00FF2C  40                 	db	64
   451   00FF2D  00                 	db	0
   452   00FF2E  C1                 	db	193
   453   00FF2F  81                 	db	129
   454   00FF30  40                 	db	64
   455   00FF31  01                 	db	1
   456   00FF32  C0                 	db	192
   457   00FF33  80                 	db	128
   458   00FF34  41                 	db	65
   459   00FF35  00                 	db	0
   460   00FF36  C1                 	db	193
   461   00FF37  81                 	db	129
   462   00FF38  40                 	db	64
   463   00FF39  01                 	db	1
   464   00FF3A  C0                 	db	192
   465   00FF3B  80                 	db	128
   466   00FF3C  41                 	db	65
   467   00FF3D  01                 	db	1
   468   00FF3E  C0                 	db	192
   469   00FF3F  80                 	db	128
   470   00FF40  41                 	db	65
   471   00FF41  00                 	db	0
   472   00FF42  C1                 	db	193
   473   00FF43  81                 	db	129
   474   00FF44  40                 	db	64
   475   00FF45  00                 	db	0
   476   00FF46  C1                 	db	193
   477   00FF47  81                 	db	129
   478   00FF48  40                 	db	64
   479   00FF49  01                 	db	1
   480   00FF4A  C0                 	db	192
   481   00FF4B  80                 	db	128
   482   00FF4C  41                 	db	65
   483   00FF4D  01                 	db	1
   484   00FF4E  C0                 	db	192
   485   00FF4F  80                 	db	128
   486   00FF50  41                 	db	65
   487   00FF51  00                 	db	0
   488   00FF52  C1                 	db	193
   489   00FF53  81                 	db	129
   490   00FF54  40                 	db	64
   491   00FF55  01                 	db	1
   492   00FF56  C0                 	db	192
   493   00FF57  80                 	db	128
   494   00FF58  41                 	db	65
   495   00FF59  00                 	db	0
   496   00FF5A  C1                 	db	193
   497   00FF5B  81                 	db	129
   498   00FF5C  40                 	db	64
   499   00FF5D  00                 	db	0
   500   00FF5E  C1                 	db	193
   501   00FF5F  81                 	db	129
   502   00FF60  40                 	db	64
   503   00FF61  01                 	db	1
   504   00FF62  C0                 	db	192
   505   00FF63  80                 	db	128
   506   00FF64  41                 	db	65
   507   00FF65  01                 	db	1
   508   00FF66  C0                 	db	192
   509   00FF67  80                 	db	128
   510   00FF68  41                 	db	65
   511   00FF69  00                 	db	0
   512   00FF6A  C1                 	db	193
   513   00FF6B  81                 	db	129
   514   00FF6C  40                 	db	64
   515   00FF6D  00                 	db	0
   516   00FF6E  C1                 	db	193
   517   00FF6F  81                 	db	129
   518   00FF70  40                 	db	64
   519   00FF71  01                 	db	1
   520   00FF72  C0                 	db	192
   521   00FF73  80                 	db	128
   522   00FF74  41                 	db	65
   523   00FF75  00                 	db	0
   524   00FF76  C1                 	db	193
   525   00FF77  81                 	db	129
   526   00FF78  40                 	db	64
   527   00FF79  01                 	db	1
   528   00FF7A  C0                 	db	192
   529   00FF7B  80                 	db	128
   530   00FF7C  41                 	db	65
   531   00FF7D  01                 	db	1
   532   00FF7E  C0                 	db	192
   533   00FF7F  80                 	db	128
   534   00FF80  41                 	db	65
   535   00FF81  00                 	db	0
   536   00FF82  C1                 	db	193
   537   00FF83  81                 	db	129
   538   00FF84  40                 	db	64
   539   00FF85  00                 	db	0
   540   00FF86  C1                 	db	193
   541   00FF87  81                 	db	129
   542   00FF88  40                 	db	64
   543   00FF89  01                 	db	1
   544   00FF8A  C0                 	db	192
   545   00FF8B  80                 	db	128
   546   00FF8C  41                 	db	65
   547   00FF8D  01                 	db	1
   548   00FF8E  C0                 	db	192
   549   00FF8F  80                 	db	128
   550   00FF90  41                 	db	65
   551   00FF91  00                 	db	0
   552   00FF92  C1                 	db	193
   553   00FF93  81                 	db	129
   554   00FF94  40                 	db	64
   555   00FF95  01                 	db	1
   556   00FF96  C0                 	db	192
   557   00FF97  80                 	db	128
   558   00FF98  41                 	db	65
   559   00FF99  00                 	db	0
   560   00FF9A  C1                 	db	193
   561   00FF9B  81                 	db	129
   562   00FF9C  40                 	db	64
   563   00FF9D  00                 	db	0
   564   00FF9E  C1                 	db	193
   565   00FF9F  81                 	db	129
   566   00FFA0  40                 	db	64
   567   00FFA1  01                 	db	1
   568   00FFA2  C0                 	db	192
   569   00FFA3  80                 	db	128
   570   00FFA4  41                 	db	65
   571   00FFA5  00                 	db	0
   572   00FFA6  C1                 	db	193
   573   00FFA7  81                 	db	129
   574   00FFA8  40                 	db	64
   575   00FFA9  01                 	db	1
   576   00FFAA  C0                 	db	192
   577   00FFAB  80                 	db	128
   578   00FFAC  41                 	db	65
   579   00FFAD  01                 	db	1
   580   00FFAE  C0                 	db	192
   581   00FFAF  80                 	db	128
   582   00FFB0  41                 	db	65
   583   00FFB1  00                 	db	0
   584   00FFB2  C1                 	db	193
   585   00FFB3  81                 	db	129
   586   00FFB4  40                 	db	64
   587   00FFB5  01                 	db	1
   588   00FFB6  C0                 	db	192
   589   00FFB7  80                 	db	128
   590   00FFB8  41                 	db	65
   591   00FFB9  00                 	db	0
   592   00FFBA  C1                 	db	193
   593   00FFBB  81                 	db	129
   594   00FFBC  40                 	db	64
   595   00FFBD  00                 	db	0
   596   00FFBE  C1                 	db	193
   597   00FFBF  81                 	db	129
   598   00FFC0  40                 	db	64
   599   00FFC1  01                 	db	1
   600   00FFC2  C0                 	db	192
   601   00FFC3  80                 	db	128
   602   00FFC4  41                 	db	65
   603   00FFC5  01                 	db	1
   604   00FFC6  C0                 	db	192
   605   00FFC7  80                 	db	128
   606   00FFC8  41                 	db	65
   607   00FFC9  00                 	db	0
   608   00FFCA  C1                 	db	193
   609   00FFCB  81                 	db	129
   610   00FFCC  40                 	db	64
   611   00FFCD  00                 	db	0
   612   00FFCE  C1                 	db	193
   613   00FFCF  81                 	db	129
   614   00FFD0  40                 	db	64
   615   00FFD1  01                 	db	1
   616   00FFD2  C0                 	db	192
   617   00FFD3  80                 	db	128
   618   00FFD4  41                 	db	65
   619   00FFD5  00                 	db	0
   620   00FFD6  C1                 	db	193
   621   00FFD7  81                 	db	129
   622   00FFD8  40                 	db	64
   623   00FFD9  01                 	db	1
   624   00FFDA  C0                 	db	192
   625   00FFDB  80                 	db	128
   626   00FFDC  41                 	db	65
   627   00FFDD  01                 	db	1
   628   00FFDE  C0                 	db	192
   629   00FFDF  80                 	db	128
   630   00FFE0  41                 	db	65
   631   00FFE1  00                 	db	0
   632   00FFE2  C1                 	db	193
   633   00FFE3  81                 	db	129
   634   00FFE4  40                 	db	64
   635   00FFE5                     __end_of_auchCRCHi:
   636                           	callstack 0
   637   000000                     _TMR0L	set	4054
   638   000000                     _TMR0H	set	4055
   639   000000                     _RCREG1	set	4014
   640   000000                     _TXREG1	set	4013
   641   000000                     _SPBRG1	set	4015
   642   000000                     _TXSTA1	set	4012
   643   000000                     _CCPR1L	set	4030
   644   000000                     _CCPR1H	set	4031
   645   000000                     _TRISC	set	3988
   646   000000                     _TRISH	set	3993
   647   000000                     _TRISB	set	3987
   648   000000                     _TRISG	set	3992
   649   000000                     _TRISA	set	3986
   650   000000                     _TRISF	set	3991
   651   000000                     _TRISE	set	3990
   652   000000                     _LATH	set	3984
   653   000000                     _LATC	set	3979
   654   000000                     _LATG	set	3983
   655   000000                     _LATB	set	3978
   656   000000                     _LATF	set	3982
   657   000000                     _LATE	set	3981
   658   000000                     _ADCON0	set	4034
   659   000000                     _ADRESL	set	4035
   660   000000                     _LATJ	set	3985
   661   000000                     _TRISJ	set	3994
   662   00FFE5                     STR_2:
   663   00FFE5  49                 	db	73	;'I'
   664   00FFE6  20                 	db	32
   665   00FFE7  3D                 	db	61	;'='
   666   00FFE8  20                 	db	32
   667   00FFE9  25                 	db	37
   668   00FFEA  30                 	db	48	;'0'
   669   00FFEB  34                 	db	52	;'4'
   670   00FFEC  64                 	db	100	;'d'
   671   00FFED  5B                 	db	91	;'['
   672   00FFEE  75                 	db	117	;'u'
   673   00FFEF  41                 	db	65	;'A'
   674   00FFF0  5D                 	db	93	;']'
   675   00FFF1  00                 	db	0
   676   00FFF2                     STR_1:
   677   00FFF2  55                 	db	85	;'U'
   678   00FFF3  20                 	db	32
   679   00FFF4  3D                 	db	61	;'='
   680   00FFF5  20                 	db	32
   681   00FFF6  25                 	db	37
   682   00FFF7  30                 	db	48	;'0'
   683   00FFF8  33                 	db	51	;'3'
   684   00FFF9  64                 	db	100	;'d'
   685   00FFFA  5B                 	db	91	;'['
   686   00FFFB  6D                 	db	109	;'m'
   687   00FFFC  56                 	db	86	;'V'
   688   00FFFD  5D                 	db	93	;']'
   689   00FFFE  00                 	db	0
   690   00FFFF  00                 	db	0	; dummy byte at the end
   691   000000                     
   692                           	psect	nvCOMRAM
   693   000048                     __pnvCOMRAM:
   694                           	callstack 0
   695   000048                     _TMR0_InterruptHandler:
   696                           	callstack 0
   697   000048                     	ds	3
   698   00004B                     _EUSART1_RxDefaultInterruptHandler:
   699                           	callstack 0
   700   00004B                     	ds	3
   701   00004E                     _EUSART1_TxDefaultInterruptHandler:
   702                           	callstack 0
   703   00004E                     	ds	3
   704                           
   705                           	psect	nvBANK0
   706   0000EC                     __pnvBANK0:
   707                           	callstack 0
   708   0000EC                     _EUSART1_ErrorHandler:
   709                           	callstack 0
   710   0000EC                     	ds	3
   711   0000EF                     _EUSART1_OverrunErrorHandler:
   712                           	callstack 0
   713   0000EF                     	ds	3
   714   0000F2                     _EUSART1_FramingErrorHandler:
   715                           	callstack 0
   716   0000F2                     	ds	3
   717   000000                     _T0CON	set	4053
   718   000000                     _RCSTA1bits	set	4011
   719   000000                     _TXSTA1bits	set	4012
   720   000000                     _T2CONbits	set	4042
   721   000000                     _ADCON1bits	set	4033
   722   000000                     _TRISD	set	3989
   723   000000                     _LATD	set	3980
   724   000000                     _ADCON0bits	set	4034
   725   000000                     _TMR0ON	set	32431
   726   000000                     _ECCP1DEL	set	3961
   727   000000                     _LATA	set	3977
   728   000000                     _LATDbits	set	3980
   729   000000                     _TRISDbits	set	3989
   730   000000                     _PIE1bits	set	3997
   731   000000                     _PIR1bits	set	3998
   732   000000                     _ECCP1AS	set	4022
   733   000000                     _CCP1CON	set	4029
   734   000000                     _ADCON2	set	4032
   735   000000                     _ADCON1	set	4033
   736   000000                     _OSCTUNE	set	3995
   737   000000                     _OSCCON	set	4051
   738   000000                     _T0CONbits	set	4053
   739   000000                     _T2CON	set	4042
   740   000000                     _PR2	set	4043
   741   000000                     _ADRESH	set	4036
   742   000000                     _BAUDCON1	set	3966
   743   000000                     _RCONbits	set	4048
   744   000000                     _TMR2	set	4044
   745   000000                     _RCSTA1	set	4011
   746   000000                     _SPBRGH1	set	3967
   747   000000                     _INTCONbits	set	4082
   748                           
   749                           ; #config settings
   750                           
   751                           	psect	cinit
   752   0111E2                     __pcinit:
   753                           	callstack 0
   754   0111E2                     start_initialization:
   755                           	callstack 0
   756   0111E2                     __initialization:
   757                           	callstack 0
   758                           
   759                           ; Clear objects allocated to BANK2 (256 bytes)
   760   0111E2  EE02  F000         	lfsr	0,__pbssBANK2
   761   0111E6  EE11 F000          	lfsr	1,256
   762   0111EA                     clear_0:
   763   0111EA  6AEE               	clrf	postinc0,c
   764   0111EC  50E5               	movf	postdec1,w,c
   765   0111EE  50E1               	movf	fsr1l,w,c
   766   0111F0  E1FC               	bnz	clear_0
   767   0111F2  50E2               	movf	fsr1h,w,c
   768   0111F4  E1FA               	bnz	clear_0
   769                           
   770                           ; Clear objects allocated to BANK1 (256 bytes)
   771   0111F6  EE01  F000         	lfsr	0,__pbssBANK1
   772   0111FA  EE11 F000          	lfsr	1,256
   773   0111FE                     clear_1:
   774   0111FE  6AEE               	clrf	postinc0,c
   775   011200  50E5               	movf	postdec1,w,c
   776   011202  50E1               	movf	fsr1l,w,c
   777   011204  E1FC               	bnz	clear_1
   778   011206  50E2               	movf	fsr1h,w,c
   779   011208  E1FA               	bnz	clear_1
   780                           
   781                           ; Clear objects allocated to BANK0 (55 bytes)
   782   01120A  EE00  F0B5         	lfsr	0,__pbssBANK0
   783   01120E  0E37               	movlw	55
   784   011210                     clear_2:
   785   011210  6AEE               	clrf	postinc0,c
   786   011212  06E8               	decf	wreg,f,c
   787   011214  E1FD               	bnz	clear_2
   788                           
   789                           ; Clear objects allocated to COMRAM (31 bytes)
   790   011216  EE00  F029         	lfsr	0,__pbssCOMRAM
   791   01121A  0E1F               	movlw	31
   792   01121C                     clear_3:
   793   01121C  6AEE               	clrf	postinc0,c
   794   01121E  06E8               	decf	wreg,f,c
   795   011220  E1FD               	bnz	clear_3
   796   011222                     end_of_initialization:
   797                           	callstack 0
   798   011222                     __end_of__initialization:
   799                           	callstack 0
   800   011222  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   801   011224  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   802   011226  0100               	movlb	0
   803   011228  EFF8  F083         	goto	_main	;jump to C main() function
   804                           
   805                           	psect	bssCOMRAM
   806   000029                     __pbssCOMRAM:
   807                           	callstack 0
   808   000029                     _eusart1RxStatusBuffer:
   809                           	callstack 0
   810   000029                     	ds	8
   811   000031                     _eusart1TxBuffer:
   812                           	callstack 0
   813   000031                     	ds	8
   814   000039                     _ADC_InterruptHandler:
   815                           	callstack 0
   816   000039                     	ds	3
   817   00003C                     _timer0ReloadVal:
   818                           	callstack 0
   819   00003C                     	ds	2
   820   00003E                     _recPtr:
   821                           	callstack 0
   822   00003E                     	ds	1
   823   00003F                     _index:
   824                           	callstack 0
   825   00003F                     	ds	1
   826   000040                     _modbusAddress:
   827                           	callstack 0
   828   000040                     	ds	1
   829   000041                     _eusart1RxLastError:
   830                           	callstack 0
   831   000041                     	ds	1
   832   000042                     _eusart1RxCount:
   833                           	callstack 0
   834   000042                     	ds	1
   835   000043                     _eusart1RxTail:
   836                           	callstack 0
   837   000043                     	ds	1
   838   000044                     _eusart1RxHead:
   839                           	callstack 0
   840   000044                     	ds	1
   841   000045                     _eusart1TxBufferRemaining:
   842                           	callstack 0
   843   000045                     	ds	1
   844   000046                     _eusart1TxTail:
   845                           	callstack 0
   846   000046                     	ds	1
   847   000047                     _eusart1TxHead:
   848                           	callstack 0
   849   000047                     	ds	1
   850                           
   851                           	psect	bssBANK0
   852   0000B5                     __pbssBANK0:
   853                           	callstack 0
   854   0000B5                     _eusart1RxBuffer:
   855                           	callstack 0
   856   0000B5                     	ds	8
   857   0000BD                     _input_registers:
   858                           	callstack 0
   859   0000BD                     	ds	4
   860   0000C1                     _holding_registers:
   861                           	callstack 0
   862   0000C1                     	ds	4
   863   0000C5                     _width:
   864                           	callstack 0
   865   0000C5                     	ds	2
   866   0000C7                     _prec:
   867                           	callstack 0
   868   0000C7                     	ds	2
   869   0000C9                     _offset:
   870                           	callstack 0
   871   0000C9                     	ds	2
   872   0000CB                     _flags:
   873                           	callstack 0
   874   0000CB                     	ds	1
   875   0000CC                     _dbuf:
   876                           	callstack 0
   877   0000CC                     	ds	32
   878                           
   879                           	psect	bssBANK1
   880   000100                     __pbssBANK1:
   881                           	callstack 0
   882   000100                     _rx_buf:
   883                           	callstack 0
   884   000100                     	ds	256
   885                           
   886                           	psect	bssBANK2
   887   000200                     __pbssBANK2:
   888                           	callstack 0
   889   000200                     _tx_buf:
   890                           	callstack 0
   891   000200                     	ds	256
   892                           
   893                           	psect	cstackBANK3
   894   000300                     __pcstackBANK3:
   895                           	callstack 0
   896   000300                     main@tempString:
   897                           	callstack 0
   898                           
   899                           ; 20 bytes @ 0x0
   900   000300                     	ds	20
   901                           
   902                           	psect	cstackBANK0
   903   000060                     __pcstackBANK0:
   904                           	callstack 0
   905   000060                     ??_LCD_2x16_WriteCmd:
   906   000060                     ??_LCD_2x16_WriteData:
   907   000060                     ?_ADC_GetConversion:
   908                           	callstack 0
   909   000060                     ?___wmul:
   910                           	callstack 0
   911   000060                     ?___awdiv:
   912                           	callstack 0
   913   000060                     ?___awmod:
   914                           	callstack 0
   915   000060                     ?___lmul:
   916                           	callstack 0
   917   000060                     EPWM1_LoadDutyValue@dutyValue:
   918                           	callstack 0
   919   000060                     ___wmul@multiplier:
   920                           	callstack 0
   921   000060                     ___awdiv@dividend:
   922                           	callstack 0
   923   000060                     ___awmod@dividend:
   924                           	callstack 0
   925   000060                     fputc@c:
   926                           	callstack 0
   927   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   928                           	callstack 0
   929   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   930                           	callstack 0
   931   000060                     EUSART1_SetErrorHandler@interruptHandler:
   932                           	callstack 0
   933   000060                     EUSART1_SetTxInterruptHandler@interruptHandler:
   934                           	callstack 0
   935   000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   936                           	callstack 0
   937   000060                     TMR0_SetInterruptHandler@InterruptHandler:
   938                           	callstack 0
   939   000060                     ___lmul@multiplier:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x0
   943   000060                     	ds	1
   944   000061                     LCD_2x16_WriteCmd@command:
   945                           	callstack 0
   946   000061                     LCD_2x16_WriteData@command:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1
   950   000061                     	ds	1
   951   000062                     ??_Lcd_Init:
   952   000062                     ??_ADC_GetConversion:
   953   000062                     ??_EPWM1_LoadDutyValue:
   954   000062                     LCD_2x16_WriteMsg@msg:
   955                           	callstack 0
   956   000062                     ___wmul@multiplicand:
   957                           	callstack 0
   958   000062                     ___awdiv@divisor:
   959                           	callstack 0
   960   000062                     ___awmod@divisor:
   961                           	callstack 0
   962   000062                     fputc@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x2
   966   000062                     	ds	1
   967   000063                     ??_TMR0_Initialize:
   968   000063                     
   969                           ; 1 bytes @ 0x3
   970   000063                     	ds	1
   971   000064                     ??_fputc:
   972   000064                     LCD_2x16_WriteMsg@line:
   973                           	callstack 0
   974   000064                     ADC_GetConversion@channel:
   975                           	callstack 0
   976   000064                     ___awdiv@counter:
   977                           	callstack 0
   978   000064                     ___awmod@counter:
   979                           	callstack 0
   980   000064                     ___wmul@product:
   981                           	callstack 0
   982   000064                     ___lmul@multiplicand:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x4
   986   000064                     	ds	1
   987   000065                     ___awdiv@sign:
   988                           	callstack 0
   989   000065                     ___awmod@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x5
   993   000065                     	ds	1
   994   000066                     ?_abs:
   995                           	callstack 0
   996   000066                     ?_read_prec_or_width:
   997                           	callstack 0
   998   000066                     ___awdiv@quotient:
   999                           	callstack 0
  1000   000066                     read_prec_or_width@fmt:
  1001                           	callstack 0
  1002   000066                     abs@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x6
  1006   000066                     	ds	2
  1007   000068                     ??_abs:
  1008   000068                     read_prec_or_width@ap:
  1009                           	callstack 0
  1010   000068                     ___lmul@product:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x8
  1014   000068                     	ds	1
  1015   000069                     fputs@s:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x9
  1019   000069                     	ds	1
  1020   00006A                     ??_read_prec_or_width:
  1021                           
  1022                           ; 1 bytes @ 0xA
  1023   00006A                     	ds	1
  1024   00006B                     fputs@fp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xB
  1028   00006B                     	ds	1
  1029   00006C                     ?___lldiv:
  1030                           	callstack 0
  1031   00006C                     read_prec_or_width@c:
  1032                           	callstack 0
  1033   00006C                     ___lldiv@dividend:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0xC
  1037   00006C                     	ds	1
  1038   00006D                     fputs@c:
  1039                           	callstack 0
  1040   00006D                     read_prec_or_width@n:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xD
  1044   00006D                     	ds	1
  1045   00006E                     fputs@i:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xE
  1049   00006E                     	ds	2
  1050   000070                     pad@fp:
  1051                           	callstack 0
  1052   000070                     ___lldiv@divisor:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x10
  1056   000070                     	ds	2
  1057   000072                     pad@buf:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x12
  1061   000072                     	ds	2
  1062   000074                     pad@p:
  1063                           	callstack 0
  1064   000074                     ___lldiv@quotient:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x14
  1068   000074                     	ds	2
  1069   000076                     ??_pad:
  1070                           
  1071                           ; 1 bytes @ 0x16
  1072   000076                     	ds	1
  1073   000077                     pad@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x17
  1077   000077                     	ds	1
  1078   000078                     ___lldiv@counter:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x18
  1082   000078                     	ds	1
  1083   000079                     ?_measure_current:
  1084                           	callstack 0
  1085   000079                     ?_measure_voltage:
  1086                           	callstack 0
  1087   000079                     measure_current@offset:
  1088                           	callstack 0
  1089   000079                     pad@w:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x19
  1093   000079                     	ds	2
  1094   00007B                     ??_measure_current:
  1095   00007B                     ??_measure_voltage:
  1096   00007B                     dtoa@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x1B
  1100   00007B                     	ds	1
  1101   00007C                     measure_voltage@result:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x1C
  1105   00007C                     	ds	1
  1106   00007D                     dtoa@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x1D
  1110   00007D                     	ds	2
  1111   00007F                     measure_current@i:
  1112                           	callstack 0
  1113   00007F                     _dtoa$1718:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x1F
  1117   00007F                     	ds	1
  1118   000080                     measure_voltage@i:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x20
  1122   000080                     	ds	1
  1123   000081                     dtoa@p:
  1124                           	callstack 0
  1125   000081                     measure_current@result:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x21
  1129   000081                     	ds	2
  1130   000083                     dtoa@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x23
  1134   000083                     	ds	2
  1135   000085                     dtoa@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x25
  1139   000085                     	ds	1
  1140   000086                     dtoa@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x26
  1144   000086                     	ds	2
  1145   000088                     vfpfcnvrt@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x28
  1149   000088                     	ds	2
  1150   00008A                     vfpfcnvrt@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154   00008A                     	ds	2
  1155   00008C                     vfpfcnvrt@ap:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2C
  1159   00008C                     	ds	2
  1160   00008E                     ??_vfpfcnvrt:
  1161                           
  1162                           ; 1 bytes @ 0x2E
  1163   00008E                     	ds	2
  1164   000090                     vfpfcnvrt@convarg:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x30
  1168   000090                     	ds	4
  1169   000094                     vfpfcnvrt@done:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x34
  1173   000094                     	ds	2
  1174   000096                     vfpfcnvrt@cp:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x36
  1178   000096                     	ds	2
  1179   000098                     ?_vfprintf:
  1180                           	callstack 0
  1181   000098                     vfprintf@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x38
  1185   000098                     	ds	2
  1186   00009A                     vfprintf@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x3A
  1190   00009A                     	ds	2
  1191   00009C                     vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3C
  1195   00009C                     	ds	2
  1196   00009E                     vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3E
  1200   00009E                     	ds	2
  1201   0000A0                     ?_sprintf:
  1202                           	callstack 0
  1203   0000A0                     sprintf@s:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x40
  1207   0000A0                     	ds	2
  1208   0000A2                     sprintf@fmt:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x42
  1212   0000A2                     	ds	4
  1213   0000A6                     sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x46
  1217   0000A6                     	ds	2
  1218   0000A8                     sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 12 bytes @ 0x48
  1222   0000A8                     	ds	12
  1223   0000B4                     ??_main:
  1224                           
  1225                           ; 1 bytes @ 0x54
  1226   0000B4                     	ds	1
  1227                           
  1228                           	psect	cstackCOMRAM
  1229   000001                     __pcstackCOMRAM:
  1230                           	callstack 0
  1231   000001                     ?_CRC16:
  1232                           	callstack 0
  1233   000001                     EUSART1_Write@txData:
  1234                           	callstack 0
  1235   000001                     modbus_char_recvd@c:
  1236                           	callstack 0
  1237   000001                     CRC16@msg:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241   000001                     	ds	1
  1242   000002                     ??_modbus_send:
  1243                           
  1244                           ; 1 bytes @ 0x1
  1245   000002                     	ds	1
  1246   000003                     CRC16@length:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2
  1250   000003                     	ds	2
  1251   000005                     ??_CRC16:
  1252   000005                     modbus_send@length:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x4
  1256   000005                     	ds	1
  1257   000006                     modbus_send@i_1196:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x5
  1261   000006                     	ds	1
  1262   000007                     CRC16@uIndex:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x6
  1266   000007                     	ds	1
  1267   000008                     CRC16@uchCRCHi:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x7
  1271   000008                     	ds	1
  1272   000009                     CRC16@uchCRCLo:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x8
  1276   000009                     	ds	1
  1277   00000A                     ??_modbus_analyse_and_answer:
  1278                           
  1279                           ; 1 bytes @ 0x9
  1280   00000A                     	ds	4
  1281   00000E                     modbus_analyse_and_answer@crcAtt:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0xD
  1285   00000E                     	ds	2
  1286   000010                     modbus_analyse_and_answer@functionCode:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0xF
  1290   000010                     	ds	1
  1291   000011                     modbus_analyse_and_answer@pwmValue:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x10
  1295   000011                     	ds	2
  1296   000013                     modbus_analyse_and_answer@i_1189:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x12
  1300   000013                     	ds	2
  1301   000015                     modbus_analyse_and_answer@crc:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x14
  1305   000015                     	ds	2
  1306   000017                     modbus_analyse_and_answer@i:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x16
  1310   000017                     	ds	2
  1311   000019                     modbus_analyse_and_answer@startingAddress:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x18
  1315   000019                     	ds	2
  1316   00001B                     modbus_analyse_and_answer@nbofRegister:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x1A
  1320   00001B                     	ds	2
  1321   00001D                     ??_INTERRUPT_InterruptManager:
  1322                           
  1323                           ; 1 bytes @ 0x1C
  1324   00001D                     	ds	12
  1325                           
  1326 ;;
  1327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1328 ;;
  1329 ;; *************** function _main *****************
  1330 ;; Defined at:
  1331 ;;		line 51 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  tempString     20    0[BANK3 ] unsigned char [20]
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         0       1       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:       21 bytes
  1350 ;; Hardware stack levels required when called: 12
  1351 ;; This function calls:
  1352 ;;		_EPWM1_LoadDutyValue
  1353 ;;		_LCD_2x16_WriteMsg
  1354 ;;		_Lcd_Init
  1355 ;;		_SYSTEM_Initialize
  1356 ;;		_measure_current
  1357 ;;		_measure_voltage
  1358 ;;		_sprintf
  1359 ;; This function is called by:
  1360 ;;		Startup code after reset
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text0
  1365   0107F0                     __ptext0:
  1366                           	callstack 0
  1367   0107F0                     _main:
  1368                           	callstack 19
  1369   0107F0                     
  1370                           ;main.c: 54:     SYSTEM_Initialize();
  1371   0107F0  EC9E  F08A         	call	_SYSTEM_Initialize	;wreg free
  1372   0107F4                     
  1373                           ;main.c: 61:     (INTCONbits.GIE = 1);
  1374   0107F4  8EF2               	bsf	242,7,c	;volatile
  1375   0107F6                     
  1376                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  1377   0107F6  8CF2               	bsf	242,6,c	;volatile
  1378   0107F8                     
  1379                           ;main.c: 73:     holding_registers[1] = 0x80;
  1380   0107F8  0E00               	movlw	0
  1381   0107FA  0100               	movlb	0	; () banked
  1382   0107FC  6FC4               	movwf	(_holding_registers+3)& (0+255),b
  1383   0107FE  0E80               	movlw	128
  1384   010800  6FC3               	movwf	(_holding_registers+2)& (0+255),b
  1385   010802                     
  1386                           ; BSR set to: 0
  1387                           ;main.c: 74:     EPWM1_LoadDutyValue(0);
  1388   010802  0E00               	movlw	0
  1389   010804  6F61               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1390   010806  0E00               	movlw	0
  1391   010808  6F60               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1392   01080A  EC5C  F08A         	call	_EPWM1_LoadDutyValue	;wreg free
  1393   01080E                     
  1394                           ;main.c: 78:     char tempString[20];;main.c: 79:     Lcd_Init();
  1395   01080E  EC5F  F089         	call	_Lcd_Init	;wreg free
  1396   010812                     
  1397                           ;main.c: 80:     _delay((unsigned long)((10)*(25000000/4000.0)));
  1398   010812  0E52               	movlw	82
  1399   010814  0100               	movlb	0	; () banked
  1400   010816  6FB4               	movwf	??_main& (0+255),b
  1401   010818  0E29               	movlw	41
  1402   01081A                     u2267:
  1403   01081A  2EE8               	decfsz	wreg,f,c
  1404   01081C  D7FE               	bra	u2267
  1405   01081E  2FB4               	decfsz	??_main& (0+255),f,b
  1406   010820  D7FC               	bra	u2267
  1407   010822  D000               	nop2	
  1408   010824                     
  1409                           ;main.c: 81:     offset = measure_current(0);
  1410   010824  0E00               	movlw	0
  1411   010826  0100               	movlb	0	; () banked
  1412   010828  6F7A               	movwf	(measure_current@offset+1)& (0+255),b
  1413   01082A  0E00               	movlw	0
  1414   01082C  6F79               	movwf	measure_current@offset& (0+255),b
  1415   01082E  EC24  F083         	call	_measure_current	;wreg free
  1416   010832  C079  F0C9         	movff	?_measure_current,_offset
  1417   010836  C07A  F0CA         	movff	?_measure_current+1,_offset+1
  1418   01083A                     l3607:
  1419                           
  1420                           ;main.c: 83:     {;main.c: 84:          input_registers[0] = measure_voltage();
  1421   01083A  ECF9  F085         	call	_measure_voltage	;wreg free
  1422   01083E  C079  F0BD         	movff	?_measure_voltage,_input_registers
  1423   010842  C07A  F0BE         	movff	?_measure_voltage+1,_input_registers+1
  1424   010846                     
  1425                           ;main.c: 85:          input_registers[1] = measure_current(offset);
  1426   010846  C0C9  F079         	movff	_offset,measure_current@offset
  1427   01084A  C0CA  F07A         	movff	_offset+1,measure_current@offset+1
  1428   01084E  EC24  F083         	call	_measure_current	;wreg free
  1429   010852  C079  F0BF         	movff	?_measure_current,_input_registers+2
  1430   010856  C07A  F0C0         	movff	?_measure_current+1,_input_registers+3
  1431   01085A                     
  1432                           ;main.c: 86:          EPWM1_LoadDutyValue(holding_registers[0]);
  1433   01085A  C0C1  F060         	movff	_holding_registers,EPWM1_LoadDutyValue@dutyValue
  1434   01085E  C0C2  F061         	movff	_holding_registers+1,EPWM1_LoadDutyValue@dutyValue+1
  1435   010862  EC5C  F08A         	call	_EPWM1_LoadDutyValue	;wreg free
  1436   010866                     
  1437                           ;main.c: 88:          sprintf(tempString,"U = %03d[mV]",input_registers[0]);
  1438   010866  0E00               	movlw	low main@tempString
  1439   010868  0100               	movlb	0	; () banked
  1440   01086A  6FA0               	movwf	sprintf@s& (0+255),b
  1441   01086C  0E03               	movlw	high main@tempString
  1442   01086E  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1443   010870  0EF2               	movlw	low STR_1
  1444   010872  6FA2               	movwf	sprintf@fmt& (0+255),b
  1445   010874  0EFF               	movlw	high STR_1
  1446   010876  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1447   010878  C0BD  F0A4         	movff	_input_registers,?_sprintf+4
  1448   01087C  C0BE  F0A5         	movff	_input_registers+1,?_sprintf+5
  1449   010880  ECC9  F088         	call	_sprintf	;wreg free
  1450   010884                     
  1451                           ;main.c: 89:          LCD_2x16_WriteMsg(tempString,0);
  1452   010884  0E00               	movlw	low main@tempString
  1453   010886  0100               	movlb	0	; () banked
  1454   010888  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1455   01088A  0E03               	movlw	high main@tempString
  1456   01088C  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1457   01088E  0E00               	movlw	0
  1458   010890  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1459   010892  EC04  F08A         	call	_LCD_2x16_WriteMsg	;wreg free
  1460   010896                     
  1461                           ;main.c: 90:          sprintf(tempString,"I = %04d[uA]",input_registers[1]);
  1462   010896  0E00               	movlw	low main@tempString
  1463   010898  0100               	movlb	0	; () banked
  1464   01089A  6FA0               	movwf	sprintf@s& (0+255),b
  1465   01089C  0E03               	movlw	high main@tempString
  1466   01089E  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1467   0108A0  0EE5               	movlw	low STR_2
  1468   0108A2  6FA2               	movwf	sprintf@fmt& (0+255),b
  1469   0108A4  0EFF               	movlw	high STR_2
  1470   0108A6  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1471   0108A8  C0BF  F0A4         	movff	_input_registers+2,?_sprintf+4
  1472   0108AC  C0C0  F0A5         	movff	_input_registers+3,?_sprintf+5
  1473   0108B0  ECC9  F088         	call	_sprintf	;wreg free
  1474   0108B4                     
  1475                           ;main.c: 91:          LCD_2x16_WriteMsg(tempString,1);
  1476   0108B4  0E00               	movlw	low main@tempString
  1477   0108B6  0100               	movlb	0	; () banked
  1478   0108B8  6F62               	movwf	LCD_2x16_WriteMsg@msg& (0+255),b
  1479   0108BA  0E03               	movlw	high main@tempString
  1480   0108BC  6F63               	movwf	(LCD_2x16_WriteMsg@msg+1)& (0+255),b
  1481   0108BE  0E01               	movlw	1
  1482   0108C0  6F64               	movwf	LCD_2x16_WriteMsg@line& (0+255),b
  1483   0108C2  EC04  F08A         	call	_LCD_2x16_WriteMsg	;wreg free
  1484   0108C6  EF1D  F084         	goto	l3607
  1485   0108CA  EF93  F000         	goto	start
  1486   0108CE                     __end_of_main:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _sprintf *****************
  1490 ;; Defined at:
  1491 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1494 ;;		 -> main@tempString(20), 
  1495 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1496 ;;		 -> STR_2(13), STR_1(13), 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  f              12   72[BANK0 ] struct _IO_FILE
  1499 ;;  ap              2   70[BANK0 ] PTR void [1]
  1500 ;;		 -> ?_sprintf(2), 
  1501 ;;  ret             2    0        int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2   64[BANK0 ] int 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1511 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;Total ram usage:       20 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 11
  1518 ;; This function calls:
  1519 ;;		_vfprintf
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text1
  1526   011192                     __ptext1:
  1527                           	callstack 0
  1528   011192                     _sprintf:
  1529                           	callstack 19
  1530   011192  0EA4               	movlw	low (?_sprintf+4)
  1531   011194  0100               	movlb	0	; () banked
  1532   011196  6FA6               	movwf	sprintf@ap& (0+255),b
  1533   011198  0E00               	movlw	high (?_sprintf+4)
  1534   01119A  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1535   01119C  C0A0  F0A8         	movff	sprintf@s,sprintf@f
  1536   0111A0  C0A1  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1537   0111A4                     
  1538                           ; BSR set to: 0
  1539   0111A4  0E00               	movlw	0
  1540   0111A6  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1541   0111A8  0E00               	movlw	0
  1542   0111AA  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1543   0111AC                     
  1544                           ; BSR set to: 0
  1545   0111AC  0E00               	movlw	0
  1546   0111AE  6FB3               	movwf	(sprintf@f+11)& (0+255),b
  1547   0111B0  0E00               	movlw	0
  1548   0111B2  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1549   0111B4                     
  1550                           ; BSR set to: 0
  1551   0111B4  0EA8               	movlw	low sprintf@f
  1552   0111B6  6F98               	movwf	vfprintf@fp& (0+255),b
  1553   0111B8  0E00               	movlw	high sprintf@f
  1554   0111BA  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1555   0111BC  C0A2  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1556   0111C0  C0A3  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1557   0111C4  0EA6               	movlw	low sprintf@ap
  1558   0111C6  6F9C               	movwf	vfprintf@ap& (0+255),b
  1559   0111C8  0E00               	movlw	high sprintf@ap
  1560   0111CA  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1561   0111CC  EC49  F088         	call	_vfprintf	;wreg free
  1562   0111D0  0100               	movlb	0	; () banked
  1563   0111D2  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1564   0111D4  25A0               	addwf	sprintf@s& (0+255),w,b
  1565   0111D6  6ED9               	movwf	fsr2l,c
  1566   0111D8  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1567   0111DA  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1568   0111DC  6EDA               	movwf	fsr2h,c
  1569   0111DE  6ADF               	clrf	indf2,c
  1570   0111E0                     
  1571                           ; BSR set to: 0
  1572   0111E0  0012               	return		;funcret
  1573   0111E2                     __end_of_sprintf:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _vfprintf *****************
  1577 ;; Defined at:
  1578 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1581 ;;		 -> sprintf@f(12), 
  1582 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1583 ;;		 -> STR_2(13), STR_1(13), 
  1584 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1585 ;;		 -> sprintf@ap(2), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1588 ;;		 -> STR_2(13), STR_1(13), 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2   56[BANK0 ] int 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1598 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;Total ram usage:        8 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 10
  1605 ;; This function calls:
  1606 ;;		_vfpfcnvrt
  1607 ;; This function is called by:
  1608 ;;		_sprintf
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text2
  1613   011092                     __ptext2:
  1614                           	callstack 0
  1615   011092                     _vfprintf:
  1616                           	callstack 19
  1617   011092                     
  1618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1619   011092  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1620   011096  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1623   01109A  EF5E  F088         	goto	l3481
  1624   01109E                     l3479:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1627   01109E  C098  F088         	movff	vfprintf@fp,vfpfcnvrt@fp
  1628   0110A2  C099  F089         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1629   0110A6  0E9E               	movlw	low vfprintf@cfmt
  1630   0110A8  0100               	movlb	0	; () banked
  1631   0110AA  6F8A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1632   0110AC  0E00               	movlw	high vfprintf@cfmt
  1633   0110AE  6F8B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1634   0110B0  C09C  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1635   0110B4  C09D  F08D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1636   0110B8  EC4B  F081         	call	_vfpfcnvrt	;wreg free
  1637   0110BC                     l3481:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1640   0110BC  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1641   0110C0  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1642   0110C4                     	if	0	;tblptru may be non-zero
  1643   0110C4                     	endif
  1644   0110C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1645   0110C4  0E00               	movlw	low (__mediumconst shr (0+16))
  1646   0110C6  6EF8               	movwf	tblptru,c
  1647   0110C8                     	endif
  1648   0110C8  0008               	tblrd		*
  1649   0110CA  50F5               	movf	tablat,w,c
  1650   0110CC  0900               	iorlw	0
  1651   0110CE  A4D8               	btfss	status,2,c
  1652   0110D0  EF6C  F088         	goto	u2191
  1653   0110D4  EF6E  F088         	goto	u2190
  1654   0110D8                     u2191:
  1655   0110D8  EF4F  F088         	goto	l3479
  1656   0110DC                     u2190:
  1657   0110DC                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1659   0110DC  0E00               	movlw	0
  1660   0110DE  0100               	movlb	0	; () banked
  1661   0110E0  6F99               	movwf	(?_vfprintf+1)& (0+255),b
  1662   0110E2  0E00               	movlw	0
  1663   0110E4  6F98               	movwf	?_vfprintf& (0+255),b
  1664   0110E6                     
  1665                           ; BSR set to: 0
  1666   0110E6  0012               	return		;funcret
  1667   0110E8                     __end_of_vfprintf:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _vfpfcnvrt *****************
  1671 ;; Defined at:
  1672 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  1675 ;;		 -> sprintf@f(12), 
  1676 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  1677 ;;		 -> vfprintf@cfmt(2), 
  1678 ;;  ap              2   44[BANK0 ] PTR PTR void 
  1679 ;;		 -> sprintf@ap(2), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  convarg         4   48[BANK0 ] struct .
  1682 ;;  cp              2   54[BANK0 ] PTR unsigned char 
  1683 ;;		 -> STR_2(13), STR_1(13), 
  1684 ;;  done            2   52[BANK0 ] int 
  1685 ;;  i               2    0        int 
  1686 ;;  c               1    0        unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1696 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;Total ram usage:       16 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 9
  1703 ;; This function calls:
  1704 ;;		_dtoa
  1705 ;;		_fputc
  1706 ;;		_read_prec_or_width
  1707 ;; This function is called by:
  1708 ;;		_vfprintf
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text3
  1713   010296                     __ptext3:
  1714                           	callstack 0
  1715   010296                     _vfpfcnvrt:
  1716                           	callstack 19
  1717   010296                     
  1718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1719   010296  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1720   01029A  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1721   01029E  CFDE FFF6          	movff	postinc2,tblptrl
  1722   0102A2  CFDD FFF7          	movff	postdec2,tblptrh
  1723   0102A6                     	if	0	;tblptru may be non-zero
  1724   0102A6                     	endif
  1725   0102A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1726   0102A6  0E00               	movlw	low (__mediumconst shr (0+16))
  1727   0102A8  6EF8               	movwf	tblptru,c
  1728   0102AA                     	endif
  1729   0102AA  0008               	tblrd		*
  1730   0102AC  50F5               	movf	tablat,w,c
  1731   0102AE  0A25               	xorlw	37
  1732   0102B0  A4D8               	btfss	status,2,c
  1733   0102B2  EF5D  F081         	goto	u2081
  1734   0102B6  EF5F  F081         	goto	u2080
  1735   0102BA                     u2081:
  1736   0102BA  EF24  F082         	goto	l3313
  1737   0102BE                     u2080:
  1738   0102BE                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1740   0102BE  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741   0102C2  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742   0102C6  2ADE               	incf	postinc2,f,c
  1743   0102C8  0E00               	movlw	0
  1744   0102CA  22DD               	addwfc	postdec2,f,c
  1745   0102CC                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1747   0102CC  0E00               	movlw	0
  1748   0102CE  0100               	movlb	0	; () banked
  1749   0102D0  6FC6               	movwf	(_width+1)& (0+255),b
  1750   0102D2  0E00               	movlw	0
  1751   0102D4  6FC5               	movwf	_width& (0+255),b
  1752   0102D6  C0C5  F0CB         	movff	_width,_flags
  1753   0102DA                     
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1756   0102DA  69C7               	setf	_prec& (0+255),b
  1757   0102DC  69C8               	setf	(_prec+1)& (0+255),b
  1758   0102DE                     
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1761   0102DE  0E00               	movlw	0
  1762   0102E0  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1763   0102E2  0E00               	movlw	0
  1764   0102E4  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1767   0102E6  EFA1  F081         	goto	l3289
  1768   0102EA                     l3279:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1772   0102EA  83CB               	bsf	_flags& (0+255),1,b
  1773   0102EC                     
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1776   0102EC  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777   0102F0  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778   0102F4  2ADE               	incf	postinc2,f,c
  1779   0102F6  0E00               	movlw	0
  1780   0102F8  22DD               	addwfc	postdec2,f,c
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1783   0102FA  EFA1  F081         	goto	l3289
  1784   0102FE                     l3283:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1788   0102FE  0E00               	movlw	0
  1789   010300  6F95               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1790   010302  0E01               	movlw	1
  1791   010304  6F94               	movwf	vfpfcnvrt@done& (0+255),b
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1794   010306  EFA1  F081         	goto	l3289
  1795   01030A                     l3287:
  1796                           
  1797                           ; BSR set to: 0
  1798   01030A  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799   01030E  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800   010312  CFDE FFF6          	movff	postinc2,tblptrl
  1801   010316  CFDD FFF7          	movff	postdec2,tblptrh
  1802   01031A                     	if	0	;tblptru may be non-zero
  1803   01031A                     	endif
  1804   01031A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1805   01031A  0E00               	movlw	low (__mediumconst shr (0+16))
  1806   01031C  6EF8               	movwf	tblptru,c
  1807   01031E                     	endif
  1808   01031E  0008               	tblrd		*
  1809   010320  50F5               	movf	tablat,w,c
  1810   010322  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1811   010324  6B8F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ;	Chosen strategy is simple_byte
  1820   010326  518F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1821   010328  0A00               	xorlw	0	; case 0
  1822   01032A  B4D8               	btfsc	status,2,c
  1823   01032C  EF9A  F081         	goto	l3671
  1824   010330  EF7F  F081         	goto	l3283
  1825   010334                     l3671:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ; Switch size 1, requested type "simple"
  1829                           ; Number of cases is 1, Range of values is 48 to 48
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte            4     3 (average)
  1833                           ;	Chosen strategy is simple_byte
  1834   010334  518E               	movf	??_vfpfcnvrt& (0+255),w,b
  1835   010336  0A30               	xorlw	48	; case 48
  1836   010338  B4D8               	btfsc	status,2,c
  1837   01033A  EF75  F081         	goto	l3279
  1838   01033E  EF7F  F081         	goto	l3283
  1839   010342                     l3289:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1843   010342  5194               	movf	vfpfcnvrt@done& (0+255),w,b
  1844   010344  1195               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1845   010346  B4D8               	btfsc	status,2,c
  1846   010348  EFA8  F081         	goto	u2091
  1847   01034C  EFAA  F081         	goto	u2090
  1848   010350                     u2091:
  1849   010350  EF85  F081         	goto	l3287
  1850   010354                     u2090:
  1851   010354                     
  1852                           ; BSR set to: 0
  1853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1854   010354  C08A  F066         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1855   010358  C08B  F067         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1856   01035C  C08C  F068         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1857   010360  C08D  F069         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1858   010364  EC67  F084         	call	_read_prec_or_width	;wreg free
  1859   010368  C066  F0C5         	movff	?_read_prec_or_width,_width
  1860   01036C  C067  F0C6         	movff	?_read_prec_or_width+1,_width+1
  1861   010370                     
  1862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1863   010370  0100               	movlb	0	; () banked
  1864   010372  BFC6               	btfsc	(_width+1)& (0+255),7,b
  1865   010374  EFC0  F081         	goto	u2100
  1866   010378  EFBE  F081         	goto	u2101
  1867   01037C                     u2101:
  1868   01037C  EFC5  F081         	goto	l3297
  1869   010380                     u2100:
  1870   010380                     
  1871                           ; BSR set to: 0
  1872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1873   010380  81CB               	bsf	_flags& (0+255),0,b
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1876   010382  6DC5               	negf	_width& (0+255),b
  1877   010384  1FC6               	comf	(_width+1)& (0+255),f,b
  1878   010386  B0D8               	btfsc	status,0,c
  1879   010388  2BC6               	incf	(_width+1)& (0+255),f,b
  1880   01038A                     l3297:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1884   01038A  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885   01038E  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886   010392  CFDE F096          	movff	postinc2,vfpfcnvrt@cp
  1887   010396  CFDD F097          	movff	postdec2,vfpfcnvrt@cp+1
  1888   01039A                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1891   01039A  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1892   01039E  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1893   0103A2                     	if	0	;tblptru may be non-zero
  1894   0103A2                     	endif
  1895   0103A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1896   0103A2  0E00               	movlw	low (__mediumconst shr (0+16))
  1897   0103A4  6EF8               	movwf	tblptru,c
  1898   0103A6                     	endif
  1899   0103A6  0008               	tblrd		*
  1900   0103A8  50F5               	movf	tablat,w,c
  1901   0103AA  0A64               	xorlw	100
  1902   0103AC  B4D8               	btfsc	status,2,c
  1903   0103AE  EFDB  F081         	goto	u2111
  1904   0103B2  EFDD  F081         	goto	u2110
  1905   0103B6                     u2111:
  1906   0103B6  EFED  F081         	goto	l3303
  1907   0103BA                     u2110:
  1908   0103BA                     
  1909                           ; BSR set to: 0
  1910   0103BA  C096  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1911   0103BE  C097  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1912   0103C2                     	if	0	;tblptru may be non-zero
  1913   0103C2                     	endif
  1914   0103C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1915   0103C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1916   0103C4  6EF8               	movwf	tblptru,c
  1917   0103C6                     	endif
  1918   0103C6  0008               	tblrd		*
  1919   0103C8  50F5               	movf	tablat,w,c
  1920   0103CA  0A69               	xorlw	105
  1921   0103CC  A4D8               	btfss	status,2,c
  1922   0103CE  EFEB  F081         	goto	u2121
  1923   0103D2  EFED  F081         	goto	u2120
  1924   0103D6                     u2121:
  1925   0103D6  EF1B  F082         	goto	l3309
  1926   0103DA                     u2120:
  1927   0103DA                     l3303:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1931   0103DA  C08C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1932   0103DE  C08D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1933   0103E2  CFDF F08E          	movff	indf2,??_vfpfcnvrt
  1934   0103E6  0E02               	movlw	2
  1935   0103E8  26DE               	addwf	postinc2,f,c
  1936   0103EA  CFDF F08F          	movff	indf2,??_vfpfcnvrt+1
  1937   0103EE  0E00               	movlw	0
  1938   0103F0  22DD               	addwfc	postdec2,f,c
  1939   0103F2  C08E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1940   0103F6  C08F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1941   0103FA  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  1942   0103FE  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1945   010402  0E01               	movlw	1
  1946   010404  2596               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1947   010406  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1948   010408  0E00               	movlw	0
  1949   01040A  2197               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1950   01040C  6F8F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1951   01040E  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952   010412  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953   010416  C08E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1954   01041A  C08F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1955   01041E                     
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1958   01041E  C088  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  1959   010422  C089  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1960   010426  C090  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  1961   01042A  C091  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1962   01042E  EC3C  F082         	call	_dtoa	;wreg free
  1963   010432  EF3B  F082         	goto	l1283
  1964   010436                     l3309:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1967   010436  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1968   01043A  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1969   01043E  2ADE               	incf	postinc2,f,c
  1970   010440  0E00               	movlw	0
  1971   010442  22DD               	addwfc	postdec2,f,c
  1972   010444  EF3B  F082         	goto	l1283
  1973   010448                     l3313:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1976   010448  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1977   01044C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1978   010450  CFDE FFF6          	movff	postinc2,tblptrl
  1979   010454  CFDD FFF7          	movff	postdec2,tblptrh
  1980   010458                     	if	0	;tblptru may be non-zero
  1981   010458                     	endif
  1982   010458                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1983   010458  0E00               	movlw	low (__mediumconst shr (0+16))
  1984   01045A  6EF8               	movwf	tblptru,c
  1985   01045C                     	endif
  1986   01045C  0008               	tblrd		*
  1987   01045E  50F5               	movf	tablat,w,c
  1988   010460  0100               	movlb	0	; () banked
  1989   010462  6F60               	movwf	fputc@c& (0+255),b
  1990   010464  6B61               	clrf	(fputc@c+1)& (0+255),b
  1991   010466  C088  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1992   01046A  C089  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1993   01046E  ECD0  F084         	call	_fputc	;wreg free
  1994   010472  EF1B  F082         	goto	l3309
  1995   010476                     l1283:
  1996   010476  0012               	return		;funcret
  1997   010478                     __end_of_vfpfcnvrt:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _read_prec_or_width *****************
  2001 ;; Defined at:
  2002 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  fmt             2    6[BANK0 ] PTR PTR const unsigned c
  2005 ;;		 -> vfprintf@cfmt(2), 
  2006 ;;  ap              2    8[BANK0 ] PTR PTR void [1]
  2007 ;;		 -> sprintf@ap(2), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  c               1   12[BANK0 ] unsigned char 
  2010 ;;  n               2   13[BANK0 ] int 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2    6[BANK0 ] int 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        9 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 5
  2027 ;; This function calls:
  2028 ;;		___wmul
  2029 ;; This function is called by:
  2030 ;;		_vfpfcnvrt
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text4
  2035   0108CE                     __ptext4:
  2036                           	callstack 0
  2037   0108CE                     _read_prec_or_width:
  2038                           	callstack 22
  2039   0108CE                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2041   0108CE  0E00               	movlw	0
  2042   0108D0  0100               	movlb	0	; () banked
  2043   0108D2  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2044   0108D4  0E00               	movlw	0
  2045   0108D6  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2046   0108D8                     
  2047                           ; BSR set to: 0
  2048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2049   0108D8  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2050   0108DC  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2051   0108E0  CFDE FFF6          	movff	postinc2,tblptrl
  2052   0108E4  CFDD FFF7          	movff	postdec2,tblptrh
  2053   0108E8                     	if	0	;tblptru may be non-zero
  2054   0108E8                     	endif
  2055   0108E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2056   0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
  2057   0108EA  6EF8               	movwf	tblptru,c
  2058   0108EC                     	endif
  2059   0108EC  0008               	tblrd		*
  2060   0108EE  50F5               	movf	tablat,w,c
  2061   0108F0  0A2A               	xorlw	42
  2062   0108F2  A4D8               	btfss	status,2,c
  2063   0108F4  EF7E  F084         	goto	u2061
  2064   0108F8  EF80  F084         	goto	u2060
  2065   0108FC                     u2061:
  2066   0108FC  EFB5  F084         	goto	l3255
  2067   010900                     u2060:
  2068   010900                     
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2071   010900  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2072   010904  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2073   010908  2ADE               	incf	postinc2,f,c
  2074   01090A  0E00               	movlw	0
  2075   01090C  22DD               	addwfc	postdec2,f,c
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2078   01090E  C068  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2079   010912  C069  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2080   010916  CFDF F06A          	movff	indf2,??_read_prec_or_width
  2081   01091A  0E02               	movlw	2
  2082   01091C  26DE               	addwf	postinc2,f,c
  2083   01091E  CFDF F06B          	movff	indf2,??_read_prec_or_width+1
  2084   010922  0E00               	movlw	0
  2085   010924  22DD               	addwfc	postdec2,f,c
  2086   010926  C06A  FFD9         	movff	??_read_prec_or_width,fsr2l
  2087   01092A  C06B  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2088   01092E  CFDE F06D          	movff	postinc2,read_prec_or_width@n
  2089   010932  CFDD F06E          	movff	postdec2,read_prec_or_width@n+1
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2092   010936  EFCB  F084         	goto	l1264
  2093   01093A                     l3251:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2097   01093A  C06D  F060         	movff	read_prec_or_width@n,___wmul@multiplier
  2098   01093E  C06E  F061         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2099   010942  0E00               	movlw	0
  2100   010944  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2101   010946  0E0A               	movlw	10
  2102   010948  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2103   01094A  EC8A  F08A         	call	___wmul	;wreg free
  2104   01094E  0100               	movlb	0	; () banked
  2105   010950  516C               	movf	read_prec_or_width@c& (0+255),w,b
  2106   010952  2560               	addwf	?___wmul& (0+255),w,b
  2107   010954  6F6D               	movwf	read_prec_or_width@n& (0+255),b
  2108   010956  0E00               	movlw	0
  2109   010958  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2110   01095A  6F6E               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2111   01095C                     
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2114   01095C  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2115   010960  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2116   010964  2ADE               	incf	postinc2,f,c
  2117   010966  0E00               	movlw	0
  2118   010968  22DD               	addwfc	postdec2,f,c
  2119   01096A                     l3255:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2123   01096A  C066  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2124   01096E  C067  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2125   010972  CFDE FFF6          	movff	postinc2,tblptrl
  2126   010976  CFDD FFF7          	movff	postdec2,tblptrh
  2127   01097A                     	if	0	;tblptru may be non-zero
  2128   01097A                     	endif
  2129   01097A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2130   01097A  0E00               	movlw	low (__mediumconst shr (0+16))
  2131   01097C  6EF8               	movwf	tblptru,c
  2132   01097E                     	endif
  2133   01097E  0008               	tblrd		*
  2134   010980  50F5               	movf	tablat,w,c
  2135   010982  0FD0               	addlw	208
  2136   010984  6F6C               	movwf	read_prec_or_width@c& (0+255),b
  2137   010986  0E09               	movlw	9
  2138   010988  656C               	cpfsgt	read_prec_or_width@c& (0+255),b
  2139   01098A  EFC9  F084         	goto	u2071
  2140   01098E  EFCB  F084         	goto	u2070
  2141   010992                     u2071:
  2142   010992  EF9D  F084         	goto	l3251
  2143   010996                     u2070:
  2144   010996                     l1264:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2148   010996  C06D  F066         	movff	read_prec_or_width@n,?_read_prec_or_width
  2149   01099A  C06E  F067         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2150   01099E                     
  2151                           ; BSR set to: 0
  2152   01099E  0012               	return		;funcret
  2153   0109A0                     __end_of_read_prec_or_width:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function ___wmul *****************
  2157 ;; Defined at:
  2158 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2161 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  product         2    4[BANK0 ] unsigned int 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  2    0[BANK0 ] unsigned int 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, prodl, prodh
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        6 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 4
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_read_prec_or_width
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text5
  2188   011514                     __ptext5:
  2189                           	callstack 0
  2190   011514                     ___wmul:
  2191                           	callstack 22
  2192   011514  0100               	movlb	0	; () banked
  2193   011516  5160               	movf	___wmul@multiplier& (0+255),w,b
  2194   011518  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2195   01151A  CFF3 F064          	movff	prodl,___wmul@product
  2196   01151E  CFF4 F065          	movff	prodh,___wmul@product+1
  2197   011522  5160               	movf	___wmul@multiplier& (0+255),w,b
  2198   011524  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2199   011526  50F3               	movf	243,w,c
  2200   011528  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2201   01152A  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2202   01152C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2203   01152E  50F3               	movf	243,w,c
  2204   011530  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2205   011532                     
  2206                           ; BSR set to: 0
  2207   011532  C064  F060         	movff	___wmul@product,?___wmul
  2208   011536  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2209   01153A                     
  2210                           ; BSR set to: 0
  2211   01153A  0012               	return		;funcret
  2212   01153C                     __end_of___wmul:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _dtoa *****************
  2216 ;; Defined at:
  2217 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2220 ;;		 -> sprintf@f(12), 
  2221 ;;  d               2   29[BANK0 ] int 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  i               2   38[BANK0 ] int 
  2224 ;;  w               2   35[BANK0 ] int 
  2225 ;;  p               2   33[BANK0 ] int 
  2226 ;;  s               1   37[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;Total ram usage:       13 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 8
  2243 ;; This function calls:
  2244 ;;		___awdiv
  2245 ;;		___awmod
  2246 ;;		_abs
  2247 ;;		_pad
  2248 ;; This function is called by:
  2249 ;;		_vfpfcnvrt
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text6
  2254   010478                     __ptext6:
  2255                           	callstack 0
  2256   010478                     _dtoa:
  2257                           	callstack 19
  2258   010478                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2260   010478  0100               	movlb	0	; () banked
  2261   01047A  BF7E               	btfsc	(dtoa@d+1)& (0+255),7,b
  2262   01047C  EF42  F082         	goto	u1931
  2263   010480  EF45  F082         	goto	u1930
  2264   010484                     u1931:
  2265   010484  0E01               	movlw	1
  2266   010486  EF46  F082         	goto	u1940
  2267   01048A                     u1930:
  2268   01048A  0E00               	movlw	0
  2269   01048C                     u1940:
  2270   01048C  6F85               	movwf	dtoa@s& (0+255),b
  2271   01048E                     
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2274   01048E  5185               	movf	dtoa@s& (0+255),w,b
  2275   010490  B4D8               	btfsc	status,2,c
  2276   010492  EF4D  F082         	goto	u1951
  2277   010496  EF4F  F082         	goto	u1950
  2278   01049A                     u1951:
  2279   01049A  EF53  F082         	goto	l3193
  2280   01049E                     u1950:
  2281   01049E                     
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2284   01049E  6D7D               	negf	dtoa@d& (0+255),b
  2285   0104A0  1F7E               	comf	(dtoa@d+1)& (0+255),f,b
  2286   0104A2  B0D8               	btfsc	status,0,c
  2287   0104A4  2B7E               	incf	(dtoa@d+1)& (0+255),f,b
  2288   0104A6                     l3193:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2292   0104A6  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2293   0104A8  EF58  F082         	goto	u1961
  2294   0104AC  EF5A  F082         	goto	u1960
  2295   0104B0                     u1961:
  2296   0104B0  EF5B  F082         	goto	l3197
  2297   0104B4                     u1960:
  2298   0104B4                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2301   0104B4  93CB               	bcf	_flags& (0+255),1,b
  2302   0104B6                     l3197:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2306   0104B6  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2307   0104B8  EF62  F082         	goto	u1970
  2308   0104BC  EF60  F082         	goto	u1971
  2309   0104C0                     u1971:
  2310   0104C0  EF68  F082         	goto	l1244
  2311   0104C4                     u1970:
  2312   0104C4                     
  2313                           ; BSR set to: 0
  2314   0104C4  0E00               	movlw	0
  2315   0104C6  6F82               	movwf	(dtoa@p+1)& (0+255),b
  2316   0104C8  0E01               	movlw	1
  2317   0104CA  6F81               	movwf	dtoa@p& (0+255),b
  2318   0104CC  EF6C  F082         	goto	l1246
  2319   0104D0                     l1244:
  2320                           
  2321                           ; BSR set to: 0
  2322   0104D0  C0C7  F081         	movff	_prec,dtoa@p
  2323   0104D4  C0C8  F082         	movff	_prec+1,dtoa@p+1
  2324   0104D8                     l1246:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2328   0104D8  C0C5  F083         	movff	_width,dtoa@w
  2329   0104DC  C0C6  F084         	movff	_width+1,dtoa@w+1
  2330   0104E0                     
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2333   0104E0  5185               	movf	dtoa@s& (0+255),w,b
  2334   0104E2  B4D8               	btfsc	status,2,c
  2335   0104E4  EF76  F082         	goto	u1981
  2336   0104E8  EF78  F082         	goto	u1980
  2337   0104EC                     u1981:
  2338   0104EC  EF8F  F082         	goto	l1247
  2339   0104F0                     u1980:
  2340   0104F0                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2343   0104F0  0783               	decf	dtoa@w& (0+255),f,b
  2344   0104F2  A0D8               	btfss	status,0,c
  2345   0104F4  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2346   0104F6                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2349   0104F6  5185               	movf	dtoa@s& (0+255),w,b
  2350   0104F8  A4D8               	btfss	status,2,c
  2351   0104FA  EF81  F082         	goto	u1991
  2352   0104FE  EF83  F082         	goto	u1990
  2353   010502                     u1991:
  2354   010502  EF89  F082         	goto	l3209
  2355   010506                     u1990:
  2356   010506                     
  2357                           ; BSR set to: 0
  2358   010506  0E00               	movlw	0
  2359   010508  6F80               	movwf	(_dtoa$1718+1)& (0+255),b
  2360   01050A  0E2B               	movlw	43
  2361   01050C  6F7F               	movwf	_dtoa$1718& (0+255),b
  2362   01050E  EF8D  F082         	goto	l3211
  2363   010512                     l3209:
  2364                           
  2365                           ; BSR set to: 0
  2366   010512  0E00               	movlw	0
  2367   010514  6F80               	movwf	(_dtoa$1718+1)& (0+255),b
  2368   010516  0E2D               	movlw	45
  2369   010518  6F7F               	movwf	_dtoa$1718& (0+255),b
  2370   01051A                     l3211:
  2371                           
  2372                           ; BSR set to: 0
  2373   01051A  C07F  F085         	movff	_dtoa$1718,dtoa@s
  2374   01051E                     l1247:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2378   01051E  0E00               	movlw	0
  2379   010520  6F87               	movwf	(dtoa@i+1)& (0+255),b
  2380   010522  0E1F               	movlw	31
  2381   010524  6F86               	movwf	dtoa@i& (0+255),b
  2382   010526                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2385   010526  0E00               	movlw	0
  2386   010528  6FEB               	movwf	(_dbuf+31)& (0+255),b
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2389   01052A  EFC8  F082         	goto	l3225
  2390   01052E                     l3215:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2394   01052E  0786               	decf	dtoa@i& (0+255),f,b
  2395   010530  A0D8               	btfss	status,0,c
  2396   010532  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2397   010534                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2400   010534  0ECC               	movlw	low _dbuf
  2401   010536  2586               	addwf	dtoa@i& (0+255),w,b
  2402   010538  6ED9               	movwf	fsr2l,c
  2403   01053A  0E00               	movlw	high _dbuf
  2404   01053C  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2405   01053E  6EDA               	movwf	fsr2h,c
  2406   010540  C07D  F060         	movff	dtoa@d,___awmod@dividend
  2407   010544  C07E  F061         	movff	dtoa@d+1,___awmod@dividend+1
  2408   010548  0E00               	movlw	0
  2409   01054A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2410   01054C  0E0A               	movlw	10
  2411   01054E  6F62               	movwf	___awmod@divisor& (0+255),b
  2412   010550  EC56  F086         	call	___awmod	;wreg free
  2413   010554  C060  F066         	movff	?___awmod,abs@a
  2414   010558  C061  F067         	movff	?___awmod+1,abs@a+1
  2415   01055C  EC83  F089         	call	_abs	;wreg free
  2416   010560  0100               	movlb	0	; () banked
  2417   010562  5166               	movf	?_abs& (0+255),w,b
  2418   010564  0F30               	addlw	48
  2419   010566  6EDF               	movwf	indf2,c
  2420   010568                     
  2421                           ; BSR set to: 0
  2422                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2423   010568  0781               	decf	dtoa@p& (0+255),f,b
  2424   01056A  A0D8               	btfss	status,0,c
  2425   01056C  0782               	decf	(dtoa@p+1)& (0+255),f,b
  2426   01056E                     
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2429   01056E  0783               	decf	dtoa@w& (0+255),f,b
  2430   010570  A0D8               	btfss	status,0,c
  2431   010572  0784               	decf	(dtoa@w+1)& (0+255),f,b
  2432   010574                     
  2433                           ; BSR set to: 0
  2434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2435   010574  C07D  F060         	movff	dtoa@d,___awdiv@dividend
  2436   010578  C07E  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  2437   01057C  0E00               	movlw	0
  2438   01057E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2439   010580  0E0A               	movlw	10
  2440   010582  6F62               	movwf	___awdiv@divisor& (0+255),b
  2441   010584  EC36  F085         	call	___awdiv	;wreg free
  2442   010588  C060  F07D         	movff	?___awdiv,dtoa@d
  2443   01058C  C061  F07E         	movff	?___awdiv+1,dtoa@d+1
  2444   010590                     l3225:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2447   010590  0100               	movlb	0	; () banked
  2448   010592  BF87               	btfsc	(dtoa@i+1)& (0+255),7,b
  2449   010594  EFD4  F082         	goto	u2001
  2450   010598  5187               	movf	(dtoa@i+1)& (0+255),w,b
  2451   01059A  E108               	bnz	u2000
  2452   01059C  0586               	decf	dtoa@i& (0+255),w,b
  2453   01059E  A0D8               	btfss	status,0,c
  2454   0105A0  EFD4  F082         	goto	u2001
  2455   0105A4  EFD6  F082         	goto	u2000
  2456   0105A8                     u2001:
  2457   0105A8  EF00  F083         	goto	l3235
  2458   0105AC                     u2000:
  2459   0105AC                     
  2460                           ; BSR set to: 0
  2461   0105AC  517D               	movf	dtoa@d& (0+255),w,b
  2462   0105AE  117E               	iorwf	(dtoa@d+1)& (0+255),w,b
  2463   0105B0  A4D8               	btfss	status,2,c
  2464   0105B2  EFDD  F082         	goto	u2011
  2465   0105B6  EFDF  F082         	goto	u2010
  2466   0105BA                     u2011:
  2467   0105BA  EF97  F082         	goto	l3215
  2468   0105BE                     u2010:
  2469   0105BE                     
  2470                           ; BSR set to: 0
  2471   0105BE  BF82               	btfsc	(dtoa@p+1)& (0+255),7,b
  2472   0105C0  EFEC  F082         	goto	u2020
  2473   0105C4  5182               	movf	(dtoa@p+1)& (0+255),w,b
  2474   0105C6  E106               	bnz	u2021
  2475   0105C8  0581               	decf	dtoa@p& (0+255),w,b
  2476   0105CA  B0D8               	btfsc	status,0,c
  2477   0105CC  EFEA  F082         	goto	u2021
  2478   0105D0  EFEC  F082         	goto	u2020
  2479   0105D4                     u2021:
  2480   0105D4  EF97  F082         	goto	l3215
  2481   0105D8                     u2020:
  2482   0105D8                     
  2483                           ; BSR set to: 0
  2484   0105D8  BF84               	btfsc	(dtoa@w+1)& (0+255),7,b
  2485   0105DA  EFF7  F082         	goto	u2031
  2486   0105DE  5184               	movf	(dtoa@w+1)& (0+255),w,b
  2487   0105E0  E108               	bnz	u2030
  2488   0105E2  0583               	decf	dtoa@w& (0+255),w,b
  2489   0105E4  A0D8               	btfss	status,0,c
  2490   0105E6  EFF7  F082         	goto	u2031
  2491   0105EA  EFF9  F082         	goto	u2030
  2492   0105EE                     u2031:
  2493   0105EE  EF00  F083         	goto	l3235
  2494   0105F2                     u2030:
  2495   0105F2                     
  2496                           ; BSR set to: 0
  2497   0105F2  B3CB               	btfsc	_flags& (0+255),1,b
  2498   0105F4  EFFE  F082         	goto	u2041
  2499   0105F8  EF00  F083         	goto	u2040
  2500   0105FC                     u2041:
  2501   0105FC  EF97  F082         	goto	l3215
  2502   010600                     u2040:
  2503   010600                     l3235:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2507   010600  5185               	movf	dtoa@s& (0+255),w,b
  2508   010602  B4D8               	btfsc	status,2,c
  2509   010604  EF06  F083         	goto	u2051
  2510   010608  EF08  F083         	goto	u2050
  2511   01060C                     u2051:
  2512   01060C  EF13  F083         	goto	l3241
  2513   010610                     u2050:
  2514   010610                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2517   010610  0786               	decf	dtoa@i& (0+255),f,b
  2518   010612  A0D8               	btfss	status,0,c
  2519   010614  0787               	decf	(dtoa@i+1)& (0+255),f,b
  2520   010616                     
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2523   010616  0ECC               	movlw	low _dbuf
  2524   010618  2586               	addwf	dtoa@i& (0+255),w,b
  2525   01061A  6ED9               	movwf	fsr2l,c
  2526   01061C  0E00               	movlw	high _dbuf
  2527   01061E  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2528   010620  6EDA               	movwf	fsr2h,c
  2529   010622  C085  FFDF         	movff	dtoa@s,indf2
  2530   010626                     l3241:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2534   010626  C07B  F070         	movff	dtoa@fp,pad@fp
  2535   01062A  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  2536   01062E  0ECC               	movlw	low _dbuf
  2537   010630  2586               	addwf	dtoa@i& (0+255),w,b
  2538   010632  6F72               	movwf	pad@buf& (0+255),b
  2539   010634  0E00               	movlw	high _dbuf
  2540   010636  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  2541   010638  6F73               	movwf	(pad@buf+1)& (0+255),b
  2542   01063A  C083  F074         	movff	dtoa@w,pad@p
  2543   01063E  C084  F075         	movff	dtoa@w+1,pad@p+1
  2544   010642  ECAF  F086         	call	_pad	;wreg free
  2545   010646  0012               	return		;funcret
  2546   010648                     __end_of_dtoa:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _pad *****************
  2550 ;; Defined at:
  2551 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2554 ;;		 -> sprintf@f(12), 
  2555 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2556 ;;		 -> dbuf(32), 
  2557 ;;  p               2   20[BANK0 ] int 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  w               2   25[BANK0 ] int 
  2560 ;;  i               2   23[BANK0 ] int 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:       11 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 7
  2577 ;; This function calls:
  2578 ;;		_fputc
  2579 ;;		_fputs
  2580 ;; This function is called by:
  2581 ;;		_dtoa
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text7
  2586   010D5E                     __ptext7:
  2587                           	callstack 0
  2588   010D5E                     _pad:
  2589                           	callstack 19
  2590   010D5E                     
  2591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2592   010D5E  0100               	movlb	0	; () banked
  2593   010D60  A1CB               	btfss	_flags& (0+255),0,b
  2594   010D62  EFB5  F086         	goto	u1881
  2595   010D66  EFB7  F086         	goto	u1880
  2596   010D6A                     u1881:
  2597   010D6A  EFC1  F086         	goto	l3169
  2598   010D6E                     u1880:
  2599   010D6E                     
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2602   010D6E  C072  F069         	movff	pad@buf,fputs@s
  2603   010D72  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2604   010D76  C070  F06B         	movff	pad@fp,fputs@fp
  2605   010D7A  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2606   010D7E  EC3B  F089         	call	_fputs	;wreg free
  2607   010D82                     l3169:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2610   010D82  0100               	movlb	0	; () banked
  2611   010D84  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2612   010D86  EFC7  F086         	goto	u1891
  2613   010D8A  EFC9  F086         	goto	u1890
  2614   010D8E                     u1891:
  2615   010D8E  EFCF  F086         	goto	l3173
  2616   010D92                     u1890:
  2617   010D92                     
  2618                           ; BSR set to: 0
  2619   010D92  C074  F079         	movff	pad@p,pad@w
  2620   010D96  C075  F07A         	movff	pad@p+1,pad@w+1
  2621   010D9A  EFD3  F086         	goto	l1233
  2622   010D9E                     l3173:
  2623                           
  2624                           ; BSR set to: 0
  2625   010D9E  0E00               	movlw	0
  2626   010DA0  6F7A               	movwf	(pad@w+1)& (0+255),b
  2627   010DA2  0E00               	movlw	0
  2628   010DA4  6F79               	movwf	pad@w& (0+255),b
  2629   010DA6                     l1233:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2633   010DA6  0E00               	movlw	0
  2634   010DA8  6F78               	movwf	(pad@i+1)& (0+255),b
  2635   010DAA  0E00               	movlw	0
  2636   010DAC  6F77               	movwf	pad@i& (0+255),b
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2639   010DAE  EFE6  F086         	goto	l3179
  2640   010DB2                     l3175:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2644   010DB2  0E00               	movlw	0
  2645   010DB4  6F61               	movwf	(fputc@c+1)& (0+255),b
  2646   010DB6  0E20               	movlw	32
  2647   010DB8  6F60               	movwf	fputc@c& (0+255),b
  2648   010DBA  C070  F062         	movff	pad@fp,fputc@fp
  2649   010DBE  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2650   010DC2  ECD0  F084         	call	_fputc	;wreg free
  2651   010DC6                     
  2652                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2653   010DC6  0100               	movlb	0	; () banked
  2654   010DC8  4B77               	infsnz	pad@i& (0+255),f,b
  2655   010DCA  2B78               	incf	(pad@i+1)& (0+255),f,b
  2656   010DCC                     l3179:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2660   010DCC  5179               	movf	pad@w& (0+255),w,b
  2661   010DCE  5D77               	subwf	pad@i& (0+255),w,b
  2662   010DD0  5178               	movf	(pad@i+1)& (0+255),w,b
  2663   010DD2  0A80               	xorlw	128
  2664   010DD4  6F76               	movwf	??_pad& (0+255),b
  2665   010DD6  517A               	movf	(pad@w+1)& (0+255),w,b
  2666   010DD8  0A80               	xorlw	128
  2667   010DDA  5976               	subwfb	??_pad& (0+255),w,b
  2668   010DDC  A0D8               	btfss	status,0,c
  2669   010DDE  EFF3  F086         	goto	u1901
  2670   010DE2  EFF5  F086         	goto	u1900
  2671   010DE6                     u1901:
  2672   010DE6  EFD9  F086         	goto	l3175
  2673   010DEA                     u1900:
  2674   010DEA                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2677   010DEA  B1CB               	btfsc	_flags& (0+255),0,b
  2678   010DEC  EFFA  F086         	goto	u1911
  2679   010DF0  EFFC  F086         	goto	u1910
  2680   010DF4                     u1911:
  2681   010DF4  EF06  F087         	goto	l1238
  2682   010DF8                     u1910:
  2683   010DF8                     
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2686   010DF8  C072  F069         	movff	pad@buf,fputs@s
  2687   010DFC  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2688   010E00  C070  F06B         	movff	pad@fp,fputs@fp
  2689   010E04  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2690   010E08  EC3B  F089         	call	_fputs	;wreg free
  2691   010E0C                     l1238:
  2692   010E0C  0012               	return		;funcret
  2693   010E0E                     __end_of_pad:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _fputs *****************
  2697 ;; Defined at:
  2698 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  2701 ;;		 -> dbuf(32), 
  2702 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2703 ;;		 -> sprintf@f(12), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  i               2   14[BANK0 ] int 
  2706 ;;  c               1   13[BANK0 ] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2    9[BANK0 ] int 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;Total ram usage:        7 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 6
  2723 ;; This function calls:
  2724 ;;		_fputc
  2725 ;; This function is called by:
  2726 ;;		_pad
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text8
  2731   011276                     __ptext8:
  2732                           	callstack 0
  2733   011276                     _fputs:
  2734                           	callstack 19
  2735   011276  0E00               	movlw	0
  2736   011278  0100               	movlb	0	; () banked
  2737   01127A  6F6F               	movwf	(fputs@i+1)& (0+255),b
  2738   01127C  0E00               	movlw	0
  2739   01127E  6F6E               	movwf	fputs@i& (0+255),b
  2740   011280  EF4E  F089         	goto	l3077
  2741   011284                     l3073:
  2742                           
  2743                           ; BSR set to: 0
  2744   011284  C06D  F060         	movff	fputs@c,fputc@c
  2745   011288  6B61               	clrf	(fputc@c+1)& (0+255),b
  2746   01128A  C06B  F062         	movff	fputs@fp,fputc@fp
  2747   01128E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  2748   011292  ECD0  F084         	call	_fputc	;wreg free
  2749   011296  0100               	movlb	0	; () banked
  2750   011298  4B6E               	infsnz	fputs@i& (0+255),f,b
  2751   01129A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  2752   01129C                     l3077:
  2753                           
  2754                           ; BSR set to: 0
  2755   01129C  516E               	movf	fputs@i& (0+255),w,b
  2756   01129E  2569               	addwf	fputs@s& (0+255),w,b
  2757   0112A0  6ED9               	movwf	fsr2l,c
  2758   0112A2  516F               	movf	(fputs@i+1)& (0+255),w,b
  2759   0112A4  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  2760   0112A6  6EDA               	movwf	fsr2h,c
  2761   0112A8  50DF               	movf	indf2,w,c
  2762   0112AA  6F6D               	movwf	fputs@c& (0+255),b
  2763   0112AC  516D               	movf	fputs@c& (0+255),w,b
  2764   0112AE  A4D8               	btfss	status,2,c
  2765   0112B0  EF5C  F089         	goto	u1751
  2766   0112B4  EF5E  F089         	goto	u1750
  2767   0112B8                     u1751:
  2768   0112B8  EF42  F089         	goto	l3073
  2769   0112BC                     u1750:
  2770   0112BC                     
  2771                           ; BSR set to: 0
  2772   0112BC  0012               	return		;funcret
  2773   0112BE                     __end_of_fputs:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _fputc *****************
  2777 ;; Defined at:
  2778 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  c               2    0[BANK0 ] int 
  2781 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2782 ;;		 -> sprintf@f(12), 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  2    0[BANK0 ] int 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        9 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 5
  2801 ;; This function calls:
  2802 ;;		_putch
  2803 ;; This function is called by:
  2804 ;;		_pad
  2805 ;;		_vfpfcnvrt
  2806 ;;		_fputs
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text9
  2811   0109A0                     __ptext9:
  2812                           	callstack 0
  2813   0109A0                     _fputc:
  2814                           	callstack 22
  2815   0109A0  0100               	movlb	0	; () banked
  2816   0109A2  5162               	movf	fputc@fp& (0+255),w,b
  2817   0109A4  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2818   0109A6  B4D8               	btfsc	status,2,c
  2819   0109A8  EFD8  F084         	goto	u1711
  2820   0109AC  EFDA  F084         	goto	u1710
  2821   0109B0                     u1711:
  2822   0109B0  EFE3  F084         	goto	l3061
  2823   0109B4                     u1710:
  2824   0109B4                     
  2825                           ; BSR set to: 0
  2826   0109B4  5162               	movf	fputc@fp& (0+255),w,b
  2827   0109B6  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  2828   0109B8  A4D8               	btfss	status,2,c
  2829   0109BA  EFE1  F084         	goto	u1721
  2830   0109BE  EFE3  F084         	goto	u1720
  2831   0109C2                     u1721:
  2832   0109C2  EFE8  F084         	goto	l3063
  2833   0109C6                     u1720:
  2834   0109C6                     l3061:
  2835                           
  2836                           ; BSR set to: 0
  2837   0109C6  5160               	movf	fputc@c& (0+255),w,b
  2838   0109C8  EC1B  F08B         	call	_putch
  2839   0109CC  EF35  F085         	goto	l1308
  2840   0109D0                     l3063:
  2841                           
  2842                           ; BSR set to: 0
  2843   0109D0  EE20 F00A          	lfsr	2,10
  2844   0109D4  5162               	movf	fputc@fp& (0+255),w,b
  2845   0109D6  26D9               	addwf	fsr2l,f,c
  2846   0109D8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2847   0109DA  22DA               	addwfc	fsr2h,f,c
  2848   0109DC  50DE               	movf	postinc2,w,c
  2849   0109DE  10DE               	iorwf	postinc2,w,c
  2850   0109E0  B4D8               	btfsc	status,2,c
  2851   0109E2  EFF5  F084         	goto	u1731
  2852   0109E6  EFF7  F084         	goto	u1730
  2853   0109EA                     u1731:
  2854   0109EA  EF12  F085         	goto	l3067
  2855   0109EE                     u1730:
  2856   0109EE                     
  2857                           ; BSR set to: 0
  2858   0109EE  EE20 F00A          	lfsr	2,10
  2859   0109F2  5162               	movf	fputc@fp& (0+255),w,b
  2860   0109F4  26D9               	addwf	fsr2l,f,c
  2861   0109F6  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2862   0109F8  22DA               	addwfc	fsr2h,f,c
  2863   0109FA  EE10 F003          	lfsr	1,3
  2864   0109FE  5162               	movf	fputc@fp& (0+255),w,b
  2865   010A00  26E1               	addwf	fsr1l,f,c
  2866   010A02  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2867   010A04  22E2               	addwfc	fsr1h,f,c
  2868   010A06  50DE               	movf	postinc2,w,c
  2869   010A08  5CE6               	subwf	postinc1,w,c
  2870   010A0A  50E6               	movf	postinc1,w,c
  2871   010A0C  0A80               	xorlw	128
  2872   010A0E  6F68               	movwf	(??_fputc+4)& (0+255),b
  2873   010A10  50DE               	movf	postinc2,w,c
  2874   010A12  0A80               	xorlw	128
  2875   010A14  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2876   010A16  B0D8               	btfsc	status,0,c
  2877   010A18  EF10  F085         	goto	u1741
  2878   010A1C  EF12  F085         	goto	u1740
  2879   010A20                     u1741:
  2880   010A20  EF35  F085         	goto	l1308
  2881   010A24                     u1740:
  2882   010A24                     l3067:
  2883                           
  2884                           ; BSR set to: 0
  2885   010A24  EE20 F003          	lfsr	2,3
  2886   010A28  5162               	movf	fputc@fp& (0+255),w,b
  2887   010A2A  26D9               	addwf	fsr2l,f,c
  2888   010A2C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2889   010A2E  22DA               	addwfc	fsr2h,f,c
  2890   010A30  CFDE F064          	movff	postinc2,??_fputc
  2891   010A34  CFDD F065          	movff	postdec2,??_fputc+1
  2892   010A38  C062  FFD9         	movff	fputc@fp,fsr2l
  2893   010A3C  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2894   010A40  CFDE F066          	movff	postinc2,??_fputc+2
  2895   010A44  CFDD F067          	movff	postdec2,??_fputc+3
  2896   010A48  5164               	movf	??_fputc& (0+255),w,b
  2897   010A4A  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2898   010A4C  6ED9               	movwf	fsr2l,c
  2899   010A4E  5165               	movf	(??_fputc+1)& (0+255),w,b
  2900   010A50  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2901   010A52  6EDA               	movwf	fsr2h,c
  2902   010A54  C060  FFDF         	movff	fputc@c,indf2
  2903   010A58  EE20 F003          	lfsr	2,3
  2904   010A5C  5162               	movf	fputc@fp& (0+255),w,b
  2905   010A5E  26D9               	addwf	fsr2l,f,c
  2906   010A60  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2907   010A62  22DA               	addwfc	fsr2h,f,c
  2908   010A64  2ADE               	incf	postinc2,f,c
  2909   010A66  0E00               	movlw	0
  2910   010A68  22DD               	addwfc	postdec2,f,c
  2911   010A6A                     l1308:
  2912   010A6A  0012               	return		;funcret
  2913   010A6C                     __end_of_fputc:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _putch *****************
  2917 ;; Defined at:
  2918 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  c               1    wreg     unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  c               1    0[COMRAM] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 4
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_fputc
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text10
  2947   011636                     __ptext10:
  2948                           	callstack 0
  2949   011636                     _putch:
  2950                           	callstack 22
  2951   011636  0012               	return		;funcret
  2952   011638                     __end_of_putch:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _abs *****************
  2956 ;; Defined at:
  2957 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  a               2    6[BANK0 ] int 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2    6[BANK0 ] int 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        4 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 4
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_dtoa
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text11
  2986   011306                     __ptext11:
  2987                           	callstack 0
  2988   011306                     _abs:
  2989                           	callstack 22
  2990   011306  0100               	movlb	0	; () banked
  2991   011308  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2992   01130A  EF91  F089         	goto	u1920
  2993   01130E  5167               	movf	(abs@a+1)& (0+255),w,b
  2994   011310  E106               	bnz	u1921
  2995   011312  0566               	decf	abs@a& (0+255),w,b
  2996   011314  B0D8               	btfsc	status,0,c
  2997   011316  EF8F  F089         	goto	u1921
  2998   01131A  EF91  F089         	goto	u1920
  2999   01131E                     u1921:
  3000   01131E  EF9F  F089         	goto	l1293
  3001   011322                     u1920:
  3002   011322                     
  3003                           ; BSR set to: 0
  3004   011322  C066  F068         	movff	abs@a,??_abs
  3005   011326  C067  F069         	movff	abs@a+1,??_abs+1
  3006   01132A  1F68               	comf	??_abs& (0+255),f,b
  3007   01132C  1F69               	comf	(??_abs+1)& (0+255),f,b
  3008   01132E  4B68               	infsnz	??_abs& (0+255),f,b
  3009   011330  2B69               	incf	(??_abs+1)& (0+255),f,b
  3010   011332  C068  F066         	movff	??_abs,?_abs
  3011   011336  C069  F067         	movff	??_abs+1,?_abs+1
  3012   01133A  EFA3  F089         	goto	l1296
  3013   01133E                     l1293:
  3014                           
  3015                           ; BSR set to: 0
  3016   01133E  C066  F066         	movff	abs@a,?_abs
  3017   011342  C067  F067         	movff	abs@a+1,?_abs+1
  3018   011346                     l1296:
  3019                           
  3020                           ; BSR set to: 0
  3021   011346  0012               	return		;funcret
  3022   011348                     __end_of_abs:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function ___awmod *****************
  3026 ;; Defined at:
  3027 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  dividend        2    0[BANK0 ] int 
  3030 ;;  divisor         2    2[BANK0 ] int 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  sign            1    5[BANK0 ] unsigned char 
  3033 ;;  counter         1    4[BANK0 ] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2    0[BANK0 ] int 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:        6 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 4
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_dtoa
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text12
  3058   010CAC                     __ptext12:
  3059                           	callstack 0
  3060   010CAC                     ___awmod:
  3061                           	callstack 22
  3062   010CAC  0E00               	movlw	0
  3063   010CAE  0100               	movlb	0	; () banked
  3064   010CB0  6F65               	movwf	___awmod@sign& (0+255),b
  3065   010CB2                     
  3066                           ; BSR set to: 0
  3067   010CB2  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3068   010CB4  EF60  F086         	goto	u1820
  3069   010CB8  EF5E  F086         	goto	u1821
  3070   010CBC                     u1821:
  3071   010CBC  EF66  F086         	goto	l3137
  3072   010CC0                     u1820:
  3073   010CC0                     
  3074                           ; BSR set to: 0
  3075   010CC0  6D60               	negf	___awmod@dividend& (0+255),b
  3076   010CC2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3077   010CC4  B0D8               	btfsc	status,0,c
  3078   010CC6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3079   010CC8                     
  3080                           ; BSR set to: 0
  3081   010CC8  0E01               	movlw	1
  3082   010CCA  6F65               	movwf	___awmod@sign& (0+255),b
  3083   010CCC                     l3137:
  3084                           
  3085                           ; BSR set to: 0
  3086   010CCC  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3087   010CCE  EF6D  F086         	goto	u1830
  3088   010CD2  EF6B  F086         	goto	u1831
  3089   010CD6                     u1831:
  3090   010CD6  EF71  F086         	goto	l3141
  3091   010CDA                     u1830:
  3092   010CDA                     
  3093                           ; BSR set to: 0
  3094   010CDA  6D62               	negf	___awmod@divisor& (0+255),b
  3095   010CDC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3096   010CDE  B0D8               	btfsc	status,0,c
  3097   010CE0  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3098   010CE2                     l3141:
  3099                           
  3100                           ; BSR set to: 0
  3101   010CE2  5162               	movf	___awmod@divisor& (0+255),w,b
  3102   010CE4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3103   010CE6  B4D8               	btfsc	status,2,c
  3104   010CE8  EF78  F086         	goto	u1841
  3105   010CEC  EF7A  F086         	goto	u1840
  3106   010CF0                     u1841:
  3107   010CF0  EF9E  F086         	goto	l3157
  3108   010CF4                     u1840:
  3109   010CF4                     
  3110                           ; BSR set to: 0
  3111   010CF4  0E01               	movlw	1
  3112   010CF6  6F64               	movwf	___awmod@counter& (0+255),b
  3113   010CF8  EF82  F086         	goto	l3147
  3114   010CFC                     l3145:
  3115                           
  3116                           ; BSR set to: 0
  3117   010CFC  90D8               	bcf	status,0,c
  3118   010CFE  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3119   010D00  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3120   010D02  2B64               	incf	___awmod@counter& (0+255),f,b
  3121   010D04                     l3147:
  3122                           
  3123                           ; BSR set to: 0
  3124   010D04  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3125   010D06  EF87  F086         	goto	u1851
  3126   010D0A  EF89  F086         	goto	u1850
  3127   010D0E                     u1851:
  3128   010D0E  EF7E  F086         	goto	l3145
  3129   010D12                     u1850:
  3130   010D12                     l3149:
  3131                           
  3132                           ; BSR set to: 0
  3133   010D12  5162               	movf	___awmod@divisor& (0+255),w,b
  3134   010D14  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3135   010D16  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3136   010D18  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3137   010D1A  A0D8               	btfss	status,0,c
  3138   010D1C  EF92  F086         	goto	u1861
  3139   010D20  EF94  F086         	goto	u1860
  3140   010D24                     u1861:
  3141   010D24  EF98  F086         	goto	l3153
  3142   010D28                     u1860:
  3143   010D28                     
  3144                           ; BSR set to: 0
  3145   010D28  5162               	movf	___awmod@divisor& (0+255),w,b
  3146   010D2A  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3147   010D2C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3148   010D2E  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3149   010D30                     l3153:
  3150                           
  3151                           ; BSR set to: 0
  3152   010D30  90D8               	bcf	status,0,c
  3153   010D32  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3154   010D34  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3155   010D36                     
  3156                           ; BSR set to: 0
  3157   010D36  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3158   010D38  EF89  F086         	goto	l3149
  3159   010D3C                     l3157:
  3160                           
  3161                           ; BSR set to: 0
  3162   010D3C  5165               	movf	___awmod@sign& (0+255),w,b
  3163   010D3E  B4D8               	btfsc	status,2,c
  3164   010D40  EFA4  F086         	goto	u1871
  3165   010D44  EFA6  F086         	goto	u1870
  3166   010D48                     u1871:
  3167   010D48  EFAA  F086         	goto	l3161
  3168   010D4C                     u1870:
  3169   010D4C                     
  3170                           ; BSR set to: 0
  3171   010D4C  6D60               	negf	___awmod@dividend& (0+255),b
  3172   010D4E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3173   010D50  B0D8               	btfsc	status,0,c
  3174   010D52  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3175   010D54                     l3161:
  3176                           
  3177                           ; BSR set to: 0
  3178   010D54  C060  F060         	movff	___awmod@dividend,?___awmod
  3179   010D58  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3180   010D5C                     
  3181                           ; BSR set to: 0
  3182   010D5C  0012               	return		;funcret
  3183   010D5E                     __end_of___awmod:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function ___awdiv *****************
  3187 ;; Defined at:
  3188 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  dividend        2    0[BANK0 ] int 
  3191 ;;  divisor         2    2[BANK0 ] int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  quotient        2    6[BANK0 ] int 
  3194 ;;  sign            1    5[BANK0 ] unsigned char 
  3195 ;;  counter         1    4[BANK0 ] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    0[BANK0 ] int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;Total ram usage:        8 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 4
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_dtoa
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text13
  3220   010A6C                     __ptext13:
  3221                           	callstack 0
  3222   010A6C                     ___awdiv:
  3223                           	callstack 22
  3224   010A6C  0E00               	movlw	0
  3225   010A6E  0100               	movlb	0	; () banked
  3226   010A70  6F65               	movwf	___awdiv@sign& (0+255),b
  3227   010A72                     
  3228                           ; BSR set to: 0
  3229   010A72  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3230   010A74  EF40  F085         	goto	u1760
  3231   010A78  EF3E  F085         	goto	u1761
  3232   010A7C                     u1761:
  3233   010A7C  EF46  F085         	goto	l3093
  3234   010A80                     u1760:
  3235   010A80                     
  3236                           ; BSR set to: 0
  3237   010A80  6D62               	negf	___awdiv@divisor& (0+255),b
  3238   010A82  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3239   010A84  B0D8               	btfsc	status,0,c
  3240   010A86  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3241   010A88                     
  3242                           ; BSR set to: 0
  3243   010A88  0E01               	movlw	1
  3244   010A8A  6F65               	movwf	___awdiv@sign& (0+255),b
  3245   010A8C                     l3093:
  3246                           
  3247                           ; BSR set to: 0
  3248   010A8C  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3249   010A8E  EF4D  F085         	goto	u1770
  3250   010A92  EF4B  F085         	goto	u1771
  3251   010A96                     u1771:
  3252   010A96  EF53  F085         	goto	l3099
  3253   010A9A                     u1770:
  3254   010A9A                     
  3255                           ; BSR set to: 0
  3256   010A9A  6D60               	negf	___awdiv@dividend& (0+255),b
  3257   010A9C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3258   010A9E  B0D8               	btfsc	status,0,c
  3259   010AA0  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3260   010AA2                     
  3261                           ; BSR set to: 0
  3262   010AA2  0E01               	movlw	1
  3263   010AA4  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3264   010AA6                     l3099:
  3265                           
  3266                           ; BSR set to: 0
  3267   010AA6  0E00               	movlw	0
  3268   010AA8  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3269   010AAA  0E00               	movlw	0
  3270   010AAC  6F66               	movwf	___awdiv@quotient& (0+255),b
  3271   010AAE                     
  3272                           ; BSR set to: 0
  3273   010AAE  5162               	movf	___awdiv@divisor& (0+255),w,b
  3274   010AB0  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3275   010AB2  B4D8               	btfsc	status,2,c
  3276   010AB4  EF5E  F085         	goto	u1781
  3277   010AB8  EF60  F085         	goto	u1780
  3278   010ABC                     u1781:
  3279   010ABC  EF88  F085         	goto	l3121
  3280   010AC0                     u1780:
  3281   010AC0                     
  3282                           ; BSR set to: 0
  3283   010AC0  0E01               	movlw	1
  3284   010AC2  6F64               	movwf	___awdiv@counter& (0+255),b
  3285   010AC4  EF68  F085         	goto	l3107
  3286   010AC8                     l3105:
  3287                           
  3288                           ; BSR set to: 0
  3289   010AC8  90D8               	bcf	status,0,c
  3290   010ACA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3291   010ACC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3292   010ACE  2B64               	incf	___awdiv@counter& (0+255),f,b
  3293   010AD0                     l3107:
  3294                           
  3295                           ; BSR set to: 0
  3296   010AD0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3297   010AD2  EF6D  F085         	goto	u1791
  3298   010AD6  EF6F  F085         	goto	u1790
  3299   010ADA                     u1791:
  3300   010ADA  EF64  F085         	goto	l3105
  3301   010ADE                     u1790:
  3302   010ADE                     l3109:
  3303                           
  3304                           ; BSR set to: 0
  3305   010ADE  90D8               	bcf	status,0,c
  3306   010AE0  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3307   010AE2  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3308   010AE4                     
  3309                           ; BSR set to: 0
  3310   010AE4  5162               	movf	___awdiv@divisor& (0+255),w,b
  3311   010AE6  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3312   010AE8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3313   010AEA  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3314   010AEC  A0D8               	btfss	status,0,c
  3315   010AEE  EF7B  F085         	goto	u1801
  3316   010AF2  EF7D  F085         	goto	u1800
  3317   010AF6                     u1801:
  3318   010AF6  EF82  F085         	goto	l3117
  3319   010AFA                     u1800:
  3320   010AFA                     
  3321                           ; BSR set to: 0
  3322   010AFA  5162               	movf	___awdiv@divisor& (0+255),w,b
  3323   010AFC  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3324   010AFE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3325   010B00  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3326   010B02                     
  3327                           ; BSR set to: 0
  3328   010B02  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3329   010B04                     l3117:
  3330                           
  3331                           ; BSR set to: 0
  3332   010B04  90D8               	bcf	status,0,c
  3333   010B06  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3334   010B08  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3335   010B0A                     
  3336                           ; BSR set to: 0
  3337   010B0A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3338   010B0C  EF6F  F085         	goto	l3109
  3339   010B10                     l3121:
  3340                           
  3341                           ; BSR set to: 0
  3342   010B10  5165               	movf	___awdiv@sign& (0+255),w,b
  3343   010B12  B4D8               	btfsc	status,2,c
  3344   010B14  EF8E  F085         	goto	u1811
  3345   010B18  EF90  F085         	goto	u1810
  3346   010B1C                     u1811:
  3347   010B1C  EF94  F085         	goto	l3125
  3348   010B20                     u1810:
  3349   010B20                     
  3350                           ; BSR set to: 0
  3351   010B20  6D66               	negf	___awdiv@quotient& (0+255),b
  3352   010B22  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3353   010B24  B0D8               	btfsc	status,0,c
  3354   010B26  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3355   010B28                     l3125:
  3356                           
  3357                           ; BSR set to: 0
  3358   010B28  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3359   010B2C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3360   010B30                     
  3361                           ; BSR set to: 0
  3362   010B30  0012               	return		;funcret
  3363   010B32                     __end_of___awdiv:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _measure_voltage *****************
  3367 ;; Defined at:
  3368 ;;		line 37 in file "measure.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  i               2   32[BANK0 ] int 
  3373 ;;  result          4   28[BANK0 ] unsigned long 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  2   25[BANK0 ] unsigned short 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:        9 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 5
  3390 ;; This function calls:
  3391 ;;		_ADC_GetConversion
  3392 ;;		___lldiv
  3393 ;;		___lmul
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text14
  3400   010BF2                     __ptext14:
  3401                           	callstack 0
  3402   010BF2                     _measure_voltage:
  3403                           	callstack 25
  3404   010BF2                     
  3405                           ;measure.c: 41:         uint32_t result = 0;
  3406   010BF2  0E00               	movlw	0
  3407   010BF4  0100               	movlb	0	; () banked
  3408   010BF6  6F7C               	movwf	measure_voltage@result& (0+255),b
  3409   010BF8  0E00               	movlw	0
  3410   010BFA  6F7D               	movwf	(measure_voltage@result+1)& (0+255),b
  3411   010BFC  0E00               	movlw	0
  3412   010BFE  6F7E               	movwf	(measure_voltage@result+2)& (0+255),b
  3413   010C00  0E00               	movlw	0
  3414   010C02  6F7F               	movwf	(measure_voltage@result+3)& (0+255),b
  3415                           
  3416                           ;measure.c: 43:         for(int i = 0;i < 8;i++)
  3417   010C04  0E00               	movlw	0
  3418   010C06  6F81               	movwf	(measure_voltage@i+1)& (0+255),b
  3419   010C08  0E00               	movlw	0
  3420   010C0A  6F80               	movwf	measure_voltage@i& (0+255),b
  3421   010C0C                     l3567:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;measure.c: 44:         {;measure.c: 45:             result += ADC_GetConversion(VOLTAGE
      +                          );
  3425   010C0C  0E05               	movlw	5
  3426   010C0E  ECA4  F089         	call	_ADC_GetConversion
  3427   010C12  0100               	movlb	0	; () banked
  3428   010C14  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3429   010C16  277C               	addwf	measure_voltage@result& (0+255),f,b
  3430   010C18  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3431   010C1A  237D               	addwfc	(measure_voltage@result+1)& (0+255),f,b
  3432   010C1C  0E00               	movlw	0
  3433   010C1E  237E               	addwfc	(measure_voltage@result+2)& (0+255),f,b
  3434   010C20  0E00               	movlw	0
  3435   010C22  237F               	addwfc	(measure_voltage@result+3)& (0+255),f,b
  3436   010C24                     
  3437                           ; BSR set to: 0
  3438                           ;measure.c: 46:         }
  3439   010C24  4B80               	infsnz	measure_voltage@i& (0+255),f,b
  3440   010C26  2B81               	incf	(measure_voltage@i+1)& (0+255),f,b
  3441   010C28                     
  3442                           ; BSR set to: 0
  3443   010C28  BF81               	btfsc	(measure_voltage@i+1)& (0+255),7,b
  3444   010C2A  EF20  F086         	goto	u2241
  3445   010C2E  5181               	movf	(measure_voltage@i+1)& (0+255),w,b
  3446   010C30  E109               	bnz	u2240
  3447   010C32  0E08               	movlw	8
  3448   010C34  5D80               	subwf	measure_voltage@i& (0+255),w,b
  3449   010C36  A0D8               	btfss	status,0,c
  3450   010C38  EF20  F086         	goto	u2241
  3451   010C3C  EF22  F086         	goto	u2240
  3452   010C40                     u2241:
  3453   010C40  EF06  F086         	goto	l3567
  3454   010C44                     u2240:
  3455   010C44                     
  3456                           ; BSR set to: 0
  3457                           ;measure.c: 47:         result/= 8;
  3458   010C44  0E03               	movlw	3
  3459   010C46  6F7B               	movwf	??_measure_voltage& (0+255),b
  3460   010C48                     u2255:
  3461   010C48  90D8               	bcf	status,0,c
  3462   010C4A  337F               	rrcf	(measure_voltage@result+3)& (0+255),f,b
  3463   010C4C  337E               	rrcf	(measure_voltage@result+2)& (0+255),f,b
  3464   010C4E  337D               	rrcf	(measure_voltage@result+1)& (0+255),f,b
  3465   010C50  337C               	rrcf	measure_voltage@result& (0+255),f,b
  3466   010C52  2F7B               	decfsz	??_measure_voltage& (0+255),f,b
  3467   010C54  EF24  F086         	goto	u2255
  3468   010C58                     
  3469                           ; BSR set to: 0
  3470                           ;measure.c: 49:         return (result*3300)/(1024 - 1);
  3471   010C58  C07C  F060         	movff	measure_voltage@result,___lmul@multiplier
  3472   010C5C  C07D  F061         	movff	measure_voltage@result+1,___lmul@multiplier+1
  3473   010C60  C07E  F062         	movff	measure_voltage@result+2,___lmul@multiplier+2
  3474   010C64  C07F  F063         	movff	measure_voltage@result+3,___lmul@multiplier+3
  3475   010C68  0EE4               	movlw	228
  3476   010C6A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3477   010C6C  0E0C               	movlw	12
  3478   010C6E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3479   010C70  0E00               	movlw	0
  3480   010C72  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3481   010C74  0E00               	movlw	0
  3482   010C76  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3483   010C78  ECE2  F087         	call	___lmul	;wreg free
  3484   010C7C  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3485   010C80  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3486   010C84  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3487   010C88  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3488   010C8C  0EFF               	movlw	255
  3489   010C8E  0100               	movlb	0	; () banked
  3490   010C90  6F70               	movwf	___lldiv@divisor& (0+255),b
  3491   010C92  0E03               	movlw	3
  3492   010C94  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3493   010C96  0E00               	movlw	0
  3494   010C98  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3495   010C9A  0E00               	movlw	0
  3496   010C9C  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3497   010C9E  EC07  F087         	call	___lldiv	;wreg free
  3498   010CA2  C06C  F079         	movff	?___lldiv,?_measure_voltage
  3499   010CA6  C06D  F07A         	movff	?___lldiv+1,?_measure_voltage+1
  3500   010CAA  0012               	return		;funcret
  3501   010CAC                     __end_of_measure_voltage:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _measure_current *****************
  3505 ;; Defined at:
  3506 ;;		line 52 in file "measure.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  offset          2   25[BANK0 ] unsigned short 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  i               2   31[BANK0 ] int 
  3511 ;;  result          4   33[BANK0 ] unsigned long 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   25[BANK0 ] unsigned short 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:       12 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 5
  3528 ;; This function calls:
  3529 ;;		_ADC_GetConversion
  3530 ;;		___lldiv
  3531 ;;		___lmul
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text15
  3538   010648                     __ptext15:
  3539                           	callstack 0
  3540   010648                     _measure_current:
  3541                           	callstack 25
  3542   010648                     
  3543                           ;measure.c: 52: uint16_t measure_current(uint16_t offset);measure.c: 53: {;measure.c: 55
      +                          :     uint32_t result = 0;
  3544   010648  0E00               	movlw	0
  3545   01064A  0100               	movlb	0	; () banked
  3546   01064C  6F81               	movwf	measure_current@result& (0+255),b
  3547   01064E  0E00               	movlw	0
  3548   010650  6F82               	movwf	(measure_current@result+1)& (0+255),b
  3549   010652  0E00               	movlw	0
  3550   010654  6F83               	movwf	(measure_current@result+2)& (0+255),b
  3551   010656  0E00               	movlw	0
  3552   010658  6F84               	movwf	(measure_current@result+3)& (0+255),b
  3553                           
  3554                           ;measure.c: 57:             for(int i = 0;i < 8;i++)
  3555   01065A  0E00               	movlw	0
  3556   01065C  6F80               	movwf	(measure_current@i+1)& (0+255),b
  3557   01065E  0E00               	movlw	0
  3558   010660  6F7F               	movwf	measure_current@i& (0+255),b
  3559   010662                     l3537:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;measure.c: 58:         {;measure.c: 59:             result += ADC_GetConversion(CURRENT
      +                          );
  3563   010662  0E06               	movlw	6
  3564   010664  ECA4  F089         	call	_ADC_GetConversion
  3565   010668  0100               	movlb	0	; () banked
  3566   01066A  5160               	movf	?_ADC_GetConversion& (0+255),w,b
  3567   01066C  2781               	addwf	measure_current@result& (0+255),f,b
  3568   01066E  5161               	movf	(?_ADC_GetConversion+1)& (0+255),w,b
  3569   010670  2382               	addwfc	(measure_current@result+1)& (0+255),f,b
  3570   010672  0E00               	movlw	0
  3571   010674  2383               	addwfc	(measure_current@result+2)& (0+255),f,b
  3572   010676  0E00               	movlw	0
  3573   010678  2384               	addwfc	(measure_current@result+3)& (0+255),f,b
  3574   01067A                     
  3575                           ; BSR set to: 0
  3576                           ;measure.c: 60:         }
  3577   01067A  4B7F               	infsnz	measure_current@i& (0+255),f,b
  3578   01067C  2B80               	incf	(measure_current@i+1)& (0+255),f,b
  3579   01067E                     
  3580                           ; BSR set to: 0
  3581   01067E  BF80               	btfsc	(measure_current@i+1)& (0+255),7,b
  3582   010680  EF4B  F083         	goto	u2211
  3583   010684  5180               	movf	(measure_current@i+1)& (0+255),w,b
  3584   010686  E109               	bnz	u2210
  3585   010688  0E08               	movlw	8
  3586   01068A  5D7F               	subwf	measure_current@i& (0+255),w,b
  3587   01068C  A0D8               	btfss	status,0,c
  3588   01068E  EF4B  F083         	goto	u2211
  3589   010692  EF4D  F083         	goto	u2210
  3590   010696                     u2211:
  3591   010696  EF31  F083         	goto	l3537
  3592   01069A                     u2210:
  3593   01069A                     
  3594                           ; BSR set to: 0
  3595                           ;measure.c: 61:         result/= 8;
  3596   01069A  0E03               	movlw	3
  3597   01069C  6F7B               	movwf	??_measure_current& (0+255),b
  3598   01069E                     u2225:
  3599   01069E  90D8               	bcf	status,0,c
  3600   0106A0  3384               	rrcf	(measure_current@result+3)& (0+255),f,b
  3601   0106A2  3383               	rrcf	(measure_current@result+2)& (0+255),f,b
  3602   0106A4  3382               	rrcf	(measure_current@result+1)& (0+255),f,b
  3603   0106A6  3381               	rrcf	measure_current@result& (0+255),f,b
  3604   0106A8  2F7B               	decfsz	??_measure_current& (0+255),f,b
  3605   0106AA  EF4F  F083         	goto	u2225
  3606   0106AE                     
  3607                           ; BSR set to: 0
  3608                           ;measure.c: 63:         result = (result*3300)/(1024 - 1);
  3609   0106AE  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3610   0106B2  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3611   0106B6  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3612   0106BA  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3613   0106BE  0EE4               	movlw	228
  3614   0106C0  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3615   0106C2  0E0C               	movlw	12
  3616   0106C4  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3617   0106C6  0E00               	movlw	0
  3618   0106C8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3619   0106CA  0E00               	movlw	0
  3620   0106CC  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3621   0106CE  ECE2  F087         	call	___lmul	;wreg free
  3622   0106D2  C060  F06C         	movff	?___lmul,___lldiv@dividend
  3623   0106D6  C061  F06D         	movff	?___lmul+1,___lldiv@dividend+1
  3624   0106DA  C062  F06E         	movff	?___lmul+2,___lldiv@dividend+2
  3625   0106DE  C063  F06F         	movff	?___lmul+3,___lldiv@dividend+3
  3626   0106E2  0EFF               	movlw	255
  3627   0106E4  0100               	movlb	0	; () banked
  3628   0106E6  6F70               	movwf	___lldiv@divisor& (0+255),b
  3629   0106E8  0E03               	movlw	3
  3630   0106EA  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3631   0106EC  0E00               	movlw	0
  3632   0106EE  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3633   0106F0  0E00               	movlw	0
  3634   0106F2  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3635   0106F4  EC07  F087         	call	___lldiv	;wreg free
  3636   0106F8  C06C  F081         	movff	?___lldiv,measure_current@result
  3637   0106FC  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3638   010700  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3639   010704  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3640   010708                     
  3641                           ;measure.c: 65:         result *= 1000;
  3642   010708  C081  F060         	movff	measure_current@result,___lmul@multiplier
  3643   01070C  C082  F061         	movff	measure_current@result+1,___lmul@multiplier+1
  3644   010710  C083  F062         	movff	measure_current@result+2,___lmul@multiplier+2
  3645   010714  C084  F063         	movff	measure_current@result+3,___lmul@multiplier+3
  3646   010718  0EE8               	movlw	232
  3647   01071A  0100               	movlb	0	; () banked
  3648   01071C  6F64               	movwf	___lmul@multiplicand& (0+255),b
  3649   01071E  0E03               	movlw	3
  3650   010720  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3651   010722  0E00               	movlw	0
  3652   010724  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3653   010726  0E00               	movlw	0
  3654   010728  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3655   01072A  ECE2  F087         	call	___lmul	;wreg free
  3656   01072E  C060  F081         	movff	?___lmul,measure_current@result
  3657   010732  C061  F082         	movff	?___lmul+1,measure_current@result+1
  3658   010736  C062  F083         	movff	?___lmul+2,measure_current@result+2
  3659   01073A  C063  F084         	movff	?___lmul+3,measure_current@result+3
  3660   01073E                     
  3661                           ;measure.c: 67:         result /= 66;
  3662   01073E  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3663   010742  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3664   010746  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3665   01074A  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3666   01074E  0E42               	movlw	66
  3667   010750  0100               	movlb	0	; () banked
  3668   010752  6F70               	movwf	___lldiv@divisor& (0+255),b
  3669   010754  0E00               	movlw	0
  3670   010756  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3671   010758  0E00               	movlw	0
  3672   01075A  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3673   01075C  0E00               	movlw	0
  3674   01075E  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3675   010760  EC07  F087         	call	___lldiv	;wreg free
  3676   010764  C06C  F081         	movff	?___lldiv,measure_current@result
  3677   010768  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3678   01076C  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3679   010770  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3680   010774                     
  3681                           ;measure.c: 69:         result /= 3;
  3682   010774  C081  F06C         	movff	measure_current@result,___lldiv@dividend
  3683   010778  C082  F06D         	movff	measure_current@result+1,___lldiv@dividend+1
  3684   01077C  C083  F06E         	movff	measure_current@result+2,___lldiv@dividend+2
  3685   010780  C084  F06F         	movff	measure_current@result+3,___lldiv@dividend+3
  3686   010784  0E03               	movlw	3
  3687   010786  0100               	movlb	0	; () banked
  3688   010788  6F70               	movwf	___lldiv@divisor& (0+255),b
  3689   01078A  0E00               	movlw	0
  3690   01078C  6F71               	movwf	(___lldiv@divisor+1)& (0+255),b
  3691   01078E  0E00               	movlw	0
  3692   010790  6F72               	movwf	(___lldiv@divisor+2)& (0+255),b
  3693   010792  0E00               	movlw	0
  3694   010794  6F73               	movwf	(___lldiv@divisor+3)& (0+255),b
  3695   010796  EC07  F087         	call	___lldiv	;wreg free
  3696   01079A  C06C  F081         	movff	?___lldiv,measure_current@result
  3697   01079E  C06D  F082         	movff	?___lldiv+1,measure_current@result+1
  3698   0107A2  C06E  F083         	movff	?___lldiv+2,measure_current@result+2
  3699   0107A6  C06F  F084         	movff	?___lldiv+3,measure_current@result+3
  3700                           
  3701                           ;measure.c: 71:         if(result > offset)
  3702   0107AA  0100               	movlb	0	; () banked
  3703   0107AC  5179               	movf	measure_current@offset& (0+255),w,b
  3704   0107AE  6F7B               	movwf	??_measure_current& (0+255),b
  3705   0107B0  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3706   0107B2  6F7C               	movwf	(??_measure_current+1)& (0+255),b
  3707   0107B4  6B7D               	clrf	(??_measure_current+2)& (0+255),b
  3708   0107B6  6B7E               	clrf	(??_measure_current+3)& (0+255),b
  3709   0107B8  5181               	movf	measure_current@result& (0+255),w,b
  3710   0107BA  5D7B               	subwf	??_measure_current& (0+255),w,b
  3711   0107BC  5182               	movf	(measure_current@result+1)& (0+255),w,b
  3712   0107BE  597C               	subwfb	(??_measure_current+1)& (0+255),w,b
  3713   0107C0  5183               	movf	(measure_current@result+2)& (0+255),w,b
  3714   0107C2  597D               	subwfb	(??_measure_current+2)& (0+255),w,b
  3715   0107C4  5184               	movf	(measure_current@result+3)& (0+255),w,b
  3716   0107C6  597E               	subwfb	(??_measure_current+3)& (0+255),w,b
  3717   0107C8  B0D8               	btfsc	status,0,c
  3718   0107CA  EFE9  F083         	goto	u2231
  3719   0107CE  EFEB  F083         	goto	u2230
  3720   0107D2                     u2231:
  3721   0107D2  EFF3  F083         	goto	l3557
  3722   0107D6                     u2230:
  3723   0107D6                     
  3724                           ; BSR set to: 0
  3725                           ;measure.c: 72:         {;measure.c: 73:             return result-offset;
  3726   0107D6  5179               	movf	measure_current@offset& (0+255),w,b
  3727   0107D8  5D81               	subwf	measure_current@result& (0+255),w,b
  3728   0107DA  6F79               	movwf	?_measure_current& (0+255),b
  3729   0107DC  517A               	movf	(measure_current@offset+1)& (0+255),w,b
  3730   0107DE  5982               	subwfb	(measure_current@result+1)& (0+255),w,b
  3731   0107E0  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3732   0107E2  EFF7  F083         	goto	l465
  3733   0107E6                     l3557:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;measure.c: 76:         return 0;
  3737   0107E6  0E00               	movlw	0
  3738   0107E8  6F7A               	movwf	(?_measure_current+1)& (0+255),b
  3739   0107EA  0E00               	movlw	0
  3740   0107EC  6F79               	movwf	?_measure_current& (0+255),b
  3741   0107EE                     l465:
  3742                           
  3743                           ; BSR set to: 0
  3744   0107EE  0012               	return		;funcret
  3745   0107F0                     __end_of_measure_current:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function ___lmul *****************
  3749 ;; Defined at:
  3750 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3753 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  product         4    8[BANK0 ] unsigned long 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  4    0[BANK0 ] unsigned long 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:       12 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 4
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_measure_voltage
  3776 ;;		_measure_current
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text16
  3781   010FC4                     __ptext16:
  3782                           	callstack 0
  3783   010FC4                     ___lmul:
  3784                           	callstack 25
  3785   010FC4  0E00               	movlw	0
  3786   010FC6  0100               	movlb	0	; () banked
  3787   010FC8  6F68               	movwf	___lmul@product& (0+255),b
  3788   010FCA  0E00               	movlw	0
  3789   010FCC  6F69               	movwf	(___lmul@product+1)& (0+255),b
  3790   010FCE  0E00               	movlw	0
  3791   010FD0  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  3792   010FD2  0E00               	movlw	0
  3793   010FD4  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  3794   010FD6                     l3447:
  3795                           
  3796                           ; BSR set to: 0
  3797   010FD6  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3798   010FD8  EFF0  F087         	goto	u2141
  3799   010FDC  EFF2  F087         	goto	u2140
  3800   010FE0                     u2141:
  3801   010FE0  EFFA  F087         	goto	l3451
  3802   010FE4                     u2140:
  3803   010FE4                     
  3804                           ; BSR set to: 0
  3805   010FE4  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3806   010FE6  2768               	addwf	___lmul@product& (0+255),f,b
  3807   010FE8  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3808   010FEA  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  3809   010FEC  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3810   010FEE  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  3811   010FF0  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3812   010FF2  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  3813   010FF4                     l3451:
  3814                           
  3815                           ; BSR set to: 0
  3816   010FF4  90D8               	bcf	status,0,c
  3817   010FF6  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3818   010FF8  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3819   010FFA  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3820   010FFC  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3821   010FFE                     
  3822                           ; BSR set to: 0
  3823   010FFE  90D8               	bcf	status,0,c
  3824   011000  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3825   011002  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3826   011004  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3827   011006  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3828   011008  5160               	movf	___lmul@multiplier& (0+255),w,b
  3829   01100A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3830   01100C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3831   01100E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3832   011010  A4D8               	btfss	status,2,c
  3833   011012  EF0D  F088         	goto	u2151
  3834   011016  EF0F  F088         	goto	u2150
  3835   01101A                     u2151:
  3836   01101A  EFEB  F087         	goto	l3447
  3837   01101E                     u2150:
  3838   01101E                     
  3839                           ; BSR set to: 0
  3840   01101E  C068  F060         	movff	___lmul@product,?___lmul
  3841   011022  C069  F061         	movff	___lmul@product+1,?___lmul+1
  3842   011026  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  3843   01102A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  3844   01102E                     
  3845                           ; BSR set to: 0
  3846   01102E  0012               	return		;funcret
  3847   011030                     __end_of___lmul:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function ___lldiv *****************
  3851 ;; Defined at:
  3852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  dividend        4   12[BANK0 ] unsigned long 
  3855 ;;  divisor         4   16[BANK0 ] unsigned long 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  quotient        4   20[BANK0 ] unsigned long 
  3858 ;;  counter         1   24[BANK0 ] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  4   12[BANK0 ] unsigned long 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3868 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;Total ram usage:       13 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 4
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_measure_voltage
  3879 ;;		_measure_current
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text17
  3884   010E0E                     __ptext17:
  3885                           	callstack 0
  3886   010E0E                     ___lldiv:
  3887                           	callstack 25
  3888   010E0E  0E00               	movlw	0
  3889   010E10  0100               	movlb	0	; () banked
  3890   010E12  6F74               	movwf	___lldiv@quotient& (0+255),b
  3891   010E14  0E00               	movlw	0
  3892   010E16  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
  3893   010E18  0E00               	movlw	0
  3894   010E1A  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
  3895   010E1C  0E00               	movlw	0
  3896   010E1E  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
  3897   010E20                     
  3898                           ; BSR set to: 0
  3899   010E20  5170               	movf	___lldiv@divisor& (0+255),w,b
  3900   010E22  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3901   010E24  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3902   010E26  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3903   010E28  B4D8               	btfsc	status,2,c
  3904   010E2A  EF19  F087         	goto	u2161
  3905   010E2E  EF1B  F087         	goto	u2160
  3906   010E32                     u2161:
  3907   010E32  EF51  F087         	goto	l559
  3908   010E36                     u2160:
  3909   010E36                     
  3910                           ; BSR set to: 0
  3911   010E36  0E01               	movlw	1
  3912   010E38  6F78               	movwf	___lldiv@counter& (0+255),b
  3913   010E3A  EF25  F087         	goto	l3463
  3914   010E3E                     l3461:
  3915                           
  3916                           ; BSR set to: 0
  3917   010E3E  90D8               	bcf	status,0,c
  3918   010E40  3770               	rlcf	___lldiv@divisor& (0+255),f,b
  3919   010E42  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3920   010E44  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3921   010E46  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3922   010E48  2B78               	incf	___lldiv@counter& (0+255),f,b
  3923   010E4A                     l3463:
  3924                           
  3925                           ; BSR set to: 0
  3926   010E4A  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3927   010E4C  EF2A  F087         	goto	u2171
  3928   010E50  EF2C  F087         	goto	u2170
  3929   010E54                     u2171:
  3930   010E54  EF1F  F087         	goto	l3461
  3931   010E58                     u2170:
  3932   010E58                     l3465:
  3933                           
  3934                           ; BSR set to: 0
  3935   010E58  90D8               	bcf	status,0,c
  3936   010E5A  3774               	rlcf	___lldiv@quotient& (0+255),f,b
  3937   010E5C  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3938   010E5E  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3939   010E60  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3940   010E62                     
  3941                           ; BSR set to: 0
  3942   010E62  5170               	movf	___lldiv@divisor& (0+255),w,b
  3943   010E64  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
  3944   010E66  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3945   010E68  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3946   010E6A  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3947   010E6C  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3948   010E6E  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3949   010E70  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3950   010E72  A0D8               	btfss	status,0,c
  3951   010E74  EF3E  F087         	goto	u2181
  3952   010E78  EF40  F087         	goto	u2180
  3953   010E7C                     u2181:
  3954   010E7C  EF49  F087         	goto	l3473
  3955   010E80                     u2180:
  3956   010E80                     
  3957                           ; BSR set to: 0
  3958   010E80  5170               	movf	___lldiv@divisor& (0+255),w,b
  3959   010E82  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
  3960   010E84  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3961   010E86  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3962   010E88  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3963   010E8A  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3964   010E8C  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3965   010E8E  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3966   010E90                     
  3967                           ; BSR set to: 0
  3968   010E90  8174               	bsf	___lldiv@quotient& (0+255),0,b
  3969   010E92                     l3473:
  3970                           
  3971                           ; BSR set to: 0
  3972   010E92  90D8               	bcf	status,0,c
  3973   010E94  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3974   010E96  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3975   010E98  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3976   010E9A  3370               	rrcf	___lldiv@divisor& (0+255),f,b
  3977   010E9C                     
  3978                           ; BSR set to: 0
  3979   010E9C  2F78               	decfsz	___lldiv@counter& (0+255),f,b
  3980   010E9E  EF2C  F087         	goto	l3465
  3981   010EA2                     l559:
  3982                           
  3983                           ; BSR set to: 0
  3984   010EA2  C074  F06C         	movff	___lldiv@quotient,?___lldiv
  3985   010EA6  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
  3986   010EAA  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
  3987   010EAE  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
  3988   010EB2                     
  3989                           ; BSR set to: 0
  3990   010EB2  0012               	return		;funcret
  3991   010EB4                     __end_of___lldiv:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _ADC_GetConversion *****************
  3995 ;; Defined at:
  3996 ;;		line 109 in file "mcc_generated_files/adc.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  channel         1    wreg     enum E4918
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  channel         1    4[BANK0 ] enum E4918
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2    0[BANK0 ] unsigned short 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        5 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 4
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_measure_voltage
  4021 ;;		_measure_current
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text18
  4026   011348                     __ptext18:
  4027                           	callstack 0
  4028   011348                     _ADC_GetConversion:
  4029                           	callstack 25
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;incstack = 0
  4033                           ;ADC_GetConversion@channel stored from wreg
  4034   011348  0100               	movlb	0	; () banked
  4035   01134A  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
  4036   01134C                     
  4037                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  4038   01134C  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4039   011350  0100               	movlb	0	; () banked
  4040   011352  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4041   011354  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4042   011356  50C2               	movf	194,w,c	;volatile
  4043   011358  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4044   01135A  0BC3               	andlw	-61
  4045   01135C  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4046   01135E  6EC2               	movwf	194,c	;volatile
  4047   011360                     
  4048                           ; BSR set to: 0
  4049                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  4050   011360  80C2               	bsf	194,0,c	;volatile
  4051   011362                     
  4052                           ; BSR set to: 0
  4053                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4054   011362  82C2               	bsf	194,1,c	;volatile
  4055   011364                     l86:
  4056                           
  4057                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4058   011364  B2C2               	btfsc	194,1,c	;volatile
  4059   011366  EFB7  F089         	goto	u2131
  4060   01136A  EFB9  F089         	goto	u2130
  4061   01136E                     u2131:
  4062   01136E  EFB2  F089         	goto	l86
  4063   011372                     u2130:
  4064   011372                     
  4065                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4066   011372  50C4               	movf	196,w,c	;volatile
  4067   011374  0100               	movlb	0	; () banked
  4068   011376  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4069   011378  6B62               	clrf	??_ADC_GetConversion& (0+255),b
  4070   01137A  50C3               	movf	195,w,c	;volatile
  4071   01137C  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
  4072   01137E  6F60               	movwf	?_ADC_GetConversion& (0+255),b
  4073   011380  0E00               	movlw	0
  4074   011382  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4075   011384  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4076   011386                     
  4077                           ; BSR set to: 0
  4078   011386  0012               	return		;funcret
  4079   011388                     __end_of_ADC_GetConversion:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _SYSTEM_Initialize *****************
  4083 ;; Defined at:
  4084 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 6
  4105 ;; This function calls:
  4106 ;;		_ADC_Initialize
  4107 ;;		_EPWM1_Initialize
  4108 ;;		_EUSART1_Initialize
  4109 ;;		_INTERRUPT_Initialize
  4110 ;;		_OSCILLATOR_Initialize
  4111 ;;		_PIN_MANAGER_Initialize
  4112 ;;		_TMR0_Initialize
  4113 ;;		_TMR2_Initialize
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text19
  4120   01153C                     __ptext19:
  4121                           	callstack 0
  4122   01153C                     _SYSTEM_Initialize:
  4123                           	callstack 24
  4124   01153C  EC19  F08B         	call	_INTERRUPT_Initialize	;wreg free
  4125   011540  ECC4  F089         	call	_PIN_MANAGER_Initialize	;wreg free
  4126   011544  EC09  F08B         	call	_OSCILLATOR_Initialize	;wreg free
  4127   011548  ECC6  F08A         	call	_ADC_Initialize	;wreg free
  4128   01154C  ECBB  F08A         	call	_EPWM1_Initialize	;wreg free
  4129   011550  ECD1  F08A         	call	_TMR2_Initialize	;wreg free
  4130   011554  EC22  F08A         	call	_TMR0_Initialize	;wreg free
  4131   011558  EC5A  F087         	call	_EUSART1_Initialize	;wreg free
  4132   01155C  0012               	return		;funcret
  4133   01155E                     __end_of_SYSTEM_Initialize:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _TMR2_Initialize *****************
  4137 ;; Defined at:
  4138 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 4
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_SYSTEM_Initialize
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text20
  4167   0115A2                     __ptext20:
  4168                           	callstack 0
  4169   0115A2                     _TMR2_Initialize:
  4170                           	callstack 25
  4171   0115A2                     
  4172                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4173   0115A2  68CB               	setf	203,c	;volatile
  4174   0115A4                     
  4175                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4176   0115A4  0E00               	movlw	0
  4177   0115A6  6ECC               	movwf	204,c	;volatile
  4178   0115A8                     
  4179                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4180   0115A8  929E               	bcf	158,1,c	;volatile
  4181                           
  4182                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4183   0115AA  0E04               	movlw	4
  4184   0115AC  6ECA               	movwf	202,c	;volatile
  4185   0115AE  0012               	return		;funcret
  4186   0115B0                     __end_of_TMR2_Initialize:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _TMR0_Initialize *****************
  4190 ;; Defined at:
  4191 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 5
  4212 ;; This function calls:
  4213 ;;		_TMR0_SetInterruptHandler
  4214 ;; This function is called by:
  4215 ;;		_SYSTEM_Initialize
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text21
  4220   011444                     __ptext21:
  4221                           	callstack 0
  4222   011444                     _TMR0_Initialize:
  4223                           	callstack 24
  4224   011444                     
  4225                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4226   011444  9CD5               	bcf	213,6,c	;volatile
  4227                           
  4228                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4229   011446  68D7               	setf	215,c	;volatile
  4230   011448                     
  4231                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x9D;
  4232   011448  0E9D               	movlw	157
  4233   01144A  6ED6               	movwf	214,c	;volatile
  4234   01144C                     
  4235                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4236   01144C  50D6               	movf	214,w,c	;volatile
  4237   01144E  CFD7 F063          	movff	4055,??_TMR0_Initialize	;volatile
  4238   011452  0100               	movlb	0	; () banked
  4239   011454  6B64               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  4240   011456  C063  F064         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4241   01145A  6B63               	clrf	??_TMR0_Initialize& (0+255),b
  4242   01145C  1163               	iorwf	??_TMR0_Initialize& (0+255),w,b
  4243   01145E  6E3C               	movwf	_timer0ReloadVal^0,c	;volatile
  4244   011460  5164               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  4245   011462  6E3D               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4246   011464                     
  4247                           ; BSR set to: 0
  4248                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4249   011464  94F2               	bcf	242,2,c	;volatile
  4250   011466                     
  4251                           ; BSR set to: 0
  4252                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4253   011466  8AF2               	bsf	242,5,c	;volatile
  4254   011468                     
  4255                           ; BSR set to: 0
  4256                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4257   011468  0E38               	movlw	low _TMR0_DefaultInterruptHandler
  4258   01146A  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  4259   01146C  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  4260   01146E  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4261   011470  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  4262   011472  6F62               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  4263   011474  ECD8  F08A         	call	_TMR0_SetInterruptHandler	;wreg free
  4264   011478                     
  4265                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x17;
  4266   011478  0E17               	movlw	23
  4267   01147A  6ED5               	movwf	213,c	;volatile
  4268   01147C  0012               	return		;funcret
  4269   01147E                     __end_of_TMR0_Initialize:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _TMR0_SetInterruptHandler *****************
  4273 ;; Defined at:
  4274 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
  4277 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4289 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;Total ram usage:        3 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 4
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_TMR0_Initialize
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text22
  4304   0115B0                     __ptext22:
  4305                           	callstack 0
  4306   0115B0                     _TMR0_SetInterruptHandler:
  4307                           	callstack 24
  4308   0115B0                     
  4309                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4310   0115B0  C060  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4311   0115B4  C061  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4312   0115B8  C062  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  4313   0115BC  0012               	return		;funcret
  4314   0115BE                     __end_of_TMR0_SetInterruptHandler:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function _PIN_MANAGER_Initialize *****************
  4318 ;; Defined at:
  4319 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 4
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_SYSTEM_Initialize
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text23
  4348   011388                     __ptext23:
  4349                           	callstack 0
  4350   011388                     _PIN_MANAGER_Initialize:
  4351                           	callstack 25
  4352   011388                     
  4353                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  4354   011388  0E00               	movlw	0
  4355   01138A  6E8D               	movwf	141,c	;volatile
  4356                           
  4357                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  4358   01138C  0E00               	movlw	0
  4359   01138E  6E91               	movwf	145,c	;volatile
  4360                           
  4361                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  4362   011390  0E00               	movlw	0
  4363   011392  6E8C               	movwf	140,c	;volatile
  4364                           
  4365                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  4366   011394  0E00               	movlw	0
  4367   011396  6E89               	movwf	137,c	;volatile
  4368                           
  4369                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  4370   011398  0E00               	movlw	0
  4371   01139A  6E8E               	movwf	142,c	;volatile
  4372                           
  4373                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  4374   01139C  0E00               	movlw	0
  4375   01139E  6E8A               	movwf	138,c	;volatile
  4376                           
  4377                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  4378   0113A0  0E00               	movlw	0
  4379   0113A2  6E8F               	movwf	143,c	;volatile
  4380                           
  4381                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4382   0113A4  0E00               	movlw	0
  4383   0113A6  6E8B               	movwf	139,c	;volatile
  4384                           
  4385                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  4386   0113A8  0E00               	movlw	0
  4387   0113AA  6E90               	movwf	144,c	;volatile
  4388   0113AC                     
  4389                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  4390   0113AC  6896               	setf	150,c	;volatile
  4391   0113AE                     
  4392                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  4393   0113AE  6897               	setf	151,c	;volatile
  4394                           
  4395                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  4396   0113B0  0E3F               	movlw	63
  4397   0113B2  6E92               	movwf	146,c	;volatile
  4398   0113B4                     
  4399                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  4400   0113B4  6898               	setf	152,c	;volatile
  4401   0113B6                     
  4402                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  4403   0113B6  6893               	setf	147,c	;volatile
  4404   0113B8                     
  4405                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  4406   0113B8  6899               	setf	153,c	;volatile
  4407                           
  4408                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBB;
  4409   0113BA  0EBB               	movlw	187
  4410   0113BC  6E94               	movwf	148,c	;volatile
  4411   0113BE                     
  4412                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  4413   0113BE  6895               	setf	149,c	;volatile
  4414   0113C0                     
  4415                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xFF;
  4416   0113C0  689A               	setf	154,c	;volatile
  4417                           
  4418                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  4419   0113C2  0EF0               	movlw	-16
  4420   0113C4  16C1               	andwf	193,f,c	;volatile
  4421   0113C6  0012               	return		;funcret
  4422   0113C8                     __end_of_PIN_MANAGER_Initialize:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _OSCILLATOR_Initialize *****************
  4426 ;; Defined at:
  4427 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 4
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_SYSTEM_Initialize
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text24
  4456   011612                     __ptext24:
  4457                           	callstack 0
  4458   011612                     _OSCILLATOR_Initialize:
  4459                           	callstack 25
  4460   011612  0E02               	movlw	2
  4461   011614  6ED3               	movwf	211,c	;volatile
  4462   011616  0E00               	movlw	0
  4463   011618  6E9B               	movwf	155,c	;volatile
  4464   01161A  0012               	return		;funcret
  4465   01161C                     __end_of_OSCILLATOR_Initialize:
  4466                           	callstack 0
  4467                           
  4468 ;; *************** function _INTERRUPT_Initialize *****************
  4469 ;; Defined at:
  4470 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		None
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used: 1
  4490 ;; Hardware stack levels required when called: 4
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_SYSTEM_Initialize
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text25
  4499   011632                     __ptext25:
  4500                           	callstack 0
  4501   011632                     _INTERRUPT_Initialize:
  4502                           	callstack 25
  4503   011632                     
  4504                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4505   011632  9ED0               	bcf	208,7,c	;volatile
  4506   011634  0012               	return		;funcret
  4507   011636                     __end_of_INTERRUPT_Initialize:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _EUSART1_Initialize *****************
  4511 ;; Defined at:
  4512 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; Hardware stack levels required when called: 5
  4533 ;; This function calls:
  4534 ;;		_EUSART1_SetErrorHandler
  4535 ;;		_EUSART1_SetFramingErrorHandler
  4536 ;;		_EUSART1_SetOverrunErrorHandler
  4537 ;;		_EUSART1_SetRxInterruptHandler
  4538 ;;		_EUSART1_SetTxInterruptHandler
  4539 ;; This function is called by:
  4540 ;;		_SYSTEM_Initialize
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text26
  4545   010EB4                     __ptext26:
  4546                           	callstack 0
  4547   010EB4                     _EUSART1_Initialize:
  4548                           	callstack 24
  4549   010EB4                     
  4550                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4551   010EB4  9A9D               	bcf	157,5,c	;volatile
  4552   010EB6                     
  4553                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4554   010EB6  0E32               	movlw	low _EUSART1_Receive_ISR
  4555   010EB8  0100               	movlb	0	; () banked
  4556   010EBA  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  4557   010EBC  0E0B               	movlw	high _EUSART1_Receive_ISR
  4558   010EBE  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  4559   010EC0  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  4560   010EC2  6F62               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  4561   010EC4  ECE6  F08A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4562   010EC8                     
  4563                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4564   010EC8  989D               	bcf	157,4,c	;volatile
  4565                           
  4566                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4567   010ECA  0EC8               	movlw	low _EUSART1_Transmit_ISR
  4568   010ECC  0100               	movlb	0	; () banked
  4569   010ECE  6F60               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  4570   010ED0  0E13               	movlw	high _EUSART1_Transmit_ISR
  4571   010ED2  6F61               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  4572   010ED4  0E01               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  4573   010ED6  6F62               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
  4574   010ED8  ECDF  F08A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4575   010EDC                     
  4576                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4577   010EDC  0E08               	movlw	8
  4578   010EDE  6E7E               	movwf	126,c	;volatile
  4579   010EE0                     
  4580                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0xD0;
  4581   010EE0  0ED0               	movlw	208
  4582   010EE2  6EAB               	movwf	171,c	;volatile
  4583   010EE4                     
  4584                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x65;
  4585   010EE4  0E65               	movlw	101
  4586   010EE6  6EAC               	movwf	172,c	;volatile
  4587   010EE8                     
  4588                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  4589   010EE8  0E8A               	movlw	138
  4590   010EEA  6EAF               	movwf	175,c	;volatile
  4591   010EEC                     
  4592                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x02;
  4593   010EEC  0E02               	movlw	2
  4594   010EEE  6E7F               	movwf	127,c	;volatile
  4595   010EF0                     
  4596                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4597   010EF0  0E3A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4598   010EF2  0100               	movlb	0	; () banked
  4599   010EF4  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4600   010EF6  0E16               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4601   010EF8  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4602   010EFA  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  4603   010EFC  6F62               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
  4604   010EFE  ECF4  F08A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4605   010F02                     
  4606                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4607   010F02  0E26               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4608   010F04  0100               	movlb	0	; () banked
  4609   010F06  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4610   010F08  0E16               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4611   010F0A  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4612   010F0C  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  4613   010F0E  6F62               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
  4614   010F10  ECED  F08A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4615   010F14                     
  4616                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4617   010F14  0E2C               	movlw	low _EUSART1_DefaultErrorHandler
  4618   010F16  0100               	movlb	0	; () banked
  4619   010F18  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4620   010F1A  0E16               	movlw	high _EUSART1_DefaultErrorHandler
  4621   010F1C  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4622   010F1E  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  4623   010F20  6F62               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)& (0+255),b
  4624   010F22  ECFB  F08A         	call	_EUSART1_SetErrorHandler	;wreg free
  4625                           
  4626                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4627   010F26  0E00               	movlw	0
  4628   010F28  6E41               	movwf	_eusart1RxLastError^0,c	;volatile
  4629                           
  4630                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4631   010F2A  0E00               	movlw	0
  4632   010F2C  6E47               	movwf	_eusart1TxHead^0,c	;volatile
  4633                           
  4634                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4635   010F2E  0E00               	movlw	0
  4636   010F30  6E46               	movwf	_eusart1TxTail^0,c	;volatile
  4637                           
  4638                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4639   010F32  0E08               	movlw	8
  4640   010F34  6E45               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  4641                           
  4642                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4643   010F36  0E00               	movlw	0
  4644   010F38  6E44               	movwf	_eusart1RxHead^0,c	;volatile
  4645                           
  4646                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4647   010F3A  0E00               	movlw	0
  4648   010F3C  6E43               	movwf	_eusart1RxTail^0,c	;volatile
  4649                           
  4650                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4651   010F3E  0E00               	movlw	0
  4652   010F40  6E42               	movwf	_eusart1RxCount^0,c	;volatile
  4653   010F42                     
  4654                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4655   010F42  8A9D               	bsf	157,5,c	;volatile
  4656   010F44  0012               	return		;funcret
  4657   010F46                     __end_of_EUSART1_Initialize:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4661 ;; Defined at:
  4662 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4665 ;;		 -> EUSART1_Transmit_ISR(1), 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:        3 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 4
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_EUSART1_Initialize
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text27
  4692   0115BE                     __ptext27:
  4693                           	callstack 0
  4694   0115BE                     _EUSART1_SetTxInterruptHandler:
  4695                           	callstack 24
  4696   0115BE                     
  4697                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4698   0115BE  C060  F04E         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4699   0115C2  C061  F04F         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4700   0115C6  C062  F050         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  4701   0115CA  0012               	return		;funcret
  4702   0115CC                     __end_of_EUSART1_SetTxInterruptHandler:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4706 ;; Defined at:
  4707 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4710 ;;		 -> EUSART1_Receive_ISR(1), 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4722 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:        3 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 4
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_EUSART1_Initialize
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text28
  4737   0115CC                     __ptext28:
  4738                           	callstack 0
  4739   0115CC                     _EUSART1_SetRxInterruptHandler:
  4740                           	callstack 24
  4741   0115CC                     
  4742                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4743   0115CC  C060  F04B         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4744   0115D0  C061  F04C         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4745   0115D4  C062  F04D         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  4746   0115D8  0012               	return		;funcret
  4747   0115DA                     __end_of_EUSART1_SetRxInterruptHandler:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4751 ;; Defined at:
  4752 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4755 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4767 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;Total ram usage:        3 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 4
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_EUSART1_Initialize
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text29
  4782   0115DA                     __ptext29:
  4783                           	callstack 0
  4784   0115DA                     _EUSART1_SetOverrunErrorHandler:
  4785                           	callstack 24
  4786   0115DA                     
  4787                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  4788   0115DA  C060  F0EF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4789   0115DE  C061  F0F0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4790   0115E2  C062  F0F1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  4791   0115E6  0012               	return		;funcret
  4792   0115E8                     __end_of_EUSART1_SetOverrunErrorHandler:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4796 ;; Defined at:
  4797 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4800 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4812 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;Total ram usage:        3 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 4
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_EUSART1_Initialize
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text30
  4827   0115E8                     __ptext30:
  4828                           	callstack 0
  4829   0115E8                     _EUSART1_SetFramingErrorHandler:
  4830                           	callstack 24
  4831   0115E8                     
  4832                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  4833   0115E8  C060  F0F2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4834   0115EC  C061  F0F3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4835   0115F0  C062  F0F4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  4836   0115F4  0012               	return		;funcret
  4837   0115F6                     __end_of_EUSART1_SetFramingErrorHandler:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function _EUSART1_SetErrorHandler *****************
  4841 ;; Defined at:
  4842 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  4845 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;Total ram usage:        3 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 4
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_EUSART1_Initialize
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text31
  4872   0115F6                     __ptext31:
  4873                           	callstack 0
  4874   0115F6                     _EUSART1_SetErrorHandler:
  4875                           	callstack 24
  4876   0115F6                     
  4877                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  4878   0115F6  C060  F0EC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4879   0115FA  C061  F0ED         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4880   0115FE  C062  F0EE         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  4881   011602  0012               	return		;funcret
  4882   011604                     __end_of_EUSART1_SetErrorHandler:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _EPWM1_Initialize *****************
  4886 ;; Defined at:
  4887 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; Hardware stack levels required when called: 4
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_SYSTEM_Initialize
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text32
  4916   011576                     __ptext32:
  4917                           	callstack 0
  4918   011576                     _EPWM1_Initialize:
  4919                           	callstack 25
  4920   011576                     
  4921                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4922   011576  0E3C               	movlw	60
  4923   011578  6EBD               	movwf	189,c	;volatile
  4924                           
  4925                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4926   01157A  0E00               	movlw	0
  4927   01157C  6EB6               	movwf	182,c	;volatile
  4928                           
  4929                           ;mcc_generated_files/epwm1.c: 75:  ECCP1DEL = 0x80;
  4930   01157E  0E80               	movlw	128
  4931   011580  6E79               	movwf	121,c	;volatile
  4932                           
  4933                           ;mcc_generated_files/epwm1.c: 78:  CCPR1H = 0x00;
  4934   011582  0E00               	movlw	0
  4935   011584  6EBF               	movwf	191,c	;volatile
  4936                           
  4937                           ;mcc_generated_files/epwm1.c: 81:  CCPR1L = 0x7F;
  4938   011586  0E7F               	movlw	127
  4939   011588  6EBE               	movwf	190,c	;volatile
  4940   01158A  0012               	return		;funcret
  4941   01158C                     __end_of_EPWM1_Initialize:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _ADC_Initialize *****************
  4945 ;; Defined at:
  4946 ;;		line 61 in file "mcc_generated_files/adc.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 4
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_SYSTEM_Initialize
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text33
  4975   01158C                     __ptext33:
  4976                           	callstack 0
  4977   01158C                     _ADC_Initialize:
  4978                           	callstack 25
  4979   01158C                     
  4980                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  4981   01158C  0E00               	movlw	0
  4982   01158E  6EC1               	movwf	193,c	;volatile
  4983                           
  4984                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0x92;
  4985   011590  0E92               	movlw	146
  4986   011592  6EC0               	movwf	192,c	;volatile
  4987                           
  4988                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  4989   011594  0E00               	movlw	0
  4990   011596  6EC3               	movwf	195,c	;volatile
  4991                           
  4992                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  4993   011598  0E00               	movlw	0
  4994   01159A  6EC4               	movwf	196,c	;volatile
  4995                           
  4996                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  4997   01159C  0E01               	movlw	1
  4998   01159E  6EC2               	movwf	194,c	;volatile
  4999   0115A0  0012               	return		;funcret
  5000   0115A2                     __end_of_ADC_Initialize:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function _Lcd_Init *****************
  5004 ;; Defined at:
  5005 ;;		line 17 in file "lcd/lcd.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      char 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;Total ram usage:        2 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 5
  5026 ;; This function calls:
  5027 ;;		_LCD_2x16_WriteCmd
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text34
  5034   0112BE                     __ptext34:
  5035                           	callstack 0
  5036   0112BE                     _Lcd_Init:
  5037                           	callstack 25
  5038   0112BE                     
  5039                           ;lcd/lcd.c: 21:         TRISDbits.TRISD3 = 0;
  5040   0112BE  9695               	bcf	149,3,c	;volatile
  5041                           
  5042                           ;lcd/lcd.c: 22:         LATDbits.LATD3 = 0;
  5043   0112C0  968C               	bcf	140,3,c	;volatile
  5044                           
  5045                           ;lcd/lcd.c: 23:         TRISDbits.TRISD2 = 0;
  5046   0112C2  9495               	bcf	149,2,c	;volatile
  5047                           
  5048                           ;lcd/lcd.c: 24:         LATDbits.LATD2 = 0;
  5049   0112C4  948C               	bcf	140,2,c	;volatile
  5050   0112C6                     
  5051                           ;lcd/lcd.c: 25:         TRISJ = TRISJ & 0x0F;
  5052   0112C6  509A               	movf	154,w,c	;volatile
  5053   0112C8  0B0F               	andlw	15
  5054   0112CA  6E9A               	movwf	154,c	;volatile
  5055   0112CC                     
  5056                           ;lcd/lcd.c: 27:         _delay((unsigned long)((200)*(25000000L/4000.0)));
  5057   0112CC  0E07               	movlw	7
  5058   0112CE  0100               	movlb	0	; () banked
  5059   0112D0  6F63               	movwf	(??_Lcd_Init+1)& (0+255),b
  5060   0112D2  0E58               	movlw	88
  5061   0112D4  6F62               	movwf	??_Lcd_Init& (0+255),b
  5062   0112D6  0E59               	movlw	89
  5063   0112D8                     u2277:
  5064   0112D8  2EE8               	decfsz	wreg,f,c
  5065   0112DA  D7FE               	bra	u2277
  5066   0112DC  2F62               	decfsz	??_Lcd_Init& (0+255),f,b
  5067   0112DE  D7FC               	bra	u2277
  5068   0112E0  2F63               	decfsz	(??_Lcd_Init+1)& (0+255),f,b
  5069   0112E2  D7FA               	bra	u2277
  5070   0112E4  D000               	nop2	
  5071   0112E6                     
  5072                           ;lcd/lcd.c: 28:         LCD_2x16_WriteCmd(0x02);
  5073   0112E6  0E02               	movlw	2
  5074   0112E8  EC18  F088         	call	_LCD_2x16_WriteCmd
  5075   0112EC                     
  5076                           ;lcd/lcd.c: 30:         LCD_2x16_WriteCmd(0x28);
  5077   0112EC  0E28               	movlw	40
  5078   0112EE  EC18  F088         	call	_LCD_2x16_WriteCmd
  5079   0112F2                     
  5080                           ;lcd/lcd.c: 33:         LCD_2x16_WriteCmd(0x01);
  5081   0112F2  0E01               	movlw	1
  5082   0112F4  EC18  F088         	call	_LCD_2x16_WriteCmd
  5083   0112F8                     
  5084                           ;lcd/lcd.c: 34:         LCD_2x16_WriteCmd(0x0C);
  5085   0112F8  0E0C               	movlw	12
  5086   0112FA  EC18  F088         	call	_LCD_2x16_WriteCmd
  5087   0112FE                     
  5088                           ;lcd/lcd.c: 37:         LCD_2x16_WriteCmd(0x06);
  5089   0112FE  0E06               	movlw	6
  5090   011300  EC18  F088         	call	_LCD_2x16_WriteCmd
  5091   011304  0012               	return		;funcret
  5092   011306                     __end_of_Lcd_Init:
  5093                           	callstack 0
  5094                           
  5095 ;; *************** function _LCD_2x16_WriteMsg *****************
  5096 ;; Defined at:
  5097 ;;		line 74 in file "lcd/lcd.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  msg             2    2[BANK0 ] PTR unsigned char 
  5100 ;;		 -> main@tempString(20), 
  5101 ;;  line            1    4[BANK0 ] unsigned char 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5113 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;Total ram usage:        3 bytes
  5118 ;; Hardware stack levels used: 1
  5119 ;; Hardware stack levels required when called: 5
  5120 ;; This function calls:
  5121 ;;		_LCD_2x16_WriteCmd
  5122 ;;		_LCD_2x16_WriteData
  5123 ;; This function is called by:
  5124 ;;		_main
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text35
  5129   011408                     __ptext35:
  5130                           	callstack 0
  5131   011408                     _LCD_2x16_WriteMsg:
  5132                           	callstack 25
  5133   011408                     
  5134                           ;lcd/lcd.c: 74: void LCD_2x16_WriteMsg(unsigned char * msg, uint8_t line);lcd/lcd.c: 75:
      +                           {;lcd/lcd.c: 76:     LCD_2x16_WriteCmd(0x80 | (line << 6));
  5135   011408  0100               	movlb	0	; () banked
  5136   01140A  4164               	rrncf	LCD_2x16_WriteMsg@line& (0+255),w,b
  5137   01140C  42E8               	rrncf	wreg,f,c
  5138   01140E  0BC0               	andlw	192
  5139   011410  0980               	iorlw	128
  5140   011412  EC18  F088         	call	_LCD_2x16_WriteCmd
  5141   011416                     l3507:
  5142                           
  5143                           ;lcd/lcd.c: 78:     {;lcd/lcd.c: 79:         LCD_2x16_WriteData(*msg);
  5144   011416  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5145   01141A  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5146   01141E  50DF               	movf	indf2,w,c
  5147   011420  EC9F  F088         	call	_LCD_2x16_WriteData
  5148   011424                     
  5149                           ;lcd/lcd.c: 80:         msg++;
  5150   011424  0100               	movlb	0	; () banked
  5151   011426  4B62               	infsnz	LCD_2x16_WriteMsg@msg& (0+255),f,b
  5152   011428  2B63               	incf	(LCD_2x16_WriteMsg@msg+1)& (0+255),f,b
  5153   01142A                     
  5154                           ; BSR set to: 0
  5155                           ;lcd/lcd.c: 81:     }while(*msg != 0);
  5156   01142A  C062  FFD9         	movff	LCD_2x16_WriteMsg@msg,fsr2l
  5157   01142E  C063  FFDA         	movff	LCD_2x16_WriteMsg@msg+1,fsr2h
  5158   011432  50DF               	movf	indf2,w,c
  5159   011434  A4D8               	btfss	status,2,c
  5160   011436  EF1F  F08A         	goto	u2201
  5161   01143A  EF21  F08A         	goto	u2200
  5162   01143E                     u2201:
  5163   01143E  EF0B  F08A         	goto	l3507
  5164   011442                     u2200:
  5165   011442                     
  5166                           ; BSR set to: 0
  5167   011442  0012               	return		;funcret
  5168   011444                     __end_of_LCD_2x16_WriteMsg:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _LCD_2x16_WriteData *****************
  5172 ;; Defined at:
  5173 ;;		line 58 in file "lcd/lcd.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  command         1    wreg     unsigned char 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  command         1    1[BANK0 ] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 4
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_LCD_2x16_WriteMsg
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text36
  5202   01113E                     __ptext36:
  5203                           	callstack 0
  5204   01113E                     _LCD_2x16_WriteData:
  5205                           	callstack 25
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;incstack = 0
  5209                           ;LCD_2x16_WriteData@command stored from wreg
  5210   01113E  0100               	movlb	0	; () banked
  5211   011140  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5212   011142                     
  5213                           ;lcd/lcd.c: 58: void LCD_2x16_WriteData(uint8_t command);lcd/lcd.c: 59: {;lcd/lcd.c: 60:
      +                               LATDbits.LATD3 = 1;
  5214   011142  868C               	bsf	140,3,c	;volatile
  5215   011144                     
  5216                           ;lcd/lcd.c: 61:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5217   011144  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5218   011148  0E0F               	movlw	15
  5219   01114A  0100               	movlb	0	; () banked
  5220   01114C  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5221   01114E  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5222   011150  0BF0               	andlw	240
  5223   011152  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5224   011154  6E91               	movwf	145,c	;volatile
  5225   011156                     
  5226                           ; BSR set to: 0
  5227                           ;lcd/lcd.c: 62:     LATDbits.LATD2 = 1;
  5228   011156  848C               	bsf	140,2,c	;volatile
  5229   011158                     
  5230                           ; BSR set to: 0
  5231                           ;lcd/lcd.c: 63:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5232   011158  D000               	nop2		;2 cycle nop
  5233   01115A  D000               	nop2		;2 cycle nop
  5234   01115C  D000               	nop2		;2 cycle nop
  5235   01115E                     
  5236                           ;lcd/lcd.c: 64:     LATDbits.LATD2 = 0;
  5237   01115E  948C               	bcf	140,2,c	;volatile
  5238   011160                     
  5239                           ;lcd/lcd.c: 65:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5240   011160  D000               	nop2		;2 cycle nop
  5241   011162  D000               	nop2		;2 cycle nop
  5242   011164  D000               	nop2		;2 cycle nop
  5243                           
  5244                           ;lcd/lcd.c: 66:     command = command << 4;
  5245   011166  0100               	movlb	0	; () banked
  5246   011168  3961               	swapf	LCD_2x16_WriteData@command& (0+255),w,b
  5247   01116A  0BF0               	andlw	240
  5248   01116C  6F61               	movwf	LCD_2x16_WriteData@command& (0+255),b
  5249                           
  5250                           ;lcd/lcd.c: 67:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5251   01116E  CF91 F060          	movff	3985,??_LCD_2x16_WriteData	;volatile
  5252   011172  0E0F               	movlw	15
  5253   011174  1760               	andwf	??_LCD_2x16_WriteData& (0+255),f,b
  5254   011176  5161               	movf	LCD_2x16_WriteData@command& (0+255),w,b
  5255   011178  0BF0               	andlw	240
  5256   01117A  1160               	iorwf	??_LCD_2x16_WriteData& (0+255),w,b
  5257   01117C  6E91               	movwf	145,c	;volatile
  5258   01117E                     
  5259                           ; BSR set to: 0
  5260                           ;lcd/lcd.c: 68:     LATDbits.LATD2 = 1;
  5261   01117E  848C               	bsf	140,2,c	;volatile
  5262   011180                     
  5263                           ; BSR set to: 0
  5264                           ;lcd/lcd.c: 69:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5265   011180  D000               	nop2		;2 cycle nop
  5266   011182  D000               	nop2		;2 cycle nop
  5267   011184  D000               	nop2		;2 cycle nop
  5268   011186                     
  5269                           ;lcd/lcd.c: 70:     LATDbits.LATD2 = 0;
  5270   011186  948C               	bcf	140,2,c	;volatile
  5271   011188                     
  5272                           ;lcd/lcd.c: 71:     _delay((unsigned long)((100)*(25000000L/4000000.0)));
  5273   011188  0ED0               	movlw	208
  5274   01118A                     u2287:
  5275   01118A  2EE8               	decfsz	wreg,f,c
  5276   01118C  D7FE               	bra	u2287
  5277   01118E  F000               	nop	
  5278   011190  0012               	return		;funcret
  5279   011192                     __end_of_LCD_2x16_WriteData:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _LCD_2x16_WriteCmd *****************
  5283 ;; Defined at:
  5284 ;;		line 43 in file "lcd/lcd.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  command         1    wreg     unsigned char 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  command         1    1[BANK0 ] unsigned char 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;Total ram usage:        2 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 4
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_Lcd_Init
  5309 ;;		_LCD_2x16_WriteMsg
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text37
  5314   011030                     __ptext37:
  5315                           	callstack 0
  5316   011030                     _LCD_2x16_WriteCmd:
  5317                           	callstack 25
  5318                           
  5319                           ;incstack = 0
  5320                           ;LCD_2x16_WriteCmd@command stored from wreg
  5321   011030  0100               	movlb	0	; () banked
  5322   011032  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5323   011034                     
  5324                           ;lcd/lcd.c: 43: void LCD_2x16_WriteCmd(uint8_t command);lcd/lcd.c: 44: {;lcd/lcd.c: 45: 
      +                              LATDbits.LATD3 = 0;
  5325   011034  968C               	bcf	140,3,c	;volatile
  5326   011036                     
  5327                           ;lcd/lcd.c: 46:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5328   011036  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5329   01103A  0E0F               	movlw	15
  5330   01103C  0100               	movlb	0	; () banked
  5331   01103E  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5332   011040  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5333   011042  0BF0               	andlw	240
  5334   011044  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5335   011046  6E91               	movwf	145,c	;volatile
  5336   011048                     
  5337                           ; BSR set to: 0
  5338                           ;lcd/lcd.c: 47:     LATDbits.LATD2 = 1;
  5339   011048  848C               	bsf	140,2,c	;volatile
  5340   01104A                     
  5341                           ; BSR set to: 0
  5342                           ;lcd/lcd.c: 48:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5343   01104A  0E14               	movlw	20
  5344   01104C                     u2297:
  5345   01104C  2EE8               	decfsz	wreg,f,c
  5346   01104E  D7FE               	bra	u2297
  5347   011050  D000               	nop2	
  5348   011052                     
  5349                           ;lcd/lcd.c: 49:     LATDbits.LATD2 = 0;
  5350   011052  948C               	bcf	140,2,c	;volatile
  5351   011054                     
  5352                           ;lcd/lcd.c: 50:     _delay((unsigned long)((1)*(25000000L/4000000.0)));
  5353   011054  D000               	nop2		;2 cycle nop
  5354   011056  D000               	nop2		;2 cycle nop
  5355   011058  D000               	nop2		;2 cycle nop
  5356   01105A                     
  5357                           ;lcd/lcd.c: 51:     command = command << 4;
  5358   01105A  0100               	movlb	0	; () banked
  5359   01105C  3961               	swapf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5360   01105E  0BF0               	andlw	240
  5361   011060  6F61               	movwf	LCD_2x16_WriteCmd@command& (0+255),b
  5362   011062                     
  5363                           ; BSR set to: 0
  5364                           ;lcd/lcd.c: 52:     LATJ = (command & 0xF0) | (LATJ & 0x0F);
  5365   011062  CF91 F060          	movff	3985,??_LCD_2x16_WriteCmd	;volatile
  5366   011066  0E0F               	movlw	15
  5367   011068  1760               	andwf	??_LCD_2x16_WriteCmd& (0+255),f,b
  5368   01106A  5161               	movf	LCD_2x16_WriteCmd@command& (0+255),w,b
  5369   01106C  0BF0               	andlw	240
  5370   01106E  1160               	iorwf	??_LCD_2x16_WriteCmd& (0+255),w,b
  5371   011070  6E91               	movwf	145,c	;volatile
  5372   011072                     
  5373                           ; BSR set to: 0
  5374                           ;lcd/lcd.c: 53:     LATDbits.LATD2 = 1;
  5375   011072  848C               	bsf	140,2,c	;volatile
  5376   011074                     
  5377                           ; BSR set to: 0
  5378                           ;lcd/lcd.c: 54:     _delay((unsigned long)((10)*(25000000L/4000000.0)));
  5379   011074  0E14               	movlw	20
  5380   011076                     u2307:
  5381   011076  2EE8               	decfsz	wreg,f,c
  5382   011078  D7FE               	bra	u2307
  5383   01107A  D000               	nop2	
  5384   01107C                     
  5385                           ;lcd/lcd.c: 55:     LATDbits.LATD2 = 0;
  5386   01107C  948C               	bcf	140,2,c	;volatile
  5387   01107E                     
  5388                           ;lcd/lcd.c: 56:     _delay((unsigned long)((3)*(25000000L/4000.0)));
  5389   01107E  0E19               	movlw	25
  5390   011080  0100               	movlb	0	; () banked
  5391   011082  6F60               	movwf	??_LCD_2x16_WriteCmd& (0+255),b
  5392   011084  0E58               	movlw	88
  5393   011086                     u2317:
  5394   011086  2EE8               	decfsz	wreg,f,c
  5395   011088  D7FE               	bra	u2317
  5396   01108A  2F60               	decfsz	??_LCD_2x16_WriteCmd& (0+255),f,b
  5397   01108C  D7FC               	bra	u2317
  5398   01108E  F000               	nop	
  5399   011090  0012               	return		;funcret
  5400   011092                     __end_of_LCD_2x16_WriteCmd:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _EPWM1_LoadDutyValue *****************
  5404 ;; Defined at:
  5405 ;;		line 85 in file "mcc_generated_files/epwm1.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        4 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 4
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text38
  5434   0114B8                     __ptext38:
  5435                           	callstack 0
  5436   0114B8                     _EPWM1_LoadDutyValue:
  5437                           	callstack 26
  5438   0114B8                     
  5439                           ;mcc_generated_files/epwm1.c: 85: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 86: {;mcc_generated_files/epwm1.c: 88:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5440   0114B8  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5441   0114BC  C061  F063         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5442   0114C0  0100               	movlb	0	; () banked
  5443   0114C2  90D8               	bcf	status,0,c
  5444   0114C4  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5445   0114C6  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5446   0114C8  90D8               	bcf	status,0,c
  5447   0114CA  3363               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5448   0114CC  3362               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5449   0114CE  5162               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5450   0114D0  6EBE               	movwf	190,c	;volatile
  5451                           
  5452                           ;mcc_generated_files/epwm1.c: 91:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5453   0114D2  C060  F062         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5454   0114D6  0E03               	movlw	3
  5455   0114D8  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5456   0114DA  3B62               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5457   0114DC  0EF0               	movlw	240
  5458   0114DE  1762               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5459   0114E0  50BD               	movf	189,w,c	;volatile
  5460   0114E2  0BCF               	andlw	207
  5461   0114E4  1162               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5462   0114E6  6EBD               	movwf	189,c	;volatile
  5463   0114E8                     
  5464                           ; BSR set to: 0
  5465   0114E8  0012               	return		;funcret
  5466   0114EA                     __end_of_EPWM1_LoadDutyValue:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function _INTERRUPT_InterruptManager *****************
  5470 ;; Defined at:
  5471 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:       12 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; Hardware stack levels required when called: 3
  5492 ;; This function calls:
  5493 ;;		NULL
  5494 ;;		_EUSART1_Receive_ISR
  5495 ;;		_EUSART1_Transmit_ISR
  5496 ;;		_TMR0_ISR
  5497 ;;		_TMR0_Reload
  5498 ;;		_modbus_char_recvd
  5499 ;;		_modbus_timer
  5500 ;; This function is called by:
  5501 ;;		Interrupt level 2
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	intcode
  5506   000008                     __pintcode:
  5507                           	callstack 0
  5508   000008                     _INTERRUPT_InterruptManager:
  5509                           	callstack 19
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;incstack = 0
  5513   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5514   00000A  CFFA F01D          	movff	pclath,??_INTERRUPT_InterruptManager
  5515   00000E  CFFB F01E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5516   000012  CFE1 F01F          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5517   000016  CFE2 F020          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5518   00001A  CFD9 F021          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5519   00001E  CFDA F022          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5520   000022  CFF3 F023          	movff	prodl,??_INTERRUPT_InterruptManager+6
  5521   000026  CFF4 F024          	movff	prodh,??_INTERRUPT_InterruptManager+7
  5522   00002A  CFF6 F025          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
  5523   00002E  CFF7 F026          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
  5524   000032  CFF8 F027          	movff	tblptru,??_INTERRUPT_InterruptManager+10
  5525   000036  CFF5 F028          	movff	tablat,??_INTERRUPT_InterruptManager+11
  5526   00003A                     
  5527                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5528   00003A  AAF2               	btfss	242,5,c	;volatile
  5529   00003C  EF22  F000         	goto	i2u162_41
  5530   000040  EF24  F000         	goto	i2u162_40
  5531   000044                     i2u162_41:
  5532   000044  EF32  F000         	goto	i2l406
  5533   000048                     i2u162_40:
  5534   000048  A4F2               	btfss	242,2,c	;volatile
  5535   00004A  EF29  F000         	goto	i2u163_41
  5536   00004E  EF2B  F000         	goto	i2u163_40
  5537   000052                     i2u163_41:
  5538   000052  EF32  F000         	goto	i2l406
  5539   000056                     i2u163_40:
  5540   000056                     
  5541                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         TMR0_ISR();
  5542   000056  EC3F  F08A         	call	_TMR0_ISR	;wreg free
  5543   00005A                     
  5544                           ;mcc_generated_files/interrupt_manager.c: 65:         TMR0ON = 0;
  5545   00005A  9ED5               	bcf	4053,7,c	;volatile
  5546   00005C                     
  5547                           ;mcc_generated_files/interrupt_manager.c: 66:         modbus_timer();
  5548   00005C  EC02  F08B         	call	_modbus_timer	;wreg free
  5549                           
  5550                           ;mcc_generated_files/interrupt_manager.c: 67:     }
  5551   000060  EF79  F000         	goto	i2l414
  5552   000064                     i2l406:
  5553   000064  ACF2               	btfss	242,6,c	;volatile
  5554   000066  EF37  F000         	goto	i2u164_41
  5555   00006A  EF39  F000         	goto	i2u164_40
  5556   00006E                     i2u164_41:
  5557   00006E  EF79  F000         	goto	i2l414
  5558   000072                     i2u164_40:
  5559   000072                     
  5560                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5561   000072  A89D               	btfss	157,4,c	;volatile
  5562   000074  EF3E  F000         	goto	i2u165_41
  5563   000078  EF40  F000         	goto	i2u165_40
  5564   00007C                     i2u165_41:
  5565   00007C  EF56  F000         	goto	i2l409
  5566   000080                     i2u165_40:
  5567   000080  A89E               	btfss	158,4,c	;volatile
  5568   000082  EF45  F000         	goto	i2u166_41
  5569   000086  EF47  F000         	goto	i2u166_40
  5570   00008A                     i2u166_41:
  5571   00008A  EF56  F000         	goto	i2l409
  5572   00008E                     i2u166_40:
  5573   00008E                     
  5574                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             EUSART1_TxDefaultInterruptHandler();
  5575   00008E  D802               	call	i2u167_48
  5576   000090  EF54  F000         	goto	i2u167_49
  5577   000094                     i2u167_48:
  5578   000094  0005               	push	
  5579   000096  6EFA               	movwf	pclath,c
  5580   000098  504E               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  5581   00009A  6EFD               	movwf	tosl,c
  5582   00009C  504F               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  5583   00009E  6EFE               	movwf	tosh,c
  5584   0000A0  5050               	movf	(_EUSART1_TxDefaultInterruptHandler+2)^0,w,c
  5585   0000A2  6EFF               	movwf	tosu,c
  5586   0000A4  50FA               	movf	pclath,w,c
  5587   0000A6  0012               	return		;indir
  5588   0000A8                     i2u167_49:
  5589                           
  5590                           ;mcc_generated_files/interrupt_manager.c: 73:         }
  5591   0000A8  EF79  F000         	goto	i2l414
  5592   0000AC                     i2l409:
  5593   0000AC  AA9D               	btfss	157,5,c	;volatile
  5594   0000AE  EF5B  F000         	goto	i2u168_41
  5595   0000B2  EF5D  F000         	goto	i2u168_40
  5596   0000B6                     i2u168_41:
  5597   0000B6  EF79  F000         	goto	i2l413
  5598   0000BA                     i2u168_40:
  5599   0000BA  AA9E               	btfss	158,5,c	;volatile
  5600   0000BC  EF62  F000         	goto	i2u169_41
  5601   0000C0  EF64  F000         	goto	i2u169_40
  5602   0000C4                     i2u169_41:
  5603   0000C4  EF79  F000         	goto	i2l413
  5604   0000C8                     i2u169_40:
  5605   0000C8                     
  5606                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART1_RxDefaultInterruptHandler();
  5607   0000C8  D802               	call	i2u170_48
  5608   0000CA  EF71  F000         	goto	i2u170_49
  5609   0000CE                     i2u170_48:
  5610   0000CE  0005               	push	
  5611   0000D0  6EFA               	movwf	pclath,c
  5612   0000D2  504B               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  5613   0000D4  6EFD               	movwf	tosl,c
  5614   0000D6  504C               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  5615   0000D8  6EFE               	movwf	tosh,c
  5616   0000DA  504D               	movf	(_EUSART1_RxDefaultInterruptHandler+2)^0,w,c
  5617   0000DC  6EFF               	movwf	tosu,c
  5618   0000DE  50FA               	movf	pclath,w,c
  5619   0000E0  0012               	return		;indir
  5620   0000E2                     i2u170_49:
  5621   0000E2                     
  5622                           ;mcc_generated_files/interrupt_manager.c: 77:             modbus_char_recvd(RCREG1);
  5623   0000E2  50AE               	movf	174,w,c	;volatile
  5624   0000E4  ECAF  F08A         	call	_modbus_char_recvd
  5625   0000E8                     
  5626                           ;mcc_generated_files/interrupt_manager.c: 78:             TMR0_Reload();
  5627   0000E8  EC0E  F08B         	call	_TMR0_Reload	;wreg free
  5628   0000EC                     
  5629                           ;mcc_generated_files/interrupt_manager.c: 79:             TMR0ON = 1;
  5630   0000EC  8ED5               	bsf	4053,7,c	;volatile
  5631                           
  5632                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  5633   0000EE  EF79  F000         	goto	i2l414
  5634   0000F2                     i2l413:
  5635   0000F2                     i2l414:
  5636   0000F2  C028  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
  5637   0000F6  C027  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
  5638   0000FA  C026  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
  5639   0000FE  C025  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
  5640   000102  C024  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  5641   000106  C023  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  5642   00010A  C022  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5643   00010E  C021  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5644   000112  C020  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5645   000116  C01F  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5646   00011A  C01E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5647   00011E  C01D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5648   000122  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5649   000124  0011               	retfie		f
  5650   000126                     __end_of_INTERRUPT_InterruptManager:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _modbus_timer *****************
  5654 ;; Defined at:
  5655 ;;		line 33 in file "modbus.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 2
  5676 ;; This function calls:
  5677 ;;		_modbus_analyse_and_answer
  5678 ;;		_modbus_send
  5679 ;; This function is called by:
  5680 ;;		_INTERRUPT_InterruptManager
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text40
  5685   011604                     __ptext40:
  5686                           	callstack 0
  5687   011604                     _modbus_timer:
  5688                           	callstack 19
  5689   011604                     
  5690                           ;modbus.c: 35:     modbus_send(modbus_analyse_and_answer());
  5691   011604  EC00  F080         	call	_modbus_analyse_and_answer	;wreg free
  5692   011608  EC16  F089         	call	_modbus_send
  5693   01160C                     
  5694                           ;modbus.c: 36:     index = 0;
  5695   01160C  0E00               	movlw	0
  5696   01160E  6E3F               	movwf	_index^0,c
  5697   011610  0012               	return		;funcret
  5698   011612                     __end_of_modbus_timer:
  5699                           	callstack 0
  5700                           
  5701 ;; *************** function _modbus_send *****************
  5702 ;; Defined at:
  5703 ;;		line 128 in file "modbus.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  length          1    wreg     unsigned char 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  length          1    4[COMRAM] unsigned char 
  5708 ;;  i               2    5[COMRAM] int 
  5709 ;;  temp16          2    0        unsigned short 
  5710 ;;  i               1    0        unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:        6 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 1
  5727 ;; This function calls:
  5728 ;;		_EUSART1_Write
  5729 ;; This function is called by:
  5730 ;;		_modbus_timer
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text41
  5735   01122C                     __ptext41:
  5736                           	callstack 0
  5737   01122C                     _modbus_send:
  5738                           	callstack 19
  5739                           
  5740                           ;incstack = 0
  5741                           ;modbus_send@length stored from wreg
  5742   01122C  6E05               	movwf	modbus_send@length^0,c
  5743   01122E                     
  5744                           ;modbus.c: 128: void modbus_send(uint8_t length);modbus.c: 129: {;modbus.c: 130:  uint16
      +                          _t temp16;;modbus.c: 131:  uint8_t i;;modbus.c: 137:     for(int i = 0; i < length; i++)
      +                          {
  5745   01122E  0E00               	movlw	0
  5746   011230  6E07               	movwf	(modbus_send@i_1196+1)^0,c
  5747   011232  0E00               	movlw	0
  5748   011234  6E06               	movwf	modbus_send@i_1196^0,c
  5749   011236  EF28  F089         	goto	i2l2759
  5750   01123A                     i2l2755:
  5751                           
  5752                           ;modbus.c: 138:         EUSART1_Write(tx_buf[i]);
  5753   01123A  0E00               	movlw	low _tx_buf
  5754   01123C  2406               	addwf	modbus_send@i_1196^0,w,c
  5755   01123E  6ED9               	movwf	fsr2l,c
  5756   011240  0E02               	movlw	high _tx_buf
  5757   011242  2007               	addwfc	(modbus_send@i_1196+1)^0,w,c
  5758   011244  6EDA               	movwf	fsr2h,c
  5759   011246  50DF               	movf	indf2,w,c
  5760   011248  EC74  F088         	call	_EUSART1_Write
  5761   01124C                     
  5762                           ;modbus.c: 139:     }
  5763   01124C  4A06               	infsnz	modbus_send@i_1196^0,f,c
  5764   01124E  2A07               	incf	(modbus_send@i_1196+1)^0,f,c
  5765   011250                     i2l2759:
  5766   011250  5005               	movf	modbus_send@length^0,w,c
  5767   011252  6E02               	movwf	??_modbus_send^0,c
  5768   011254  6A03               	clrf	(??_modbus_send+1)^0,c
  5769   011256  5002               	movf	??_modbus_send^0,w,c
  5770   011258  5C06               	subwf	modbus_send@i_1196^0,w,c
  5771   01125A  5007               	movf	(modbus_send@i_1196+1)^0,w,c
  5772   01125C  0A80               	xorlw	128
  5773   01125E  6E04               	movwf	(??_modbus_send+2)^0,c
  5774   011260  5003               	movf	(??_modbus_send+1)^0,w,c
  5775   011262  0A80               	xorlw	128
  5776   011264  5804               	subwfb	(??_modbus_send+2)^0,w,c
  5777   011266  A0D8               	btfss	status,0,c
  5778   011268  EF38  F089         	goto	i2u141_41
  5779   01126C  EF3A  F089         	goto	i2u141_40
  5780   011270                     i2u141_41:
  5781   011270  EF1D  F089         	goto	i2l2755
  5782   011274                     i2u141_40:
  5783   011274  0012               	return		;funcret
  5784   011276                     __end_of_modbus_send:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _EUSART1_Write *****************
  5788 ;; Defined at:
  5789 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  txData          1    wreg     unsigned char 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  txData          1    0[COMRAM] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;Total ram usage:        1 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_modbus_send
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text42
  5817   0110E8                     __ptext42:
  5818                           	callstack 0
  5819   0110E8                     _EUSART1_Write:
  5820                           	callstack 19
  5821                           
  5822                           ;incstack = 0
  5823                           ;EUSART1_Write@txData stored from wreg
  5824   0110E8  6E01               	movwf	EUSART1_Write@txData^0,c
  5825   0110EA                     i2l2443:
  5826                           
  5827                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5828   0110EA  5045               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5829   0110EC  B4D8               	btfsc	status,2,c
  5830   0110EE  EF7B  F088         	goto	i2u126_41
  5831   0110F2  EF7D  F088         	goto	i2u126_40
  5832   0110F6                     i2u126_41:
  5833   0110F6  EF75  F088         	goto	i2l2443
  5834   0110FA                     i2u126_40:
  5835   0110FA                     
  5836                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5837   0110FA  B89D               	btfsc	157,4,c	;volatile
  5838   0110FC  EF82  F088         	goto	i2u127_41
  5839   011100  EF84  F088         	goto	i2u127_40
  5840   011104                     i2u127_41:
  5841   011104  EF88  F088         	goto	i2l284
  5842   011108                     i2u127_40:
  5843   011108                     
  5844                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5845   011108  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5846                           
  5847                           ;mcc_generated_files/eusart1.c: 182:     }
  5848   01110C  EF9D  F088         	goto	i2l2457
  5849   011110                     i2l284:
  5850                           
  5851                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5852   011110  989D               	bcf	157,4,c	;volatile
  5853   011112                     
  5854                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5855   011112  0E31               	movlw	low _eusart1TxBuffer
  5856   011114  2447               	addwf	_eusart1TxHead^0,w,c	;volatile
  5857   011116  6ED9               	movwf	fsr2l,c
  5858   011118  6ADA               	clrf	fsr2h,c
  5859   01111A  0E00               	movlw	high _eusart1TxBuffer
  5860   01111C  22DA               	addwfc	fsr2h,f,c
  5861   01111E  C001  FFDF         	movff	EUSART1_Write@txData,indf2
  5862   011122  2A47               	incf	_eusart1TxHead^0,f,c	;volatile
  5863   011124                     
  5864                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5865   011124  0E07               	movlw	7
  5866   011126  6447               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5867   011128  EF98  F088         	goto	i2u128_41
  5868   01112C  EF9A  F088         	goto	i2u128_40
  5869   011130                     i2u128_41:
  5870   011130  EF9C  F088         	goto	i2l2455
  5871   011134                     i2u128_40:
  5872   011134                     
  5873                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5874   011134  0E00               	movlw	0
  5875   011136  6E47               	movwf	_eusart1TxHead^0,c	;volatile
  5876   011138                     i2l2455:
  5877                           
  5878                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5879   011138  0645               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5880   01113A                     i2l2457:
  5881                           
  5882                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5883   01113A  889D               	bsf	157,4,c	;volatile
  5884   01113C  0012               	return		;funcret
  5885   01113E                     __end_of_EUSART1_Write:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function _modbus_analyse_and_answer *****************
  5889 ;; Defined at:
  5890 ;;		line 39 in file "modbus.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  i               2   18[COMRAM] int 
  5895 ;;  i               2   22[COMRAM] int 
  5896 ;;  nbofRegister    2   26[COMRAM] unsigned short 
  5897 ;;  startingAddr    2   24[COMRAM] unsigned short 
  5898 ;;  pwmValue        2   16[COMRAM] unsigned short 
  5899 ;;  functionCode    1   15[COMRAM] unsigned char 
  5900 ;;  crc             2   20[COMRAM] unsigned short 
  5901 ;;  crcAtt          2   13[COMRAM] unsigned short 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      unsigned char 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;Total ram usage:       19 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; Hardware stack levels required when called: 1
  5918 ;; This function calls:
  5919 ;;		_CRC16
  5920 ;; This function is called by:
  5921 ;;		_modbus_timer
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text43
  5926   010000                     __ptext43:
  5927                           	callstack 0
  5928   010000                     _modbus_analyse_and_answer:
  5929                           	callstack 19
  5930   010000                     
  5931                           ;modbus.c: 41:     if(holding_registers[1] == rx_buf[0])
  5932   010000  0101               	movlb	1	; () banked
  5933   010002  5100               	movf	_rx_buf& (0+255),w,b
  5934   010004  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5935   010006  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  5936   010008  0100               	movlb	0	; () banked
  5937   01000A  51C3               	movf	(_holding_registers+2)& (0+255),w,b
  5938   01000C  180A               	xorwf	??_modbus_analyse_and_answer^0,w,c
  5939   01000E  E107               	bnz	i2u137_41
  5940   010010  51C4               	movf	(_holding_registers+3)& (0+255),w,b
  5941   010012  180B               	xorwf	(??_modbus_analyse_and_answer+1)^0,w,c
  5942   010014  A4D8               	btfss	status,2,c
  5943   010016  EF0F  F080         	goto	i2u137_41
  5944   01001A  EF11  F080         	goto	i2u137_40
  5945   01001E                     i2u137_41:
  5946   01001E  EF4A  F081         	goto	i2l512
  5947   010022                     i2u137_40:
  5948   010022                     
  5949                           ; BSR set to: 0
  5950                           ;modbus.c: 42:     {;modbus.c: 45:         uint16_t crc = rx_buf[index-1];
  5951   010022  0EFF               	movlw	low (_rx_buf+65535)
  5952   010024  243F               	addwf	_index^0,w,c
  5953   010026  6ED9               	movwf	fsr2l,c
  5954   010028  6ADA               	clrf	fsr2h,c
  5955   01002A  0E00               	movlw	high (_rx_buf+65535)
  5956   01002C  22DA               	addwfc	fsr2h,f,c
  5957   01002E  50DF               	movf	indf2,w,c
  5958   010030  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5959   010032  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5960   010034  6E15               	movwf	modbus_analyse_and_answer@crc^0,c
  5961   010036  6A16               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  5962   010038                     
  5963                           ; BSR set to: 0
  5964                           ;modbus.c: 47:         crc = crc << 8;
  5965   010038  5015               	movf	modbus_analyse_and_answer@crc^0,w,c
  5966   01003A  6E16               	movwf	(modbus_analyse_and_answer@crc+1)^0,c
  5967   01003C  6A15               	clrf	modbus_analyse_and_answer@crc^0,c
  5968   01003E                     
  5969                           ; BSR set to: 0
  5970                           ;modbus.c: 48:         crc += rx_buf[index-2];
  5971   01003E  0EFE               	movlw	low (_rx_buf+65534)
  5972   010040  243F               	addwf	_index^0,w,c
  5973   010042  6ED9               	movwf	fsr2l,c
  5974   010044  6ADA               	clrf	fsr2h,c
  5975   010046  0E00               	movlw	high (_rx_buf+65534)
  5976   010048  22DA               	addwfc	fsr2h,f,c
  5977   01004A  50DF               	movf	indf2,w,c
  5978   01004C  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  5979   01004E  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  5980   010050  2615               	addwf	modbus_analyse_and_answer@crc^0,f,c
  5981   010052  0E00               	movlw	0
  5982   010054  2216               	addwfc	(modbus_analyse_and_answer@crc+1)^0,f,c
  5983   010056                     
  5984                           ; BSR set to: 0
  5985                           ;modbus.c: 49:         uint16_t crcAtt = CRC16(rx_buf,index-2);
  5986   010056  0E00               	movlw	low _rx_buf
  5987   010058  6E01               	movwf	CRC16@msg^0,c
  5988   01005A  0E01               	movlw	high _rx_buf
  5989   01005C  6E02               	movwf	(CRC16@msg+1)^0,c
  5990   01005E  0EFE               	movlw	254
  5991   010060  243F               	addwf	_index^0,w,c
  5992   010062  6E03               	movwf	CRC16@length^0,c
  5993   010064  6A04               	clrf	(CRC16@length+1)^0,c
  5994   010066  0EFF               	movlw	255
  5995   010068  2204               	addwfc	(CRC16@length+1)^0,f,c
  5996   01006A  ECA3  F087         	call	_CRC16	;wreg free
  5997   01006E  C001  F00E         	movff	?_CRC16,modbus_analyse_and_answer@crcAtt
  5998   010072  C002  F00F         	movff	?_CRC16+1,modbus_analyse_and_answer@crcAtt+1
  5999   010076                     
  6000                           ;modbus.c: 50:         if(crc == crcAtt){
  6001   010076  500E               	movf	modbus_analyse_and_answer@crcAtt^0,w,c
  6002   010078  1815               	xorwf	modbus_analyse_and_answer@crc^0,w,c
  6003   01007A  E107               	bnz	i2u138_41
  6004   01007C  500F               	movf	(modbus_analyse_and_answer@crcAtt+1)^0,w,c
  6005   01007E  1816               	xorwf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6006   010080  A4D8               	btfss	status,2,c
  6007   010082  EF45  F080         	goto	i2u138_41
  6008   010086  EF47  F080         	goto	i2u138_40
  6009   01008A                     i2u138_41:
  6010   01008A  EF4A  F081         	goto	i2l512
  6011   01008E                     i2u138_40:
  6012   01008E                     
  6013                           ;modbus.c: 57:             uint8_t functionCode = rx_buf[1];
  6014   01008E  C101  F010         	movff	_rx_buf+1,modbus_analyse_and_answer@functionCode
  6015   010092                     
  6016                           ;modbus.c: 59:             uint16_t nbofRegister = 0;
  6017   010092  0E00               	movlw	0
  6018   010094  6E1C               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6019   010096  0E00               	movlw	0
  6020   010098  6E1B               	movwf	modbus_analyse_and_answer@nbofRegister^0,c
  6021                           
  6022                           ;modbus.c: 60:             uint16_t pwmValue = 0;
  6023   01009A  0E00               	movlw	0
  6024   01009C  6E12               	movwf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6025   01009E  0E00               	movlw	0
  6026   0100A0  6E11               	movwf	modbus_analyse_and_answer@pwmValue^0,c
  6027                           
  6028                           ;modbus.c: 61:             tx_buf[0] = 0x80;
  6029   0100A2  0E80               	movlw	128
  6030   0100A4  0102               	movlb	2	; () banked
  6031   0100A6  6F00               	movwf	_tx_buf& (0+255),b
  6032                           
  6033                           ;modbus.c: 62:             switch (functionCode){
  6034   0100A8  EF35  F081         	goto	i2l2745
  6035   0100AC                     i2l508:
  6036                           
  6037                           ; BSR set to: 2
  6038                           ;modbus.c: 66:                     startingAddress = rx_buf[2];
  6039   0100AC  C102  F019         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6040   0100B0  6A1A               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6041   0100B2                     
  6042                           ; BSR set to: 2
  6043                           ;modbus.c: 67:                     startingAddress = startingAddress << 8;
  6044   0100B2  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6045   0100B4  6E1A               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6046   0100B6  6A19               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6047   0100B8                     
  6048                           ; BSR set to: 2
  6049                           ;modbus.c: 68:                     startingAddress += rx_buf[3];
  6050   0100B8  0101               	movlb	1	; () banked
  6051   0100BA  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6052   0100BC  2619               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6053   0100BE  0E00               	movlw	0
  6054   0100C0  221A               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6055   0100C2                     
  6056                           ; BSR set to: 1
  6057                           ;modbus.c: 69:                     nbofRegister = rx_buf[4];
  6058   0100C2  C104  F01B         	movff	_rx_buf+4,modbus_analyse_and_answer@nbofRegister
  6059   0100C6  6A1C               	clrf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6060   0100C8                     
  6061                           ; BSR set to: 1
  6062                           ;modbus.c: 70:                     nbofRegister <<= 8;
  6063   0100C8  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6064   0100CA  6E1C               	movwf	(modbus_analyse_and_answer@nbofRegister+1)^0,c
  6065   0100CC  6A1B               	clrf	modbus_analyse_and_answer@nbofRegister^0,c
  6066                           
  6067                           ;modbus.c: 71:                     nbofRegister += rx_buf[5];
  6068   0100CE  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6069   0100D0  261B               	addwf	modbus_analyse_and_answer@nbofRegister^0,f,c
  6070   0100D2  0E00               	movlw	0
  6071   0100D4  221C               	addwfc	(modbus_analyse_and_answer@nbofRegister+1)^0,f,c
  6072   0100D6                     
  6073                           ; BSR set to: 1
  6074                           ;modbus.c: 73:                     tx_buf[1] = 0x04;
  6075   0100D6  0E04               	movlw	4
  6076   0100D8  0102               	movlb	2	; () banked
  6077   0100DA  6F01               	movwf	(_tx_buf+1)& (0+255),b
  6078   0100DC                     
  6079                           ; BSR set to: 2
  6080                           ;modbus.c: 74:                     tx_buf[2] = 2*nbofRegister;
  6081   0100DC  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6082   0100DE  241B               	addwf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6083   0100E0  6F02               	movwf	(_tx_buf+2)& (0+255),b
  6084                           
  6085                           ;modbus.c: 76:                     for(int i = 0;i < nbofRegister;i++)
  6086   0100E2  0E00               	movlw	0
  6087   0100E4  6E18               	movwf	(modbus_analyse_and_answer@i+1)^0,c
  6088   0100E6  0E00               	movlw	0
  6089   0100E8  6E17               	movwf	modbus_analyse_and_answer@i^0,c
  6090   0100EA  EFB4  F080         	goto	i2l2699
  6091   0100EE                     i2l2695:
  6092                           
  6093                           ;modbus.c: 77:                     {;modbus.c: 78:                         tx_buf[3+(i*2
      +                          )] = (input_registers[startingAddress + i]>>8);
  6094   0100EE  90D8               	bcf	status,0,c
  6095   0100F0  3417               	rlcf	modbus_analyse_and_answer@i^0,w,c
  6096   0100F2  6ED9               	movwf	fsr2l,c
  6097   0100F4  3418               	rlcf	(modbus_analyse_and_answer@i+1)^0,w,c
  6098   0100F6  6EDA               	movwf	fsr2h,c
  6099   0100F8  0E03               	movlw	low (_tx_buf+3)
  6100   0100FA  26D9               	addwf	fsr2l,f,c
  6101   0100FC  0E02               	movlw	high (_tx_buf+3)
  6102   0100FE  22DA               	addwfc	fsr2h,f,c
  6103   010100  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6104   010102  2417               	addwf	modbus_analyse_and_answer@i^0,w,c
  6105   010104  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6106   010106  501A               	movf	(modbus_analyse_and_answer@startingAddress+1)^0,w,c
  6107   010108  2018               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6108   01010A  6E0B               	movwf	(??_modbus_analyse_and_answer+1)^0,c
  6109   01010C  90D8               	bcf	status,0,c
  6110   01010E  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6111   010110  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6112   010112  0EBD               	movlw	low _input_registers
  6113   010114  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6114   010116  6EE1               	movwf	fsr1l,c
  6115   010118  0E00               	movlw	high _input_registers
  6116   01011A  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6117   01011C  6EE2               	movwf	fsr1h,c
  6118   01011E  CFE6 F00C          	movff	postinc1,??_modbus_analyse_and_answer+2
  6119   010122  CFE5 F00D          	movff	postdec1,??_modbus_analyse_and_answer+3
  6120   010126  C00D  F00C         	movff	??_modbus_analyse_and_answer+3,??_modbus_analyse_and_answer+2
  6121   01012A  6A0D               	clrf	(??_modbus_analyse_and_answer+3)^0,c
  6122   01012C  500C               	movf	(??_modbus_analyse_and_answer+2)^0,w,c
  6123   01012E  6EDF               	movwf	indf2,c
  6124                           
  6125                           ;modbus.c: 79:                         tx_buf[3+(i*2)+1] = input_registers[startingAddre
      +                          ss + i];
  6126   010130  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6127   010132  2417               	addwf	modbus_analyse_and_answer@i^0,w,c
  6128   010134  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6129   010136  501A               	movf	(modbus_analyse_and_answer@startingAddress+1)^0,w,c
  6130   010138  2018               	addwfc	(modbus_analyse_and_answer@i+1)^0,w,c
  6131   01013A  6E0B               	movwf	(??_modbus_analyse_and_answer+1)^0,c
  6132   01013C  90D8               	bcf	status,0,c
  6133   01013E  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6134   010140  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6135   010142  0EBD               	movlw	low _input_registers
  6136   010144  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6137   010146  6ED9               	movwf	fsr2l,c
  6138   010148  0E00               	movlw	high _input_registers
  6139   01014A  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6140   01014C  6EDA               	movwf	fsr2h,c
  6141   01014E  90D8               	bcf	status,0,c
  6142   010150  3417               	rlcf	modbus_analyse_and_answer@i^0,w,c
  6143   010152  6EE1               	movwf	fsr1l,c
  6144   010154  3418               	rlcf	(modbus_analyse_and_answer@i+1)^0,w,c
  6145   010156  6EE2               	movwf	fsr1h,c
  6146   010158  0E04               	movlw	low (_tx_buf+4)
  6147   01015A  26E1               	addwf	fsr1l,f,c
  6148   01015C  0E02               	movlw	high (_tx_buf+4)
  6149   01015E  22E2               	addwfc	fsr1h,f,c
  6150   010160  CFDF FFE7          	movff	indf2,indf1
  6151   010164                     
  6152                           ;modbus.c: 80:                     }
  6153   010164  4A17               	infsnz	modbus_analyse_and_answer@i^0,f,c
  6154   010166  2A18               	incf	(modbus_analyse_and_answer@i+1)^0,f,c
  6155   010168                     i2l2699:
  6156   010168  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6157   01016A  5C17               	subwf	modbus_analyse_and_answer@i^0,w,c
  6158   01016C  501C               	movf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6159   01016E  5818               	subwfb	(modbus_analyse_and_answer@i+1)^0,w,c
  6160   010170  A0D8               	btfss	status,0,c
  6161   010172  EFBD  F080         	goto	i2u139_41
  6162   010176  EFBF  F080         	goto	i2u139_40
  6163   01017A                     i2u139_41:
  6164   01017A  EF77  F080         	goto	i2l2695
  6165   01017E                     i2u139_40:
  6166   01017E                     
  6167                           ;modbus.c: 82:                     crc = CRC16(tx_buf,nbofRegister*2+3);
  6168   01017E  0E00               	movlw	low _tx_buf
  6169   010180  6E01               	movwf	CRC16@msg^0,c
  6170   010182  0E02               	movlw	high _tx_buf
  6171   010184  6E02               	movwf	(CRC16@msg+1)^0,c
  6172   010186  C01B  F00A         	movff	modbus_analyse_and_answer@nbofRegister,??_modbus_analyse_and_answer
  6173   01018A  C01C  F00B         	movff	modbus_analyse_and_answer@nbofRegister+1,??_modbus_analyse_and_answer+1
  6174   01018E  90D8               	bcf	status,0,c
  6175   010190  360A               	rlcf	??_modbus_analyse_and_answer^0,f,c
  6176   010192  360B               	rlcf	(??_modbus_analyse_and_answer+1)^0,f,c
  6177   010194  0E03               	movlw	3
  6178   010196  240A               	addwf	??_modbus_analyse_and_answer^0,w,c
  6179   010198  6E03               	movwf	CRC16@length^0,c
  6180   01019A  0E00               	movlw	0
  6181   01019C  200B               	addwfc	(??_modbus_analyse_and_answer+1)^0,w,c
  6182   01019E  6E04               	movwf	(CRC16@length+1)^0,c
  6183   0101A0  ECA3  F087         	call	_CRC16	;wreg free
  6184   0101A4  C001  F015         	movff	?_CRC16,modbus_analyse_and_answer@crc
  6185   0101A8  C002  F016         	movff	?_CRC16+1,modbus_analyse_and_answer@crc+1
  6186   0101AC                     
  6187                           ;modbus.c: 83:                     tx_buf[nbofRegister*2+3] = crc;
  6188   0101AC  90D8               	bcf	status,0,c
  6189   0101AE  341B               	rlcf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6190   0101B0  6ED9               	movwf	fsr2l,c
  6191   0101B2  341C               	rlcf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6192   0101B4  6EDA               	movwf	fsr2h,c
  6193   0101B6  0E03               	movlw	low (_tx_buf+3)
  6194   0101B8  26D9               	addwf	fsr2l,f,c
  6195   0101BA  0E02               	movlw	high (_tx_buf+3)
  6196   0101BC  22DA               	addwfc	fsr2h,f,c
  6197   0101BE  C015  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6198   0101C2                     
  6199                           ;modbus.c: 84:                     crc >>= 8;
  6200   0101C2  5016               	movf	(modbus_analyse_and_answer@crc+1)^0,w,c
  6201   0101C4  6E15               	movwf	modbus_analyse_and_answer@crc^0,c
  6202   0101C6  6A16               	clrf	(modbus_analyse_and_answer@crc+1)^0,c
  6203   0101C8                     
  6204                           ;modbus.c: 85:                     tx_buf[nbofRegister*2+4] = crc;
  6205   0101C8  90D8               	bcf	status,0,c
  6206   0101CA  341B               	rlcf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6207   0101CC  6ED9               	movwf	fsr2l,c
  6208   0101CE  341C               	rlcf	(modbus_analyse_and_answer@nbofRegister+1)^0,w,c
  6209   0101D0  6EDA               	movwf	fsr2h,c
  6210   0101D2  0E04               	movlw	low (_tx_buf+4)
  6211   0101D4  26D9               	addwf	fsr2l,f,c
  6212   0101D6  0E02               	movlw	high (_tx_buf+4)
  6213   0101D8  22DA               	addwfc	fsr2h,f,c
  6214   0101DA  C015  FFDF         	movff	modbus_analyse_and_answer@crc,indf2
  6215   0101DE                     
  6216                           ;modbus.c: 86:                     return nbofRegister*2+5;
  6217   0101DE  501B               	movf	modbus_analyse_and_answer@nbofRegister^0,w,c
  6218   0101E0  0D02               	mullw	2
  6219   0101E2  50F3               	movf	243,w,c
  6220   0101E4  0F05               	addlw	5
  6221   0101E6  EF4A  F081         	goto	i2l512
  6222   0101EA                     i2l2711:
  6223                           
  6224                           ; BSR set to: 2
  6225   0101EA  EF4A  F081         	goto	i2l512
  6226   0101EE                     i2l514:
  6227                           
  6228                           ; BSR set to: 2
  6229                           ;modbus.c: 90:                     startingAddress = rx_buf[2];
  6230   0101EE  C102  F019         	movff	_rx_buf+2,modbus_analyse_and_answer@startingAddress
  6231   0101F2  6A1A               	clrf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6232   0101F4                     
  6233                           ; BSR set to: 2
  6234                           ;modbus.c: 91:                     startingAddress = startingAddress << 8;
  6235   0101F4  5019               	movf	modbus_analyse_and_answer@startingAddress^0,w,c
  6236   0101F6  6E1A               	movwf	(modbus_analyse_and_answer@startingAddress+1)^0,c
  6237   0101F8  6A19               	clrf	modbus_analyse_and_answer@startingAddress^0,c
  6238   0101FA                     
  6239                           ; BSR set to: 2
  6240                           ;modbus.c: 92:                     startingAddress += rx_buf[3];
  6241   0101FA  0101               	movlb	1	; () banked
  6242   0101FC  5103               	movf	(_rx_buf+3)& (0+255),w,b
  6243   0101FE  2619               	addwf	modbus_analyse_and_answer@startingAddress^0,f,c
  6244   010200  0E00               	movlw	0
  6245   010202  221A               	addwfc	(modbus_analyse_and_answer@startingAddress+1)^0,f,c
  6246   010204                     
  6247                           ; BSR set to: 1
  6248                           ;modbus.c: 93:                     pwmValue = rx_buf[4];
  6249   010204  C104  F011         	movff	_rx_buf+4,modbus_analyse_and_answer@pwmValue
  6250   010208  6A12               	clrf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6251   01020A                     
  6252                           ; BSR set to: 1
  6253                           ;modbus.c: 94:                     pwmValue <<= 8;
  6254   01020A  5011               	movf	modbus_analyse_and_answer@pwmValue^0,w,c
  6255   01020C  6E12               	movwf	(modbus_analyse_and_answer@pwmValue+1)^0,c
  6256   01020E  6A11               	clrf	modbus_analyse_and_answer@pwmValue^0,c
  6257                           
  6258                           ;modbus.c: 95:                     pwmValue += rx_buf[5];
  6259   010210  5105               	movf	(_rx_buf+5)& (0+255),w,b
  6260   010212  2611               	addwf	modbus_analyse_and_answer@pwmValue^0,f,c
  6261   010214  0E00               	movlw	0
  6262   010216  2212               	addwfc	(modbus_analyse_and_answer@pwmValue+1)^0,f,c
  6263   010218                     
  6264                           ; BSR set to: 1
  6265                           ;modbus.c: 96:                     holding_registers[0] = pwmValue;
  6266   010218  C011  F0C1         	movff	modbus_analyse_and_answer@pwmValue,_holding_registers
  6267   01021C  C012  F0C2         	movff	modbus_analyse_and_answer@pwmValue+1,_holding_registers+1
  6268   010220                     
  6269                           ; BSR set to: 1
  6270                           ;modbus.c: 98:                     for (int i = 0; i < 7; i++){
  6271   010220  0E00               	movlw	0
  6272   010222  6E14               	movwf	(modbus_analyse_and_answer@i_1189+1)^0,c
  6273   010224  0E00               	movlw	0
  6274   010226  6E13               	movwf	modbus_analyse_and_answer@i_1189^0,c
  6275   010228                     i2l2731:
  6276                           
  6277                           ;modbus.c: 99:                         tx_buf[i+1] = rx_buf[i+1];
  6278   010228  0E01               	movlw	low (_rx_buf+1)
  6279   01022A  2413               	addwf	modbus_analyse_and_answer@i_1189^0,w,c
  6280   01022C  6ED9               	movwf	fsr2l,c
  6281   01022E  0E01               	movlw	high (_rx_buf+1)
  6282   010230  2014               	addwfc	(modbus_analyse_and_answer@i_1189+1)^0,w,c
  6283   010232  6EDA               	movwf	fsr2h,c
  6284   010234  0E01               	movlw	low (_tx_buf+1)
  6285   010236  2413               	addwf	modbus_analyse_and_answer@i_1189^0,w,c
  6286   010238  6EE1               	movwf	fsr1l,c
  6287   01023A  0E02               	movlw	high (_tx_buf+1)
  6288   01023C  2014               	addwfc	(modbus_analyse_and_answer@i_1189+1)^0,w,c
  6289   01023E  6EE2               	movwf	fsr1h,c
  6290   010240  CFDF FFE7          	movff	indf2,indf1
  6291   010244                     
  6292                           ;modbus.c: 100:                     }
  6293   010244  4A13               	infsnz	modbus_analyse_and_answer@i_1189^0,f,c
  6294   010246  2A14               	incf	(modbus_analyse_and_answer@i_1189+1)^0,f,c
  6295   010248  BE14               	btfsc	(modbus_analyse_and_answer@i_1189+1)^0,7,c
  6296   01024A  EF30  F081         	goto	i2u140_41
  6297   01024E  5014               	movf	(modbus_analyse_and_answer@i_1189+1)^0,w,c
  6298   010250  E109               	bnz	i2u140_40
  6299   010252  0E07               	movlw	7
  6300   010254  5C13               	subwf	modbus_analyse_and_answer@i_1189^0,w,c
  6301   010256  A0D8               	btfss	status,0,c
  6302   010258  EF30  F081         	goto	i2u140_41
  6303   01025C  EF32  F081         	goto	i2u140_40
  6304   010260                     i2u140_41:
  6305   010260  EF14  F081         	goto	i2l2731
  6306   010264                     i2u140_40:
  6307   010264                     
  6308                           ;modbus.c: 101:                     return 8;
  6309   010264  0E08               	movlw	8
  6310   010266  EF4A  F081         	goto	i2l512
  6311   01026A                     i2l2745:
  6312                           
  6313                           ; BSR set to: 2
  6314   01026A  5010               	movf	modbus_analyse_and_answer@functionCode^0,w,c
  6315   01026C  6E0A               	movwf	??_modbus_analyse_and_answer^0,c
  6316   01026E  6A0B               	clrf	(??_modbus_analyse_and_answer+1)^0,c
  6317                           
  6318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6319                           ; Switch size 1, requested type "simple"
  6320                           ; Number of cases is 1, Range of values is 0 to 0
  6321                           ; switch strategies available:
  6322                           ; Name         Instructions Cycles
  6323                           ; simple_byte            4     3 (average)
  6324                           ;	Chosen strategy is simple_byte
  6325   010270  500B               	movf	(??_modbus_analyse_and_answer+1)^0,w,c
  6326   010272  0A00               	xorlw	0	; case 0
  6327   010274  B4D8               	btfsc	status,2,c
  6328   010276  EF3F  F081         	goto	i2l3673
  6329   01027A  EFF5  F080         	goto	i2l2711
  6330   01027E                     i2l3673:
  6331                           
  6332                           ; BSR set to: 2
  6333                           ; Switch size 1, requested type "simple"
  6334                           ; Number of cases is 2, Range of values is 4 to 6
  6335                           ; switch strategies available:
  6336                           ; Name         Instructions Cycles
  6337                           ; simple_byte            7     4 (average)
  6338                           ;	Chosen strategy is simple_byte
  6339   01027E  500A               	movf	??_modbus_analyse_and_answer^0,w,c
  6340   010280  0A04               	xorlw	4	; case 4
  6341   010282  B4D8               	btfsc	status,2,c
  6342   010284  EF56  F080         	goto	i2l508
  6343   010288  0A02               	xorlw	2	; case 6
  6344   01028A  B4D8               	btfsc	status,2,c
  6345   01028C  EFF7  F080         	goto	i2l514
  6346   010290  EFF5  F080         	goto	i2l2711
  6347   010294                     i2l512:
  6348   010294  0012               	return		;funcret
  6349   010296                     __end_of_modbus_analyse_and_answer:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function _CRC16 *****************
  6353 ;; Defined at:
  6354 ;;		line 48 in file "crc.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  msg             2    0[COMRAM] PTR const unsigned char 
  6357 ;;		 -> tx_buf(256), rx_buf(256), 
  6358 ;;  length          2    2[COMRAM] unsigned short 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  uchCRCLo        1    8[COMRAM] unsigned char 
  6361 ;;  uchCRCHi        1    7[COMRAM] unsigned char 
  6362 ;;  uIndex          1    6[COMRAM] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  2    0[COMRAM] unsigned short 
  6365 ;; Registers used:
  6366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;Total ram usage:        9 bytes
  6377 ;; Hardware stack levels used: 1
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_modbus_analyse_and_answer
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text44
  6386   010F46                     __ptext44:
  6387                           	callstack 0
  6388   010F46                     _CRC16:
  6389                           	callstack 19
  6390   010F46                     
  6391                           ;crc.c: 48: uint16_t CRC16(const uint8_t *msg, uint16_t length);crc.c: 49: {;crc.c: 50: 
      +                           uint8_t uchCRCHi = 0xFF;
  6392   010F46  6808               	setf	CRC16@uchCRCHi^0,c
  6393                           
  6394                           ;crc.c: 51:  uint8_t uchCRCLo = 0xFF;
  6395   010F48  6809               	setf	CRC16@uchCRCLo^0,c
  6396                           
  6397                           ;crc.c: 52:  uint8_t uIndex;;crc.c: 54:  while (length--) {
  6398   010F4A  EFC9  F087         	goto	i2l2481
  6399   010F4E                     i2l2473:
  6400                           
  6401                           ;crc.c: 55:   uIndex = uchCRCLo ^ *msg++;
  6402   010F4E  C001  FFD9         	movff	CRC16@msg,fsr2l
  6403   010F52  C002  FFDA         	movff	CRC16@msg+1,fsr2h
  6404   010F56  50DF               	movf	indf2,w,c
  6405   010F58  1809               	xorwf	CRC16@uchCRCLo^0,w,c
  6406   010F5A  6E07               	movwf	CRC16@uIndex^0,c
  6407   010F5C  4A01               	infsnz	CRC16@msg^0,f,c
  6408   010F5E  2A02               	incf	(CRC16@msg+1)^0,f,c
  6409   010F60                     
  6410                           ;crc.c: 56:   uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex];
  6411   010F60  0EE5               	movlw	low _auchCRCHi
  6412   010F62  2407               	addwf	CRC16@uIndex^0,w,c
  6413   010F64  6EF6               	movwf	tblptrl,c
  6414   010F66  6AF7               	clrf	tblptrh,c
  6415   010F68  0EFE               	movlw	high _auchCRCHi
  6416   010F6A  22F7               	addwfc	tblptrh,f,c
  6417   010F6C                     	if	1	;There are 3 active tblptr bytes
  6418   010F6C  6AF8               	clrf	tblptru,c
  6419   010F6E  0E00               	movlw	low (__mediumconst shr (0+16))
  6420   010F70  22F8               	addwfc	tblptru,f,c
  6421   010F72                     	endif
  6422   010F72  0008               	tblrd		*
  6423   010F74  50F5               	movf	tablat,w,c
  6424   010F76  1808               	xorwf	CRC16@uchCRCHi^0,w,c
  6425   010F78  6E09               	movwf	CRC16@uchCRCLo^0,c
  6426   010F7A                     
  6427                           ;crc.c: 57:   uchCRCHi = auchCRCLo[uIndex];
  6428   010F7A  0EE5               	movlw	low _auchCRCLo
  6429   010F7C  2407               	addwf	CRC16@uIndex^0,w,c
  6430   010F7E  6EF6               	movwf	tblptrl,c
  6431   010F80  6AF7               	clrf	tblptrh,c
  6432   010F82  0EFD               	movlw	high _auchCRCLo
  6433   010F84  22F7               	addwfc	tblptrh,f,c
  6434   010F86                     	if	1	;There are 3 active tblptr bytes
  6435   010F86  6AF8               	clrf	tblptru,c
  6436   010F88  0E00               	movlw	low (__mediumconst shr (0+16))
  6437   010F8A  22F8               	addwfc	tblptru,f,c
  6438   010F8C                     	endif
  6439   010F8C  0008               	tblrd		*
  6440   010F8E  CFF5 F008          	movff	tablat,CRC16@uchCRCHi
  6441   010F92                     i2l2481:
  6442                           
  6443                           ;crc.c: 54:  while (length--) {
  6444   010F92  0603               	decf	CRC16@length^0,f,c
  6445   010F94  A0D8               	btfss	status,0,c
  6446   010F96  0604               	decf	(CRC16@length+1)^0,f,c
  6447   010F98  2803               	incf	CRC16@length^0,w,c
  6448   010F9A  E106               	bnz	i2u130_41
  6449   010F9C  2804               	incf	(CRC16@length+1)^0,w,c
  6450   010F9E  A4D8               	btfss	status,2,c
  6451   010FA0  EFD4  F087         	goto	i2u130_41
  6452   010FA4  EFD6  F087         	goto	i2u130_40
  6453   010FA8                     i2u130_41:
  6454   010FA8  EFA7  F087         	goto	i2l2473
  6455   010FAC                     i2u130_40:
  6456   010FAC                     
  6457                           ;crc.c: 59:  return (uchCRCHi << 8 | uchCRCLo);
  6458   010FAC  5009               	movf	CRC16@uchCRCLo^0,w,c
  6459   010FAE  C008  F005         	movff	CRC16@uchCRCHi,??_CRC16
  6460   010FB2  6A06               	clrf	(??_CRC16+1)^0,c
  6461   010FB4  C005  F006         	movff	??_CRC16,??_CRC16+1
  6462   010FB8  6A05               	clrf	??_CRC16^0,c
  6463   010FBA  1005               	iorwf	??_CRC16^0,w,c
  6464   010FBC  6E01               	movwf	?_CRC16^0,c
  6465   010FBE  5006               	movf	(??_CRC16+1)^0,w,c
  6466   010FC0  6E02               	movwf	(?_CRC16+1)^0,c
  6467   010FC2  0012               	return		;funcret
  6468   010FC4                     __end_of_CRC16:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _modbus_char_recvd *****************
  6472 ;; Defined at:
  6473 ;;		line 120 in file "modbus.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  c               1    wreg     unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  c               1    0[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;Total ram usage:        1 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_INTERRUPT_InterruptManager
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text45
  6501   01155E                     __ptext45:
  6502                           	callstack 0
  6503   01155E                     _modbus_char_recvd:
  6504                           	callstack 21
  6505                           
  6506                           ;incstack = 0
  6507                           ;modbus_char_recvd@c stored from wreg
  6508   01155E  6E01               	movwf	modbus_char_recvd@c^0,c
  6509   011560                     
  6510                           ;modbus.c: 120: void modbus_char_recvd(uint8_t c);modbus.c: 121: {;modbus.c: 123:     TM
      +                          R0ON = 1;
  6511   011560  8ED5               	bsf	4053,7,c	;volatile
  6512   011562                     
  6513                           ;modbus.c: 124:     rx_buf[index] = c;
  6514   011562  0E00               	movlw	low _rx_buf
  6515   011564  243F               	addwf	_index^0,w,c
  6516   011566  6ED9               	movwf	fsr2l,c
  6517   011568  6ADA               	clrf	fsr2h,c
  6518   01156A  0E01               	movlw	high _rx_buf
  6519   01156C  22DA               	addwfc	fsr2h,f,c
  6520   01156E  C001  FFDF         	movff	modbus_char_recvd@c,indf2
  6521   011572                     
  6522                           ;modbus.c: 125:     index ++;
  6523   011572  2A3F               	incf	_index^0,f,c
  6524   011574  0012               	return		;funcret
  6525   011576                     __end_of_modbus_char_recvd:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _TMR0_Reload *****************
  6529 ;; Defined at:
  6530 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_INTERRUPT_InterruptManager
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text46
  6558   01161C                     __ptext46:
  6559                           	callstack 0
  6560   01161C                     _TMR0_Reload:
  6561                           	callstack 21
  6562   01161C                     
  6563                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  6564   01161C  503D               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6565   01161E  6ED7               	movwf	215,c	;volatile
  6566   011620                     
  6567                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  6568   011620  C03C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6569   011624  0012               	return		;funcret
  6570   011626                     __end_of_TMR0_Reload:
  6571                           	callstack 0
  6572                           
  6573 ;; *************** function _TMR0_ISR *****************
  6574 ;; Defined at:
  6575 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 1
  6596 ;; This function calls:
  6597 ;;		NULL
  6598 ;;		_TMR0_DefaultInterruptHandler
  6599 ;; This function is called by:
  6600 ;;		_INTERRUPT_InterruptManager
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text47
  6605   01147E                     __ptext47:
  6606                           	callstack 0
  6607   01147E                     _TMR0_ISR:
  6608                           	callstack 20
  6609   01147E                     
  6610                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6611   01147E  94F2               	bcf	242,2,c	;volatile
  6612   011480                     
  6613                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6614   011480  503D               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6615   011482  6ED7               	movwf	215,c	;volatile
  6616   011484                     
  6617                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6618   011484  C03C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6619   011488                     
  6620                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  6621   011488  5048               	movf	_TMR0_InterruptHandler^0,w,c
  6622   01148A  1049               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  6623   01148C  104A               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  6624   01148E  B4D8               	btfsc	status,2,c
  6625   011490  EF4C  F08A         	goto	i2u69_41
  6626   011494  EF4E  F08A         	goto	i2u69_40
  6627   011498                     i2u69_41:
  6628   011498  EF5B  F08A         	goto	i2l368
  6629   01149C                     i2u69_40:
  6630   01149C                     
  6631                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  6632   01149C  D802               	call	i2u70_48
  6633   01149E  EF5B  F08A         	goto	i2u70_49
  6634   0114A2                     i2u70_48:
  6635   0114A2  0005               	push	
  6636   0114A4  6EFA               	movwf	pclath,c
  6637   0114A6  5048               	movf	_TMR0_InterruptHandler^0,w,c
  6638   0114A8  6EFD               	movwf	tosl,c
  6639   0114AA  5049               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  6640   0114AC  6EFE               	movwf	tosh,c
  6641   0114AE  504A               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  6642   0114B0  6EFF               	movwf	tosu,c
  6643   0114B2  50FA               	movf	pclath,w,c
  6644   0114B4  0012               	return		;indir
  6645   0114B6                     i2u70_49:
  6646   0114B6                     i2l368:
  6647   0114B6  0012               	return		;funcret
  6648   0114B8                     __end_of_TMR0_ISR:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6652 ;; Defined at:
  6653 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		None
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;Total ram usage:        0 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_TMR0_Initialize
  6677 ;;		_TMR0_ISR
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text48
  6682   011638                     __ptext48:
  6683                           	callstack 0
  6684   011638                     _TMR0_DefaultInterruptHandler:
  6685                           	callstack 20
  6686   011638  0012               	return		;funcret
  6687   01163A                     __end_of_TMR0_DefaultInterruptHandler:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function _EUSART1_Transmit_ISR *****************
  6691 ;; Defined at:
  6692 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;Total ram usage:        0 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_EUSART1_Initialize
  6716 ;;		_INTERRUPT_InterruptManager
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text49
  6721   0113C8                     __ptext49:
  6722                           	callstack 0
  6723   0113C8                     _EUSART1_Transmit_ISR:
  6724                           	callstack 21
  6725   0113C8                     
  6726                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6727   0113C8  0E08               	movlw	8
  6728   0113CA  6045               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  6729   0113CC  EFEA  F089         	goto	i2u61_41
  6730   0113D0  EFEC  F089         	goto	i2u61_40
  6731   0113D4                     i2u61_41:
  6732   0113D4  EF02  F08A         	goto	i2l290
  6733   0113D8                     i2u61_40:
  6734   0113D8                     
  6735                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6736   0113D8  0E31               	movlw	low _eusart1TxBuffer
  6737   0113DA  2446               	addwf	_eusart1TxTail^0,w,c	;volatile
  6738   0113DC  6ED9               	movwf	fsr2l,c
  6739   0113DE  6ADA               	clrf	fsr2h,c
  6740   0113E0  0E00               	movlw	high _eusart1TxBuffer
  6741   0113E2  22DA               	addwfc	fsr2h,f,c
  6742   0113E4  50DF               	movf	indf2,w,c
  6743   0113E6  6EAD               	movwf	173,c	;volatile
  6744   0113E8  2A46               	incf	_eusart1TxTail^0,f,c	;volatile
  6745   0113EA                     
  6746                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6747   0113EA  0E07               	movlw	7
  6748   0113EC  6446               	cpfsgt	_eusart1TxTail^0,c	;volatile
  6749   0113EE  EFFB  F089         	goto	i2u62_41
  6750   0113F2  EFFD  F089         	goto	i2u62_40
  6751   0113F6                     i2u62_41:
  6752   0113F6  EFFF  F089         	goto	i2l1947
  6753   0113FA                     i2u62_40:
  6754   0113FA                     
  6755                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  6756   0113FA  0E00               	movlw	0
  6757   0113FC  6E46               	movwf	_eusart1TxTail^0,c	;volatile
  6758   0113FE                     i2l1947:
  6759                           
  6760                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  6761   0113FE  2A45               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  6762                           
  6763                           ;mcc_generated_files/eusart1.c: 209:     }
  6764   011400  EF03  F08A         	goto	i2l293
  6765   011404                     i2l290:
  6766                           
  6767                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE1bits.TX1IE = 0;
  6768   011404  989D               	bcf	157,4,c	;volatile
  6769   011406                     i2l293:
  6770   011406  0012               	return		;funcret
  6771   011408                     __end_of_EUSART1_Transmit_ISR:
  6772                           	callstack 0
  6773                           
  6774 ;; *************** function _EUSART1_Receive_ISR *****************
  6775 ;; Defined at:
  6776 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used: 1
  6796 ;; Hardware stack levels required when called: 2
  6797 ;; This function calls:
  6798 ;;		NULL
  6799 ;;		_EUSART1_DefaultErrorHandler
  6800 ;;		_EUSART1_DefaultFramingErrorHandler
  6801 ;;		_EUSART1_DefaultOverrunErrorHandler
  6802 ;;		_EUSART1_RxDataHandler
  6803 ;; This function is called by:
  6804 ;;		_EUSART1_Initialize
  6805 ;;		_INTERRUPT_InterruptManager
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text50
  6810   010B32                     __ptext50:
  6811                           	callstack 0
  6812   010B32                     _EUSART1_Receive_ISR:
  6813                           	callstack 19
  6814   010B32                     
  6815                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6816   010B32  0E29               	movlw	low _eusart1RxStatusBuffer
  6817   010B34  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6818   010B36  6ED9               	movwf	fsr2l,c
  6819   010B38  6ADA               	clrf	fsr2h,c
  6820   010B3A  0E00               	movlw	high _eusart1RxStatusBuffer
  6821   010B3C  22DA               	addwfc	fsr2h,f,c
  6822   010B3E  6ADF               	clrf	indf2,c
  6823   010B40                     
  6824                           ;mcc_generated_files/eusart1.c: 221:     if(RCSTA1bits.FERR){
  6825   010B40  A4AB               	btfss	171,2,c	;volatile
  6826   010B42  EFA5  F085         	goto	i2u149_41
  6827   010B46  EFA7  F085         	goto	i2u149_40
  6828   010B4A                     i2u149_41:
  6829   010B4A  EFBC  F085         	goto	i2l2855
  6830   010B4E                     i2u149_40:
  6831   010B4E                     
  6832                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6833   010B4E  0E29               	movlw	low _eusart1RxStatusBuffer
  6834   010B50  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6835   010B52  6ED9               	movwf	fsr2l,c
  6836   010B54  6ADA               	clrf	fsr2h,c
  6837   010B56  0E00               	movlw	high _eusart1RxStatusBuffer
  6838   010B58  22DA               	addwfc	fsr2h,f,c
  6839   010B5A  82DF               	bsf	indf2,1,c
  6840   010B5C                     
  6841                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  6842   010B5C  D802               	call	i2u150_48
  6843   010B5E  EFBC  F085         	goto	i2u150_49
  6844   010B62                     i2u150_48:
  6845   010B62  0005               	push	
  6846   010B64  6EFA               	movwf	pclath,c
  6847   010B66  0100               	movlb	0	; () banked
  6848   010B68  51F2               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6849   010B6A  6EFD               	movwf	tosl,c
  6850   010B6C  51F3               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6851   010B6E  6EFE               	movwf	tosh,c
  6852   010B70  51F4               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  6853   010B72  6EFF               	movwf	tosu,c
  6854   010B74  50FA               	movf	pclath,w,c
  6855   010B76  0012               	return		;indir
  6856   010B78                     i2u150_49:
  6857   010B78                     i2l2855:
  6858                           
  6859                           ;mcc_generated_files/eusart1.c: 226:     if(RCSTA1bits.OERR){
  6860   010B78  A2AB               	btfss	171,1,c	;volatile
  6861   010B7A  EFC1  F085         	goto	i2u151_41
  6862   010B7E  EFC3  F085         	goto	i2u151_40
  6863   010B82                     i2u151_41:
  6864   010B82  EFD8  F085         	goto	i2l2861
  6865   010B86                     i2u151_40:
  6866   010B86                     
  6867                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6868   010B86  0E29               	movlw	low _eusart1RxStatusBuffer
  6869   010B88  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6870   010B8A  6ED9               	movwf	fsr2l,c
  6871   010B8C  6ADA               	clrf	fsr2h,c
  6872   010B8E  0E00               	movlw	high _eusart1RxStatusBuffer
  6873   010B90  22DA               	addwfc	fsr2h,f,c
  6874   010B92  84DF               	bsf	indf2,2,c
  6875   010B94                     
  6876                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  6877   010B94  D802               	call	i2u152_48
  6878   010B96  EFD8  F085         	goto	i2u152_49
  6879   010B9A                     i2u152_48:
  6880   010B9A  0005               	push	
  6881   010B9C  6EFA               	movwf	pclath,c
  6882   010B9E  0100               	movlb	0	; () banked
  6883   010BA0  51EF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6884   010BA2  6EFD               	movwf	tosl,c
  6885   010BA4  51F0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6886   010BA6  6EFE               	movwf	tosh,c
  6887   010BA8  51F1               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  6888   010BAA  6EFF               	movwf	tosu,c
  6889   010BAC  50FA               	movf	pclath,w,c
  6890   010BAE  0012               	return		;indir
  6891   010BB0                     i2u152_49:
  6892   010BB0                     i2l2861:
  6893                           
  6894                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6895   010BB0  0E29               	movlw	low _eusart1RxStatusBuffer
  6896   010BB2  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  6897   010BB4  6ED9               	movwf	fsr2l,c
  6898   010BB6  6ADA               	clrf	fsr2h,c
  6899   010BB8  0E00               	movlw	high _eusart1RxStatusBuffer
  6900   010BBA  22DA               	addwfc	fsr2h,f,c
  6901   010BBC  50DF               	movf	indf2,w,c
  6902   010BBE  B4D8               	btfsc	status,2,c
  6903   010BC0  EFE4  F085         	goto	i2u153_41
  6904   010BC4  EFE6  F085         	goto	i2u153_40
  6905   010BC8                     i2u153_41:
  6906   010BC8  EFF6  F085         	goto	i2l2865
  6907   010BCC                     i2u153_40:
  6908   010BCC                     
  6909                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  6910   010BCC  D802               	call	i2u154_48
  6911   010BCE  EFF4  F085         	goto	i2u154_49
  6912   010BD2                     i2u154_48:
  6913   010BD2  0005               	push	
  6914   010BD4  6EFA               	movwf	pclath,c
  6915   010BD6  0100               	movlb	0	; () banked
  6916   010BD8  51EC               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6917   010BDA  6EFD               	movwf	tosl,c
  6918   010BDC  51ED               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6919   010BDE  6EFE               	movwf	tosh,c
  6920   010BE0  51EE               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  6921   010BE2  6EFF               	movwf	tosu,c
  6922   010BE4  50FA               	movf	pclath,w,c
  6923   010BE6  0012               	return		;indir
  6924   010BE8                     i2u154_49:
  6925                           
  6926                           ;mcc_generated_files/eusart1.c: 233:     } else {
  6927   010BE8  EFF8  F085         	goto	i2l300
  6928   010BEC                     i2l2865:
  6929                           
  6930                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  6931   010BEC  EC75  F08A         	call	_EUSART1_RxDataHandler	;wreg free
  6932   010BF0                     i2l300:
  6933   010BF0  0012               	return		;funcret
  6934   010BF2                     __end_of_EUSART1_Receive_ISR:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6938 ;; Defined at:
  6939 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		None
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_EUSART1_Initialize
  6963 ;;		_EUSART1_Receive_ISR
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text51
  6968   011626                     __ptext51:
  6969                           	callstack 0
  6970   011626                     _EUSART1_DefaultOverrunErrorHandler:
  6971                           	callstack 20
  6972   011626                     
  6973                           ;mcc_generated_files/eusart1.c: 255:     RCSTA1bits.CREN = 0;
  6974   011626  98AB               	bcf	171,4,c	;volatile
  6975                           
  6976                           ;mcc_generated_files/eusart1.c: 256:     RCSTA1bits.CREN = 1;
  6977   011628  88AB               	bsf	171,4,c	;volatile
  6978   01162A  0012               	return		;funcret
  6979   01162C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6983 ;; Defined at:
  6984 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		None
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_EUSART1_Initialize
  7008 ;;		_EUSART1_Receive_ISR
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text52
  7013   01163A                     __ptext52:
  7014                           	callstack 0
  7015   01163A                     _EUSART1_DefaultFramingErrorHandler:
  7016                           	callstack 20
  7017   01163A  0012               	return		;funcret
  7018   01163C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7022 ;; Defined at:
  7023 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 1
  7044 ;; This function calls:
  7045 ;;		_EUSART1_RxDataHandler
  7046 ;; This function is called by:
  7047 ;;		_EUSART1_Initialize
  7048 ;;		_EUSART1_Receive_ISR
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text53
  7053   01162C                     __ptext53:
  7054                           	callstack 0
  7055   01162C                     _EUSART1_DefaultErrorHandler:
  7056                           	callstack 19
  7057   01162C                     
  7058                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  7059   01162C  EC75  F08A         	call	_EUSART1_RxDataHandler	;wreg free
  7060   011630  0012               	return		;funcret
  7061   011632                     __end_of_EUSART1_DefaultErrorHandler:
  7062                           	callstack 0
  7063                           
  7064 ;; *************** function _EUSART1_RxDataHandler *****************
  7065 ;; Defined at:
  7066 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used: 1
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_EUSART1_Receive_ISR
  7090 ;;		_EUSART1_DefaultErrorHandler
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text54
  7095   0114EA                     __ptext54:
  7096                           	callstack 0
  7097   0114EA                     _EUSART1_RxDataHandler:
  7098                           	callstack 20
  7099   0114EA                     
  7100                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7101   0114EA  0EB5               	movlw	low _eusart1RxBuffer
  7102   0114EC  2444               	addwf	_eusart1RxHead^0,w,c	;volatile
  7103   0114EE  6ED9               	movwf	fsr2l,c
  7104   0114F0  6ADA               	clrf	fsr2h,c
  7105   0114F2  0E00               	movlw	high _eusart1RxBuffer
  7106   0114F4  22DA               	addwfc	fsr2h,f,c
  7107   0114F6  CFAE FFDF          	movff	4014,indf2	;volatile
  7108   0114FA  2A44               	incf	_eusart1RxHead^0,f,c	;volatile
  7109   0114FC                     
  7110                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7111   0114FC  0E07               	movlw	7
  7112   0114FE  6444               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7113   011500  EF84  F08A         	goto	i2u129_41
  7114   011504  EF86  F08A         	goto	i2u129_40
  7115   011508                     i2u129_41:
  7116   011508  EF88  F08A         	goto	i2l2467
  7117   01150C                     i2u129_40:
  7118   01150C                     
  7119                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  7120   01150C  0E00               	movlw	0
  7121   01150E  6E44               	movwf	_eusart1RxHead^0,c	;volatile
  7122   011510                     i2l2467:
  7123                           
  7124                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  7125   011510  2A42               	incf	_eusart1RxCount^0,f,c	;volatile
  7126   011512  0012               	return		;funcret
  7127   011514                     __end_of_EUSART1_RxDataHandler:
  7128                           	callstack 0
  7129                           
  7130                           	psect	text55
  7131   000000                     __ptext55:
  7132                           	callstack 0
  7133   000000                     
  7134                           	psect	rparam
  7135   000000                     
  7136                           	psect	temp
  7137   000051                     btemp:
  7138                           	callstack 0
  7139   000051                     	ds	1
  7140   000000                     int$flags	set	btemp
  7141   000000                     wtemp8	set	btemp+1
  7142   000000                     ttemp5	set	btemp+1
  7143   000000                     ttemp6	set	btemp+4
  7144   000000                     ttemp7	set	btemp+8
  7145                           
  7146                           	psect	config
  7147                           
  7148                           ;Config register CONFIG1L @ 0x1FFF8
  7149                           ;	Watchdog Timer Enable bit
  7150                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  7151                           ;	Stack Overflow/Underflow Reset Enable bit
  7152                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  7153                           ;	Extended Instruction Set Enable bit
  7154                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7155                           ;	Background Debugger Enable bit
  7156                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  7157   01FFF8                     	org	131064
  7158   01FFF8  A0                 	db	160
  7159                           
  7160                           ;Config register CONFIG1H @ 0x1FFF9
  7161                           ;	Code Protection bit
  7162                           ;	CP0 = OFF, Program memory is not code-protected
  7163   01FFF9                     	org	131065
  7164   01FFF9  F4                 	db	244
  7165                           
  7166                           ;Config register CONFIG2L @ 0x1FFFA
  7167                           ;	Oscillator Selection bits
  7168                           ;	FOSC = HS, HS oscillator
  7169                           ;	Default/Reset System Clock Select bit
  7170                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  7171                           ;	Fail-Safe Clock Monitor Enable
  7172                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7173                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  7174                           ;	IESO = ON, Two-Speed Start-up enabled
  7175   01FFFA                     	org	131066
  7176   01FFFA  C4                 	db	196
  7177                           
  7178                           ;Config register CONFIG2H @ 0x1FFFB
  7179                           ;	Watchdog Timer Postscaler Select bits
  7180                           ;	WDTPS = 32768, 1:32768
  7181   01FFFB                     	org	131067
  7182   01FFFB  FF                 	db	255
  7183                           
  7184                           ;Config register CONFIG3L @ 0x1FFFC
  7185                           ;	External Address Bus Shift Enable bit
  7186                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  7187                           ;	External Memory Bus
  7188                           ;	MODE = MM, Microcontroller mode, external bus disabled
  7189                           ;	Data Bus Width Select bit
  7190                           ;	BW = 16, 16-Bit Data Width mode
  7191                           ;	External Bus Wait Enable bit
  7192                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  7193   01FFFC                     	org	131068
  7194   01FFFC  F8                 	db	248
  7195                           
  7196                           ;Config register CONFIG3H @ 0x1FFFD
  7197                           ;	ECCP2 MUX bit
  7198                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  7199                           ;	ECCP MUX bit
  7200                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  7201                           ;	Ethernet LED Enable bit
  7202                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  7203   01FFFD                     	org	131069
  7204   01FFFD  F7                 	db	247
  7205                           tosu	equ	0xFFF
  7206                           tosh	equ	0xFFE
  7207                           tosl	equ	0xFFD
  7208                           stkptr	equ	0xFFC
  7209                           pclatu	equ	0xFFB
  7210                           pclath	equ	0xFFA
  7211                           pcl	equ	0xFF9
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           indf0	equ	0xFEF
  7219                           postinc0	equ	0xFEE
  7220                           postdec0	equ	0xFED
  7221                           preinc0	equ	0xFEC
  7222                           plusw0	equ	0xFEB
  7223                           fsr0h	equ	0xFEA
  7224                           fsr0l	equ	0xFE9
  7225                           wreg	equ	0xFE8
  7226                           indf1	equ	0xFE7
  7227                           postinc1	equ	0xFE6
  7228                           postdec1	equ	0xFE5
  7229                           preinc1	equ	0xFE4
  7230                           plusw1	equ	0xFE3
  7231                           fsr1h	equ	0xFE2
  7232                           fsr1l	equ	0xFE1
  7233                           bsr	equ	0xFE0
  7234                           indf2	equ	0xFDF
  7235                           postinc2	equ	0xFDE
  7236                           postdec2	equ	0xFDD
  7237                           preinc2	equ	0xFDC
  7238                           plusw2	equ	0xFDB
  7239                           fsr2h	equ	0xFDA
  7240                           fsr2l	equ	0xFD9
  7241                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    512
    Data        0
    BSS         598
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      80
    BANK0           160     85     149
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256     20      20
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1696$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1637$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1637$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    CRC16@msg	PTR const unsigned char  size(2) Largest target is 256
		 -> tx_buf(BANK2[256]), rx_buf(BANK1[256]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    LCD_2x16_WriteMsg@msg	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempString(BANK3[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _modbus_timer->_modbus_analyse_and_answer
    _modbus_send->_EUSART1_Write
    _modbus_analyse_and_answer->_CRC16

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _measure_voltage->___lldiv
    _measure_current->___lldiv
    ___lldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _Lcd_Init->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteCmd
    _LCD_2x16_WriteMsg->_LCD_2x16_WriteData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   14876
                                             84 BANK0      1     1      0
                                              0 BANK3     20    20      0
                _EPWM1_LoadDutyValue
                  _LCD_2x16_WriteMsg
                           _Lcd_Init
                  _SYSTEM_Initialize
                    _measure_current
                    _measure_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    8781
                                             64 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8109
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    7621
                                             40 BANK0     16    10      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     852
                                              6 BANK0      9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    5041
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _measure_voltage                                      9     7      2    1916
                                             25 BANK0      9     7      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _measure_current                                     12    10      2    2325
                                             25 BANK0     12    10      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     726
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                              3 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      96
                                              2 BANK0      2     2      0
                  _LCD_2x16_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_2x16_WriteMsg                                    3     0      3     648
                                              2 BANK0      3     0      3
                  _LCD_2x16_WriteCmd
                 _LCD_2x16_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteData                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_2x16_WriteCmd                                    2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          12    12      0    1211
                                             28 COMRAM    12    12      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                        _TMR0_Reload
                  _modbus_char_recvd
                       _modbus_timer
 ---------------------------------------------------------------------------------
 (10) _modbus_timer                                        0     0      0    1196
          _modbus_analyse_and_answer
                        _modbus_send
 ---------------------------------------------------------------------------------
 (11) _modbus_send                                         9     9      0     112
                                              1 COMRAM     6     6      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _modbus_analyse_and_answer                          19    19      0    1084
                                              9 COMRAM    19    19      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (12) _CRC16                                               9     5      4     486
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _modbus_char_recvd                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _LCD_2x16_WriteMsg
     _LCD_2x16_WriteCmd
     _LCD_2x16_WriteData
   _Lcd_Init
     _LCD_2x16_WriteCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _measure_current
     _ADC_GetConversion
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _measure_voltage
     _ADC_GetConversion
     ___lldiv
     ___lmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR0_Reload *
   _modbus_char_recvd *
   _modbus_timer *
     _modbus_analyse_and_answer
       _CRC16
     _modbus_send
       _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      52        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      14      11        7.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      95       5       93.1%
BITBIGSFR           80      0       0      51        0.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      50        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      50       1       85.1%
BITBIGSFR_1hhhh     1A      0       0      38        0.0%
BITBIGSFR_1llll     19      0       0      49        0.0%
BITBIGSFR_1hhll      C      0       0      45        0.0%
BITBIGSFR_1hhhh      A      0       0      37        0.0%
BITBIGSFR_1lllh      9      0       0      47        0.0%
BITBIGSFR_1hhll      6      0       0      44        0.0%
BITBIGSFR_1hhll      6      0       0      43        0.0%
BITBIGSFR_1hhlh      5      0       0      42        0.0%
BITBIGSFR_1lllh      4      0       0      48        0.0%
BITBIGSFR_1hhlh      3      0       0      41        0.0%
BITBIGSFR_1hhlh      2      0       0      40        0.0%
BITBIGSFR_1hhhl      1      0       0      39        0.0%
BITBIGSFR_1hhll      1      0       0      46        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F9      22        0.0%
DATA                 0      0     2F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Mar 10 16:01:19 2023

               modbus_analyse_and_answer@crcAtt 000E                        _eusart1TxBufferRemaining 0045  
                                            l21 1190                                              l15 1304  
                                            l18 1090                                              l26 1442  
                                            l52 161A                                              l71 15A0  
                                            l49 155C                                              l86 1364  
                                            l89 1386                                    ___awdiv@sign 0065  
                           ___wmul@multiplicand 0062                                 _timer0ReloadVal 003C  
                                           l133 13C6                                             l152 14E8  
                                           l401 1634                                             l322 1602  
                                           l316 15F4                                             l149 158A  
                                           l325 15CA                                             l165 15AE  
                                           l319 15E6                                             l328 15D8  
                                           l259 0F44                                             l371 15BC  
                                           l532 153A                                             l349 147C  
                                           l543 101E                                             l544 102E  
                                           l465 07EE                                             l459 0CAA  
                                           l566 0EB2                                             l559 0EA2  
                                           l763 0B30                                             l776 0D5C  
                                           _PR2 0FCB           modbus_analyse_and_answer@nbofRegister 001B  
                                           _abs 1306                                             _pad 0D5E  
                               _input_registers 00BD                                    ___awmod@sign 0065  
                               _TMR2_Initialize 15A2                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                       __end_of_measure_current 07F0                                            l1210 11E0  
                                          ?_abs 0066                                            l1233 0DA6  
                                          l1308 0A6A                                            l1316 12BC  
                                          l1236 0DEA                                            l1260 0646  
                                          l1244 04D0                                            l3101 0AAE  
                                          l1238 0E0C                                            l1246 04D8  
                                          l3111 0AE4                                            l3103 0AC0  
                                          l1319 1636                                            l1247 051E  
                                          l1264 0996                                            l3113 0AFA  
                                          l3105 0AC8                                            l3121 0B10  
                                          l3201 04E0                                            l3123 0B20  
                                          l3115 0B02                                            l3107 0AD0  
                                          l3131 0CB2                                            l3211 051A  
                                          l3203 04F0                                            l1283 0476  
                                          l1268 099E                                            l3125 0B28  
                                          l3117 0B04                                            l3109 0ADE  
                                          l3141 0CE2                                            l3133 0CC0  
                                          l1293 133E                                            l3061 09C6  
                                          l3221 056E                                            l3213 0526  
                                          l3205 04F6                                            l3301 03BA  
                                          l3119 0B0A                                            l3151 0D28  
                                          l3143 0CF4                                            l3135 0CC8  
                                          l3063 09D0                                            l3071 1276  
                                          l3231 05D8                                            l3223 0574  
                                          l3215 052E                                            l3207 0506  
                                          l3303 03DA                                            l1296 1346  
                                          l3401 144C                                            l3161 0D54  
                                          l3153 0D30                                            l3145 0CFC  
                                          l3137 0CCC                                            l3129 0CAC  
                                          l3065 09EE                                            l3057 09A0  
                                          l3073 1284                                            l3241 0626  
                                          l3233 05F2                                            l3217 0534  
                                          l3225 0590                                            l3209 0512  
                                          l3081 1532                                            l3305 041E  
                                          l3313 0448                                            l1289 10E6  
                                          l3331 1052                                            l3323 1034  
                                          l3411 0EB4                                            l3403 1464  
                                          l3091 0A88                                            l3155 0D36  
                                          l3147 0D04                                            l3139 0CDA  
                                          l3067 0A24                                            l3059 09B4  
                                          l3075 1296                                            l3171 0D92  
                                          l3227 05AC                                            l3235 0600  
                                          l3219 0568                                            l3251 093A  
                                          l3341 1074                                            l3333 1054  
                                          l3325 1036                                            l3501 12FE  
                                          l3261 15E8                                            l3421 0EE4  
                                          l3413 0EB6                                            l3405 1466  
                                          l3093 0A8C                                            l3085 0A6C  
                                          l3149 0D12                                            l3157 0D3C  
                                          l3077 129C                                            l3181 0DF8  
                                          l3173 0D9E                                            l3165 0D5E  
                                          l3237 0610                                            l3229 05BE  
                                          l3253 095C                                            l3245 08CE  
                                          l3309 0436                                            l3343 107C  
                                          l3335 105A                                            l3327 1048  
                                          l3351 1156                                            l3511 142A  
                                          l3263 15DA                                            l3431 0F14  
                                          l3423 0EE8                                            l3415 0EC8  
                                          l3407 1468                                            l3095 0A9A  
                                          l3087 0A72                                            l3159 0D4C  
                                          l3183 1306                                            l3175 0DB2  
                                          l3167 0D6E                                            l3239 0616  
                                          l3191 049E                                            l3079 1514  
                                          l3255 096A                                            l3247 08D8  
                                          l3271 02BE                                            l3345 107E  
                                          l3337 1062                                            l3329 104A  
                                          l3361 1180                                            l3353 1158  
                                          l3505 1408                                            l3265 15F6  
                                          l3257 15CC                                            l3433 0F42  
                                          l3425 0EEC                                            l3417 0EDC  
                                          l3409 1478                                            l3521 154C  
                                          l3513 153C                                            l3441 1372  
                                          l3097 0AA2                                            l3089 0A80  
                                          l3185 1322                                            l3177 0DC6  
                                          l3169 0D82                                            l3193 04A6  
                                          l3249 0900                                            l3281 02EC  
                                          l3273 02CC                                            l3601 080E  
                                          l3339 1072                                            l3363 1186  
                                          l3355 115E                                            l3347 1142  
                                          l3507 1416                                            l3259 15BE  
                                          l3427 0EF0                                            l3419 0EE0  
                                          l3371 13AC                                            l3267 15B0  
                                          l3523 1550                                            l3515 1540  
                                          l3435 134C                                            l3451 0FF4  
                                          l3531 0648                                            l3099 0AA6  
                                          l3179 0DCC                                            l3195 04B4  
                                          l3187 0478                                            l3291 0354  
                                          l3283 02FE                                            l3275 02DA  
                                          l3611 085A                                            l3603 0812  
                                          l3365 1188                                            l3357 1160  
                                          l3349 1144                                            l3509 1424  
                                          l3429 0F02                                            l3381 13BE  
                                          l3373 13AE                                            l3525 1554  
                                          l3517 1544                                            l3437 1360  
                                          l3461 0E3E                                            l3453 0FFE  
                                          l3445 0FC4                                            l3541 067E  
                                          l3197 04B6                                            l3189 048E  
                                          l3293 0370                                            l3277 02DE  
                                          l3269 0296                                            l3613 0866  
                                          l3605 0824                                            l3359 117E  
                                          l3367 1632                                            l3383 13C0  
                                          l3375 13B4                                            l3391 15A2  
                                          l3527 1558                                            l3519 1548  
                                          l3439 1362                                            l3471 0E90  
                                          l3463 0E4A                                            l3455 0E0E  
                                          l3447 0FD6                                            l3551 0774  
                                          l3543 069A                                            l3199 04C4  
                                          l3295 0380                                            l3287 030A  
                                          l3279 02EA                                            l3615 0884  
                                          l3607 083A                                            l3529 14B8  
                                          l3385 1612                                            l3377 13B6  
                                          l3369 1388                                            l3393 15A4  
                                          l3473 0E92                                            l3465 0E58  
                                          l3457 0E20                                            l3449 0FE4  
                                          l3553 07D6                                            l3545 06AE  
                                          l3537 0662                                            l3561 0BF2  
                                          l3297 038A                                            l3289 0342  
                                          l3481 10BC                                            l3617 0896  
                                          l3609 0846                                            l3491 12CC  
                                          l3387 158C                                            l3379 13B8  
                                          l3395 15A8                                            l3475 0E9C  
                                          l3467 0E62                                            l3459 0E36  
                                          l3547 0708                                            l3539 067A  
                                          l3571 0C28                                            l3299 039A  
                                          l3483 10DC                                            l3619 08B4  
                                          l3493 12E6                                            l3389 1576  
                                          l3397 1444                                            l3469 0E80  
                                          l3557 07E6                                            l3549 073E  
                                          l3573 0C44                                            l3477 1092  
                                          l3581 11A4                                            ?_pad 0070  
                                          l3495 12EC                                            l3487 12BE  
                                          l3399 1448                                            l3575 0C58  
                                          l3567 0C0C                                            l3671 0334  
                                          l3479 109E                                            l3583 11AC  
                                          l3591 07F0                                            l3497 12F2  
                                          l3489 12C6                                            l3569 0C24  
                                          l3585 11B4                                            l3593 07F4  
                                          l3499 12F8                                            l3587 11D0  
                                          l3579 1192                                            l3595 07F6  
                                          l3597 07F8                                            l3599 0802  
                                          STR_1 FFF2                                            STR_2 FFE5  
                                          u2000 05AC                                            u2001 05A8  
                                          u2010 05BE                                            u2011 05BA  
                                          u2020 05D8                                            u2100 0380  
                                          u2021 05D4                                            u2101 037C  
                                          u2030 05F2                                            u2110 03BA  
                                          u2031 05EE                                            u2111 03B6  
                                          u2200 1442                                            u2040 0600  
                                          u2120 03DA                                            u2201 143E  
                                          u2041 05FC                                            u2121 03D6  
                                          u2130 1372                                            u2210 069A  
                                          u2050 0610                                            u2131 136E  
                                          u2211 0696                                            u2051 060C  
                                          u2140 0FE4                                            u2060 0900  
                                          u2141 0FE0                                            u2061 08FC  
                                          _LATA 0F89                                            u2150 101E  
                                          u2230 07D6                                            u2070 0996  
                                          _LATB 0F8A                                            u2151 101A  
                                          u2231 07D2                                            u2071 0992  
                                          _LATC 0F8B                                            u2160 0E36  
                                          u2240 0C44                                            u2080 02BE  
                                          _LATD 0F8C                                            u2161 0E32  
                                          u2225 069E                                            u2241 0C40  
                                          u2081 02BA                                            _LATE 0F8D  
                                          u2170 0E58                                            u2090 0354  
                                          _LATF 0F8E                                            u2307 1076  
                                          u2171 0E54                                            u2091 0350  
                                          _LATG 0F8F                                            u2180 0E80  
                                          _LATH 0F90                                            u2317 1086  
                                          u2181 0E7C                                            u1710 09B4  
                                          u2190 10DC                                            _LATJ 0F91  
                                          u2255 0C48                                            u1711 09B0  
                                          u2191 10D8                                            u1800 0AFA  
                                          u1720 09C6                                            u1801 0AF6  
                                          u1721 09C2                                            u1810 0B20  
                                          u1730 09EE                                            u1811 0B1C  
                                          u1731 09EA                                            u2267 081A  
                                          u1820 0CC0                                            u1740 0A24  
                                          u1900 0DEA                                            u2277 12D8  
                                          u1821 0CBC                                            u1741 0A20  
                                          u1901 0DE6                                            u1830 0CDA  
                                          u1750 12BC                                            u1910 0DF8  
                                          u2287 118A                                            u1831 0CD6  
                                          u1751 12B8                                            u1911 0DF4  
                                          u1760 0A80                                            u1840 0CF4  
                                          u1920 1322                                            u2297 104C  
                                          u1761 0A7C                                            u1841 0CF0  
                                          u1921 131E                                            u1770 0A9A  
                                          u1850 0D12                                            u1930 048A  
                                          u1771 0A96                                            u1851 0D0E  
                                          u1931 0484                                            u1780 0AC0  
                                          u1860 0D28                                            u1940 048C  
                                          u1781 0ABC                                            u1861 0D24  
                                          u1790 0ADE                                            u1870 0D4C  
                                          u1950 049E                                            u1791 0ADA  
                                          u1871 0D48                                            u1951 049A  
                                          u1880 0D6E                                            u1960 04B4  
                                          u1881 0D6A                                            u1961 04B0  
                                          u1890 0D92                                            u1970 04C4  
                                          u1891 0D8E                                            u1971 04C0  
                                          u1980 04F0                                            u1981 04EC  
                                          u1990 0506                                            u1991 0502  
                                          _TMR2 0FCC                                   _EUSART1_Write 10E8  
                                          abs@a 0066                         __end_of_measure_voltage 0CAC  
                                          _dbuf 00CC                                            _main 07F0  
                                          _dtoa 0478                                            _prec 00C7  
                                          pad@i 0077                                            pad@p 0074  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf1 0FE7                                            indf2 0FDF  
                                          fsr1l 0FE1                                            pad@w 0079  
                                          fsr2l 0FD9                                            btemp 0051  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 0126                           ??_EPWM1_LoadDutyValue 0062  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 0000  
                                         ??_abs 0068                                           ??_pad 0076  
                       __end_of_TMR0_Initialize 147E                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 161C                           _eusart1RxStatusBuffer 0029  
                                         ?_main 0001                                           ?_dtoa 007B  
                               __end_of___awdiv 0B32                                           _CRC16 0F46  
                               __end_of___awmod 0D5E                                 __end_of___lldiv 0EB4  
                                         _T0CON 0FD5                                 ___awdiv@divisor 0062  
                                         _T2CON 0FCA                                           i2l300 0BF0  
                                         i2l310 162A                                           i2l304 1512  
                                         i2l313 1630                                           i2l307 163A  
                                         i2l413 00F2                                           i2l502 1610  
                                         i2l414 00F2                                           i2l406 0064  
                                         i2l520 1574                                           i2l512 0294  
                                         i2l409 00AC                                           i2l290 1404  
                                         i2l514 01EE                                           i2l283 10FA  
                                         i2l364 1624                                           i2l508 00AC  
                                         i2l284 1110                                           i2l293 1406  
                                         i2l374 1638                                           i2l526 1274  
                                         i2l287 113C                                           i2l368 14B6  
                                         i2l475 0FC2                                 ___awdiv@counter 0064  
                                  vfpfcnvrt@fmt 008A                                           _TMR0H 0FD7  
                                         _TMR0L 0FD6                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _TRISF 0F97                                           _TRISG 0F98  
                                         _TRISH 0F99                                           _TRISJ 0F9A  
                           ___lmul@multiplicand 0064                       ?_TMR0_SetInterruptHandler 0060  
                          _EUSART1_Transmit_ISR 13C8                                __end_of_TMR0_ISR 14B8  
                                         _flags 00CB                                           _index 003F  
                           read_prec_or_width@c 006C                             read_prec_or_width@n 006D  
                                         _fputc 09A0                                           _fputs 1276  
                                         pad@fp 0070                                           _width 00C5  
                                         _putch 1636                                           dtoa@d 007D  
                                         dtoa@i 0086                                           dtoa@p 0081  
                                         dtoa@s 0085                                           dtoa@w 0083  
                                ?_EUSART1_Write 0001                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 0052                                           ttemp6 0055  
                                         ttemp7 0059                                           status 0FD8  
                                         wtemp8 0052                                 __end_of_sprintf 11E2  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 163C  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 163A                                __end_of_Lcd_Init 1306  
         modbus_analyse_and_answer@functionCode 0010                                 __initialization 11E2  
                                  ?_modbus_send 0001                      __end_of_EUSART1_Initialize 0F46  
                                  __end_of_main 08CE                                    __end_of_dtoa 0648  
                       __end_of_TMR2_Initialize 15B0                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 00B4                                          ??_dtoa 007F  
                                        ?_CRC16 0001                                   __activetblptr 0003  
                         ?_EUSART1_Transmit_ISR 0001                      __end_of_read_prec_or_width 09A0  
                              ?_measure_current 0079                                          _ADCON0 0FC2  
                                        _ADCON1 0FC1                                          _ADCON2 0FC0  
                                        ?_fputc 0060                                          ?_fputs 0069  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _CCPR1H 0FBF                                          _CCPR1L 0FBE  
                              ___awdiv@dividend 0060                                          ?_putch 0001  
                                        i2l2441 10EA                                          i2l2451 1124  
                                        i2l2443 10EA                                          i2l2461 14FA  
                                        i2l2701 017E                                          i2l2453 1134  
                                        i2l2445 1108                                          i2l2463 14FC  
                                        i2l2471 0F46                                          i2l2711 01EA  
                                        i2l2703 01AC                                          i2l2455 1138  
                                        i2l2447 1112                                          i2l2465 150C  
                                        i2l2473 0F4E                                          i2l2481 0F92  
                                        i2l2721 020A                                          i2l2705 01C2  
                                        i2l2449 1122                                          i2l2457 113A  
                                        i2l2467 1510                                          i2l2459 14EA  
                                        i2l2483 0FAC                                          i2l2475 0F5C  
                                        i2l2731 0228                                          i2l2723 0218  
                                        i2l2715 01F4                                          i2l2707 01C8  
                                        i2l1941 13E8                                          i2l2477 0F60  
                                        i2l2733 0244                                          i2l2725 0220  
                                        i2l2717 01FA                                          i2l2709 01DE  
                                        i2l2663 1626                                          i2l1943 13EA  
                                        i2l2479 0F7A                                          i2l2735 0248  
                                        i2l2719 0204                                          i2l2671 0038  
                                        i2l2665 162C                                          i2l1945 13FA  
                                        i2l1937 13C8                                          i2l2737 0264  
                                        i2l2745 026A                                          i2l2681 0092  
                                        i2l2673 003E                                          i2l2753 122E  
                                        i2l2851 0B4E                                          i2l1947 13FE  
                                        i2l1939 13D8                                          i2l1971 1620  
                                        i2l2691 00D6                                          i2l2683 00B2  
                                        i2l2675 0056                                          i2l2667 0000  
                                        i2l2755 123A                                          i2l2861 0BB0  
                                        i2l2853 0B5C                                          i2l1981 149C  
                                        i2l1973 147E                                          i2l2693 00DC  
                                        i2l2685 00B8                                          i2l2677 0076  
                                        i2l2669 0022                                          i2l2757 124C  
                                        i2l2863 0BCC                                          i2l2855 0B78  
                                        i2l2847 0B32                                          i2l1975 1480  
                                        i2l1991 1572                                          i2l2695 00EE  
                                        i2l2687 00C2                                          i2l2679 008E  
                                        i2l2759 1250                                          i2l2951 003A  
                                        i2l2865 0BEC                                          i2l2857 0B86  
                                        i2l2849 0B40                                          i2l1977 1484  
                                        i2l1969 161C                                          i2l3673 027E  
                                        i2l2697 0164                                          i2l2689 00C8  
                                        i2l2961 0072                                          i2l2953 0048  
                                        i2l2859 0B94                                          i2l1979 1488  
                                        i2l1987 1560                                          i2l2699 0168  
                                        i2l2867 1604                                          i2l2971 00E2  
                                        i2l2963 0080                                          i2l2955 0056  
                                        i2l1989 1562                                          i2l2869 160C  
                                        i2l2973 00E8                                          i2l2965 008E  
                                        i2l2957 005A                                          i2l2975 00EC  
                                        i2l2967 00BA                                          i2l2959 005C  
                                        i2l2969 00C8                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                 vfpfcnvrt@done 0094                                          _SPBRG1 0FAF  
                                        _TMR0ON 7EAF                                ?_measure_voltage 0079  
                                        _TXREG1 0FAD                                          _TXSTA1 0FAC  
                                  vfprintf@cfmt 009E                                    ?_TMR0_Reload 0001  
                                        ___lmul 0FC4                                          ___wmul 1514  
                                     ??___awdiv 0064                                       ??___awmod 0064  
                                     ??___lldiv 0074                        ?_EUSART1_SetErrorHandler 0060  
                                        _recPtr 003E                                ?_TMR0_Initialize 0001  
                          read_prec_or_width@ap 0068                                          _offset 00C9  
                                        clear_0 11EA                                          clear_1 11FE  
                                        clear_2 1210                                          clear_3 121C  
                    ?_modbus_analyse_and_answer 0001                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                          isa$std 0001  
                               ___awmod@counter 0064                                          pad@buf 0072  
                                        _rx_buf 0100                ??_EUSART1_SetOverrunErrorHandler 0063  
               ?_EUSART1_SetOverrunErrorHandler 0060                                          _tx_buf 0200  
                                        dtoa@fp 007B                                          fputc@c 0060  
                                        fputs@c 006D                                          fputs@i 006E  
                                        fputs@s 0069                                    __mediumconst FDE4  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                      modbus_analyse_and_answer@i 0017  
                      ADC_GetConversion@channel 0064                                          putch@c 0001  
                              __end_of_vfprintf 10E8                                 ??_EUSART1_Write 0001  
      TMR0_SetInterruptHandler@InterruptHandler 0060                                       ??_sprintf 00A6  
                               _eusart1RxBuffer 00B5                                 _eusart1TxBuffer 0031  
                             _SYSTEM_Initialize 153C                                      __accesstop 0060  
                       __end_of__initialization 1222                              ?_SYSTEM_Initialize 0001  
                                 __end_of_CRC16 0FC4                                   ___rparam_used 0001  
                 __end_of_EUSART1_RxDataHandler 1514                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                                   ?_modbus_timer 0001  
                           ??_SYSTEM_Initialize 0065                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 0060                                   __end_of_fputc 0A6C  
                                 __end_of_fputs 12BE                                   __end_of_putch 1638  
                              ?_TMR2_Initialize 0001                                         ??_CRC16 0005  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 0BF2  
                             _LCD_2x16_WriteCmd 1030                                       ?_Lcd_Init 0001  
                             _LCD_2x16_WriteMsg 1408                                         ??_fputc 0064  
                     __end_of_SYSTEM_Initialize 155E                                         ??_fputs 006D  
                                       ??_putch 0060                                   _eusart1RxHead 0044  
                            ?_LCD_2x16_WriteCmd 0001                                   _eusart1TxHead 0047  
                            ?_LCD_2x16_WriteMsg 0062                      __end_of_LCD_2x16_WriteData 1192  
                                 _eusart1RxTail 0043                                      __pbssBANK0 00B5  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 0046               _EUSART1_TxDefaultInterruptHandler 004E  
               ??_EUSART1_SetRxInterruptHandler 0063                                      __pnvCOMRAM 0048  
                           ??_LCD_2x16_WriteCmd 0060                             ??_LCD_2x16_WriteMsg 0065  
               __end_of_EUSART1_SetErrorHandler 1604                                  ??_modbus_timer 001D  
              __end_of_TMR0_SetInterruptHandler 15BE                                         ?___lmul 0060  
                                       ?___wmul 0060                                      ??_TMR0_ISR 0001  
                                       _CCP1CON 0FBD                                         _ECCP1AS 0FB6  
                                ___lmul@product 0068          __end_of_EUSART1_SetFramingErrorHandler 15F6  
                _EUSART1_SetFramingErrorHandler 15E8                       __end_of_LCD_2x16_WriteCmd 1092  
                     __end_of_LCD_2x16_WriteMsg 1444                    ?_EUSART1_DefaultErrorHandler 0001  
                                       i2u61_40 13D8                                         i2u61_41 13D4  
                                       i2u62_40 13FA                                         i2u62_41 13F6  
                                       _OSCTUNE 0F9B                                         i2u70_48 14A2  
                                       i2u70_49 14B6                                         _SPBRGH1 0F7F  
                                       i2u69_40 149C                                      ??_Lcd_Init 0062  
                                       i2u69_41 1498                               __end_of_auchCRCHi FFE5  
                             __end_of_auchCRCLo FEE5                     __end_of_EPWM1_LoadDutyValue 14EA  
      modbus_analyse_and_answer@startingAddress 0019                            _ADC_InterruptHandler 0039  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___awdiv 0A6C                                         ___awmod 0CAC  
                                       ___lldiv 0E0E                                       ?_vfprintf 0098  
                                       __pcinit 11E2                                         __ramtop 1000  
                          LCD_2x16_WriteMsg@msg 0062                                         __ptext0 07F0  
                                       __ptext1 1192                                         __ptext2 1092  
                                       __ptext3 0296                                         __ptext4 08CE  
                                       __ptext5 1514                                         __ptext6 0478  
                                       __ptext7 0D5E                                         __ptext8 1276  
                                       __ptext9 09A0                                       _T0CONbits 0FD5  
                         _OSCILLATOR_Initialize 1612                                       _T2CONbits 0FCA  
                         read_prec_or_width@fmt 0066                                ___awmod@dividend 0060  
                            _EUSART1_Initialize 0EB4                        ??_PIN_MANAGER_Initialize 0060  
                 ??_EUSART1_DefaultErrorHandler 0001                                  main@tempString 0300  
                      LCD_2x16_WriteCmd@command 0061                                         _sprintf 1192  
                                 _modbusAddress 0040                            end_of_initialization 1222  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0062  
                   _EUSART1_OverrunErrorHandler 00EF                                         fputs@fp 006B  
                            _read_prec_or_width 08CE                                 ___lldiv@divisor 0070  
         __end_of_EUSART1_SetRxInterruptHandler 15DA                   _EUSART1_SetRxInterruptHandler 15CC  
                               ___lldiv@counter 0078                               __end_of_vfpfcnvrt 0478  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 0066                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 0090                                      ??_vfprintf 009E  
                          ??_EUSART1_Initialize 0063                     ??_modbus_analyse_and_answer 000A  
                      _TMR0_SetInterruptHandler 15B0                       LCD_2x16_WriteData@command 0061  
                                     _TRISDbits 0F95                         fp__EUSART1_Transmit_ISR 0000  
                          ??_read_prec_or_width 006A                            __end_of_modbus_timer 1612  
                           EUSART1_Write@txData 0001                    modbus_analyse_and_answer@crc 0015  
                  __end_of_INTERRUPT_Initialize 1636                               _modbus_char_recvd 155E  
                                __end_of___lmul 1030                                     vfpfcnvrt@ap 008C  
                                   vfpfcnvrt@cp 0096                                     vfpfcnvrt@fp 0088  
                                __end_of___wmul 153C                                  _ADC_Initialize 158C  
                            ?_modbus_char_recvd 0001                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 11E2                             ??_modbus_char_recvd 0001  
                                   __end_of_abs 1348                                     __end_of_pad 0E0E  
 EUSART1_SetRxInterruptHandler@interruptHandler 0060   EUSART1_SetTxInterruptHandler@interruptHandler 0060  
                  EPWM1_LoadDutyValue@dutyValue 0060                           __end_of_EUSART1_Write 113E  
                     _modbus_analyse_and_answer 0000                          fp__EUSART1_Receive_ISR 0000  
                                      CRC16@msg 0001                                     vfprintf@fmt 009A  
                     __end_of_modbus_char_recvd 1576                              _LCD_2x16_WriteData 113E  
                                      ??___lmul 0068                                        ??___wmul 0064  
                         _EUSART1_RxDataHandler 14EA                  ?_EUSART1_SetRxInterruptHandler 0060  
                        __end_of_ADC_Initialize 15A2                             ?_LCD_2x16_WriteData 0001  
                                _eusart1RxCount 0042                               modbus_send@i_1196 0006  
                                   __pbssCOMRAM 0029               _EUSART1_RxDefaultInterruptHandler 004B  
                                 __pcstackBANK0 0060                                   __pcstackBANK3 0300  
                             modbus_send@length 0005                 ??_EUSART1_SetTxInterruptHandler 0063  
              ??_EUSART1_SetFramingErrorHandler 0063                 ?_EUSART1_SetFramingErrorHandler 0060  
                          ??_LCD_2x16_WriteData 0060                           _TMR0_InterruptHandler 0048  
                                     __pnvBANK0 00EC                                       _auchCRCHi FEE5  
                                     _auchCRCLo FDE5                          _PIN_MANAGER_Initialize 1388  
                                     _dtoa$1718 007F                                   ??_modbus_send 0002  
                                     __pintcode 0008                                   __pmediumconst FDE4  
                                      ?___awdiv 0060                                        ?___awmod 0060  
                                      ?___lldiv 006C                               ??_measure_current 007B  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 001D  
                             ??_measure_voltage 007B                                        _ECCP1DEL 0F79  
                                      _BAUDCON1 0F7E           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 162C            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1626  
                          _EUSART1_ErrorHandler 00EC                         _EUSART1_SetErrorHandler 15F6  
                                      ?_sprintf 00A0                            _INTERRUPT_Initialize 1632  
                             ??_TMR0_Initialize 0063                                  ___wmul@product 0064  
       EUSART1_SetErrorHandler@interruptHandler 0060                                        _LATDbits 0F8C  
                                   CRC16@uIndex 0007                                     CRC16@length 0003  
                                      _PIE1bits 0F9D                                        i2u130_40 0FAC  
                                      i2u130_41 0FA8                                        i2u140_40 0264  
                                      i2u140_41 0260                                        i2u141_40 1274  
                                      i2u141_41 1270                                        i2u126_40 10FA  
                             _holding_registers 00C1                                        i2u126_41 10F6  
                                      i2u151_40 0B86                                        i2u150_48 0B62  
                                      i2u127_40 1108                                        i2u151_41 0B82  
                                      i2u150_49 0B78                                        i2u127_41 1104  
                                      i2u128_40 1134                                        i2u128_41 1130  
                                      i2u129_40 150C                                        i2u153_40 0BCC  
                                      i2u152_48 0B9A                                        i2u137_40 0022  
                                      i2u129_41 1508                                        i2u153_41 0BC8  
                                      i2u152_49 0BB0                                        i2u137_41 001E  
                                      i2u138_40 008E                                        i2u162_40 0048  
                                      i2u138_41 008A                                        i2u162_41 0044  
                                      i2u154_48 0BD2                                        i2u139_40 017E  
                                      i2u170_48 00CE                                        i2u163_40 0056  
                                      i2u154_49 0BE8                                        i2u139_41 017A  
                                      i2u170_49 00E2                                        i2u163_41 0052  
                                      i2u164_40 0072                                        i2u164_41 006E  
                                      i2u149_40 0B4E                                        i2u165_40 0080  
                    ??_TMR0_SetInterruptHandler 0063                                        i2u149_41 0B4A  
                                      i2u165_41 007C                                        i2u166_40 008E  
                                      i2u166_41 008A                                        i2u168_40 00BA  
                                      i2u167_48 0094                                        i2u168_41 00B6  
                                      i2u167_49 00A8                                        i2u169_40 00C8  
                                      i2u169_41 00C4                                        _PIR1bits 0F9E  
                                 ??_TMR0_Reload 0001                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 0FD0                                        _TMR0_ISR 147E  
                                  _modbus_timer 1604                                       _vfpfcnvrt 0296  
                           __end_of_modbus_send 1276                                      _ADCON0bits 0FC2  
                                    _ADCON1bits 0FC1                               ___wmul@multiplier 0060  
                         measure_voltage@result 007C                                _EPWM1_Initialize 1576  
                                      _Lcd_Init 12BE                               ___lmul@multiplier 0060  
                         ?_INTERRUPT_Initialize 0001                               ??_TMR2_Initialize 0060  
         __end_of_EUSART1_SetTxInterruptHandler 15CC                   _EUSART1_SetTxInterruptHandler 15BE  
                                      __Hrparam 0000                                      vfprintf@ap 009C  
                                      __Lrparam 0000                                      vfprintf@fp 0098  
                             _ADC_GetConversion 1348                         ??_OSCILLATOR_Initialize 0060  
                            ?_ADC_GetConversion 0060                                      ?_vfpfcnvrt 0088  
                            modbus_char_recvd@c 0001                             __end_of_TMR0_Reload 1626  
                     ??_EUSART1_SetErrorHandler 0063             __end_of_EUSART1_DefaultErrorHandler 1632  
                   _EUSART1_DefaultErrorHandler 162C                             ??_ADC_GetConversion 0062  
                                    sprintf@fmt 00A2               modbus_analyse_and_answer@pwmValue 0011  
                         LCD_2x16_WriteMsg@line 0064                                        __ptext10 1636  
                                      __ptext11 1306                                        __ptext20 15A2  
                                      __ptext12 0CAC                                        __ptext21 1444  
                                      __ptext13 0A6C                                        __ptext30 15E8  
                                      __ptext22 15B0                                        __ptext14 0BF2  
                                      __ptext31 15F6                                        __ptext23 1388  
                                      __ptext15 0648                                        __ptext40 1604  
                                      __ptext32 1576                                        __ptext24 1612  
                                      __ptext16 0FC4                                        __ptext41 122C  
                                      __ptext33 158C                                        __ptext25 1632  
                                      __ptext17 0E0E                                        __ptext50 0B32  
                                      __ptext42 10E8                                        __ptext34 12BE  
                                      __ptext26 0EB4                                        __ptext18 1348  
                                      __ptext51 1626                                        __ptext43 0000  
                                      __ptext35 1408                                        __ptext27 15BE  
                                      __ptext19 153C                                        __ptext52 163A  
                                      __ptext44 0F46                                        __ptext36 113E  
                                      __ptext28 15CC                                        __ptext53 162C  
                                      __ptext45 155E                                        __ptext37 1030  
                                      __ptext29 15DA                                        __ptext54 14EA  
                                      __ptext46 161C                                        __ptext38 14B8  
                                      __ptext55 0000                                        __ptext47 147E  
                                      __ptext48 1638                                        __ptext49 13C8  
                              measure_current@i 007F                           measure_current@offset 0079  
                         measure_current@result 0081            __end_of_TMR0_DefaultInterruptHandler 163A  
                  _TMR0_DefaultInterruptHandler 1638                       __end_of_ADC_GetConversion 1388  
EUSART1_SetOverrunErrorHandler@interruptHandler 0060                                        isa$xinst 0000  
                                   _modbus_send 122C                                        int$flags 0051  
             __end_of_modbus_analyse_and_answer 0296                                        _vfprintf 1092  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 00F2                             _EUSART1_Receive_ISR 0B32  
                                    _INTCONbits 0FF2                                   CRC16@uchCRCHi 0008  
                                 CRC16@uchCRCLo 0009                                measure_voltage@i 0080  
                        ??_INTERRUPT_Initialize 0060                                        intlevel2 0000  
                                     sprintf@ap 00A6                            ?_EUSART1_Receive_ISR 0001  
                              ___lldiv@dividend 006C                                 _measure_current 0648  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 15E8  
                _EUSART1_SetOverrunErrorHandler 15DA                                      _RCSTA1bits 0FAB  
                  __end_of_EUSART1_Transmit_ISR 1408                                ??_ADC_Initialize 0060  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                               _measure_voltage 0BF2                                     _TMR0_Reload 161C  
EUSART1_SetFramingErrorHandler@interruptHandler 0060                  ?_EUSART1_SetTxInterruptHandler 0060  
                                   ??_vfpfcnvrt 008E                              _eusart1RxLastError 0041  
                                      sprintf@f 00A8                                        sprintf@s 00A0  
                              ___lldiv@quotient 0074                                 _TMR0_Initialize 1444  
                           _EPWM1_LoadDutyValue 14B8                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 13C8                         ??_EUSART1_RxDataHandler 0001  
               modbus_analyse_and_answer@i_1189 0013                        __end_of_EPWM1_Initialize 158C  
                          ?_EPWM1_LoadDutyValue 0060  
